

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 20 21:47:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	intentry,global,class=CODE,delta=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.20
   102                           ; Generated 30/04/2020 GMT
   103                           ; 
   104                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F18875 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001C                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  008C                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0110                     	;# 
   195  0110                     	;# 
   196  0111                     	;# 
   197  0112                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0114                     	;# 
   202  0115                     	;# 
   203  0116                     	;# 
   204  0116                     	;# 
   205  0117                     	;# 
   206  0119                     	;# 
   207  0119                     	;# 
   208  0119                     	;# 
   209  011A                     	;# 
   210  011A                     	;# 
   211  011A                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011C                     	;# 
   218  011C                     	;# 
   219  011C                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  011D                     	;# 
   223  011E                     	;# 
   224  011E                     	;# 
   225  011E                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  018E                     	;# 
   234  018F                     	;# 
   235  0190                     	;# 
   236  0191                     	;# 
   237  0192                     	;# 
   238  0196                     	;# 
   239  0197                     	;# 
   240  0198                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  020C                     	;# 
   246  020C                     	;# 
   247  020D                     	;# 
   248  020E                     	;# 
   249  020F                     	;# 
   250  020F                     	;# 
   251  0210                     	;# 
   252  0210                     	;# 
   253  0211                     	;# 
   254  0211                     	;# 
   255  0212                     	;# 
   256  0212                     	;# 
   257  0213                     	;# 
   258  0214                     	;# 
   259  0215                     	;# 
   260  0215                     	;# 
   261  0216                     	;# 
   262  0216                     	;# 
   263  0217                     	;# 
   264  0217                     	;# 
   265  0218                     	;# 
   266  0218                     	;# 
   267  0219                     	;# 
   268  021A                     	;# 
   269  021B                     	;# 
   270  021B                     	;# 
   271  021C                     	;# 
   272  021C                     	;# 
   273  021D                     	;# 
   274  021D                     	;# 
   275  021E                     	;# 
   276  021F                     	;# 
   277  028C                     	;# 
   278  028C                     	;# 
   279  028D                     	;# 
   280  028D                     	;# 
   281  028E                     	;# 
   282  028F                     	;# 
   283  0290                     	;# 
   284  0290                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0293                     	;# 
   290  0294                     	;# 
   291  0295                     	;# 
   292  0296                     	;# 
   293  0296                     	;# 
   294  0297                     	;# 
   295  0298                     	;# 
   296  0298                     	;# 
   297  0299                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  029B                     	;# 
   301  029C                     	;# 
   302  029C                     	;# 
   303  029D                     	;# 
   304  030C                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  030F                     	;# 
   309  0310                     	;# 
   310  0310                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  0314                     	;# 
   315  0314                     	;# 
   316  0315                     	;# 
   317  0316                     	;# 
   318  0317                     	;# 
   319  0318                     	;# 
   320  0318                     	;# 
   321  0319                     	;# 
   322  031A                     	;# 
   323  031B                     	;# 
   324  031C                     	;# 
   325  031C                     	;# 
   326  031D                     	;# 
   327  031E                     	;# 
   328  031F                     	;# 
   329  038C                     	;# 
   330  038C                     	;# 
   331  038D                     	;# 
   332  038E                     	;# 
   333  0390                     	;# 
   334  0390                     	;# 
   335  0391                     	;# 
   336  0392                     	;# 
   337  040C                     	;# 
   338  040D                     	;# 
   339  040E                     	;# 
   340  040F                     	;# 
   341  0410                     	;# 
   342  0411                     	;# 
   343  0416                     	;# 
   344  0416                     	;# 
   345  0417                     	;# 
   346  0418                     	;# 
   347  0418                     	;# 
   348  0419                     	;# 
   349  041A                     	;# 
   350  041A                     	;# 
   351  041B                     	;# 
   352  041C                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  041F                     	;# 
   357  048C                     	;# 
   358  048C                     	;# 
   359  048D                     	;# 
   360  048E                     	;# 
   361  048F                     	;# 
   362  048F                     	;# 
   363  0490                     	;# 
   364  0491                     	;# 
   365  0492                     	;# 
   366  0492                     	;# 
   367  0493                     	;# 
   368  0494                     	;# 
   369  0495                     	;# 
   370  0495                     	;# 
   371  0496                     	;# 
   372  0497                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  050C                     	;# 
   380  050C                     	;# 
   381  050D                     	;# 
   382  050E                     	;# 
   383  050F                     	;# 
   384  050F                     	;# 
   385  0510                     	;# 
   386  0511                     	;# 
   387  0512                     	;# 
   388  0512                     	;# 
   389  0513                     	;# 
   390  0514                     	;# 
   391  0515                     	;# 
   392  0515                     	;# 
   393  0516                     	;# 
   394  0517                     	;# 
   395  0518                     	;# 
   396  0519                     	;# 
   397  051A                     	;# 
   398  051B                     	;# 
   399  051C                     	;# 
   400  051D                     	;# 
   401  058C                     	;# 
   402  058C                     	;# 
   403  058D                     	;# 
   404  058E                     	;# 
   405  058F                     	;# 
   406  058F                     	;# 
   407  0590                     	;# 
   408  0591                     	;# 
   409  0592                     	;# 
   410  0593                     	;# 
   411  060C                     	;# 
   412  060D                     	;# 
   413  060E                     	;# 
   414  060F                     	;# 
   415  0610                     	;# 
   416  0611                     	;# 
   417  0612                     	;# 
   418  0613                     	;# 
   419  0614                     	;# 
   420  0616                     	;# 
   421  0617                     	;# 
   422  0618                     	;# 
   423  0619                     	;# 
   424  061A                     	;# 
   425  061B                     	;# 
   426  061C                     	;# 
   427  061D                     	;# 
   428  061E                     	;# 
   429  068C                     	;# 
   430  068D                     	;# 
   431  068E                     	;# 
   432  068F                     	;# 
   433  0690                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  070C                     	;# 
   439  070D                     	;# 
   440  070E                     	;# 
   441  070F                     	;# 
   442  0710                     	;# 
   443  0711                     	;# 
   444  0712                     	;# 
   445  0713                     	;# 
   446  0714                     	;# 
   447  0716                     	;# 
   448  0717                     	;# 
   449  0718                     	;# 
   450  0719                     	;# 
   451  071A                     	;# 
   452  071B                     	;# 
   453  071C                     	;# 
   454  071D                     	;# 
   455  071E                     	;# 
   456  0796                     	;# 
   457  0797                     	;# 
   458  0798                     	;# 
   459  0799                     	;# 
   460  079A                     	;# 
   461  079B                     	;# 
   462  080C                     	;# 
   463  080D                     	;# 
   464  080E                     	;# 
   465  080F                     	;# 
   466  0810                     	;# 
   467  0811                     	;# 
   468  0812                     	;# 
   469  0813                     	;# 
   470  0814                     	;# 
   471  081A                     	;# 
   472  081B                     	;# 
   473  081C                     	;# 
   474  081D                     	;# 
   475  081E                     	;# 
   476  081F                     	;# 
   477  088C                     	;# 
   478  088D                     	;# 
   479  088E                     	;# 
   480  088F                     	;# 
   481  0890                     	;# 
   482  0891                     	;# 
   483  0892                     	;# 
   484  0893                     	;# 
   485  0895                     	;# 
   486  0896                     	;# 
   487  0897                     	;# 
   488  0898                     	;# 
   489  0899                     	;# 
   490  089A                     	;# 
   491  089B                     	;# 
   492  090C                     	;# 
   493  090E                     	;# 
   494  090F                     	;# 
   495  091F                     	;# 
   496  091F                     	;# 
   497  098F                     	;# 
   498  098F                     	;# 
   499  0990                     	;# 
   500  0991                     	;# 
   501  0992                     	;# 
   502  0993                     	;# 
   503  0994                     	;# 
   504  0995                     	;# 
   505  0996                     	;# 
   506  0997                     	;# 
   507  0E0F                     	;# 
   508  0E10                     	;# 
   509  0E11                     	;# 
   510  0E12                     	;# 
   511  0E13                     	;# 
   512  0E14                     	;# 
   513  0E15                     	;# 
   514  0E16                     	;# 
   515  0E17                     	;# 
   516  0E18                     	;# 
   517  0E19                     	;# 
   518  0E1A                     	;# 
   519  0E1B                     	;# 
   520  0E1C                     	;# 
   521  0E1D                     	;# 
   522  0E1E                     	;# 
   523  0E1F                     	;# 
   524  0E20                     	;# 
   525  0E21                     	;# 
   526  0E22                     	;# 
   527  0E23                     	;# 
   528  0E24                     	;# 
   529  0E25                     	;# 
   530  0E26                     	;# 
   531  0E27                     	;# 
   532  0E28                     	;# 
   533  0E29                     	;# 
   534  0E2A                     	;# 
   535  0E2B                     	;# 
   536  0E2C                     	;# 
   537  0E2D                     	;# 
   538  0E2E                     	;# 
   539  0E2F                     	;# 
   540  0E30                     	;# 
   541  0E31                     	;# 
   542  0E32                     	;# 
   543  0E33                     	;# 
   544  0E34                     	;# 
   545  0E35                     	;# 
   546  0E36                     	;# 
   547  0E37                     	;# 
   548  0E8F                     	;# 
   549  0E90                     	;# 
   550  0E91                     	;# 
   551  0E92                     	;# 
   552  0E93                     	;# 
   553  0E94                     	;# 
   554  0E95                     	;# 
   555  0E96                     	;# 
   556  0E97                     	;# 
   557  0E9C                     	;# 
   558  0E9D                     	;# 
   559  0E9E                     	;# 
   560  0EA1                     	;# 
   561  0EA2                     	;# 
   562  0EA3                     	;# 
   563  0EA4                     	;# 
   564  0EA5                     	;# 
   565  0EA9                     	;# 
   566  0EAA                     	;# 
   567  0EAB                     	;# 
   568  0EAC                     	;# 
   569  0EB1                     	;# 
   570  0EB2                     	;# 
   571  0EB3                     	;# 
   572  0EB8                     	;# 
   573  0EB9                     	;# 
   574  0EBA                     	;# 
   575  0EBB                     	;# 
   576  0EBC                     	;# 
   577  0EBD                     	;# 
   578  0EBE                     	;# 
   579  0EC3                     	;# 
   580  0EC5                     	;# 
   581  0EC6                     	;# 
   582  0EC7                     	;# 
   583  0EC8                     	;# 
   584  0EC9                     	;# 
   585  0ECA                     	;# 
   586  0ECB                     	;# 
   587  0ECC                     	;# 
   588  0F10                     	;# 
   589  0F11                     	;# 
   590  0F12                     	;# 
   591  0F13                     	;# 
   592  0F14                     	;# 
   593  0F15                     	;# 
   594  0F16                     	;# 
   595  0F17                     	;# 
   596  0F18                     	;# 
   597  0F19                     	;# 
   598  0F1A                     	;# 
   599  0F1B                     	;# 
   600  0F1C                     	;# 
   601  0F1D                     	;# 
   602  0F1E                     	;# 
   603  0F1F                     	;# 
   604  0F20                     	;# 
   605  0F21                     	;# 
   606  0F22                     	;# 
   607  0F23                     	;# 
   608  0F24                     	;# 
   609  0F25                     	;# 
   610  0F26                     	;# 
   611  0F27                     	;# 
   612  0F28                     	;# 
   613  0F29                     	;# 
   614  0F2A                     	;# 
   615  0F2B                     	;# 
   616  0F2C                     	;# 
   617  0F2D                     	;# 
   618  0F2E                     	;# 
   619  0F2F                     	;# 
   620  0F30                     	;# 
   621  0F31                     	;# 
   622  0F32                     	;# 
   623  0F38                     	;# 
   624  0F39                     	;# 
   625  0F3A                     	;# 
   626  0F3B                     	;# 
   627  0F3C                     	;# 
   628  0F3D                     	;# 
   629  0F3E                     	;# 
   630  0F3F                     	;# 
   631  0F40                     	;# 
   632  0F41                     	;# 
   633  0F43                     	;# 
   634  0F44                     	;# 
   635  0F45                     	;# 
   636  0F46                     	;# 
   637  0F47                     	;# 
   638  0F48                     	;# 
   639  0F49                     	;# 
   640  0F4A                     	;# 
   641  0F4B                     	;# 
   642  0F4C                     	;# 
   643  0F4E                     	;# 
   644  0F4F                     	;# 
   645  0F50                     	;# 
   646  0F51                     	;# 
   647  0F52                     	;# 
   648  0F53                     	;# 
   649  0F54                     	;# 
   650  0F55                     	;# 
   651  0F56                     	;# 
   652  0F57                     	;# 
   653  0F59                     	;# 
   654  0F5A                     	;# 
   655  0F5B                     	;# 
   656  0F5C                     	;# 
   657  0F5D                     	;# 
   658  0F61                     	;# 
   659  0F62                     	;# 
   660  0F64                     	;# 
   661  0F65                     	;# 
   662  0F66                     	;# 
   663  0F67                     	;# 
   664  0F68                     	;# 
   665  0F69                     	;# 
   666  0F6A                     	;# 
   667  0F6B                     	;# 
   668  0F6C                     	;# 
   669  0F6D                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000F                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0014                     	;# 
   702  0015                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001C                     	;# 
   709  001C                     	;# 
   710  001D                     	;# 
   711  001D                     	;# 
   712  001E                     	;# 
   713  001F                     	;# 
   714  008C                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  008E                     	;# 
   719  008F                     	;# 
   720  0090                     	;# 
   721  0090                     	;# 
   722  0091                     	;# 
   723  0093                     	;# 
   724  0094                     	;# 
   725  0095                     	;# 
   726  0096                     	;# 
   727  0097                     	;# 
   728  0098                     	;# 
   729  0099                     	;# 
   730  009A                     	;# 
   731  009B                     	;# 
   732  009C                     	;# 
   733  009D                     	;# 
   734  009E                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  010E                     	;# 
   739  010F                     	;# 
   740  0110                     	;# 
   741  0110                     	;# 
   742  0111                     	;# 
   743  0112                     	;# 
   744  0112                     	;# 
   745  0113                     	;# 
   746  0114                     	;# 
   747  0114                     	;# 
   748  0115                     	;# 
   749  0116                     	;# 
   750  0116                     	;# 
   751  0117                     	;# 
   752  0119                     	;# 
   753  0119                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011A                     	;# 
   757  011A                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011C                     	;# 
   764  011C                     	;# 
   765  011C                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  011E                     	;# 
   770  011E                     	;# 
   771  011E                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  018C                     	;# 
   778  018D                     	;# 
   779  018E                     	;# 
   780  018F                     	;# 
   781  0190                     	;# 
   782  0191                     	;# 
   783  0192                     	;# 
   784  0196                     	;# 
   785  0197                     	;# 
   786  0198                     	;# 
   787  0199                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  020C                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  020E                     	;# 
   795  020F                     	;# 
   796  020F                     	;# 
   797  0210                     	;# 
   798  0210                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0216                     	;# 
   808  0216                     	;# 
   809  0217                     	;# 
   810  0217                     	;# 
   811  0218                     	;# 
   812  0218                     	;# 
   813  0219                     	;# 
   814  021A                     	;# 
   815  021B                     	;# 
   816  021B                     	;# 
   817  021C                     	;# 
   818  021C                     	;# 
   819  021D                     	;# 
   820  021D                     	;# 
   821  021E                     	;# 
   822  021F                     	;# 
   823  028C                     	;# 
   824  028C                     	;# 
   825  028D                     	;# 
   826  028D                     	;# 
   827  028E                     	;# 
   828  028F                     	;# 
   829  0290                     	;# 
   830  0290                     	;# 
   831  0291                     	;# 
   832  0292                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0293                     	;# 
   836  0294                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0296                     	;# 
   840  0297                     	;# 
   841  0298                     	;# 
   842  0298                     	;# 
   843  0299                     	;# 
   844  0299                     	;# 
   845  029A                     	;# 
   846  029B                     	;# 
   847  029C                     	;# 
   848  029C                     	;# 
   849  029D                     	;# 
   850  030C                     	;# 
   851  030C                     	;# 
   852  030D                     	;# 
   853  030E                     	;# 
   854  030F                     	;# 
   855  0310                     	;# 
   856  0310                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0314                     	;# 
   861  0314                     	;# 
   862  0315                     	;# 
   863  0316                     	;# 
   864  0317                     	;# 
   865  0318                     	;# 
   866  0318                     	;# 
   867  0319                     	;# 
   868  031A                     	;# 
   869  031B                     	;# 
   870  031C                     	;# 
   871  031C                     	;# 
   872  031D                     	;# 
   873  031E                     	;# 
   874  031F                     	;# 
   875  038C                     	;# 
   876  038C                     	;# 
   877  038D                     	;# 
   878  038E                     	;# 
   879  0390                     	;# 
   880  0390                     	;# 
   881  0391                     	;# 
   882  0392                     	;# 
   883  040C                     	;# 
   884  040D                     	;# 
   885  040E                     	;# 
   886  040F                     	;# 
   887  0410                     	;# 
   888  0411                     	;# 
   889  0416                     	;# 
   890  0416                     	;# 
   891  0417                     	;# 
   892  0418                     	;# 
   893  0418                     	;# 
   894  0419                     	;# 
   895  041A                     	;# 
   896  041A                     	;# 
   897  041B                     	;# 
   898  041C                     	;# 
   899  041C                     	;# 
   900  041D                     	;# 
   901  041E                     	;# 
   902  041F                     	;# 
   903  048C                     	;# 
   904  048C                     	;# 
   905  048D                     	;# 
   906  048E                     	;# 
   907  048F                     	;# 
   908  048F                     	;# 
   909  0490                     	;# 
   910  0491                     	;# 
   911  0492                     	;# 
   912  0492                     	;# 
   913  0493                     	;# 
   914  0494                     	;# 
   915  0495                     	;# 
   916  0495                     	;# 
   917  0496                     	;# 
   918  0497                     	;# 
   919  0498                     	;# 
   920  0499                     	;# 
   921  049A                     	;# 
   922  049B                     	;# 
   923  049C                     	;# 
   924  049D                     	;# 
   925  050C                     	;# 
   926  050C                     	;# 
   927  050D                     	;# 
   928  050E                     	;# 
   929  050F                     	;# 
   930  050F                     	;# 
   931  0510                     	;# 
   932  0511                     	;# 
   933  0512                     	;# 
   934  0512                     	;# 
   935  0513                     	;# 
   936  0514                     	;# 
   937  0515                     	;# 
   938  0515                     	;# 
   939  0516                     	;# 
   940  0517                     	;# 
   941  0518                     	;# 
   942  0519                     	;# 
   943  051A                     	;# 
   944  051B                     	;# 
   945  051C                     	;# 
   946  051D                     	;# 
   947  058C                     	;# 
   948  058C                     	;# 
   949  058D                     	;# 
   950  058E                     	;# 
   951  058F                     	;# 
   952  058F                     	;# 
   953  0590                     	;# 
   954  0591                     	;# 
   955  0592                     	;# 
   956  0593                     	;# 
   957  060C                     	;# 
   958  060D                     	;# 
   959  060E                     	;# 
   960  060F                     	;# 
   961  0610                     	;# 
   962  0611                     	;# 
   963  0612                     	;# 
   964  0613                     	;# 
   965  0614                     	;# 
   966  0616                     	;# 
   967  0617                     	;# 
   968  0618                     	;# 
   969  0619                     	;# 
   970  061A                     	;# 
   971  061B                     	;# 
   972  061C                     	;# 
   973  061D                     	;# 
   974  061E                     	;# 
   975  068C                     	;# 
   976  068D                     	;# 
   977  068E                     	;# 
   978  068F                     	;# 
   979  0690                     	;# 
   980  0691                     	;# 
   981  0692                     	;# 
   982  0693                     	;# 
   983  0694                     	;# 
   984  070C                     	;# 
   985  070D                     	;# 
   986  070E                     	;# 
   987  070F                     	;# 
   988  0710                     	;# 
   989  0711                     	;# 
   990  0712                     	;# 
   991  0713                     	;# 
   992  0714                     	;# 
   993  0716                     	;# 
   994  0717                     	;# 
   995  0718                     	;# 
   996  0719                     	;# 
   997  071A                     	;# 
   998  071B                     	;# 
   999  071C                     	;# 
  1000  071D                     	;# 
  1001  071E                     	;# 
  1002  0796                     	;# 
  1003  0797                     	;# 
  1004  0798                     	;# 
  1005  0799                     	;# 
  1006  079A                     	;# 
  1007  079B                     	;# 
  1008  080C                     	;# 
  1009  080D                     	;# 
  1010  080E                     	;# 
  1011  080F                     	;# 
  1012  0810                     	;# 
  1013  0811                     	;# 
  1014  0812                     	;# 
  1015  0813                     	;# 
  1016  0814                     	;# 
  1017  081A                     	;# 
  1018  081B                     	;# 
  1019  081C                     	;# 
  1020  081D                     	;# 
  1021  081E                     	;# 
  1022  081F                     	;# 
  1023  088C                     	;# 
  1024  088D                     	;# 
  1025  088E                     	;# 
  1026  088F                     	;# 
  1027  0890                     	;# 
  1028  0891                     	;# 
  1029  0892                     	;# 
  1030  0893                     	;# 
  1031  0895                     	;# 
  1032  0896                     	;# 
  1033  0897                     	;# 
  1034  0898                     	;# 
  1035  0899                     	;# 
  1036  089A                     	;# 
  1037  089B                     	;# 
  1038  090C                     	;# 
  1039  090E                     	;# 
  1040  090F                     	;# 
  1041  091F                     	;# 
  1042  091F                     	;# 
  1043  098F                     	;# 
  1044  098F                     	;# 
  1045  0990                     	;# 
  1046  0991                     	;# 
  1047  0992                     	;# 
  1048  0993                     	;# 
  1049  0994                     	;# 
  1050  0995                     	;# 
  1051  0996                     	;# 
  1052  0997                     	;# 
  1053  0E0F                     	;# 
  1054  0E10                     	;# 
  1055  0E11                     	;# 
  1056  0E12                     	;# 
  1057  0E13                     	;# 
  1058  0E14                     	;# 
  1059  0E15                     	;# 
  1060  0E16                     	;# 
  1061  0E17                     	;# 
  1062  0E18                     	;# 
  1063  0E19                     	;# 
  1064  0E1A                     	;# 
  1065  0E1B                     	;# 
  1066  0E1C                     	;# 
  1067  0E1D                     	;# 
  1068  0E1E                     	;# 
  1069  0E1F                     	;# 
  1070  0E20                     	;# 
  1071  0E21                     	;# 
  1072  0E22                     	;# 
  1073  0E23                     	;# 
  1074  0E24                     	;# 
  1075  0E25                     	;# 
  1076  0E26                     	;# 
  1077  0E27                     	;# 
  1078  0E28                     	;# 
  1079  0E29                     	;# 
  1080  0E2A                     	;# 
  1081  0E2B                     	;# 
  1082  0E2C                     	;# 
  1083  0E2D                     	;# 
  1084  0E2E                     	;# 
  1085  0E2F                     	;# 
  1086  0E30                     	;# 
  1087  0E31                     	;# 
  1088  0E32                     	;# 
  1089  0E33                     	;# 
  1090  0E34                     	;# 
  1091  0E35                     	;# 
  1092  0E36                     	;# 
  1093  0E37                     	;# 
  1094  0E8F                     	;# 
  1095  0E90                     	;# 
  1096  0E91                     	;# 
  1097  0E92                     	;# 
  1098  0E93                     	;# 
  1099  0E94                     	;# 
  1100  0E95                     	;# 
  1101  0E96                     	;# 
  1102  0E97                     	;# 
  1103  0E9C                     	;# 
  1104  0E9D                     	;# 
  1105  0E9E                     	;# 
  1106  0EA1                     	;# 
  1107  0EA2                     	;# 
  1108  0EA3                     	;# 
  1109  0EA4                     	;# 
  1110  0EA5                     	;# 
  1111  0EA9                     	;# 
  1112  0EAA                     	;# 
  1113  0EAB                     	;# 
  1114  0EAC                     	;# 
  1115  0EB1                     	;# 
  1116  0EB2                     	;# 
  1117  0EB3                     	;# 
  1118  0EB8                     	;# 
  1119  0EB9                     	;# 
  1120  0EBA                     	;# 
  1121  0EBB                     	;# 
  1122  0EBC                     	;# 
  1123  0EBD                     	;# 
  1124  0EBE                     	;# 
  1125  0EC3                     	;# 
  1126  0EC5                     	;# 
  1127  0EC6                     	;# 
  1128  0EC7                     	;# 
  1129  0EC8                     	;# 
  1130  0EC9                     	;# 
  1131  0ECA                     	;# 
  1132  0ECB                     	;# 
  1133  0ECC                     	;# 
  1134  0F10                     	;# 
  1135  0F11                     	;# 
  1136  0F12                     	;# 
  1137  0F13                     	;# 
  1138  0F14                     	;# 
  1139  0F15                     	;# 
  1140  0F16                     	;# 
  1141  0F17                     	;# 
  1142  0F18                     	;# 
  1143  0F19                     	;# 
  1144  0F1A                     	;# 
  1145  0F1B                     	;# 
  1146  0F1C                     	;# 
  1147  0F1D                     	;# 
  1148  0F1E                     	;# 
  1149  0F1F                     	;# 
  1150  0F20                     	;# 
  1151  0F21                     	;# 
  1152  0F22                     	;# 
  1153  0F23                     	;# 
  1154  0F24                     	;# 
  1155  0F25                     	;# 
  1156  0F26                     	;# 
  1157  0F27                     	;# 
  1158  0F28                     	;# 
  1159  0F29                     	;# 
  1160  0F2A                     	;# 
  1161  0F2B                     	;# 
  1162  0F2C                     	;# 
  1163  0F2D                     	;# 
  1164  0F2E                     	;# 
  1165  0F2F                     	;# 
  1166  0F30                     	;# 
  1167  0F31                     	;# 
  1168  0F32                     	;# 
  1169  0F38                     	;# 
  1170  0F39                     	;# 
  1171  0F3A                     	;# 
  1172  0F3B                     	;# 
  1173  0F3C                     	;# 
  1174  0F3D                     	;# 
  1175  0F3E                     	;# 
  1176  0F3F                     	;# 
  1177  0F40                     	;# 
  1178  0F41                     	;# 
  1179  0F43                     	;# 
  1180  0F44                     	;# 
  1181  0F45                     	;# 
  1182  0F46                     	;# 
  1183  0F47                     	;# 
  1184  0F48                     	;# 
  1185  0F49                     	;# 
  1186  0F4A                     	;# 
  1187  0F4B                     	;# 
  1188  0F4C                     	;# 
  1189  0F4E                     	;# 
  1190  0F4F                     	;# 
  1191  0F50                     	;# 
  1192  0F51                     	;# 
  1193  0F52                     	;# 
  1194  0F53                     	;# 
  1195  0F54                     	;# 
  1196  0F55                     	;# 
  1197  0F56                     	;# 
  1198  0F57                     	;# 
  1199  0F59                     	;# 
  1200  0F5A                     	;# 
  1201  0F5B                     	;# 
  1202  0F5C                     	;# 
  1203  0F5D                     	;# 
  1204  0F61                     	;# 
  1205  0F62                     	;# 
  1206  0F64                     	;# 
  1207  0F65                     	;# 
  1208  0F66                     	;# 
  1209  0F67                     	;# 
  1210  0F68                     	;# 
  1211  0F69                     	;# 
  1212  0F6A                     	;# 
  1213  0F6B                     	;# 
  1214  0F6C                     	;# 
  1215  0F6D                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  000F                     	;# 
  1243  0010                     	;# 
  1244  0011                     	;# 
  1245  0012                     	;# 
  1246  0013                     	;# 
  1247  0014                     	;# 
  1248  0015                     	;# 
  1249  0016                     	;# 
  1250  0017                     	;# 
  1251  0018                     	;# 
  1252  0019                     	;# 
  1253  001A                     	;# 
  1254  001C                     	;# 
  1255  001C                     	;# 
  1256  001D                     	;# 
  1257  001D                     	;# 
  1258  001E                     	;# 
  1259  001F                     	;# 
  1260  008C                     	;# 
  1261  008C                     	;# 
  1262  008D                     	;# 
  1263  008E                     	;# 
  1264  008E                     	;# 
  1265  008F                     	;# 
  1266  0090                     	;# 
  1267  0090                     	;# 
  1268  0091                     	;# 
  1269  0093                     	;# 
  1270  0094                     	;# 
  1271  0095                     	;# 
  1272  0096                     	;# 
  1273  0097                     	;# 
  1274  0098                     	;# 
  1275  0099                     	;# 
  1276  009A                     	;# 
  1277  009B                     	;# 
  1278  009C                     	;# 
  1279  009D                     	;# 
  1280  009E                     	;# 
  1281  010C                     	;# 
  1282  010D                     	;# 
  1283  010E                     	;# 
  1284  010E                     	;# 
  1285  010F                     	;# 
  1286  0110                     	;# 
  1287  0110                     	;# 
  1288  0111                     	;# 
  1289  0112                     	;# 
  1290  0112                     	;# 
  1291  0113                     	;# 
  1292  0114                     	;# 
  1293  0114                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0116                     	;# 
  1297  0117                     	;# 
  1298  0119                     	;# 
  1299  0119                     	;# 
  1300  0119                     	;# 
  1301  011A                     	;# 
  1302  011A                     	;# 
  1303  011A                     	;# 
  1304  011B                     	;# 
  1305  011B                     	;# 
  1306  011B                     	;# 
  1307  011B                     	;# 
  1308  011B                     	;# 
  1309  011C                     	;# 
  1310  011C                     	;# 
  1311  011C                     	;# 
  1312  011D                     	;# 
  1313  011D                     	;# 
  1314  011D                     	;# 
  1315  011E                     	;# 
  1316  011E                     	;# 
  1317  011E                     	;# 
  1318  011F                     	;# 
  1319  011F                     	;# 
  1320  011F                     	;# 
  1321  011F                     	;# 
  1322  011F                     	;# 
  1323  018C                     	;# 
  1324  018D                     	;# 
  1325  018E                     	;# 
  1326  018F                     	;# 
  1327  0190                     	;# 
  1328  0191                     	;# 
  1329  0192                     	;# 
  1330  0196                     	;# 
  1331  0197                     	;# 
  1332  0198                     	;# 
  1333  0199                     	;# 
  1334  019A                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  020C                     	;# 
  1338  020C                     	;# 
  1339  020D                     	;# 
  1340  020E                     	;# 
  1341  020F                     	;# 
  1342  020F                     	;# 
  1343  0210                     	;# 
  1344  0210                     	;# 
  1345  0211                     	;# 
  1346  0211                     	;# 
  1347  0212                     	;# 
  1348  0212                     	;# 
  1349  0213                     	;# 
  1350  0214                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0216                     	;# 
  1354  0216                     	;# 
  1355  0217                     	;# 
  1356  0217                     	;# 
  1357  0218                     	;# 
  1358  0218                     	;# 
  1359  0219                     	;# 
  1360  021A                     	;# 
  1361  021B                     	;# 
  1362  021B                     	;# 
  1363  021C                     	;# 
  1364  021C                     	;# 
  1365  021D                     	;# 
  1366  021D                     	;# 
  1367  021E                     	;# 
  1368  021F                     	;# 
  1369  028C                     	;# 
  1370  028C                     	;# 
  1371  028D                     	;# 
  1372  028D                     	;# 
  1373  028E                     	;# 
  1374  028F                     	;# 
  1375  0290                     	;# 
  1376  0290                     	;# 
  1377  0291                     	;# 
  1378  0292                     	;# 
  1379  0292                     	;# 
  1380  0293                     	;# 
  1381  0293                     	;# 
  1382  0294                     	;# 
  1383  0295                     	;# 
  1384  0296                     	;# 
  1385  0296                     	;# 
  1386  0297                     	;# 
  1387  0298                     	;# 
  1388  0298                     	;# 
  1389  0299                     	;# 
  1390  0299                     	;# 
  1391  029A                     	;# 
  1392  029B                     	;# 
  1393  029C                     	;# 
  1394  029C                     	;# 
  1395  029D                     	;# 
  1396  030C                     	;# 
  1397  030C                     	;# 
  1398  030D                     	;# 
  1399  030E                     	;# 
  1400  030F                     	;# 
  1401  0310                     	;# 
  1402  0310                     	;# 
  1403  0311                     	;# 
  1404  0312                     	;# 
  1405  0313                     	;# 
  1406  0314                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0316                     	;# 
  1410  0317                     	;# 
  1411  0318                     	;# 
  1412  0318                     	;# 
  1413  0319                     	;# 
  1414  031A                     	;# 
  1415  031B                     	;# 
  1416  031C                     	;# 
  1417  031C                     	;# 
  1418  031D                     	;# 
  1419  031E                     	;# 
  1420  031F                     	;# 
  1421  038C                     	;# 
  1422  038C                     	;# 
  1423  038D                     	;# 
  1424  038E                     	;# 
  1425  0390                     	;# 
  1426  0390                     	;# 
  1427  0391                     	;# 
  1428  0392                     	;# 
  1429  040C                     	;# 
  1430  040D                     	;# 
  1431  040E                     	;# 
  1432  040F                     	;# 
  1433  0410                     	;# 
  1434  0411                     	;# 
  1435  0416                     	;# 
  1436  0416                     	;# 
  1437  0417                     	;# 
  1438  0418                     	;# 
  1439  0418                     	;# 
  1440  0419                     	;# 
  1441  041A                     	;# 
  1442  041A                     	;# 
  1443  041B                     	;# 
  1444  041C                     	;# 
  1445  041C                     	;# 
  1446  041D                     	;# 
  1447  041E                     	;# 
  1448  041F                     	;# 
  1449  048C                     	;# 
  1450  048C                     	;# 
  1451  048D                     	;# 
  1452  048E                     	;# 
  1453  048F                     	;# 
  1454  048F                     	;# 
  1455  0490                     	;# 
  1456  0491                     	;# 
  1457  0492                     	;# 
  1458  0492                     	;# 
  1459  0493                     	;# 
  1460  0494                     	;# 
  1461  0495                     	;# 
  1462  0495                     	;# 
  1463  0496                     	;# 
  1464  0497                     	;# 
  1465  0498                     	;# 
  1466  0499                     	;# 
  1467  049A                     	;# 
  1468  049B                     	;# 
  1469  049C                     	;# 
  1470  049D                     	;# 
  1471  050C                     	;# 
  1472  050C                     	;# 
  1473  050D                     	;# 
  1474  050E                     	;# 
  1475  050F                     	;# 
  1476  050F                     	;# 
  1477  0510                     	;# 
  1478  0511                     	;# 
  1479  0512                     	;# 
  1480  0512                     	;# 
  1481  0513                     	;# 
  1482  0514                     	;# 
  1483  0515                     	;# 
  1484  0515                     	;# 
  1485  0516                     	;# 
  1486  0517                     	;# 
  1487  0518                     	;# 
  1488  0519                     	;# 
  1489  051A                     	;# 
  1490  051B                     	;# 
  1491  051C                     	;# 
  1492  051D                     	;# 
  1493  058C                     	;# 
  1494  058C                     	;# 
  1495  058D                     	;# 
  1496  058E                     	;# 
  1497  058F                     	;# 
  1498  058F                     	;# 
  1499  0590                     	;# 
  1500  0591                     	;# 
  1501  0592                     	;# 
  1502  0593                     	;# 
  1503  060C                     	;# 
  1504  060D                     	;# 
  1505  060E                     	;# 
  1506  060F                     	;# 
  1507  0610                     	;# 
  1508  0611                     	;# 
  1509  0612                     	;# 
  1510  0613                     	;# 
  1511  0614                     	;# 
  1512  0616                     	;# 
  1513  0617                     	;# 
  1514  0618                     	;# 
  1515  0619                     	;# 
  1516  061A                     	;# 
  1517  061B                     	;# 
  1518  061C                     	;# 
  1519  061D                     	;# 
  1520  061E                     	;# 
  1521  068C                     	;# 
  1522  068D                     	;# 
  1523  068E                     	;# 
  1524  068F                     	;# 
  1525  0690                     	;# 
  1526  0691                     	;# 
  1527  0692                     	;# 
  1528  0693                     	;# 
  1529  0694                     	;# 
  1530  070C                     	;# 
  1531  070D                     	;# 
  1532  070E                     	;# 
  1533  070F                     	;# 
  1534  0710                     	;# 
  1535  0711                     	;# 
  1536  0712                     	;# 
  1537  0713                     	;# 
  1538  0714                     	;# 
  1539  0716                     	;# 
  1540  0717                     	;# 
  1541  0718                     	;# 
  1542  0719                     	;# 
  1543  071A                     	;# 
  1544  071B                     	;# 
  1545  071C                     	;# 
  1546  071D                     	;# 
  1547  071E                     	;# 
  1548  0796                     	;# 
  1549  0797                     	;# 
  1550  0798                     	;# 
  1551  0799                     	;# 
  1552  079A                     	;# 
  1553  079B                     	;# 
  1554  080C                     	;# 
  1555  080D                     	;# 
  1556  080E                     	;# 
  1557  080F                     	;# 
  1558  0810                     	;# 
  1559  0811                     	;# 
  1560  0812                     	;# 
  1561  0813                     	;# 
  1562  0814                     	;# 
  1563  081A                     	;# 
  1564  081B                     	;# 
  1565  081C                     	;# 
  1566  081D                     	;# 
  1567  081E                     	;# 
  1568  081F                     	;# 
  1569  088C                     	;# 
  1570  088D                     	;# 
  1571  088E                     	;# 
  1572  088F                     	;# 
  1573  0890                     	;# 
  1574  0891                     	;# 
  1575  0892                     	;# 
  1576  0893                     	;# 
  1577  0895                     	;# 
  1578  0896                     	;# 
  1579  0897                     	;# 
  1580  0898                     	;# 
  1581  0899                     	;# 
  1582  089A                     	;# 
  1583  089B                     	;# 
  1584  090C                     	;# 
  1585  090E                     	;# 
  1586  090F                     	;# 
  1587  091F                     	;# 
  1588  091F                     	;# 
  1589  098F                     	;# 
  1590  098F                     	;# 
  1591  0990                     	;# 
  1592  0991                     	;# 
  1593  0992                     	;# 
  1594  0993                     	;# 
  1595  0994                     	;# 
  1596  0995                     	;# 
  1597  0996                     	;# 
  1598  0997                     	;# 
  1599  0E0F                     	;# 
  1600  0E10                     	;# 
  1601  0E11                     	;# 
  1602  0E12                     	;# 
  1603  0E13                     	;# 
  1604  0E14                     	;# 
  1605  0E15                     	;# 
  1606  0E16                     	;# 
  1607  0E17                     	;# 
  1608  0E18                     	;# 
  1609  0E19                     	;# 
  1610  0E1A                     	;# 
  1611  0E1B                     	;# 
  1612  0E1C                     	;# 
  1613  0E1D                     	;# 
  1614  0E1E                     	;# 
  1615  0E1F                     	;# 
  1616  0E20                     	;# 
  1617  0E21                     	;# 
  1618  0E22                     	;# 
  1619  0E23                     	;# 
  1620  0E24                     	;# 
  1621  0E25                     	;# 
  1622  0E26                     	;# 
  1623  0E27                     	;# 
  1624  0E28                     	;# 
  1625  0E29                     	;# 
  1626  0E2A                     	;# 
  1627  0E2B                     	;# 
  1628  0E2C                     	;# 
  1629  0E2D                     	;# 
  1630  0E2E                     	;# 
  1631  0E2F                     	;# 
  1632  0E30                     	;# 
  1633  0E31                     	;# 
  1634  0E32                     	;# 
  1635  0E33                     	;# 
  1636  0E34                     	;# 
  1637  0E35                     	;# 
  1638  0E36                     	;# 
  1639  0E37                     	;# 
  1640  0E8F                     	;# 
  1641  0E90                     	;# 
  1642  0E91                     	;# 
  1643  0E92                     	;# 
  1644  0E93                     	;# 
  1645  0E94                     	;# 
  1646  0E95                     	;# 
  1647  0E96                     	;# 
  1648  0E97                     	;# 
  1649  0E9C                     	;# 
  1650  0E9D                     	;# 
  1651  0E9E                     	;# 
  1652  0EA1                     	;# 
  1653  0EA2                     	;# 
  1654  0EA3                     	;# 
  1655  0EA4                     	;# 
  1656  0EA5                     	;# 
  1657  0EA9                     	;# 
  1658  0EAA                     	;# 
  1659  0EAB                     	;# 
  1660  0EAC                     	;# 
  1661  0EB1                     	;# 
  1662  0EB2                     	;# 
  1663  0EB3                     	;# 
  1664  0EB8                     	;# 
  1665  0EB9                     	;# 
  1666  0EBA                     	;# 
  1667  0EBB                     	;# 
  1668  0EBC                     	;# 
  1669  0EBD                     	;# 
  1670  0EBE                     	;# 
  1671  0EC3                     	;# 
  1672  0EC5                     	;# 
  1673  0EC6                     	;# 
  1674  0EC7                     	;# 
  1675  0EC8                     	;# 
  1676  0EC9                     	;# 
  1677  0ECA                     	;# 
  1678  0ECB                     	;# 
  1679  0ECC                     	;# 
  1680  0F10                     	;# 
  1681  0F11                     	;# 
  1682  0F12                     	;# 
  1683  0F13                     	;# 
  1684  0F14                     	;# 
  1685  0F15                     	;# 
  1686  0F16                     	;# 
  1687  0F17                     	;# 
  1688  0F18                     	;# 
  1689  0F19                     	;# 
  1690  0F1A                     	;# 
  1691  0F1B                     	;# 
  1692  0F1C                     	;# 
  1693  0F1D                     	;# 
  1694  0F1E                     	;# 
  1695  0F1F                     	;# 
  1696  0F20                     	;# 
  1697  0F21                     	;# 
  1698  0F22                     	;# 
  1699  0F23                     	;# 
  1700  0F24                     	;# 
  1701  0F25                     	;# 
  1702  0F26                     	;# 
  1703  0F27                     	;# 
  1704  0F28                     	;# 
  1705  0F29                     	;# 
  1706  0F2A                     	;# 
  1707  0F2B                     	;# 
  1708  0F2C                     	;# 
  1709  0F2D                     	;# 
  1710  0F2E                     	;# 
  1711  0F2F                     	;# 
  1712  0F30                     	;# 
  1713  0F31                     	;# 
  1714  0F32                     	;# 
  1715  0F38                     	;# 
  1716  0F39                     	;# 
  1717  0F3A                     	;# 
  1718  0F3B                     	;# 
  1719  0F3C                     	;# 
  1720  0F3D                     	;# 
  1721  0F3E                     	;# 
  1722  0F3F                     	;# 
  1723  0F40                     	;# 
  1724  0F41                     	;# 
  1725  0F43                     	;# 
  1726  0F44                     	;# 
  1727  0F45                     	;# 
  1728  0F46                     	;# 
  1729  0F47                     	;# 
  1730  0F48                     	;# 
  1731  0F49                     	;# 
  1732  0F4A                     	;# 
  1733  0F4B                     	;# 
  1734  0F4C                     	;# 
  1735  0F4E                     	;# 
  1736  0F4F                     	;# 
  1737  0F50                     	;# 
  1738  0F51                     	;# 
  1739  0F52                     	;# 
  1740  0F53                     	;# 
  1741  0F54                     	;# 
  1742  0F55                     	;# 
  1743  0F56                     	;# 
  1744  0F57                     	;# 
  1745  0F59                     	;# 
  1746  0F5A                     	;# 
  1747  0F5B                     	;# 
  1748  0F5C                     	;# 
  1749  0F5D                     	;# 
  1750  0F61                     	;# 
  1751  0F62                     	;# 
  1752  0F64                     	;# 
  1753  0F65                     	;# 
  1754  0F66                     	;# 
  1755  0F67                     	;# 
  1756  0F68                     	;# 
  1757  0F69                     	;# 
  1758  0F6A                     	;# 
  1759  0F6B                     	;# 
  1760  0F6C                     	;# 
  1761  0F6D                     	;# 
  1762  0FE4                     	;# 
  1763  0FE5                     	;# 
  1764  0FE6                     	;# 
  1765  0FE7                     	;# 
  1766  0FE8                     	;# 
  1767  0FE9                     	;# 
  1768  0FEA                     	;# 
  1769  0FEB                     	;# 
  1770  0FED                     	;# 
  1771  0FEE                     	;# 
  1772  0FEF                     	;# 
  1773  0000                     	;# 
  1774  0001                     	;# 
  1775  0002                     	;# 
  1776  0003                     	;# 
  1777  0004                     	;# 
  1778  0005                     	;# 
  1779  0006                     	;# 
  1780  0007                     	;# 
  1781  0008                     	;# 
  1782  0009                     	;# 
  1783  000A                     	;# 
  1784  000B                     	;# 
  1785  000C                     	;# 
  1786  000D                     	;# 
  1787  000E                     	;# 
  1788  000F                     	;# 
  1789  0010                     	;# 
  1790  0011                     	;# 
  1791  0012                     	;# 
  1792  0013                     	;# 
  1793  0014                     	;# 
  1794  0015                     	;# 
  1795  0016                     	;# 
  1796  0017                     	;# 
  1797  0018                     	;# 
  1798  0019                     	;# 
  1799  001A                     	;# 
  1800  001C                     	;# 
  1801  001C                     	;# 
  1802  001D                     	;# 
  1803  001D                     	;# 
  1804  001E                     	;# 
  1805  001F                     	;# 
  1806  008C                     	;# 
  1807  008C                     	;# 
  1808  008D                     	;# 
  1809  008E                     	;# 
  1810  008E                     	;# 
  1811  008F                     	;# 
  1812  0090                     	;# 
  1813  0090                     	;# 
  1814  0091                     	;# 
  1815  0093                     	;# 
  1816  0094                     	;# 
  1817  0095                     	;# 
  1818  0096                     	;# 
  1819  0097                     	;# 
  1820  0098                     	;# 
  1821  0099                     	;# 
  1822  009A                     	;# 
  1823  009B                     	;# 
  1824  009C                     	;# 
  1825  009D                     	;# 
  1826  009E                     	;# 
  1827  010C                     	;# 
  1828  010D                     	;# 
  1829  010E                     	;# 
  1830  010E                     	;# 
  1831  010F                     	;# 
  1832  0110                     	;# 
  1833  0110                     	;# 
  1834  0111                     	;# 
  1835  0112                     	;# 
  1836  0112                     	;# 
  1837  0113                     	;# 
  1838  0114                     	;# 
  1839  0114                     	;# 
  1840  0115                     	;# 
  1841  0116                     	;# 
  1842  0116                     	;# 
  1843  0117                     	;# 
  1844  0119                     	;# 
  1845  0119                     	;# 
  1846  0119                     	;# 
  1847  011A                     	;# 
  1848  011A                     	;# 
  1849  011A                     	;# 
  1850  011B                     	;# 
  1851  011B                     	;# 
  1852  011B                     	;# 
  1853  011B                     	;# 
  1854  011B                     	;# 
  1855  011C                     	;# 
  1856  011C                     	;# 
  1857  011C                     	;# 
  1858  011D                     	;# 
  1859  011D                     	;# 
  1860  011D                     	;# 
  1861  011E                     	;# 
  1862  011E                     	;# 
  1863  011E                     	;# 
  1864  011F                     	;# 
  1865  011F                     	;# 
  1866  011F                     	;# 
  1867  011F                     	;# 
  1868  011F                     	;# 
  1869  018C                     	;# 
  1870  018D                     	;# 
  1871  018E                     	;# 
  1872  018F                     	;# 
  1873  0190                     	;# 
  1874  0191                     	;# 
  1875  0192                     	;# 
  1876  0196                     	;# 
  1877  0197                     	;# 
  1878  0198                     	;# 
  1879  0199                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  020C                     	;# 
  1884  020C                     	;# 
  1885  020D                     	;# 
  1886  020E                     	;# 
  1887  020F                     	;# 
  1888  020F                     	;# 
  1889  0210                     	;# 
  1890  0210                     	;# 
  1891  0211                     	;# 
  1892  0211                     	;# 
  1893  0212                     	;# 
  1894  0212                     	;# 
  1895  0213                     	;# 
  1896  0214                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0216                     	;# 
  1900  0216                     	;# 
  1901  0217                     	;# 
  1902  0217                     	;# 
  1903  0218                     	;# 
  1904  0218                     	;# 
  1905  0219                     	;# 
  1906  021A                     	;# 
  1907  021B                     	;# 
  1908  021B                     	;# 
  1909  021C                     	;# 
  1910  021C                     	;# 
  1911  021D                     	;# 
  1912  021D                     	;# 
  1913  021E                     	;# 
  1914  021F                     	;# 
  1915  028C                     	;# 
  1916  028C                     	;# 
  1917  028D                     	;# 
  1918  028D                     	;# 
  1919  028E                     	;# 
  1920  028F                     	;# 
  1921  0290                     	;# 
  1922  0290                     	;# 
  1923  0291                     	;# 
  1924  0292                     	;# 
  1925  0292                     	;# 
  1926  0293                     	;# 
  1927  0293                     	;# 
  1928  0294                     	;# 
  1929  0295                     	;# 
  1930  0296                     	;# 
  1931  0296                     	;# 
  1932  0297                     	;# 
  1933  0298                     	;# 
  1934  0298                     	;# 
  1935  0299                     	;# 
  1936  0299                     	;# 
  1937  029A                     	;# 
  1938  029B                     	;# 
  1939  029C                     	;# 
  1940  029C                     	;# 
  1941  029D                     	;# 
  1942  030C                     	;# 
  1943  030C                     	;# 
  1944  030D                     	;# 
  1945  030E                     	;# 
  1946  030F                     	;# 
  1947  0310                     	;# 
  1948  0310                     	;# 
  1949  0311                     	;# 
  1950  0312                     	;# 
  1951  0313                     	;# 
  1952  0314                     	;# 
  1953  0314                     	;# 
  1954  0315                     	;# 
  1955  0316                     	;# 
  1956  0317                     	;# 
  1957  0318                     	;# 
  1958  0318                     	;# 
  1959  0319                     	;# 
  1960  031A                     	;# 
  1961  031B                     	;# 
  1962  031C                     	;# 
  1963  031C                     	;# 
  1964  031D                     	;# 
  1965  031E                     	;# 
  1966  031F                     	;# 
  1967  038C                     	;# 
  1968  038C                     	;# 
  1969  038D                     	;# 
  1970  038E                     	;# 
  1971  0390                     	;# 
  1972  0390                     	;# 
  1973  0391                     	;# 
  1974  0392                     	;# 
  1975  040C                     	;# 
  1976  040D                     	;# 
  1977  040E                     	;# 
  1978  040F                     	;# 
  1979  0410                     	;# 
  1980  0411                     	;# 
  1981  0416                     	;# 
  1982  0416                     	;# 
  1983  0417                     	;# 
  1984  0418                     	;# 
  1985  0418                     	;# 
  1986  0419                     	;# 
  1987  041A                     	;# 
  1988  041A                     	;# 
  1989  041B                     	;# 
  1990  041C                     	;# 
  1991  041C                     	;# 
  1992  041D                     	;# 
  1993  041E                     	;# 
  1994  041F                     	;# 
  1995  048C                     	;# 
  1996  048C                     	;# 
  1997  048D                     	;# 
  1998  048E                     	;# 
  1999  048F                     	;# 
  2000  048F                     	;# 
  2001  0490                     	;# 
  2002  0491                     	;# 
  2003  0492                     	;# 
  2004  0492                     	;# 
  2005  0493                     	;# 
  2006  0494                     	;# 
  2007  0495                     	;# 
  2008  0495                     	;# 
  2009  0496                     	;# 
  2010  0497                     	;# 
  2011  0498                     	;# 
  2012  0499                     	;# 
  2013  049A                     	;# 
  2014  049B                     	;# 
  2015  049C                     	;# 
  2016  049D                     	;# 
  2017  050C                     	;# 
  2018  050C                     	;# 
  2019  050D                     	;# 
  2020  050E                     	;# 
  2021  050F                     	;# 
  2022  050F                     	;# 
  2023  0510                     	;# 
  2024  0511                     	;# 
  2025  0512                     	;# 
  2026  0512                     	;# 
  2027  0513                     	;# 
  2028  0514                     	;# 
  2029  0515                     	;# 
  2030  0515                     	;# 
  2031  0516                     	;# 
  2032  0517                     	;# 
  2033  0518                     	;# 
  2034  0519                     	;# 
  2035  051A                     	;# 
  2036  051B                     	;# 
  2037  051C                     	;# 
  2038  051D                     	;# 
  2039  058C                     	;# 
  2040  058C                     	;# 
  2041  058D                     	;# 
  2042  058E                     	;# 
  2043  058F                     	;# 
  2044  058F                     	;# 
  2045  0590                     	;# 
  2046  0591                     	;# 
  2047  0592                     	;# 
  2048  0593                     	;# 
  2049  060C                     	;# 
  2050  060D                     	;# 
  2051  060E                     	;# 
  2052  060F                     	;# 
  2053  0610                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0616                     	;# 
  2059  0617                     	;# 
  2060  0618                     	;# 
  2061  0619                     	;# 
  2062  061A                     	;# 
  2063  061B                     	;# 
  2064  061C                     	;# 
  2065  061D                     	;# 
  2066  061E                     	;# 
  2067  068C                     	;# 
  2068  068D                     	;# 
  2069  068E                     	;# 
  2070  068F                     	;# 
  2071  0690                     	;# 
  2072  0691                     	;# 
  2073  0692                     	;# 
  2074  0693                     	;# 
  2075  0694                     	;# 
  2076  070C                     	;# 
  2077  070D                     	;# 
  2078  070E                     	;# 
  2079  070F                     	;# 
  2080  0710                     	;# 
  2081  0711                     	;# 
  2082  0712                     	;# 
  2083  0713                     	;# 
  2084  0714                     	;# 
  2085  0716                     	;# 
  2086  0717                     	;# 
  2087  0718                     	;# 
  2088  0719                     	;# 
  2089  071A                     	;# 
  2090  071B                     	;# 
  2091  071C                     	;# 
  2092  071D                     	;# 
  2093  071E                     	;# 
  2094  0796                     	;# 
  2095  0797                     	;# 
  2096  0798                     	;# 
  2097  0799                     	;# 
  2098  079A                     	;# 
  2099  079B                     	;# 
  2100  080C                     	;# 
  2101  080D                     	;# 
  2102  080E                     	;# 
  2103  080F                     	;# 
  2104  0810                     	;# 
  2105  0811                     	;# 
  2106  0812                     	;# 
  2107  0813                     	;# 
  2108  0814                     	;# 
  2109  081A                     	;# 
  2110  081B                     	;# 
  2111  081C                     	;# 
  2112  081D                     	;# 
  2113  081E                     	;# 
  2114  081F                     	;# 
  2115  088C                     	;# 
  2116  088D                     	;# 
  2117  088E                     	;# 
  2118  088F                     	;# 
  2119  0890                     	;# 
  2120  0891                     	;# 
  2121  0892                     	;# 
  2122  0893                     	;# 
  2123  0895                     	;# 
  2124  0896                     	;# 
  2125  0897                     	;# 
  2126  0898                     	;# 
  2127  0899                     	;# 
  2128  089A                     	;# 
  2129  089B                     	;# 
  2130  090C                     	;# 
  2131  090E                     	;# 
  2132  090F                     	;# 
  2133  091F                     	;# 
  2134  091F                     	;# 
  2135  098F                     	;# 
  2136  098F                     	;# 
  2137  0990                     	;# 
  2138  0991                     	;# 
  2139  0992                     	;# 
  2140  0993                     	;# 
  2141  0994                     	;# 
  2142  0995                     	;# 
  2143  0996                     	;# 
  2144  0997                     	;# 
  2145  0E0F                     	;# 
  2146  0E10                     	;# 
  2147  0E11                     	;# 
  2148  0E12                     	;# 
  2149  0E13                     	;# 
  2150  0E14                     	;# 
  2151  0E15                     	;# 
  2152  0E16                     	;# 
  2153  0E17                     	;# 
  2154  0E18                     	;# 
  2155  0E19                     	;# 
  2156  0E1A                     	;# 
  2157  0E1B                     	;# 
  2158  0E1C                     	;# 
  2159  0E1D                     	;# 
  2160  0E1E                     	;# 
  2161  0E1F                     	;# 
  2162  0E20                     	;# 
  2163  0E21                     	;# 
  2164  0E22                     	;# 
  2165  0E23                     	;# 
  2166  0E24                     	;# 
  2167  0E25                     	;# 
  2168  0E26                     	;# 
  2169  0E27                     	;# 
  2170  0E28                     	;# 
  2171  0E29                     	;# 
  2172  0E2A                     	;# 
  2173  0E2B                     	;# 
  2174  0E2C                     	;# 
  2175  0E2D                     	;# 
  2176  0E2E                     	;# 
  2177  0E2F                     	;# 
  2178  0E30                     	;# 
  2179  0E31                     	;# 
  2180  0E32                     	;# 
  2181  0E33                     	;# 
  2182  0E34                     	;# 
  2183  0E35                     	;# 
  2184  0E36                     	;# 
  2185  0E37                     	;# 
  2186  0E8F                     	;# 
  2187  0E90                     	;# 
  2188  0E91                     	;# 
  2189  0E92                     	;# 
  2190  0E93                     	;# 
  2191  0E94                     	;# 
  2192  0E95                     	;# 
  2193  0E96                     	;# 
  2194  0E97                     	;# 
  2195  0E9C                     	;# 
  2196  0E9D                     	;# 
  2197  0E9E                     	;# 
  2198  0EA1                     	;# 
  2199  0EA2                     	;# 
  2200  0EA3                     	;# 
  2201  0EA4                     	;# 
  2202  0EA5                     	;# 
  2203  0EA9                     	;# 
  2204  0EAA                     	;# 
  2205  0EAB                     	;# 
  2206  0EAC                     	;# 
  2207  0EB1                     	;# 
  2208  0EB2                     	;# 
  2209  0EB3                     	;# 
  2210  0EB8                     	;# 
  2211  0EB9                     	;# 
  2212  0EBA                     	;# 
  2213  0EBB                     	;# 
  2214  0EBC                     	;# 
  2215  0EBD                     	;# 
  2216  0EBE                     	;# 
  2217  0EC3                     	;# 
  2218  0EC5                     	;# 
  2219  0EC6                     	;# 
  2220  0EC7                     	;# 
  2221  0EC8                     	;# 
  2222  0EC9                     	;# 
  2223  0ECA                     	;# 
  2224  0ECB                     	;# 
  2225  0ECC                     	;# 
  2226  0F10                     	;# 
  2227  0F11                     	;# 
  2228  0F12                     	;# 
  2229  0F13                     	;# 
  2230  0F14                     	;# 
  2231  0F15                     	;# 
  2232  0F16                     	;# 
  2233  0F17                     	;# 
  2234  0F18                     	;# 
  2235  0F19                     	;# 
  2236  0F1A                     	;# 
  2237  0F1B                     	;# 
  2238  0F1C                     	;# 
  2239  0F1D                     	;# 
  2240  0F1E                     	;# 
  2241  0F1F                     	;# 
  2242  0F20                     	;# 
  2243  0F21                     	;# 
  2244  0F22                     	;# 
  2245  0F23                     	;# 
  2246  0F24                     	;# 
  2247  0F25                     	;# 
  2248  0F26                     	;# 
  2249  0F27                     	;# 
  2250  0F28                     	;# 
  2251  0F29                     	;# 
  2252  0F2A                     	;# 
  2253  0F2B                     	;# 
  2254  0F2C                     	;# 
  2255  0F2D                     	;# 
  2256  0F2E                     	;# 
  2257  0F2F                     	;# 
  2258  0F30                     	;# 
  2259  0F31                     	;# 
  2260  0F32                     	;# 
  2261  0F38                     	;# 
  2262  0F39                     	;# 
  2263  0F3A                     	;# 
  2264  0F3B                     	;# 
  2265  0F3C                     	;# 
  2266  0F3D                     	;# 
  2267  0F3E                     	;# 
  2268  0F3F                     	;# 
  2269  0F40                     	;# 
  2270  0F41                     	;# 
  2271  0F43                     	;# 
  2272  0F44                     	;# 
  2273  0F45                     	;# 
  2274  0F46                     	;# 
  2275  0F47                     	;# 
  2276  0F48                     	;# 
  2277  0F49                     	;# 
  2278  0F4A                     	;# 
  2279  0F4B                     	;# 
  2280  0F4C                     	;# 
  2281  0F4E                     	;# 
  2282  0F4F                     	;# 
  2283  0F50                     	;# 
  2284  0F51                     	;# 
  2285  0F52                     	;# 
  2286  0F53                     	;# 
  2287  0F54                     	;# 
  2288  0F55                     	;# 
  2289  0F56                     	;# 
  2290  0F57                     	;# 
  2291  0F59                     	;# 
  2292  0F5A                     	;# 
  2293  0F5B                     	;# 
  2294  0F5C                     	;# 
  2295  0F5D                     	;# 
  2296  0F61                     	;# 
  2297  0F62                     	;# 
  2298  0F64                     	;# 
  2299  0F65                     	;# 
  2300  0F66                     	;# 
  2301  0F67                     	;# 
  2302  0F68                     	;# 
  2303  0F69                     	;# 
  2304  0F6A                     	;# 
  2305  0F6B                     	;# 
  2306  0F6C                     	;# 
  2307  0F6D                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE9                     	;# 
  2314  0FEA                     	;# 
  2315  0FEB                     	;# 
  2316  0FED                     	;# 
  2317  0FEE                     	;# 
  2318  0FEF                     	;# 
  2319  0000                     	;# 
  2320  0001                     	;# 
  2321  0002                     	;# 
  2322  0003                     	;# 
  2323  0004                     	;# 
  2324  0005                     	;# 
  2325  0006                     	;# 
  2326  0007                     	;# 
  2327  0008                     	;# 
  2328  0009                     	;# 
  2329  000A                     	;# 
  2330  000B                     	;# 
  2331  000C                     	;# 
  2332  000D                     	;# 
  2333  000E                     	;# 
  2334  000F                     	;# 
  2335  0010                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001C                     	;# 
  2347  001C                     	;# 
  2348  001D                     	;# 
  2349  001D                     	;# 
  2350  001E                     	;# 
  2351  001F                     	;# 
  2352  008C                     	;# 
  2353  008C                     	;# 
  2354  008D                     	;# 
  2355  008E                     	;# 
  2356  008E                     	;# 
  2357  008F                     	;# 
  2358  0090                     	;# 
  2359  0090                     	;# 
  2360  0091                     	;# 
  2361  0093                     	;# 
  2362  0094                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0097                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009C                     	;# 
  2371  009D                     	;# 
  2372  009E                     	;# 
  2373  010C                     	;# 
  2374  010D                     	;# 
  2375  010E                     	;# 
  2376  010E                     	;# 
  2377  010F                     	;# 
  2378  0110                     	;# 
  2379  0110                     	;# 
  2380  0111                     	;# 
  2381  0112                     	;# 
  2382  0112                     	;# 
  2383  0113                     	;# 
  2384  0114                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0116                     	;# 
  2389  0117                     	;# 
  2390  0119                     	;# 
  2391  0119                     	;# 
  2392  0119                     	;# 
  2393  011A                     	;# 
  2394  011A                     	;# 
  2395  011A                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011B                     	;# 
  2400  011B                     	;# 
  2401  011C                     	;# 
  2402  011C                     	;# 
  2403  011C                     	;# 
  2404  011D                     	;# 
  2405  011D                     	;# 
  2406  011D                     	;# 
  2407  011E                     	;# 
  2408  011E                     	;# 
  2409  011E                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  011F                     	;# 
  2414  011F                     	;# 
  2415  018C                     	;# 
  2416  018D                     	;# 
  2417  018E                     	;# 
  2418  018F                     	;# 
  2419  0190                     	;# 
  2420  0191                     	;# 
  2421  0192                     	;# 
  2422  0196                     	;# 
  2423  0197                     	;# 
  2424  0198                     	;# 
  2425  0199                     	;# 
  2426  019A                     	;# 
  2427  019B                     	;# 
  2428  019C                     	;# 
  2429  020C                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  020E                     	;# 
  2433  020F                     	;# 
  2434  020F                     	;# 
  2435  0210                     	;# 
  2436  0210                     	;# 
  2437  0211                     	;# 
  2438  0211                     	;# 
  2439  0212                     	;# 
  2440  0212                     	;# 
  2441  0213                     	;# 
  2442  0214                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0216                     	;# 
  2446  0216                     	;# 
  2447  0217                     	;# 
  2448  0217                     	;# 
  2449  0218                     	;# 
  2450  0218                     	;# 
  2451  0219                     	;# 
  2452  021A                     	;# 
  2453  021B                     	;# 
  2454  021B                     	;# 
  2455  021C                     	;# 
  2456  021C                     	;# 
  2457  021D                     	;# 
  2458  021D                     	;# 
  2459  021E                     	;# 
  2460  021F                     	;# 
  2461  028C                     	;# 
  2462  028C                     	;# 
  2463  028D                     	;# 
  2464  028D                     	;# 
  2465  028E                     	;# 
  2466  028F                     	;# 
  2467  0290                     	;# 
  2468  0290                     	;# 
  2469  0291                     	;# 
  2470  0292                     	;# 
  2471  0292                     	;# 
  2472  0293                     	;# 
  2473  0293                     	;# 
  2474  0294                     	;# 
  2475  0295                     	;# 
  2476  0296                     	;# 
  2477  0296                     	;# 
  2478  0297                     	;# 
  2479  0298                     	;# 
  2480  0298                     	;# 
  2481  0299                     	;# 
  2482  0299                     	;# 
  2483  029A                     	;# 
  2484  029B                     	;# 
  2485  029C                     	;# 
  2486  029C                     	;# 
  2487  029D                     	;# 
  2488  030C                     	;# 
  2489  030C                     	;# 
  2490  030D                     	;# 
  2491  030E                     	;# 
  2492  030F                     	;# 
  2493  0310                     	;# 
  2494  0310                     	;# 
  2495  0311                     	;# 
  2496  0312                     	;# 
  2497  0313                     	;# 
  2498  0314                     	;# 
  2499  0314                     	;# 
  2500  0315                     	;# 
  2501  0316                     	;# 
  2502  0317                     	;# 
  2503  0318                     	;# 
  2504  0318                     	;# 
  2505  0319                     	;# 
  2506  031A                     	;# 
  2507  031B                     	;# 
  2508  031C                     	;# 
  2509  031C                     	;# 
  2510  031D                     	;# 
  2511  031E                     	;# 
  2512  031F                     	;# 
  2513  038C                     	;# 
  2514  038C                     	;# 
  2515  038D                     	;# 
  2516  038E                     	;# 
  2517  0390                     	;# 
  2518  0390                     	;# 
  2519  0391                     	;# 
  2520  0392                     	;# 
  2521  040C                     	;# 
  2522  040D                     	;# 
  2523  040E                     	;# 
  2524  040F                     	;# 
  2525  0410                     	;# 
  2526  0411                     	;# 
  2527  0416                     	;# 
  2528  0416                     	;# 
  2529  0417                     	;# 
  2530  0418                     	;# 
  2531  0418                     	;# 
  2532  0419                     	;# 
  2533  041A                     	;# 
  2534  041A                     	;# 
  2535  041B                     	;# 
  2536  041C                     	;# 
  2537  041C                     	;# 
  2538  041D                     	;# 
  2539  041E                     	;# 
  2540  041F                     	;# 
  2541  048C                     	;# 
  2542  048C                     	;# 
  2543  048D                     	;# 
  2544  048E                     	;# 
  2545  048F                     	;# 
  2546  048F                     	;# 
  2547  0490                     	;# 
  2548  0491                     	;# 
  2549  0492                     	;# 
  2550  0492                     	;# 
  2551  0493                     	;# 
  2552  0494                     	;# 
  2553  0495                     	;# 
  2554  0495                     	;# 
  2555  0496                     	;# 
  2556  0497                     	;# 
  2557  0498                     	;# 
  2558  0499                     	;# 
  2559  049A                     	;# 
  2560  049B                     	;# 
  2561  049C                     	;# 
  2562  049D                     	;# 
  2563  050C                     	;# 
  2564  050C                     	;# 
  2565  050D                     	;# 
  2566  050E                     	;# 
  2567  050F                     	;# 
  2568  050F                     	;# 
  2569  0510                     	;# 
  2570  0511                     	;# 
  2571  0512                     	;# 
  2572  0512                     	;# 
  2573  0513                     	;# 
  2574  0514                     	;# 
  2575  0515                     	;# 
  2576  0515                     	;# 
  2577  0516                     	;# 
  2578  0517                     	;# 
  2579  0518                     	;# 
  2580  0519                     	;# 
  2581  051A                     	;# 
  2582  051B                     	;# 
  2583  051C                     	;# 
  2584  051D                     	;# 
  2585  058C                     	;# 
  2586  058C                     	;# 
  2587  058D                     	;# 
  2588  058E                     	;# 
  2589  058F                     	;# 
  2590  058F                     	;# 
  2591  0590                     	;# 
  2592  0591                     	;# 
  2593  0592                     	;# 
  2594  0593                     	;# 
  2595  060C                     	;# 
  2596  060D                     	;# 
  2597  060E                     	;# 
  2598  060F                     	;# 
  2599  0610                     	;# 
  2600  0611                     	;# 
  2601  0612                     	;# 
  2602  0613                     	;# 
  2603  0614                     	;# 
  2604  0616                     	;# 
  2605  0617                     	;# 
  2606  0618                     	;# 
  2607  0619                     	;# 
  2608  061A                     	;# 
  2609  061B                     	;# 
  2610  061C                     	;# 
  2611  061D                     	;# 
  2612  061E                     	;# 
  2613  068C                     	;# 
  2614  068D                     	;# 
  2615  068E                     	;# 
  2616  068F                     	;# 
  2617  0690                     	;# 
  2618  0691                     	;# 
  2619  0692                     	;# 
  2620  0693                     	;# 
  2621  0694                     	;# 
  2622  070C                     	;# 
  2623  070D                     	;# 
  2624  070E                     	;# 
  2625  070F                     	;# 
  2626  0710                     	;# 
  2627  0711                     	;# 
  2628  0712                     	;# 
  2629  0713                     	;# 
  2630  0714                     	;# 
  2631  0716                     	;# 
  2632  0717                     	;# 
  2633  0718                     	;# 
  2634  0719                     	;# 
  2635  071A                     	;# 
  2636  071B                     	;# 
  2637  071C                     	;# 
  2638  071D                     	;# 
  2639  071E                     	;# 
  2640  0796                     	;# 
  2641  0797                     	;# 
  2642  0798                     	;# 
  2643  0799                     	;# 
  2644  079A                     	;# 
  2645  079B                     	;# 
  2646  080C                     	;# 
  2647  080D                     	;# 
  2648  080E                     	;# 
  2649  080F                     	;# 
  2650  0810                     	;# 
  2651  0811                     	;# 
  2652  0812                     	;# 
  2653  0813                     	;# 
  2654  0814                     	;# 
  2655  081A                     	;# 
  2656  081B                     	;# 
  2657  081C                     	;# 
  2658  081D                     	;# 
  2659  081E                     	;# 
  2660  081F                     	;# 
  2661  088C                     	;# 
  2662  088D                     	;# 
  2663  088E                     	;# 
  2664  088F                     	;# 
  2665  0890                     	;# 
  2666  0891                     	;# 
  2667  0892                     	;# 
  2668  0893                     	;# 
  2669  0895                     	;# 
  2670  0896                     	;# 
  2671  0897                     	;# 
  2672  0898                     	;# 
  2673  0899                     	;# 
  2674  089A                     	;# 
  2675  089B                     	;# 
  2676  090C                     	;# 
  2677  090E                     	;# 
  2678  090F                     	;# 
  2679  091F                     	;# 
  2680  091F                     	;# 
  2681  098F                     	;# 
  2682  098F                     	;# 
  2683  0990                     	;# 
  2684  0991                     	;# 
  2685  0992                     	;# 
  2686  0993                     	;# 
  2687  0994                     	;# 
  2688  0995                     	;# 
  2689  0996                     	;# 
  2690  0997                     	;# 
  2691  0E0F                     	;# 
  2692  0E10                     	;# 
  2693  0E11                     	;# 
  2694  0E12                     	;# 
  2695  0E13                     	;# 
  2696  0E14                     	;# 
  2697  0E15                     	;# 
  2698  0E16                     	;# 
  2699  0E17                     	;# 
  2700  0E18                     	;# 
  2701  0E19                     	;# 
  2702  0E1A                     	;# 
  2703  0E1B                     	;# 
  2704  0E1C                     	;# 
  2705  0E1D                     	;# 
  2706  0E1E                     	;# 
  2707  0E1F                     	;# 
  2708  0E20                     	;# 
  2709  0E21                     	;# 
  2710  0E22                     	;# 
  2711  0E23                     	;# 
  2712  0E24                     	;# 
  2713  0E25                     	;# 
  2714  0E26                     	;# 
  2715  0E27                     	;# 
  2716  0E28                     	;# 
  2717  0E29                     	;# 
  2718  0E2A                     	;# 
  2719  0E2B                     	;# 
  2720  0E2C                     	;# 
  2721  0E2D                     	;# 
  2722  0E2E                     	;# 
  2723  0E2F                     	;# 
  2724  0E30                     	;# 
  2725  0E31                     	;# 
  2726  0E32                     	;# 
  2727  0E33                     	;# 
  2728  0E34                     	;# 
  2729  0E35                     	;# 
  2730  0E36                     	;# 
  2731  0E37                     	;# 
  2732  0E8F                     	;# 
  2733  0E90                     	;# 
  2734  0E91                     	;# 
  2735  0E92                     	;# 
  2736  0E93                     	;# 
  2737  0E94                     	;# 
  2738  0E95                     	;# 
  2739  0E96                     	;# 
  2740  0E97                     	;# 
  2741  0E9C                     	;# 
  2742  0E9D                     	;# 
  2743  0E9E                     	;# 
  2744  0EA1                     	;# 
  2745  0EA2                     	;# 
  2746  0EA3                     	;# 
  2747  0EA4                     	;# 
  2748  0EA5                     	;# 
  2749  0EA9                     	;# 
  2750  0EAA                     	;# 
  2751  0EAB                     	;# 
  2752  0EAC                     	;# 
  2753  0EB1                     	;# 
  2754  0EB2                     	;# 
  2755  0EB3                     	;# 
  2756  0EB8                     	;# 
  2757  0EB9                     	;# 
  2758  0EBA                     	;# 
  2759  0EBB                     	;# 
  2760  0EBC                     	;# 
  2761  0EBD                     	;# 
  2762  0EBE                     	;# 
  2763  0EC3                     	;# 
  2764  0EC5                     	;# 
  2765  0EC6                     	;# 
  2766  0EC7                     	;# 
  2767  0EC8                     	;# 
  2768  0EC9                     	;# 
  2769  0ECA                     	;# 
  2770  0ECB                     	;# 
  2771  0ECC                     	;# 
  2772  0F10                     	;# 
  2773  0F11                     	;# 
  2774  0F12                     	;# 
  2775  0F13                     	;# 
  2776  0F14                     	;# 
  2777  0F15                     	;# 
  2778  0F16                     	;# 
  2779  0F17                     	;# 
  2780  0F18                     	;# 
  2781  0F19                     	;# 
  2782  0F1A                     	;# 
  2783  0F1B                     	;# 
  2784  0F1C                     	;# 
  2785  0F1D                     	;# 
  2786  0F1E                     	;# 
  2787  0F1F                     	;# 
  2788  0F20                     	;# 
  2789  0F21                     	;# 
  2790  0F22                     	;# 
  2791  0F23                     	;# 
  2792  0F24                     	;# 
  2793  0F25                     	;# 
  2794  0F26                     	;# 
  2795  0F27                     	;# 
  2796  0F28                     	;# 
  2797  0F29                     	;# 
  2798  0F2A                     	;# 
  2799  0F2B                     	;# 
  2800  0F2C                     	;# 
  2801  0F2D                     	;# 
  2802  0F2E                     	;# 
  2803  0F2F                     	;# 
  2804  0F30                     	;# 
  2805  0F31                     	;# 
  2806  0F32                     	;# 
  2807  0F38                     	;# 
  2808  0F39                     	;# 
  2809  0F3A                     	;# 
  2810  0F3B                     	;# 
  2811  0F3C                     	;# 
  2812  0F3D                     	;# 
  2813  0F3E                     	;# 
  2814  0F3F                     	;# 
  2815  0F40                     	;# 
  2816  0F41                     	;# 
  2817  0F43                     	;# 
  2818  0F44                     	;# 
  2819  0F45                     	;# 
  2820  0F46                     	;# 
  2821  0F47                     	;# 
  2822  0F48                     	;# 
  2823  0F49                     	;# 
  2824  0F4A                     	;# 
  2825  0F4B                     	;# 
  2826  0F4C                     	;# 
  2827  0F4E                     	;# 
  2828  0F4F                     	;# 
  2829  0F50                     	;# 
  2830  0F51                     	;# 
  2831  0F52                     	;# 
  2832  0F53                     	;# 
  2833  0F54                     	;# 
  2834  0F55                     	;# 
  2835  0F56                     	;# 
  2836  0F57                     	;# 
  2837  0F59                     	;# 
  2838  0F5A                     	;# 
  2839  0F5B                     	;# 
  2840  0F5C                     	;# 
  2841  0F5D                     	;# 
  2842  0F61                     	;# 
  2843  0F62                     	;# 
  2844  0F64                     	;# 
  2845  0F65                     	;# 
  2846  0F66                     	;# 
  2847  0F67                     	;# 
  2848  0F68                     	;# 
  2849  0F69                     	;# 
  2850  0F6A                     	;# 
  2851  0F6B                     	;# 
  2852  0F6C                     	;# 
  2853  0F6D                     	;# 
  2854  0FE4                     	;# 
  2855  0FE5                     	;# 
  2856  0FE6                     	;# 
  2857  0FE7                     	;# 
  2858  0FE8                     	;# 
  2859  0FE9                     	;# 
  2860  0FEA                     	;# 
  2861  0FEB                     	;# 
  2862  0FED                     	;# 
  2863  0FEE                     	;# 
  2864  0FEF                     	;# 
  2865  0000                     	;# 
  2866  0001                     	;# 
  2867  0002                     	;# 
  2868  0003                     	;# 
  2869  0004                     	;# 
  2870  0005                     	;# 
  2871  0006                     	;# 
  2872  0007                     	;# 
  2873  0008                     	;# 
  2874  0009                     	;# 
  2875  000A                     	;# 
  2876  000B                     	;# 
  2877  000C                     	;# 
  2878  000D                     	;# 
  2879  000E                     	;# 
  2880  000F                     	;# 
  2881  0010                     	;# 
  2882  0011                     	;# 
  2883  0012                     	;# 
  2884  0013                     	;# 
  2885  0014                     	;# 
  2886  0015                     	;# 
  2887  0016                     	;# 
  2888  0017                     	;# 
  2889  0018                     	;# 
  2890  0019                     	;# 
  2891  001A                     	;# 
  2892  001C                     	;# 
  2893  001C                     	;# 
  2894  001D                     	;# 
  2895  001D                     	;# 
  2896  001E                     	;# 
  2897  001F                     	;# 
  2898  008C                     	;# 
  2899  008C                     	;# 
  2900  008D                     	;# 
  2901  008E                     	;# 
  2902  008E                     	;# 
  2903  008F                     	;# 
  2904  0090                     	;# 
  2905  0090                     	;# 
  2906  0091                     	;# 
  2907  0093                     	;# 
  2908  0094                     	;# 
  2909  0095                     	;# 
  2910  0096                     	;# 
  2911  0097                     	;# 
  2912  0098                     	;# 
  2913  0099                     	;# 
  2914  009A                     	;# 
  2915  009B                     	;# 
  2916  009C                     	;# 
  2917  009D                     	;# 
  2918  009E                     	;# 
  2919  010C                     	;# 
  2920  010D                     	;# 
  2921  010E                     	;# 
  2922  010E                     	;# 
  2923  010F                     	;# 
  2924  0110                     	;# 
  2925  0110                     	;# 
  2926  0111                     	;# 
  2927  0112                     	;# 
  2928  0112                     	;# 
  2929  0113                     	;# 
  2930  0114                     	;# 
  2931  0114                     	;# 
  2932  0115                     	;# 
  2933  0116                     	;# 
  2934  0116                     	;# 
  2935  0117                     	;# 
  2936  0119                     	;# 
  2937  0119                     	;# 
  2938  0119                     	;# 
  2939  011A                     	;# 
  2940  011A                     	;# 
  2941  011A                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011B                     	;# 
  2946  011B                     	;# 
  2947  011C                     	;# 
  2948  011C                     	;# 
  2949  011C                     	;# 
  2950  011D                     	;# 
  2951  011D                     	;# 
  2952  011D                     	;# 
  2953  011E                     	;# 
  2954  011E                     	;# 
  2955  011E                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  011F                     	;# 
  2960  011F                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  018F                     	;# 
  2965  0190                     	;# 
  2966  0191                     	;# 
  2967  0192                     	;# 
  2968  0196                     	;# 
  2969  0197                     	;# 
  2970  0198                     	;# 
  2971  0199                     	;# 
  2972  019A                     	;# 
  2973  019B                     	;# 
  2974  019C                     	;# 
  2975  020C                     	;# 
  2976  020C                     	;# 
  2977  020D                     	;# 
  2978  020E                     	;# 
  2979  020F                     	;# 
  2980  020F                     	;# 
  2981  0210                     	;# 
  2982  0210                     	;# 
  2983  0211                     	;# 
  2984  0211                     	;# 
  2985  0212                     	;# 
  2986  0212                     	;# 
  2987  0213                     	;# 
  2988  0214                     	;# 
  2989  0215                     	;# 
  2990  0215                     	;# 
  2991  0216                     	;# 
  2992  0216                     	;# 
  2993  0217                     	;# 
  2994  0217                     	;# 
  2995  0218                     	;# 
  2996  0218                     	;# 
  2997  0219                     	;# 
  2998  021A                     	;# 
  2999  021B                     	;# 
  3000  021B                     	;# 
  3001  021C                     	;# 
  3002  021C                     	;# 
  3003  021D                     	;# 
  3004  021D                     	;# 
  3005  021E                     	;# 
  3006  021F                     	;# 
  3007  028C                     	;# 
  3008  028C                     	;# 
  3009  028D                     	;# 
  3010  028D                     	;# 
  3011  028E                     	;# 
  3012  028F                     	;# 
  3013  0290                     	;# 
  3014  0290                     	;# 
  3015  0291                     	;# 
  3016  0292                     	;# 
  3017  0292                     	;# 
  3018  0293                     	;# 
  3019  0293                     	;# 
  3020  0294                     	;# 
  3021  0295                     	;# 
  3022  0296                     	;# 
  3023  0296                     	;# 
  3024  0297                     	;# 
  3025  0298                     	;# 
  3026  0298                     	;# 
  3027  0299                     	;# 
  3028  0299                     	;# 
  3029  029A                     	;# 
  3030  029B                     	;# 
  3031  029C                     	;# 
  3032  029C                     	;# 
  3033  029D                     	;# 
  3034  030C                     	;# 
  3035  030C                     	;# 
  3036  030D                     	;# 
  3037  030E                     	;# 
  3038  030F                     	;# 
  3039  0310                     	;# 
  3040  0310                     	;# 
  3041  0311                     	;# 
  3042  0312                     	;# 
  3043  0313                     	;# 
  3044  0314                     	;# 
  3045  0314                     	;# 
  3046  0315                     	;# 
  3047  0316                     	;# 
  3048  0317                     	;# 
  3049  0318                     	;# 
  3050  0318                     	;# 
  3051  0319                     	;# 
  3052  031A                     	;# 
  3053  031B                     	;# 
  3054  031C                     	;# 
  3055  031C                     	;# 
  3056  031D                     	;# 
  3057  031E                     	;# 
  3058  031F                     	;# 
  3059  038C                     	;# 
  3060  038C                     	;# 
  3061  038D                     	;# 
  3062  038E                     	;# 
  3063  0390                     	;# 
  3064  0390                     	;# 
  3065  0391                     	;# 
  3066  0392                     	;# 
  3067  040C                     	;# 
  3068  040D                     	;# 
  3069  040E                     	;# 
  3070  040F                     	;# 
  3071  0410                     	;# 
  3072  0411                     	;# 
  3073  0416                     	;# 
  3074  0416                     	;# 
  3075  0417                     	;# 
  3076  0418                     	;# 
  3077  0418                     	;# 
  3078  0419                     	;# 
  3079  041A                     	;# 
  3080  041A                     	;# 
  3081  041B                     	;# 
  3082  041C                     	;# 
  3083  041C                     	;# 
  3084  041D                     	;# 
  3085  041E                     	;# 
  3086  041F                     	;# 
  3087  048C                     	;# 
  3088  048C                     	;# 
  3089  048D                     	;# 
  3090  048E                     	;# 
  3091  048F                     	;# 
  3092  048F                     	;# 
  3093  0490                     	;# 
  3094  0491                     	;# 
  3095  0492                     	;# 
  3096  0492                     	;# 
  3097  0493                     	;# 
  3098  0494                     	;# 
  3099  0495                     	;# 
  3100  0495                     	;# 
  3101  0496                     	;# 
  3102  0497                     	;# 
  3103  0498                     	;# 
  3104  0499                     	;# 
  3105  049A                     	;# 
  3106  049B                     	;# 
  3107  049C                     	;# 
  3108  049D                     	;# 
  3109  050C                     	;# 
  3110  050C                     	;# 
  3111  050D                     	;# 
  3112  050E                     	;# 
  3113  050F                     	;# 
  3114  050F                     	;# 
  3115  0510                     	;# 
  3116  0511                     	;# 
  3117  0512                     	;# 
  3118  0512                     	;# 
  3119  0513                     	;# 
  3120  0514                     	;# 
  3121  0515                     	;# 
  3122  0515                     	;# 
  3123  0516                     	;# 
  3124  0517                     	;# 
  3125  0518                     	;# 
  3126  0519                     	;# 
  3127  051A                     	;# 
  3128  051B                     	;# 
  3129  051C                     	;# 
  3130  051D                     	;# 
  3131  058C                     	;# 
  3132  058C                     	;# 
  3133  058D                     	;# 
  3134  058E                     	;# 
  3135  058F                     	;# 
  3136  058F                     	;# 
  3137  0590                     	;# 
  3138  0591                     	;# 
  3139  0592                     	;# 
  3140  0593                     	;# 
  3141  060C                     	;# 
  3142  060D                     	;# 
  3143  060E                     	;# 
  3144  060F                     	;# 
  3145  0610                     	;# 
  3146  0611                     	;# 
  3147  0612                     	;# 
  3148  0613                     	;# 
  3149  0614                     	;# 
  3150  0616                     	;# 
  3151  0617                     	;# 
  3152  0618                     	;# 
  3153  0619                     	;# 
  3154  061A                     	;# 
  3155  061B                     	;# 
  3156  061C                     	;# 
  3157  061D                     	;# 
  3158  061E                     	;# 
  3159  068C                     	;# 
  3160  068D                     	;# 
  3161  068E                     	;# 
  3162  068F                     	;# 
  3163  0690                     	;# 
  3164  0691                     	;# 
  3165  0692                     	;# 
  3166  0693                     	;# 
  3167  0694                     	;# 
  3168  070C                     	;# 
  3169  070D                     	;# 
  3170  070E                     	;# 
  3171  070F                     	;# 
  3172  0710                     	;# 
  3173  0711                     	;# 
  3174  0712                     	;# 
  3175  0713                     	;# 
  3176  0714                     	;# 
  3177  0716                     	;# 
  3178  0717                     	;# 
  3179  0718                     	;# 
  3180  0719                     	;# 
  3181  071A                     	;# 
  3182  071B                     	;# 
  3183  071C                     	;# 
  3184  071D                     	;# 
  3185  071E                     	;# 
  3186  0796                     	;# 
  3187  0797                     	;# 
  3188  0798                     	;# 
  3189  0799                     	;# 
  3190  079A                     	;# 
  3191  079B                     	;# 
  3192  080C                     	;# 
  3193  080D                     	;# 
  3194  080E                     	;# 
  3195  080F                     	;# 
  3196  0810                     	;# 
  3197  0811                     	;# 
  3198  0812                     	;# 
  3199  0813                     	;# 
  3200  0814                     	;# 
  3201  081A                     	;# 
  3202  081B                     	;# 
  3203  081C                     	;# 
  3204  081D                     	;# 
  3205  081E                     	;# 
  3206  081F                     	;# 
  3207  088C                     	;# 
  3208  088D                     	;# 
  3209  088E                     	;# 
  3210  088F                     	;# 
  3211  0890                     	;# 
  3212  0891                     	;# 
  3213  0892                     	;# 
  3214  0893                     	;# 
  3215  0895                     	;# 
  3216  0896                     	;# 
  3217  0897                     	;# 
  3218  0898                     	;# 
  3219  0899                     	;# 
  3220  089A                     	;# 
  3221  089B                     	;# 
  3222  090C                     	;# 
  3223  090E                     	;# 
  3224  090F                     	;# 
  3225  091F                     	;# 
  3226  091F                     	;# 
  3227  098F                     	;# 
  3228  098F                     	;# 
  3229  0990                     	;# 
  3230  0991                     	;# 
  3231  0992                     	;# 
  3232  0993                     	;# 
  3233  0994                     	;# 
  3234  0995                     	;# 
  3235  0996                     	;# 
  3236  0997                     	;# 
  3237  0E0F                     	;# 
  3238  0E10                     	;# 
  3239  0E11                     	;# 
  3240  0E12                     	;# 
  3241  0E13                     	;# 
  3242  0E14                     	;# 
  3243  0E15                     	;# 
  3244  0E16                     	;# 
  3245  0E17                     	;# 
  3246  0E18                     	;# 
  3247  0E19                     	;# 
  3248  0E1A                     	;# 
  3249  0E1B                     	;# 
  3250  0E1C                     	;# 
  3251  0E1D                     	;# 
  3252  0E1E                     	;# 
  3253  0E1F                     	;# 
  3254  0E20                     	;# 
  3255  0E21                     	;# 
  3256  0E22                     	;# 
  3257  0E23                     	;# 
  3258  0E24                     	;# 
  3259  0E25                     	;# 
  3260  0E26                     	;# 
  3261  0E27                     	;# 
  3262  0E28                     	;# 
  3263  0E29                     	;# 
  3264  0E2A                     	;# 
  3265  0E2B                     	;# 
  3266  0E2C                     	;# 
  3267  0E2D                     	;# 
  3268  0E2E                     	;# 
  3269  0E2F                     	;# 
  3270  0E30                     	;# 
  3271  0E31                     	;# 
  3272  0E32                     	;# 
  3273  0E33                     	;# 
  3274  0E34                     	;# 
  3275  0E35                     	;# 
  3276  0E36                     	;# 
  3277  0E37                     	;# 
  3278  0E8F                     	;# 
  3279  0E90                     	;# 
  3280  0E91                     	;# 
  3281  0E92                     	;# 
  3282  0E93                     	;# 
  3283  0E94                     	;# 
  3284  0E95                     	;# 
  3285  0E96                     	;# 
  3286  0E97                     	;# 
  3287  0E9C                     	;# 
  3288  0E9D                     	;# 
  3289  0E9E                     	;# 
  3290  0EA1                     	;# 
  3291  0EA2                     	;# 
  3292  0EA3                     	;# 
  3293  0EA4                     	;# 
  3294  0EA5                     	;# 
  3295  0EA9                     	;# 
  3296  0EAA                     	;# 
  3297  0EAB                     	;# 
  3298  0EAC                     	;# 
  3299  0EB1                     	;# 
  3300  0EB2                     	;# 
  3301  0EB3                     	;# 
  3302  0EB8                     	;# 
  3303  0EB9                     	;# 
  3304  0EBA                     	;# 
  3305  0EBB                     	;# 
  3306  0EBC                     	;# 
  3307  0EBD                     	;# 
  3308  0EBE                     	;# 
  3309  0EC3                     	;# 
  3310  0EC5                     	;# 
  3311  0EC6                     	;# 
  3312  0EC7                     	;# 
  3313  0EC8                     	;# 
  3314  0EC9                     	;# 
  3315  0ECA                     	;# 
  3316  0ECB                     	;# 
  3317  0ECC                     	;# 
  3318  0F10                     	;# 
  3319  0F11                     	;# 
  3320  0F12                     	;# 
  3321  0F13                     	;# 
  3322  0F14                     	;# 
  3323  0F15                     	;# 
  3324  0F16                     	;# 
  3325  0F17                     	;# 
  3326  0F18                     	;# 
  3327  0F19                     	;# 
  3328  0F1A                     	;# 
  3329  0F1B                     	;# 
  3330  0F1C                     	;# 
  3331  0F1D                     	;# 
  3332  0F1E                     	;# 
  3333  0F1F                     	;# 
  3334  0F20                     	;# 
  3335  0F21                     	;# 
  3336  0F22                     	;# 
  3337  0F23                     	;# 
  3338  0F24                     	;# 
  3339  0F25                     	;# 
  3340  0F26                     	;# 
  3341  0F27                     	;# 
  3342  0F28                     	;# 
  3343  0F29                     	;# 
  3344  0F2A                     	;# 
  3345  0F2B                     	;# 
  3346  0F2C                     	;# 
  3347  0F2D                     	;# 
  3348  0F2E                     	;# 
  3349  0F2F                     	;# 
  3350  0F30                     	;# 
  3351  0F31                     	;# 
  3352  0F32                     	;# 
  3353  0F38                     	;# 
  3354  0F39                     	;# 
  3355  0F3A                     	;# 
  3356  0F3B                     	;# 
  3357  0F3C                     	;# 
  3358  0F3D                     	;# 
  3359  0F3E                     	;# 
  3360  0F3F                     	;# 
  3361  0F40                     	;# 
  3362  0F41                     	;# 
  3363  0F43                     	;# 
  3364  0F44                     	;# 
  3365  0F45                     	;# 
  3366  0F46                     	;# 
  3367  0F47                     	;# 
  3368  0F48                     	;# 
  3369  0F49                     	;# 
  3370  0F4A                     	;# 
  3371  0F4B                     	;# 
  3372  0F4C                     	;# 
  3373  0F4E                     	;# 
  3374  0F4F                     	;# 
  3375  0F50                     	;# 
  3376  0F51                     	;# 
  3377  0F52                     	;# 
  3378  0F53                     	;# 
  3379  0F54                     	;# 
  3380  0F55                     	;# 
  3381  0F56                     	;# 
  3382  0F57                     	;# 
  3383  0F59                     	;# 
  3384  0F5A                     	;# 
  3385  0F5B                     	;# 
  3386  0F5C                     	;# 
  3387  0F5D                     	;# 
  3388  0F61                     	;# 
  3389  0F62                     	;# 
  3390  0F64                     	;# 
  3391  0F65                     	;# 
  3392  0F66                     	;# 
  3393  0F67                     	;# 
  3394  0F68                     	;# 
  3395  0F69                     	;# 
  3396  0F6A                     	;# 
  3397  0F6B                     	;# 
  3398  0F6C                     	;# 
  3399  0F6D                     	;# 
  3400  0FE4                     	;# 
  3401  0FE5                     	;# 
  3402  0FE6                     	;# 
  3403  0FE7                     	;# 
  3404  0FE8                     	;# 
  3405  0FE9                     	;# 
  3406  0FEA                     	;# 
  3407  0FEB                     	;# 
  3408  0FED                     	;# 
  3409  0FEE                     	;# 
  3410  0FEF                     	;# 
  3411  0000                     	;# 
  3412  0001                     	;# 
  3413  0002                     	;# 
  3414  0003                     	;# 
  3415  0004                     	;# 
  3416  0005                     	;# 
  3417  0006                     	;# 
  3418  0007                     	;# 
  3419  0008                     	;# 
  3420  0009                     	;# 
  3421  000A                     	;# 
  3422  000B                     	;# 
  3423  000C                     	;# 
  3424  000D                     	;# 
  3425  000E                     	;# 
  3426  000F                     	;# 
  3427  0010                     	;# 
  3428  0011                     	;# 
  3429  0012                     	;# 
  3430  0013                     	;# 
  3431  0014                     	;# 
  3432  0015                     	;# 
  3433  0016                     	;# 
  3434  0017                     	;# 
  3435  0018                     	;# 
  3436  0019                     	;# 
  3437  001A                     	;# 
  3438  001C                     	;# 
  3439  001C                     	;# 
  3440  001D                     	;# 
  3441  001D                     	;# 
  3442  001E                     	;# 
  3443  001F                     	;# 
  3444  008C                     	;# 
  3445  008C                     	;# 
  3446  008D                     	;# 
  3447  008E                     	;# 
  3448  008E                     	;# 
  3449  008F                     	;# 
  3450  0090                     	;# 
  3451  0090                     	;# 
  3452  0091                     	;# 
  3453  0093                     	;# 
  3454  0094                     	;# 
  3455  0095                     	;# 
  3456  0096                     	;# 
  3457  0097                     	;# 
  3458  0098                     	;# 
  3459  0099                     	;# 
  3460  009A                     	;# 
  3461  009B                     	;# 
  3462  009C                     	;# 
  3463  009D                     	;# 
  3464  009E                     	;# 
  3465  010C                     	;# 
  3466  010D                     	;# 
  3467  010E                     	;# 
  3468  010E                     	;# 
  3469  010F                     	;# 
  3470  0110                     	;# 
  3471  0110                     	;# 
  3472  0111                     	;# 
  3473  0112                     	;# 
  3474  0112                     	;# 
  3475  0113                     	;# 
  3476  0114                     	;# 
  3477  0114                     	;# 
  3478  0115                     	;# 
  3479  0116                     	;# 
  3480  0116                     	;# 
  3481  0117                     	;# 
  3482  0119                     	;# 
  3483  0119                     	;# 
  3484  0119                     	;# 
  3485  011A                     	;# 
  3486  011A                     	;# 
  3487  011A                     	;# 
  3488  011B                     	;# 
  3489  011B                     	;# 
  3490  011B                     	;# 
  3491  011B                     	;# 
  3492  011B                     	;# 
  3493  011C                     	;# 
  3494  011C                     	;# 
  3495  011C                     	;# 
  3496  011D                     	;# 
  3497  011D                     	;# 
  3498  011D                     	;# 
  3499  011E                     	;# 
  3500  011E                     	;# 
  3501  011E                     	;# 
  3502  011F                     	;# 
  3503  011F                     	;# 
  3504  011F                     	;# 
  3505  011F                     	;# 
  3506  011F                     	;# 
  3507  018C                     	;# 
  3508  018D                     	;# 
  3509  018E                     	;# 
  3510  018F                     	;# 
  3511  0190                     	;# 
  3512  0191                     	;# 
  3513  0192                     	;# 
  3514  0196                     	;# 
  3515  0197                     	;# 
  3516  0198                     	;# 
  3517  0199                     	;# 
  3518  019A                     	;# 
  3519  019B                     	;# 
  3520  019C                     	;# 
  3521  020C                     	;# 
  3522  020C                     	;# 
  3523  020D                     	;# 
  3524  020E                     	;# 
  3525  020F                     	;# 
  3526  020F                     	;# 
  3527  0210                     	;# 
  3528  0210                     	;# 
  3529  0211                     	;# 
  3530  0211                     	;# 
  3531  0212                     	;# 
  3532  0212                     	;# 
  3533  0213                     	;# 
  3534  0214                     	;# 
  3535  0215                     	;# 
  3536  0215                     	;# 
  3537  0216                     	;# 
  3538  0216                     	;# 
  3539  0217                     	;# 
  3540  0217                     	;# 
  3541  0218                     	;# 
  3542  0218                     	;# 
  3543  0219                     	;# 
  3544  021A                     	;# 
  3545  021B                     	;# 
  3546  021B                     	;# 
  3547  021C                     	;# 
  3548  021C                     	;# 
  3549  021D                     	;# 
  3550  021D                     	;# 
  3551  021E                     	;# 
  3552  021F                     	;# 
  3553  028C                     	;# 
  3554  028C                     	;# 
  3555  028D                     	;# 
  3556  028D                     	;# 
  3557  028E                     	;# 
  3558  028F                     	;# 
  3559  0290                     	;# 
  3560  0290                     	;# 
  3561  0291                     	;# 
  3562  0292                     	;# 
  3563  0292                     	;# 
  3564  0293                     	;# 
  3565  0293                     	;# 
  3566  0294                     	;# 
  3567  0295                     	;# 
  3568  0296                     	;# 
  3569  0296                     	;# 
  3570  0297                     	;# 
  3571  0298                     	;# 
  3572  0298                     	;# 
  3573  0299                     	;# 
  3574  0299                     	;# 
  3575  029A                     	;# 
  3576  029B                     	;# 
  3577  029C                     	;# 
  3578  029C                     	;# 
  3579  029D                     	;# 
  3580  030C                     	;# 
  3581  030C                     	;# 
  3582  030D                     	;# 
  3583  030E                     	;# 
  3584  030F                     	;# 
  3585  0310                     	;# 
  3586  0310                     	;# 
  3587  0311                     	;# 
  3588  0312                     	;# 
  3589  0313                     	;# 
  3590  0314                     	;# 
  3591  0314                     	;# 
  3592  0315                     	;# 
  3593  0316                     	;# 
  3594  0317                     	;# 
  3595  0318                     	;# 
  3596  0318                     	;# 
  3597  0319                     	;# 
  3598  031A                     	;# 
  3599  031B                     	;# 
  3600  031C                     	;# 
  3601  031C                     	;# 
  3602  031D                     	;# 
  3603  031E                     	;# 
  3604  031F                     	;# 
  3605  038C                     	;# 
  3606  038C                     	;# 
  3607  038D                     	;# 
  3608  038E                     	;# 
  3609  0390                     	;# 
  3610  0390                     	;# 
  3611  0391                     	;# 
  3612  0392                     	;# 
  3613  040C                     	;# 
  3614  040D                     	;# 
  3615  040E                     	;# 
  3616  040F                     	;# 
  3617  0410                     	;# 
  3618  0411                     	;# 
  3619  0416                     	;# 
  3620  0416                     	;# 
  3621  0417                     	;# 
  3622  0418                     	;# 
  3623  0418                     	;# 
  3624  0419                     	;# 
  3625  041A                     	;# 
  3626  041A                     	;# 
  3627  041B                     	;# 
  3628  041C                     	;# 
  3629  041C                     	;# 
  3630  041D                     	;# 
  3631  041E                     	;# 
  3632  041F                     	;# 
  3633  048C                     	;# 
  3634  048C                     	;# 
  3635  048D                     	;# 
  3636  048E                     	;# 
  3637  048F                     	;# 
  3638  048F                     	;# 
  3639  0490                     	;# 
  3640  0491                     	;# 
  3641  0492                     	;# 
  3642  0492                     	;# 
  3643  0493                     	;# 
  3644  0494                     	;# 
  3645  0495                     	;# 
  3646  0495                     	;# 
  3647  0496                     	;# 
  3648  0497                     	;# 
  3649  0498                     	;# 
  3650  0499                     	;# 
  3651  049A                     	;# 
  3652  049B                     	;# 
  3653  049C                     	;# 
  3654  049D                     	;# 
  3655  050C                     	;# 
  3656  050C                     	;# 
  3657  050D                     	;# 
  3658  050E                     	;# 
  3659  050F                     	;# 
  3660  050F                     	;# 
  3661  0510                     	;# 
  3662  0511                     	;# 
  3663  0512                     	;# 
  3664  0512                     	;# 
  3665  0513                     	;# 
  3666  0514                     	;# 
  3667  0515                     	;# 
  3668  0515                     	;# 
  3669  0516                     	;# 
  3670  0517                     	;# 
  3671  0518                     	;# 
  3672  0519                     	;# 
  3673  051A                     	;# 
  3674  051B                     	;# 
  3675  051C                     	;# 
  3676  051D                     	;# 
  3677  058C                     	;# 
  3678  058C                     	;# 
  3679  058D                     	;# 
  3680  058E                     	;# 
  3681  058F                     	;# 
  3682  058F                     	;# 
  3683  0590                     	;# 
  3684  0591                     	;# 
  3685  0592                     	;# 
  3686  0593                     	;# 
  3687  060C                     	;# 
  3688  060D                     	;# 
  3689  060E                     	;# 
  3690  060F                     	;# 
  3691  0610                     	;# 
  3692  0611                     	;# 
  3693  0612                     	;# 
  3694  0613                     	;# 
  3695  0614                     	;# 
  3696  0616                     	;# 
  3697  0617                     	;# 
  3698  0618                     	;# 
  3699  0619                     	;# 
  3700  061A                     	;# 
  3701  061B                     	;# 
  3702  061C                     	;# 
  3703  061D                     	;# 
  3704  061E                     	;# 
  3705  068C                     	;# 
  3706  068D                     	;# 
  3707  068E                     	;# 
  3708  068F                     	;# 
  3709  0690                     	;# 
  3710  0691                     	;# 
  3711  0692                     	;# 
  3712  0693                     	;# 
  3713  0694                     	;# 
  3714  070C                     	;# 
  3715  070D                     	;# 
  3716  070E                     	;# 
  3717  070F                     	;# 
  3718  0710                     	;# 
  3719  0711                     	;# 
  3720  0712                     	;# 
  3721  0713                     	;# 
  3722  0714                     	;# 
  3723  0716                     	;# 
  3724  0717                     	;# 
  3725  0718                     	;# 
  3726  0719                     	;# 
  3727  071A                     	;# 
  3728  071B                     	;# 
  3729  071C                     	;# 
  3730  071D                     	;# 
  3731  071E                     	;# 
  3732  0796                     	;# 
  3733  0797                     	;# 
  3734  0798                     	;# 
  3735  0799                     	;# 
  3736  079A                     	;# 
  3737  079B                     	;# 
  3738  080C                     	;# 
  3739  080D                     	;# 
  3740  080E                     	;# 
  3741  080F                     	;# 
  3742  0810                     	;# 
  3743  0811                     	;# 
  3744  0812                     	;# 
  3745  0813                     	;# 
  3746  0814                     	;# 
  3747  081A                     	;# 
  3748  081B                     	;# 
  3749  081C                     	;# 
  3750  081D                     	;# 
  3751  081E                     	;# 
  3752  081F                     	;# 
  3753  088C                     	;# 
  3754  088D                     	;# 
  3755  088E                     	;# 
  3756  088F                     	;# 
  3757  0890                     	;# 
  3758  0891                     	;# 
  3759  0892                     	;# 
  3760  0893                     	;# 
  3761  0895                     	;# 
  3762  0896                     	;# 
  3763  0897                     	;# 
  3764  0898                     	;# 
  3765  0899                     	;# 
  3766  089A                     	;# 
  3767  089B                     	;# 
  3768  090C                     	;# 
  3769  090E                     	;# 
  3770  090F                     	;# 
  3771  091F                     	;# 
  3772  091F                     	;# 
  3773  098F                     	;# 
  3774  098F                     	;# 
  3775  0990                     	;# 
  3776  0991                     	;# 
  3777  0992                     	;# 
  3778  0993                     	;# 
  3779  0994                     	;# 
  3780  0995                     	;# 
  3781  0996                     	;# 
  3782  0997                     	;# 
  3783  0E0F                     	;# 
  3784  0E10                     	;# 
  3785  0E11                     	;# 
  3786  0E12                     	;# 
  3787  0E13                     	;# 
  3788  0E14                     	;# 
  3789  0E15                     	;# 
  3790  0E16                     	;# 
  3791  0E17                     	;# 
  3792  0E18                     	;# 
  3793  0E19                     	;# 
  3794  0E1A                     	;# 
  3795  0E1B                     	;# 
  3796  0E1C                     	;# 
  3797  0E1D                     	;# 
  3798  0E1E                     	;# 
  3799  0E1F                     	;# 
  3800  0E20                     	;# 
  3801  0E21                     	;# 
  3802  0E22                     	;# 
  3803  0E23                     	;# 
  3804  0E24                     	;# 
  3805  0E25                     	;# 
  3806  0E26                     	;# 
  3807  0E27                     	;# 
  3808  0E28                     	;# 
  3809  0E29                     	;# 
  3810  0E2A                     	;# 
  3811  0E2B                     	;# 
  3812  0E2C                     	;# 
  3813  0E2D                     	;# 
  3814  0E2E                     	;# 
  3815  0E2F                     	;# 
  3816  0E30                     	;# 
  3817  0E31                     	;# 
  3818  0E32                     	;# 
  3819  0E33                     	;# 
  3820  0E34                     	;# 
  3821  0E35                     	;# 
  3822  0E36                     	;# 
  3823  0E37                     	;# 
  3824  0E8F                     	;# 
  3825  0E90                     	;# 
  3826  0E91                     	;# 
  3827  0E92                     	;# 
  3828  0E93                     	;# 
  3829  0E94                     	;# 
  3830  0E95                     	;# 
  3831  0E96                     	;# 
  3832  0E97                     	;# 
  3833  0E9C                     	;# 
  3834  0E9D                     	;# 
  3835  0E9E                     	;# 
  3836  0EA1                     	;# 
  3837  0EA2                     	;# 
  3838  0EA3                     	;# 
  3839  0EA4                     	;# 
  3840  0EA5                     	;# 
  3841  0EA9                     	;# 
  3842  0EAA                     	;# 
  3843  0EAB                     	;# 
  3844  0EAC                     	;# 
  3845  0EB1                     	;# 
  3846  0EB2                     	;# 
  3847  0EB3                     	;# 
  3848  0EB8                     	;# 
  3849  0EB9                     	;# 
  3850  0EBA                     	;# 
  3851  0EBB                     	;# 
  3852  0EBC                     	;# 
  3853  0EBD                     	;# 
  3854  0EBE                     	;# 
  3855  0EC3                     	;# 
  3856  0EC5                     	;# 
  3857  0EC6                     	;# 
  3858  0EC7                     	;# 
  3859  0EC8                     	;# 
  3860  0EC9                     	;# 
  3861  0ECA                     	;# 
  3862  0ECB                     	;# 
  3863  0ECC                     	;# 
  3864  0F10                     	;# 
  3865  0F11                     	;# 
  3866  0F12                     	;# 
  3867  0F13                     	;# 
  3868  0F14                     	;# 
  3869  0F15                     	;# 
  3870  0F16                     	;# 
  3871  0F17                     	;# 
  3872  0F18                     	;# 
  3873  0F19                     	;# 
  3874  0F1A                     	;# 
  3875  0F1B                     	;# 
  3876  0F1C                     	;# 
  3877  0F1D                     	;# 
  3878  0F1E                     	;# 
  3879  0F1F                     	;# 
  3880  0F20                     	;# 
  3881  0F21                     	;# 
  3882  0F22                     	;# 
  3883  0F23                     	;# 
  3884  0F24                     	;# 
  3885  0F25                     	;# 
  3886  0F26                     	;# 
  3887  0F27                     	;# 
  3888  0F28                     	;# 
  3889  0F29                     	;# 
  3890  0F2A                     	;# 
  3891  0F2B                     	;# 
  3892  0F2C                     	;# 
  3893  0F2D                     	;# 
  3894  0F2E                     	;# 
  3895  0F2F                     	;# 
  3896  0F30                     	;# 
  3897  0F31                     	;# 
  3898  0F32                     	;# 
  3899  0F38                     	;# 
  3900  0F39                     	;# 
  3901  0F3A                     	;# 
  3902  0F3B                     	;# 
  3903  0F3C                     	;# 
  3904  0F3D                     	;# 
  3905  0F3E                     	;# 
  3906  0F3F                     	;# 
  3907  0F40                     	;# 
  3908  0F41                     	;# 
  3909  0F43                     	;# 
  3910  0F44                     	;# 
  3911  0F45                     	;# 
  3912  0F46                     	;# 
  3913  0F47                     	;# 
  3914  0F48                     	;# 
  3915  0F49                     	;# 
  3916  0F4A                     	;# 
  3917  0F4B                     	;# 
  3918  0F4C                     	;# 
  3919  0F4E                     	;# 
  3920  0F4F                     	;# 
  3921  0F50                     	;# 
  3922  0F51                     	;# 
  3923  0F52                     	;# 
  3924  0F53                     	;# 
  3925  0F54                     	;# 
  3926  0F55                     	;# 
  3927  0F56                     	;# 
  3928  0F57                     	;# 
  3929  0F59                     	;# 
  3930  0F5A                     	;# 
  3931  0F5B                     	;# 
  3932  0F5C                     	;# 
  3933  0F5D                     	;# 
  3934  0F61                     	;# 
  3935  0F62                     	;# 
  3936  0F64                     	;# 
  3937  0F65                     	;# 
  3938  0F66                     	;# 
  3939  0F67                     	;# 
  3940  0F68                     	;# 
  3941  0F69                     	;# 
  3942  0F6A                     	;# 
  3943  0F6B                     	;# 
  3944  0F6C                     	;# 
  3945  0F6D                     	;# 
  3946  0FE4                     	;# 
  3947  0FE5                     	;# 
  3948  0FE6                     	;# 
  3949  0FE7                     	;# 
  3950  0FE8                     	;# 
  3951  0FE9                     	;# 
  3952  0FEA                     	;# 
  3953  0FEB                     	;# 
  3954  0FED                     	;# 
  3955  0FEE                     	;# 
  3956  0FEF                     	;# 
  3957  0000                     	;# 
  3958  0001                     	;# 
  3959  0002                     	;# 
  3960  0003                     	;# 
  3961  0004                     	;# 
  3962  0005                     	;# 
  3963  0006                     	;# 
  3964  0007                     	;# 
  3965  0008                     	;# 
  3966  0009                     	;# 
  3967  000A                     	;# 
  3968  000B                     	;# 
  3969  000C                     	;# 
  3970  000D                     	;# 
  3971  000E                     	;# 
  3972  000F                     	;# 
  3973  0010                     	;# 
  3974  0011                     	;# 
  3975  0012                     	;# 
  3976  0013                     	;# 
  3977  0014                     	;# 
  3978  0015                     	;# 
  3979  0016                     	;# 
  3980  0017                     	;# 
  3981  0018                     	;# 
  3982  0019                     	;# 
  3983  001A                     	;# 
  3984  001C                     	;# 
  3985  001C                     	;# 
  3986  001D                     	;# 
  3987  001D                     	;# 
  3988  001E                     	;# 
  3989  001F                     	;# 
  3990  008C                     	;# 
  3991  008C                     	;# 
  3992  008D                     	;# 
  3993  008E                     	;# 
  3994  008E                     	;# 
  3995  008F                     	;# 
  3996  0090                     	;# 
  3997  0090                     	;# 
  3998  0091                     	;# 
  3999  0093                     	;# 
  4000  0094                     	;# 
  4001  0095                     	;# 
  4002  0096                     	;# 
  4003  0097                     	;# 
  4004  0098                     	;# 
  4005  0099                     	;# 
  4006  009A                     	;# 
  4007  009B                     	;# 
  4008  009C                     	;# 
  4009  009D                     	;# 
  4010  009E                     	;# 
  4011  010C                     	;# 
  4012  010D                     	;# 
  4013  010E                     	;# 
  4014  010E                     	;# 
  4015  010F                     	;# 
  4016  0110                     	;# 
  4017  0110                     	;# 
  4018  0111                     	;# 
  4019  0112                     	;# 
  4020  0112                     	;# 
  4021  0113                     	;# 
  4022  0114                     	;# 
  4023  0114                     	;# 
  4024  0115                     	;# 
  4025  0116                     	;# 
  4026  0116                     	;# 
  4027  0117                     	;# 
  4028  0119                     	;# 
  4029  0119                     	;# 
  4030  0119                     	;# 
  4031  011A                     	;# 
  4032  011A                     	;# 
  4033  011A                     	;# 
  4034  011B                     	;# 
  4035  011B                     	;# 
  4036  011B                     	;# 
  4037  011B                     	;# 
  4038  011B                     	;# 
  4039  011C                     	;# 
  4040  011C                     	;# 
  4041  011C                     	;# 
  4042  011D                     	;# 
  4043  011D                     	;# 
  4044  011D                     	;# 
  4045  011E                     	;# 
  4046  011E                     	;# 
  4047  011E                     	;# 
  4048  011F                     	;# 
  4049  011F                     	;# 
  4050  011F                     	;# 
  4051  011F                     	;# 
  4052  011F                     	;# 
  4053  018C                     	;# 
  4054  018D                     	;# 
  4055  018E                     	;# 
  4056  018F                     	;# 
  4057  0190                     	;# 
  4058  0191                     	;# 
  4059  0192                     	;# 
  4060  0196                     	;# 
  4061  0197                     	;# 
  4062  0198                     	;# 
  4063  0199                     	;# 
  4064  019A                     	;# 
  4065  019B                     	;# 
  4066  019C                     	;# 
  4067  020C                     	;# 
  4068  020C                     	;# 
  4069  020D                     	;# 
  4070  020E                     	;# 
  4071  020F                     	;# 
  4072  020F                     	;# 
  4073  0210                     	;# 
  4074  0210                     	;# 
  4075  0211                     	;# 
  4076  0211                     	;# 
  4077  0212                     	;# 
  4078  0212                     	;# 
  4079  0213                     	;# 
  4080  0214                     	;# 
  4081  0215                     	;# 
  4082  0215                     	;# 
  4083  0216                     	;# 
  4084  0216                     	;# 
  4085  0217                     	;# 
  4086  0217                     	;# 
  4087  0218                     	;# 
  4088  0218                     	;# 
  4089  0219                     	;# 
  4090  021A                     	;# 
  4091  021B                     	;# 
  4092  021B                     	;# 
  4093  021C                     	;# 
  4094  021C                     	;# 
  4095  021D                     	;# 
  4096  021D                     	;# 
  4097  021E                     	;# 
  4098  021F                     	;# 
  4099  028C                     	;# 
  4100  028C                     	;# 
  4101  028D                     	;# 
  4102  028D                     	;# 
  4103  028E                     	;# 
  4104  028F                     	;# 
  4105  0290                     	;# 
  4106  0290                     	;# 
  4107  0291                     	;# 
  4108  0292                     	;# 
  4109  0292                     	;# 
  4110  0293                     	;# 
  4111  0293                     	;# 
  4112  0294                     	;# 
  4113  0295                     	;# 
  4114  0296                     	;# 
  4115  0296                     	;# 
  4116  0297                     	;# 
  4117  0298                     	;# 
  4118  0298                     	;# 
  4119  0299                     	;# 
  4120  0299                     	;# 
  4121  029A                     	;# 
  4122  029B                     	;# 
  4123  029C                     	;# 
  4124  029C                     	;# 
  4125  029D                     	;# 
  4126  030C                     	;# 
  4127  030C                     	;# 
  4128  030D                     	;# 
  4129  030E                     	;# 
  4130  030F                     	;# 
  4131  0310                     	;# 
  4132  0310                     	;# 
  4133  0311                     	;# 
  4134  0312                     	;# 
  4135  0313                     	;# 
  4136  0314                     	;# 
  4137  0314                     	;# 
  4138  0315                     	;# 
  4139  0316                     	;# 
  4140  0317                     	;# 
  4141  0318                     	;# 
  4142  0318                     	;# 
  4143  0319                     	;# 
  4144  031A                     	;# 
  4145  031B                     	;# 
  4146  031C                     	;# 
  4147  031C                     	;# 
  4148  031D                     	;# 
  4149  031E                     	;# 
  4150  031F                     	;# 
  4151  038C                     	;# 
  4152  038C                     	;# 
  4153  038D                     	;# 
  4154  038E                     	;# 
  4155  0390                     	;# 
  4156  0390                     	;# 
  4157  0391                     	;# 
  4158  0392                     	;# 
  4159  040C                     	;# 
  4160  040D                     	;# 
  4161  040E                     	;# 
  4162  040F                     	;# 
  4163  0410                     	;# 
  4164  0411                     	;# 
  4165  0416                     	;# 
  4166  0416                     	;# 
  4167  0417                     	;# 
  4168  0418                     	;# 
  4169  0418                     	;# 
  4170  0419                     	;# 
  4171  041A                     	;# 
  4172  041A                     	;# 
  4173  041B                     	;# 
  4174  041C                     	;# 
  4175  041C                     	;# 
  4176  041D                     	;# 
  4177  041E                     	;# 
  4178  041F                     	;# 
  4179  048C                     	;# 
  4180  048C                     	;# 
  4181  048D                     	;# 
  4182  048E                     	;# 
  4183  048F                     	;# 
  4184  048F                     	;# 
  4185  0490                     	;# 
  4186  0491                     	;# 
  4187  0492                     	;# 
  4188  0492                     	;# 
  4189  0493                     	;# 
  4190  0494                     	;# 
  4191  0495                     	;# 
  4192  0495                     	;# 
  4193  0496                     	;# 
  4194  0497                     	;# 
  4195  0498                     	;# 
  4196  0499                     	;# 
  4197  049A                     	;# 
  4198  049B                     	;# 
  4199  049C                     	;# 
  4200  049D                     	;# 
  4201  050C                     	;# 
  4202  050C                     	;# 
  4203  050D                     	;# 
  4204  050E                     	;# 
  4205  050F                     	;# 
  4206  050F                     	;# 
  4207  0510                     	;# 
  4208  0511                     	;# 
  4209  0512                     	;# 
  4210  0512                     	;# 
  4211  0513                     	;# 
  4212  0514                     	;# 
  4213  0515                     	;# 
  4214  0515                     	;# 
  4215  0516                     	;# 
  4216  0517                     	;# 
  4217  0518                     	;# 
  4218  0519                     	;# 
  4219  051A                     	;# 
  4220  051B                     	;# 
  4221  051C                     	;# 
  4222  051D                     	;# 
  4223  058C                     	;# 
  4224  058C                     	;# 
  4225  058D                     	;# 
  4226  058E                     	;# 
  4227  058F                     	;# 
  4228  058F                     	;# 
  4229  0590                     	;# 
  4230  0591                     	;# 
  4231  0592                     	;# 
  4232  0593                     	;# 
  4233  060C                     	;# 
  4234  060D                     	;# 
  4235  060E                     	;# 
  4236  060F                     	;# 
  4237  0610                     	;# 
  4238  0611                     	;# 
  4239  0612                     	;# 
  4240  0613                     	;# 
  4241  0614                     	;# 
  4242  0616                     	;# 
  4243  0617                     	;# 
  4244  0618                     	;# 
  4245  0619                     	;# 
  4246  061A                     	;# 
  4247  061B                     	;# 
  4248  061C                     	;# 
  4249  061D                     	;# 
  4250  061E                     	;# 
  4251  068C                     	;# 
  4252  068D                     	;# 
  4253  068E                     	;# 
  4254  068F                     	;# 
  4255  0690                     	;# 
  4256  0691                     	;# 
  4257  0692                     	;# 
  4258  0693                     	;# 
  4259  0694                     	;# 
  4260  070C                     	;# 
  4261  070D                     	;# 
  4262  070E                     	;# 
  4263  070F                     	;# 
  4264  0710                     	;# 
  4265  0711                     	;# 
  4266  0712                     	;# 
  4267  0713                     	;# 
  4268  0714                     	;# 
  4269  0716                     	;# 
  4270  0717                     	;# 
  4271  0718                     	;# 
  4272  0719                     	;# 
  4273  071A                     	;# 
  4274  071B                     	;# 
  4275  071C                     	;# 
  4276  071D                     	;# 
  4277  071E                     	;# 
  4278  0796                     	;# 
  4279  0797                     	;# 
  4280  0798                     	;# 
  4281  0799                     	;# 
  4282  079A                     	;# 
  4283  079B                     	;# 
  4284  080C                     	;# 
  4285  080D                     	;# 
  4286  080E                     	;# 
  4287  080F                     	;# 
  4288  0810                     	;# 
  4289  0811                     	;# 
  4290  0812                     	;# 
  4291  0813                     	;# 
  4292  0814                     	;# 
  4293  081A                     	;# 
  4294  081B                     	;# 
  4295  081C                     	;# 
  4296  081D                     	;# 
  4297  081E                     	;# 
  4298  081F                     	;# 
  4299  088C                     	;# 
  4300  088D                     	;# 
  4301  088E                     	;# 
  4302  088F                     	;# 
  4303  0890                     	;# 
  4304  0891                     	;# 
  4305  0892                     	;# 
  4306  0893                     	;# 
  4307  0895                     	;# 
  4308  0896                     	;# 
  4309  0897                     	;# 
  4310  0898                     	;# 
  4311  0899                     	;# 
  4312  089A                     	;# 
  4313  089B                     	;# 
  4314  090C                     	;# 
  4315  090E                     	;# 
  4316  090F                     	;# 
  4317  091F                     	;# 
  4318  091F                     	;# 
  4319  098F                     	;# 
  4320  098F                     	;# 
  4321  0990                     	;# 
  4322  0991                     	;# 
  4323  0992                     	;# 
  4324  0993                     	;# 
  4325  0994                     	;# 
  4326  0995                     	;# 
  4327  0996                     	;# 
  4328  0997                     	;# 
  4329  0E0F                     	;# 
  4330  0E10                     	;# 
  4331  0E11                     	;# 
  4332  0E12                     	;# 
  4333  0E13                     	;# 
  4334  0E14                     	;# 
  4335  0E15                     	;# 
  4336  0E16                     	;# 
  4337  0E17                     	;# 
  4338  0E18                     	;# 
  4339  0E19                     	;# 
  4340  0E1A                     	;# 
  4341  0E1B                     	;# 
  4342  0E1C                     	;# 
  4343  0E1D                     	;# 
  4344  0E1E                     	;# 
  4345  0E1F                     	;# 
  4346  0E20                     	;# 
  4347  0E21                     	;# 
  4348  0E22                     	;# 
  4349  0E23                     	;# 
  4350  0E24                     	;# 
  4351  0E25                     	;# 
  4352  0E26                     	;# 
  4353  0E27                     	;# 
  4354  0E28                     	;# 
  4355  0E29                     	;# 
  4356  0E2A                     	;# 
  4357  0E2B                     	;# 
  4358  0E2C                     	;# 
  4359  0E2D                     	;# 
  4360  0E2E                     	;# 
  4361  0E2F                     	;# 
  4362  0E30                     	;# 
  4363  0E31                     	;# 
  4364  0E32                     	;# 
  4365  0E33                     	;# 
  4366  0E34                     	;# 
  4367  0E35                     	;# 
  4368  0E36                     	;# 
  4369  0E37                     	;# 
  4370  0E8F                     	;# 
  4371  0E90                     	;# 
  4372  0E91                     	;# 
  4373  0E92                     	;# 
  4374  0E93                     	;# 
  4375  0E94                     	;# 
  4376  0E95                     	;# 
  4377  0E96                     	;# 
  4378  0E97                     	;# 
  4379  0E9C                     	;# 
  4380  0E9D                     	;# 
  4381  0E9E                     	;# 
  4382  0EA1                     	;# 
  4383  0EA2                     	;# 
  4384  0EA3                     	;# 
  4385  0EA4                     	;# 
  4386  0EA5                     	;# 
  4387  0EA9                     	;# 
  4388  0EAA                     	;# 
  4389  0EAB                     	;# 
  4390  0EAC                     	;# 
  4391  0EB1                     	;# 
  4392  0EB2                     	;# 
  4393  0EB3                     	;# 
  4394  0EB8                     	;# 
  4395  0EB9                     	;# 
  4396  0EBA                     	;# 
  4397  0EBB                     	;# 
  4398  0EBC                     	;# 
  4399  0EBD                     	;# 
  4400  0EBE                     	;# 
  4401  0EC3                     	;# 
  4402  0EC5                     	;# 
  4403  0EC6                     	;# 
  4404  0EC7                     	;# 
  4405  0EC8                     	;# 
  4406  0EC9                     	;# 
  4407  0ECA                     	;# 
  4408  0ECB                     	;# 
  4409  0ECC                     	;# 
  4410  0F10                     	;# 
  4411  0F11                     	;# 
  4412  0F12                     	;# 
  4413  0F13                     	;# 
  4414  0F14                     	;# 
  4415  0F15                     	;# 
  4416  0F16                     	;# 
  4417  0F17                     	;# 
  4418  0F18                     	;# 
  4419  0F19                     	;# 
  4420  0F1A                     	;# 
  4421  0F1B                     	;# 
  4422  0F1C                     	;# 
  4423  0F1D                     	;# 
  4424  0F1E                     	;# 
  4425  0F1F                     	;# 
  4426  0F20                     	;# 
  4427  0F21                     	;# 
  4428  0F22                     	;# 
  4429  0F23                     	;# 
  4430  0F24                     	;# 
  4431  0F25                     	;# 
  4432  0F26                     	;# 
  4433  0F27                     	;# 
  4434  0F28                     	;# 
  4435  0F29                     	;# 
  4436  0F2A                     	;# 
  4437  0F2B                     	;# 
  4438  0F2C                     	;# 
  4439  0F2D                     	;# 
  4440  0F2E                     	;# 
  4441  0F2F                     	;# 
  4442  0F30                     	;# 
  4443  0F31                     	;# 
  4444  0F32                     	;# 
  4445  0F38                     	;# 
  4446  0F39                     	;# 
  4447  0F3A                     	;# 
  4448  0F3B                     	;# 
  4449  0F3C                     	;# 
  4450  0F3D                     	;# 
  4451  0F3E                     	;# 
  4452  0F3F                     	;# 
  4453  0F40                     	;# 
  4454  0F41                     	;# 
  4455  0F43                     	;# 
  4456  0F44                     	;# 
  4457  0F45                     	;# 
  4458  0F46                     	;# 
  4459  0F47                     	;# 
  4460  0F48                     	;# 
  4461  0F49                     	;# 
  4462  0F4A                     	;# 
  4463  0F4B                     	;# 
  4464  0F4C                     	;# 
  4465  0F4E                     	;# 
  4466  0F4F                     	;# 
  4467  0F50                     	;# 
  4468  0F51                     	;# 
  4469  0F52                     	;# 
  4470  0F53                     	;# 
  4471  0F54                     	;# 
  4472  0F55                     	;# 
  4473  0F56                     	;# 
  4474  0F57                     	;# 
  4475  0F59                     	;# 
  4476  0F5A                     	;# 
  4477  0F5B                     	;# 
  4478  0F5C                     	;# 
  4479  0F5D                     	;# 
  4480  0F61                     	;# 
  4481  0F62                     	;# 
  4482  0F64                     	;# 
  4483  0F65                     	;# 
  4484  0F66                     	;# 
  4485  0F67                     	;# 
  4486  0F68                     	;# 
  4487  0F69                     	;# 
  4488  0F6A                     	;# 
  4489  0F6B                     	;# 
  4490  0F6C                     	;# 
  4491  0F6D                     	;# 
  4492  0FE4                     	;# 
  4493  0FE5                     	;# 
  4494  0FE6                     	;# 
  4495  0FE7                     	;# 
  4496  0FE8                     	;# 
  4497  0FE9                     	;# 
  4498  0FEA                     	;# 
  4499  0FEB                     	;# 
  4500  0FED                     	;# 
  4501  0FEE                     	;# 
  4502  0FEF                     	;# 
  4503                           
  4504                           	psect	idataBANK0
  4505  0003                     __pidataBANK0:
  4506                           
  4507                           ;initializer for _textsize
  4508  0003  3401               	retlw	1
  4509                           
  4510                           	psect	idataBANK1
  4511  109F                     __pidataBANK1:
  4512                           
  4513                           ;initializer for _textbgcolor
  4514  109F  34FF               	retlw	255
  4515  10A0  34FF               	retlw	255
  4516                           
  4517                           ;initializer for _textcolor
  4518  10A1  34FF               	retlw	255
  4519  10A2  34FF               	retlw	255
  4520                           
  4521                           ;initializer for _wrap
  4522  10A3  3401               	retlw	1
  4523                           
  4524                           ;initializer for _bolita
  4525  10A4  3400               	retlw	0
  4526  10A5  3400               	retlw	0
  4527  10A6  3406               	retlw	6
  4528  10A7  3402               	retlw	2
  4529  10A8  343C               	retlw	60
  4530  10A9  347E               	retlw	126
  4531  10AA  347E               	retlw	126
  4532  10AB  347E               	retlw	126
  4533  10AC  343C               	retlw	60
  4534  10AD  3473               	retlw	115
  4535  10AE  3498               	retlw	152
  4536  10AF  3400               	retlw	0
  4537                           
  4538                           ;initializer for _jugador2
  4539  10B0  3400               	retlw	0
  4540  10B1  341E               	retlw	30
  4541  10B2  340D               	retlw	13
  4542  10B3  3401               	retlw	1
  4543  10B4  3480               	retlw	128
  4544  10B5  3480               	retlw	128
  4545  10B6  3480               	retlw	128
  4546  10B7  3480               	retlw	128
  4547  10B8  3480               	retlw	128
  4548  10B9  3400               	retlw	0
  4549                           
  4550                           	psect	idataBANK2
  4551  1001                     __pidataBANK2:
  4552                           
  4553                           ;initializer for _jugador1
  4554  1001  3400               	retlw	0
  4555  1002  341E               	retlw	30
  4556  1003  340D               	retlw	13
  4557  1004  3400               	retlw	0
  4558  1005  3401               	retlw	1
  4559  1006  3401               	retlw	1
  4560  1007  3401               	retlw	1
  4561  1008  3401               	retlw	1
  4562  1009  3401               	retlw	1
  4563  100A  3400               	retlw	0
  4564                           
  4565                           	psect	stringtext1
  4566  0047                     __pstringtext1:
  4567  0047                     _font:
  4568  0047  3400               	retlw	0
  4569  0048  3400               	retlw	0
  4570  0049  3400               	retlw	0
  4571  004A  3400               	retlw	0
  4572  004B  3400               	retlw	0
  4573  004C  343E               	retlw	62
  4574  004D  345B               	retlw	91
  4575  004E  344F               	retlw	79
  4576  004F  345B               	retlw	91
  4577  0050  343E               	retlw	62
  4578  0051  343E               	retlw	62
  4579  0052  346B               	retlw	107
  4580  0053  344F               	retlw	79
  4581  0054  346B               	retlw	107
  4582  0055  343E               	retlw	62
  4583  0056  341C               	retlw	28
  4584  0057  343E               	retlw	62
  4585  0058  347C               	retlw	124
  4586  0059  343E               	retlw	62
  4587  005A  341C               	retlw	28
  4588  005B  3418               	retlw	24
  4589  005C  343C               	retlw	60
  4590  005D  347E               	retlw	126
  4591  005E  343C               	retlw	60
  4592  005F  3418               	retlw	24
  4593  0060  341C               	retlw	28
  4594  0061  3457               	retlw	87
  4595  0062  347D               	retlw	125
  4596  0063  3457               	retlw	87
  4597  0064  341C               	retlw	28
  4598  0065  341C               	retlw	28
  4599  0066  345E               	retlw	94
  4600  0067  347F               	retlw	127
  4601  0068  345E               	retlw	94
  4602  0069  341C               	retlw	28
  4603  006A  3400               	retlw	0
  4604  006B  3418               	retlw	24
  4605  006C  343C               	retlw	60
  4606  006D  3418               	retlw	24
  4607  006E  3400               	retlw	0
  4608  006F  34FF               	retlw	255
  4609  0070  34E7               	retlw	231
  4610  0071  34C3               	retlw	195
  4611  0072  34E7               	retlw	231
  4612  0073  34FF               	retlw	255
  4613  0074  3400               	retlw	0
  4614  0075  3418               	retlw	24
  4615  0076  3424               	retlw	36
  4616  0077  3418               	retlw	24
  4617  0078  3400               	retlw	0
  4618  0079  34FF               	retlw	255
  4619  007A  34E7               	retlw	231
  4620  007B  34DB               	retlw	219
  4621  007C  34E7               	retlw	231
  4622  007D  34FF               	retlw	255
  4623  007E  3430               	retlw	48
  4624  007F  3448               	retlw	72
  4625  0080  343A               	retlw	58
  4626  0081  3406               	retlw	6
  4627  0082  340E               	retlw	14
  4628  0083  3426               	retlw	38
  4629  0084  3429               	retlw	41
  4630  0085  3479               	retlw	121
  4631  0086  3429               	retlw	41
  4632  0087  3426               	retlw	38
  4633  0088  3440               	retlw	64
  4634  0089  347F               	retlw	127
  4635  008A  3405               	retlw	5
  4636  008B  3405               	retlw	5
  4637  008C  3407               	retlw	7
  4638  008D  3440               	retlw	64
  4639  008E  347F               	retlw	127
  4640  008F  3405               	retlw	5
  4641  0090  3425               	retlw	37
  4642  0091  343F               	retlw	63
  4643  0092  345A               	retlw	90
  4644  0093  343C               	retlw	60
  4645  0094  34E7               	retlw	231
  4646  0095  343C               	retlw	60
  4647  0096  345A               	retlw	90
  4648  0097  347F               	retlw	127
  4649  0098  343E               	retlw	62
  4650  0099  341C               	retlw	28
  4651  009A  341C               	retlw	28
  4652  009B  3408               	retlw	8
  4653  009C  3408               	retlw	8
  4654  009D  341C               	retlw	28
  4655  009E  341C               	retlw	28
  4656  009F  343E               	retlw	62
  4657  00A0  347F               	retlw	127
  4658  00A1  3414               	retlw	20
  4659  00A2  3422               	retlw	34
  4660  00A3  347F               	retlw	127
  4661  00A4  3422               	retlw	34
  4662  00A5  3414               	retlw	20
  4663  00A6  345F               	retlw	95
  4664  00A7  345F               	retlw	95
  4665  00A8  3400               	retlw	0
  4666  00A9  345F               	retlw	95
  4667  00AA  345F               	retlw	95
  4668  00AB  3406               	retlw	6
  4669  00AC  3409               	retlw	9
  4670  00AD  347F               	retlw	127
  4671  00AE  3401               	retlw	1
  4672  00AF  347F               	retlw	127
  4673  00B0  3400               	retlw	0
  4674  00B1  3466               	retlw	102
  4675  00B2  3489               	retlw	137
  4676  00B3  3495               	retlw	149
  4677  00B4  346A               	retlw	106
  4678  00B5  3460               	retlw	96
  4679  00B6  3460               	retlw	96
  4680  00B7  3460               	retlw	96
  4681  00B8  3460               	retlw	96
  4682  00B9  3460               	retlw	96
  4683  00BA  3494               	retlw	148
  4684  00BB  34A2               	retlw	162
  4685  00BC  34FF               	retlw	255
  4686  00BD  34A2               	retlw	162
  4687  00BE  3494               	retlw	148
  4688  00BF  3408               	retlw	8
  4689  00C0  3404               	retlw	4
  4690  00C1  347E               	retlw	126
  4691  00C2  3404               	retlw	4
  4692  00C3  3408               	retlw	8
  4693  00C4  3410               	retlw	16
  4694  00C5  3420               	retlw	32
  4695  00C6  347E               	retlw	126
  4696  00C7  3420               	retlw	32
  4697  00C8  3410               	retlw	16
  4698  00C9  3408               	retlw	8
  4699  00CA  3408               	retlw	8
  4700  00CB  342A               	retlw	42
  4701  00CC  341C               	retlw	28
  4702  00CD  3408               	retlw	8
  4703  00CE  3408               	retlw	8
  4704  00CF  341C               	retlw	28
  4705  00D0  342A               	retlw	42
  4706  00D1  3408               	retlw	8
  4707  00D2  3408               	retlw	8
  4708  00D3  341E               	retlw	30
  4709  00D4  3410               	retlw	16
  4710  00D5  3410               	retlw	16
  4711  00D6  3410               	retlw	16
  4712  00D7  3410               	retlw	16
  4713  00D8  340C               	retlw	12
  4714  00D9  341E               	retlw	30
  4715  00DA  340C               	retlw	12
  4716  00DB  341E               	retlw	30
  4717  00DC  340C               	retlw	12
  4718  00DD  3430               	retlw	48
  4719  00DE  3438               	retlw	56
  4720  00DF  343E               	retlw	62
  4721  00E0  3438               	retlw	56
  4722  00E1  3430               	retlw	48
  4723  00E2  3406               	retlw	6
  4724  00E3  340E               	retlw	14
  4725  00E4  343E               	retlw	62
  4726  00E5  340E               	retlw	14
  4727  00E6  3406               	retlw	6
  4728  00E7  3400               	retlw	0
  4729  00E8  3400               	retlw	0
  4730  00E9  3400               	retlw	0
  4731  00EA  3400               	retlw	0
  4732  00EB  3400               	retlw	0
  4733  00EC  3400               	retlw	0
  4734  00ED  3400               	retlw	0
  4735  00EE  345F               	retlw	95
  4736  00EF  3400               	retlw	0
  4737  00F0  3400               	retlw	0
  4738  00F1  3400               	retlw	0
  4739  00F2  3407               	retlw	7
  4740  00F3  3400               	retlw	0
  4741  00F4  3407               	retlw	7
  4742  00F5  3400               	retlw	0
  4743  00F6  3414               	retlw	20
  4744  00F7  347F               	retlw	127
  4745  00F8  3414               	retlw	20
  4746  00F9  347F               	retlw	127
  4747  00FA  3414               	retlw	20
  4748  00FB  3424               	retlw	36
  4749  00FC  342A               	retlw	42
  4750  00FD  347F               	retlw	127
  4751  00FE  342A               	retlw	42
  4752  00FF  3412               	retlw	18
  4753  0100  3423               	retlw	35
  4754  0101  3413               	retlw	19
  4755  0102  3408               	retlw	8
  4756  0103  3464               	retlw	100
  4757  0104  3462               	retlw	98
  4758  0105  3436               	retlw	54
  4759  0106  3449               	retlw	73
  4760  0107  3456               	retlw	86
  4761  0108  3420               	retlw	32
  4762  0109  3450               	retlw	80
  4763  010A  3400               	retlw	0
  4764  010B  3408               	retlw	8
  4765  010C  3407               	retlw	7
  4766  010D  3403               	retlw	3
  4767  010E  3400               	retlw	0
  4768  010F  3400               	retlw	0
  4769  0110  341C               	retlw	28
  4770  0111  3422               	retlw	34
  4771  0112  3441               	retlw	65
  4772  0113  3400               	retlw	0
  4773  0114  3400               	retlw	0
  4774  0115  3441               	retlw	65
  4775  0116  3422               	retlw	34
  4776  0117  341C               	retlw	28
  4777  0118  3400               	retlw	0
  4778  0119  342A               	retlw	42
  4779  011A  341C               	retlw	28
  4780  011B  347F               	retlw	127
  4781  011C  341C               	retlw	28
  4782  011D  342A               	retlw	42
  4783  011E  3408               	retlw	8
  4784  011F  3408               	retlw	8
  4785  0120  343E               	retlw	62
  4786  0121  3408               	retlw	8
  4787  0122  3408               	retlw	8
  4788  0123  3400               	retlw	0
  4789  0124  3480               	retlw	128
  4790  0125  3470               	retlw	112
  4791  0126  3430               	retlw	48
  4792  0127  3400               	retlw	0
  4793  0128  3408               	retlw	8
  4794  0129  3408               	retlw	8
  4795  012A  3408               	retlw	8
  4796  012B  3408               	retlw	8
  4797  012C  3408               	retlw	8
  4798  012D  3400               	retlw	0
  4799  012E  3400               	retlw	0
  4800  012F  3460               	retlw	96
  4801  0130  3460               	retlw	96
  4802  0131  3400               	retlw	0
  4803  0132  3420               	retlw	32
  4804  0133  3410               	retlw	16
  4805  0134  3408               	retlw	8
  4806  0135  3404               	retlw	4
  4807  0136  3402               	retlw	2
  4808  0137  343E               	retlw	62
  4809  0138  3451               	retlw	81
  4810  0139  3449               	retlw	73
  4811  013A  3445               	retlw	69
  4812  013B  343E               	retlw	62
  4813  013C  3400               	retlw	0
  4814  013D  3442               	retlw	66
  4815  013E  347F               	retlw	127
  4816  013F  3440               	retlw	64
  4817  0140  3400               	retlw	0
  4818  0141  3472               	retlw	114
  4819  0142  3449               	retlw	73
  4820  0143  3449               	retlw	73
  4821  0144  3449               	retlw	73
  4822  0145  3446               	retlw	70
  4823  0146  3421               	retlw	33
  4824  0147  3441               	retlw	65
  4825  0148  3449               	retlw	73
  4826  0149  344D               	retlw	77
  4827  014A  3433               	retlw	51
  4828  014B  3418               	retlw	24
  4829  014C  3414               	retlw	20
  4830  014D  3412               	retlw	18
  4831  014E  347F               	retlw	127
  4832  014F  3410               	retlw	16
  4833  0150  3427               	retlw	39
  4834  0151  3445               	retlw	69
  4835  0152  3445               	retlw	69
  4836  0153  3445               	retlw	69
  4837  0154  3439               	retlw	57
  4838  0155  343C               	retlw	60
  4839  0156  344A               	retlw	74
  4840  0157  3449               	retlw	73
  4841  0158  3449               	retlw	73
  4842  0159  3431               	retlw	49
  4843  015A  3441               	retlw	65
  4844  015B  3421               	retlw	33
  4845  015C  3411               	retlw	17
  4846  015D  3409               	retlw	9
  4847  015E  3407               	retlw	7
  4848  015F  3436               	retlw	54
  4849  0160  3449               	retlw	73
  4850  0161  3449               	retlw	73
  4851  0162  3449               	retlw	73
  4852  0163  3436               	retlw	54
  4853  0164  3446               	retlw	70
  4854  0165  3449               	retlw	73
  4855  0166  3449               	retlw	73
  4856  0167  3429               	retlw	41
  4857  0168  341E               	retlw	30
  4858  0169  3400               	retlw	0
  4859  016A  3400               	retlw	0
  4860  016B  3414               	retlw	20
  4861  016C  3400               	retlw	0
  4862  016D  3400               	retlw	0
  4863  016E  3400               	retlw	0
  4864  016F  3440               	retlw	64
  4865  0170  3434               	retlw	52
  4866  0171  3400               	retlw	0
  4867  0172  3400               	retlw	0
  4868  0173  3400               	retlw	0
  4869  0174  3408               	retlw	8
  4870  0175  3414               	retlw	20
  4871  0176  3422               	retlw	34
  4872  0177  3441               	retlw	65
  4873  0178  3414               	retlw	20
  4874  0179  3414               	retlw	20
  4875  017A  3414               	retlw	20
  4876  017B  3414               	retlw	20
  4877  017C  3414               	retlw	20
  4878  017D  3400               	retlw	0
  4879  017E  3441               	retlw	65
  4880  017F  3422               	retlw	34
  4881  0180  3414               	retlw	20
  4882  0181  3408               	retlw	8
  4883  0182  3402               	retlw	2
  4884  0183  3401               	retlw	1
  4885  0184  3459               	retlw	89
  4886  0185  3409               	retlw	9
  4887  0186  3406               	retlw	6
  4888  0187  343E               	retlw	62
  4889  0188  3441               	retlw	65
  4890  0189  345D               	retlw	93
  4891  018A  3459               	retlw	89
  4892  018B  344E               	retlw	78
  4893  018C  347C               	retlw	124
  4894  018D  3412               	retlw	18
  4895  018E  3411               	retlw	17
  4896  018F  3412               	retlw	18
  4897  0190  347C               	retlw	124
  4898  0191  347F               	retlw	127
  4899  0192  3449               	retlw	73
  4900  0193  3449               	retlw	73
  4901  0194  3449               	retlw	73
  4902  0195  3436               	retlw	54
  4903  0196  343E               	retlw	62
  4904  0197  3441               	retlw	65
  4905  0198  3441               	retlw	65
  4906  0199  3441               	retlw	65
  4907  019A  3422               	retlw	34
  4908  019B  347F               	retlw	127
  4909  019C  3441               	retlw	65
  4910  019D  3441               	retlw	65
  4911  019E  3441               	retlw	65
  4912  019F  343E               	retlw	62
  4913  01A0  347F               	retlw	127
  4914  01A1  3449               	retlw	73
  4915  01A2  3449               	retlw	73
  4916  01A3  3449               	retlw	73
  4917  01A4  3441               	retlw	65
  4918  01A5  347F               	retlw	127
  4919  01A6  3409               	retlw	9
  4920  01A7  3409               	retlw	9
  4921  01A8  3409               	retlw	9
  4922  01A9  3401               	retlw	1
  4923  01AA  343E               	retlw	62
  4924  01AB  3441               	retlw	65
  4925  01AC  3441               	retlw	65
  4926  01AD  3451               	retlw	81
  4927  01AE  3473               	retlw	115
  4928  01AF  347F               	retlw	127
  4929  01B0  3408               	retlw	8
  4930  01B1  3408               	retlw	8
  4931  01B2  3408               	retlw	8
  4932  01B3  347F               	retlw	127
  4933  01B4  3400               	retlw	0
  4934  01B5  3441               	retlw	65
  4935  01B6  347F               	retlw	127
  4936  01B7  3441               	retlw	65
  4937  01B8  3400               	retlw	0
  4938  01B9  3420               	retlw	32
  4939  01BA  3440               	retlw	64
  4940  01BB  3441               	retlw	65
  4941  01BC  343F               	retlw	63
  4942  01BD  3401               	retlw	1
  4943  01BE  347F               	retlw	127
  4944  01BF  3408               	retlw	8
  4945  01C0  3414               	retlw	20
  4946  01C1  3422               	retlw	34
  4947  01C2  3441               	retlw	65
  4948  01C3  347F               	retlw	127
  4949  01C4  3440               	retlw	64
  4950  01C5  3440               	retlw	64
  4951  01C6  3440               	retlw	64
  4952  01C7  3440               	retlw	64
  4953  01C8  347F               	retlw	127
  4954  01C9  3402               	retlw	2
  4955  01CA  341C               	retlw	28
  4956  01CB  3402               	retlw	2
  4957  01CC  347F               	retlw	127
  4958  01CD  347F               	retlw	127
  4959  01CE  3404               	retlw	4
  4960  01CF  3408               	retlw	8
  4961  01D0  3410               	retlw	16
  4962  01D1  347F               	retlw	127
  4963  01D2  343E               	retlw	62
  4964  01D3  3441               	retlw	65
  4965  01D4  3441               	retlw	65
  4966  01D5  3441               	retlw	65
  4967  01D6  343E               	retlw	62
  4968  01D7  347F               	retlw	127
  4969  01D8  3409               	retlw	9
  4970  01D9  3409               	retlw	9
  4971  01DA  3409               	retlw	9
  4972  01DB  3406               	retlw	6
  4973  01DC  343E               	retlw	62
  4974  01DD  3441               	retlw	65
  4975  01DE  3451               	retlw	81
  4976  01DF  3421               	retlw	33
  4977  01E0  345E               	retlw	94
  4978  01E1  347F               	retlw	127
  4979  01E2  3409               	retlw	9
  4980  01E3  3419               	retlw	25
  4981  01E4  3429               	retlw	41
  4982  01E5  3446               	retlw	70
  4983  01E6  3426               	retlw	38
  4984  01E7  3449               	retlw	73
  4985  01E8  3449               	retlw	73
  4986  01E9  3449               	retlw	73
  4987  01EA  3432               	retlw	50
  4988  01EB  3403               	retlw	3
  4989  01EC  3401               	retlw	1
  4990  01ED  347F               	retlw	127
  4991  01EE  3401               	retlw	1
  4992  01EF  3403               	retlw	3
  4993  01F0  343F               	retlw	63
  4994  01F1  3440               	retlw	64
  4995  01F2  3440               	retlw	64
  4996  01F3  3440               	retlw	64
  4997  01F4  343F               	retlw	63
  4998  01F5  341F               	retlw	31
  4999  01F6  3420               	retlw	32
  5000  01F7  3440               	retlw	64
  5001  01F8  3420               	retlw	32
  5002  01F9  341F               	retlw	31
  5003  01FA  343F               	retlw	63
  5004  01FB  3440               	retlw	64
  5005  01FC  3438               	retlw	56
  5006  01FD  3440               	retlw	64
  5007  01FE  343F               	retlw	63
  5008  01FF  3463               	retlw	99
  5009  0200  3414               	retlw	20
  5010  0201  3408               	retlw	8
  5011  0202  3414               	retlw	20
  5012  0203  3463               	retlw	99
  5013  0204  3403               	retlw	3
  5014  0205  3404               	retlw	4
  5015  0206  3478               	retlw	120
  5016  0207  3404               	retlw	4
  5017  0208  3403               	retlw	3
  5018  0209  3461               	retlw	97
  5019  020A  3459               	retlw	89
  5020  020B  3449               	retlw	73
  5021  020C  344D               	retlw	77
  5022  020D  3443               	retlw	67
  5023  020E  3400               	retlw	0
  5024  020F  347F               	retlw	127
  5025  0210  3441               	retlw	65
  5026  0211  3441               	retlw	65
  5027  0212  3441               	retlw	65
  5028  0213  3402               	retlw	2
  5029  0214  3404               	retlw	4
  5030  0215  3408               	retlw	8
  5031  0216  3410               	retlw	16
  5032  0217  3420               	retlw	32
  5033  0218  3400               	retlw	0
  5034  0219  3441               	retlw	65
  5035  021A  3441               	retlw	65
  5036  021B  3441               	retlw	65
  5037  021C  347F               	retlw	127
  5038  021D  3404               	retlw	4
  5039  021E  3402               	retlw	2
  5040  021F  3401               	retlw	1
  5041  0220  3402               	retlw	2
  5042  0221  3404               	retlw	4
  5043  0222  3440               	retlw	64
  5044  0223  3440               	retlw	64
  5045  0224  3440               	retlw	64
  5046  0225  3440               	retlw	64
  5047  0226  3440               	retlw	64
  5048  0227  3400               	retlw	0
  5049  0228  3403               	retlw	3
  5050  0229  3407               	retlw	7
  5051  022A  3408               	retlw	8
  5052  022B  3400               	retlw	0
  5053  022C  3420               	retlw	32
  5054  022D  3454               	retlw	84
  5055  022E  3454               	retlw	84
  5056  022F  3478               	retlw	120
  5057  0230  3440               	retlw	64
  5058  0231  347F               	retlw	127
  5059  0232  3428               	retlw	40
  5060  0233  3444               	retlw	68
  5061  0234  3444               	retlw	68
  5062  0235  3438               	retlw	56
  5063  0236  3438               	retlw	56
  5064  0237  3444               	retlw	68
  5065  0238  3444               	retlw	68
  5066  0239  3444               	retlw	68
  5067  023A  3428               	retlw	40
  5068  023B  3438               	retlw	56
  5069  023C  3444               	retlw	68
  5070  023D  3444               	retlw	68
  5071  023E  3428               	retlw	40
  5072  023F  347F               	retlw	127
  5073  0240  3438               	retlw	56
  5074  0241  3454               	retlw	84
  5075  0242  3454               	retlw	84
  5076  0243  3454               	retlw	84
  5077  0244  3418               	retlw	24
  5078  0245  3400               	retlw	0
  5079  0246  3408               	retlw	8
  5080  0247  347E               	retlw	126
  5081  0248  3409               	retlw	9
  5082  0249  3402               	retlw	2
  5083  024A  3418               	retlw	24
  5084  024B  34A4               	retlw	164
  5085  024C  34A4               	retlw	164
  5086  024D  349C               	retlw	156
  5087  024E  3478               	retlw	120
  5088  024F  347F               	retlw	127
  5089  0250  3408               	retlw	8
  5090  0251  3404               	retlw	4
  5091  0252  3404               	retlw	4
  5092  0253  3478               	retlw	120
  5093  0254  3400               	retlw	0
  5094  0255  3444               	retlw	68
  5095  0256  347D               	retlw	125
  5096  0257  3440               	retlw	64
  5097  0258  3400               	retlw	0
  5098  0259  3420               	retlw	32
  5099  025A  3440               	retlw	64
  5100  025B  3440               	retlw	64
  5101  025C  343D               	retlw	61
  5102  025D  3400               	retlw	0
  5103  025E  347F               	retlw	127
  5104  025F  3410               	retlw	16
  5105  0260  3428               	retlw	40
  5106  0261  3444               	retlw	68
  5107  0262  3400               	retlw	0
  5108  0263  3400               	retlw	0
  5109  0264  3441               	retlw	65
  5110  0265  347F               	retlw	127
  5111  0266  3440               	retlw	64
  5112  0267  3400               	retlw	0
  5113  0268  347C               	retlw	124
  5114  0269  3404               	retlw	4
  5115  026A  3478               	retlw	120
  5116  026B  3404               	retlw	4
  5117  026C  3478               	retlw	120
  5118  026D  347C               	retlw	124
  5119  026E  3408               	retlw	8
  5120  026F  3404               	retlw	4
  5121  0270  3404               	retlw	4
  5122  0271  3478               	retlw	120
  5123  0272  3438               	retlw	56
  5124  0273  3444               	retlw	68
  5125  0274  3444               	retlw	68
  5126  0275  3444               	retlw	68
  5127  0276  3438               	retlw	56
  5128  0277  34FC               	retlw	252
  5129  0278  3418               	retlw	24
  5130  0279  3424               	retlw	36
  5131  027A  3424               	retlw	36
  5132  027B  3418               	retlw	24
  5133  027C  3418               	retlw	24
  5134  027D  3424               	retlw	36
  5135  027E  3424               	retlw	36
  5136  027F  3418               	retlw	24
  5137  0280  34FC               	retlw	252
  5138  0281  347C               	retlw	124
  5139  0282  3408               	retlw	8
  5140  0283  3404               	retlw	4
  5141  0284  3404               	retlw	4
  5142  0285  3408               	retlw	8
  5143  0286  3448               	retlw	72
  5144  0287  3454               	retlw	84
  5145  0288  3454               	retlw	84
  5146  0289  3454               	retlw	84
  5147  028A  3424               	retlw	36
  5148  028B  3404               	retlw	4
  5149  028C  3404               	retlw	4
  5150  028D  343F               	retlw	63
  5151  028E  3444               	retlw	68
  5152  028F  3424               	retlw	36
  5153  0290  343C               	retlw	60
  5154  0291  3440               	retlw	64
  5155  0292  3440               	retlw	64
  5156  0293  3420               	retlw	32
  5157  0294  347C               	retlw	124
  5158  0295  341C               	retlw	28
  5159  0296  3420               	retlw	32
  5160  0297  3440               	retlw	64
  5161  0298  3420               	retlw	32
  5162  0299  341C               	retlw	28
  5163  029A  343C               	retlw	60
  5164  029B  3440               	retlw	64
  5165  029C  3430               	retlw	48
  5166  029D  3440               	retlw	64
  5167  029E  343C               	retlw	60
  5168  029F  3444               	retlw	68
  5169  02A0  3428               	retlw	40
  5170  02A1  3410               	retlw	16
  5171  02A2  3428               	retlw	40
  5172  02A3  3444               	retlw	68
  5173  02A4  344C               	retlw	76
  5174  02A5  3490               	retlw	144
  5175  02A6  3490               	retlw	144
  5176  02A7  3490               	retlw	144
  5177  02A8  347C               	retlw	124
  5178  02A9  3444               	retlw	68
  5179  02AA  3464               	retlw	100
  5180  02AB  3454               	retlw	84
  5181  02AC  344C               	retlw	76
  5182  02AD  3444               	retlw	68
  5183  02AE  3400               	retlw	0
  5184  02AF  3408               	retlw	8
  5185  02B0  3436               	retlw	54
  5186  02B1  3441               	retlw	65
  5187  02B2  3400               	retlw	0
  5188  02B3  3400               	retlw	0
  5189  02B4  3400               	retlw	0
  5190  02B5  3477               	retlw	119
  5191  02B6  3400               	retlw	0
  5192  02B7  3400               	retlw	0
  5193  02B8  3400               	retlw	0
  5194  02B9  3441               	retlw	65
  5195  02BA  3436               	retlw	54
  5196  02BB  3408               	retlw	8
  5197  02BC  3400               	retlw	0
  5198  02BD  3402               	retlw	2
  5199  02BE  3401               	retlw	1
  5200  02BF  3402               	retlw	2
  5201  02C0  3404               	retlw	4
  5202  02C1  3402               	retlw	2
  5203  02C2  343C               	retlw	60
  5204  02C3  3426               	retlw	38
  5205  02C4  3423               	retlw	35
  5206  02C5  3426               	retlw	38
  5207  02C6  343C               	retlw	60
  5208  02C7  341E               	retlw	30
  5209  02C8  34A1               	retlw	161
  5210  02C9  34A1               	retlw	161
  5211  02CA  3461               	retlw	97
  5212  02CB  3412               	retlw	18
  5213  02CC  343A               	retlw	58
  5214  02CD  3440               	retlw	64
  5215  02CE  3440               	retlw	64
  5216  02CF  3420               	retlw	32
  5217  02D0  347A               	retlw	122
  5218  02D1  3438               	retlw	56
  5219  02D2  3454               	retlw	84
  5220  02D3  3454               	retlw	84
  5221  02D4  3455               	retlw	85
  5222  02D5  3459               	retlw	89
  5223  02D6  3421               	retlw	33
  5224  02D7  3455               	retlw	85
  5225  02D8  3455               	retlw	85
  5226  02D9  3479               	retlw	121
  5227  02DA  3441               	retlw	65
  5228  02DB  3422               	retlw	34
  5229  02DC  3454               	retlw	84
  5230  02DD  3454               	retlw	84
  5231  02DE  3478               	retlw	120
  5232  02DF  3442               	retlw	66
  5233  02E0  3421               	retlw	33
  5234  02E1  3455               	retlw	85
  5235  02E2  3454               	retlw	84
  5236  02E3  3478               	retlw	120
  5237  02E4  3440               	retlw	64
  5238  02E5  3420               	retlw	32
  5239  02E6  3454               	retlw	84
  5240  02E7  3455               	retlw	85
  5241  02E8  3479               	retlw	121
  5242  02E9  3440               	retlw	64
  5243  02EA  340C               	retlw	12
  5244  02EB  341E               	retlw	30
  5245  02EC  3452               	retlw	82
  5246  02ED  3472               	retlw	114
  5247  02EE  3412               	retlw	18
  5248  02EF  3439               	retlw	57
  5249  02F0  3455               	retlw	85
  5250  02F1  3455               	retlw	85
  5251  02F2  3455               	retlw	85
  5252  02F3  3459               	retlw	89
  5253  02F4  3439               	retlw	57
  5254  02F5  3454               	retlw	84
  5255  02F6  3454               	retlw	84
  5256  02F7  3454               	retlw	84
  5257  02F8  3459               	retlw	89
  5258  02F9  3439               	retlw	57
  5259  02FA  3455               	retlw	85
  5260  02FB  3454               	retlw	84
  5261  02FC  3454               	retlw	84
  5262  02FD  3458               	retlw	88
  5263  02FE  3400               	retlw	0
  5264  02FF  3400               	retlw	0
  5265  0300  3445               	retlw	69
  5266  0301  347C               	retlw	124
  5267  0302  3441               	retlw	65
  5268  0303  3400               	retlw	0
  5269  0304  3402               	retlw	2
  5270  0305  3445               	retlw	69
  5271  0306  347D               	retlw	125
  5272  0307  3442               	retlw	66
  5273  0308  3400               	retlw	0
  5274  0309  3401               	retlw	1
  5275  030A  3445               	retlw	69
  5276  030B  347C               	retlw	124
  5277  030C  3440               	retlw	64
  5278  030D  347D               	retlw	125
  5279  030E  3412               	retlw	18
  5280  030F  3411               	retlw	17
  5281  0310  3412               	retlw	18
  5282  0311  347D               	retlw	125
  5283  0312  34F0               	retlw	240
  5284  0313  3428               	retlw	40
  5285  0314  3425               	retlw	37
  5286  0315  3428               	retlw	40
  5287  0316  34F0               	retlw	240
  5288  0317  347C               	retlw	124
  5289  0318  3454               	retlw	84
  5290  0319  3455               	retlw	85
  5291  031A  3445               	retlw	69
  5292  031B  3400               	retlw	0
  5293  031C  3420               	retlw	32
  5294  031D  3454               	retlw	84
  5295  031E  3454               	retlw	84
  5296  031F  347C               	retlw	124
  5297  0320  3454               	retlw	84
  5298  0321  347C               	retlw	124
  5299  0322  340A               	retlw	10
  5300  0323  3409               	retlw	9
  5301  0324  347F               	retlw	127
  5302  0325  3449               	retlw	73
  5303  0326  3432               	retlw	50
  5304  0327  3449               	retlw	73
  5305  0328  3449               	retlw	73
  5306  0329  3449               	retlw	73
  5307  032A  3432               	retlw	50
  5308  032B  343A               	retlw	58
  5309  032C  3444               	retlw	68
  5310  032D  3444               	retlw	68
  5311  032E  3444               	retlw	68
  5312  032F  343A               	retlw	58
  5313  0330  3432               	retlw	50
  5314  0331  344A               	retlw	74
  5315  0332  3448               	retlw	72
  5316  0333  3448               	retlw	72
  5317  0334  3430               	retlw	48
  5318  0335  343A               	retlw	58
  5319  0336  3441               	retlw	65
  5320  0337  3441               	retlw	65
  5321  0338  3421               	retlw	33
  5322  0339  347A               	retlw	122
  5323  033A  343A               	retlw	58
  5324  033B  3442               	retlw	66
  5325  033C  3440               	retlw	64
  5326  033D  3420               	retlw	32
  5327  033E  3478               	retlw	120
  5328  033F  3400               	retlw	0
  5329  0340  349D               	retlw	157
  5330  0341  34A0               	retlw	160
  5331  0342  34A0               	retlw	160
  5332  0343  347D               	retlw	125
  5333  0344  343D               	retlw	61
  5334  0345  3442               	retlw	66
  5335  0346  3442               	retlw	66
  5336  0347  3442               	retlw	66
  5337  0348  343D               	retlw	61
  5338  0349  343D               	retlw	61
  5339  034A  3440               	retlw	64
  5340  034B  3440               	retlw	64
  5341  034C  3440               	retlw	64
  5342  034D  343D               	retlw	61
  5343  034E  343C               	retlw	60
  5344  034F  3424               	retlw	36
  5345  0350  34FF               	retlw	255
  5346  0351  3424               	retlw	36
  5347  0352  3424               	retlw	36
  5348  0353  3448               	retlw	72
  5349  0354  347E               	retlw	126
  5350  0355  3449               	retlw	73
  5351  0356  3443               	retlw	67
  5352  0357  3466               	retlw	102
  5353  0358  342B               	retlw	43
  5354  0359  342F               	retlw	47
  5355  035A  34FC               	retlw	252
  5356  035B  342F               	retlw	47
  5357  035C  342B               	retlw	43
  5358  035D  34FF               	retlw	255
  5359  035E  3409               	retlw	9
  5360  035F  3429               	retlw	41
  5361  0360  34F6               	retlw	246
  5362  0361  3420               	retlw	32
  5363  0362  34C0               	retlw	192
  5364  0363  3488               	retlw	136
  5365  0364  347E               	retlw	126
  5366  0365  3409               	retlw	9
  5367  0366  3403               	retlw	3
  5368  0367  3420               	retlw	32
  5369  0368  3454               	retlw	84
  5370  0369  3454               	retlw	84
  5371  036A  3479               	retlw	121
  5372  036B  3441               	retlw	65
  5373  036C  3400               	retlw	0
  5374  036D  3400               	retlw	0
  5375  036E  3444               	retlw	68
  5376  036F  347D               	retlw	125
  5377  0370  3441               	retlw	65
  5378  0371  3430               	retlw	48
  5379  0372  3448               	retlw	72
  5380  0373  3448               	retlw	72
  5381  0374  344A               	retlw	74
  5382  0375  3432               	retlw	50
  5383  0376  3438               	retlw	56
  5384  0377  3440               	retlw	64
  5385  0378  3440               	retlw	64
  5386  0379  3422               	retlw	34
  5387  037A  347A               	retlw	122
  5388  037B  3400               	retlw	0
  5389  037C  347A               	retlw	122
  5390  037D  340A               	retlw	10
  5391  037E  340A               	retlw	10
  5392  037F  3472               	retlw	114
  5393  0380  347D               	retlw	125
  5394  0381  340D               	retlw	13
  5395  0382  3419               	retlw	25
  5396  0383  3431               	retlw	49
  5397  0384  347D               	retlw	125
  5398  0385  3426               	retlw	38
  5399  0386  3429               	retlw	41
  5400  0387  3429               	retlw	41
  5401  0388  342F               	retlw	47
  5402  0389  3428               	retlw	40
  5403  038A  3426               	retlw	38
  5404  038B  3429               	retlw	41
  5405  038C  3429               	retlw	41
  5406  038D  3429               	retlw	41
  5407  038E  3426               	retlw	38
  5408  038F  3430               	retlw	48
  5409  0390  3448               	retlw	72
  5410  0391  344D               	retlw	77
  5411  0392  3440               	retlw	64
  5412  0393  3420               	retlw	32
  5413  0394  3438               	retlw	56
  5414  0395  3408               	retlw	8
  5415  0396  3408               	retlw	8
  5416  0397  3408               	retlw	8
  5417  0398  3408               	retlw	8
  5418  0399  3408               	retlw	8
  5419  039A  3408               	retlw	8
  5420  039B  3408               	retlw	8
  5421  039C  3408               	retlw	8
  5422  039D  3438               	retlw	56
  5423  039E  342F               	retlw	47
  5424  039F  3410               	retlw	16
  5425  03A0  34C8               	retlw	200
  5426  03A1  34AC               	retlw	172
  5427  03A2  34BA               	retlw	186
  5428  03A3  342F               	retlw	47
  5429  03A4  3410               	retlw	16
  5430  03A5  3428               	retlw	40
  5431  03A6  3434               	retlw	52
  5432  03A7  34FA               	retlw	250
  5433  03A8  3400               	retlw	0
  5434  03A9  3400               	retlw	0
  5435  03AA  347B               	retlw	123
  5436  03AB  3400               	retlw	0
  5437  03AC  3400               	retlw	0
  5438  03AD  3408               	retlw	8
  5439  03AE  3414               	retlw	20
  5440  03AF  342A               	retlw	42
  5441  03B0  3414               	retlw	20
  5442  03B1  3422               	retlw	34
  5443  03B2  3422               	retlw	34
  5444  03B3  3414               	retlw	20
  5445  03B4  342A               	retlw	42
  5446  03B5  3414               	retlw	20
  5447  03B6  3408               	retlw	8
  5448  03B7  3455               	retlw	85
  5449  03B8  3400               	retlw	0
  5450  03B9  3455               	retlw	85
  5451  03BA  3400               	retlw	0
  5452  03BB  3455               	retlw	85
  5453  03BC  34AA               	retlw	170
  5454  03BD  3455               	retlw	85
  5455  03BE  34AA               	retlw	170
  5456  03BF  3455               	retlw	85
  5457  03C0  34AA               	retlw	170
  5458  03C1  34FF               	retlw	255
  5459  03C2  3455               	retlw	85
  5460  03C3  34FF               	retlw	255
  5461  03C4  3455               	retlw	85
  5462  03C5  34FF               	retlw	255
  5463  03C6  3400               	retlw	0
  5464  03C7  3400               	retlw	0
  5465  03C8  3400               	retlw	0
  5466  03C9  34FF               	retlw	255
  5467  03CA  3400               	retlw	0
  5468  03CB  3410               	retlw	16
  5469  03CC  3410               	retlw	16
  5470  03CD  3410               	retlw	16
  5471  03CE  34FF               	retlw	255
  5472  03CF  3400               	retlw	0
  5473  03D0  3414               	retlw	20
  5474  03D1  3414               	retlw	20
  5475  03D2  3414               	retlw	20
  5476  03D3  34FF               	retlw	255
  5477  03D4  3400               	retlw	0
  5478  03D5  3410               	retlw	16
  5479  03D6  3410               	retlw	16
  5480  03D7  34FF               	retlw	255
  5481  03D8  3400               	retlw	0
  5482  03D9  34FF               	retlw	255
  5483  03DA  3410               	retlw	16
  5484  03DB  3410               	retlw	16
  5485  03DC  34F0               	retlw	240
  5486  03DD  3410               	retlw	16
  5487  03DE  34F0               	retlw	240
  5488  03DF  3414               	retlw	20
  5489  03E0  3414               	retlw	20
  5490  03E1  3414               	retlw	20
  5491  03E2  34FC               	retlw	252
  5492  03E3  3400               	retlw	0
  5493  03E4  3414               	retlw	20
  5494  03E5  3414               	retlw	20
  5495  03E6  34F7               	retlw	247
  5496  03E7  3400               	retlw	0
  5497  03E8  34FF               	retlw	255
  5498  03E9  3400               	retlw	0
  5499  03EA  3400               	retlw	0
  5500  03EB  34FF               	retlw	255
  5501  03EC  3400               	retlw	0
  5502  03ED  34FF               	retlw	255
  5503  03EE  3414               	retlw	20
  5504  03EF  3414               	retlw	20
  5505  03F0  34F4               	retlw	244
  5506  03F1  3404               	retlw	4
  5507  03F2  34FC               	retlw	252
  5508  03F3  3414               	retlw	20
  5509  03F4  3414               	retlw	20
  5510  03F5  3417               	retlw	23
  5511  03F6  3410               	retlw	16
  5512  03F7  341F               	retlw	31
  5513  03F8  3410               	retlw	16
  5514  03F9  3410               	retlw	16
  5515  03FA  341F               	retlw	31
  5516  03FB  3410               	retlw	16
  5517  03FC  341F               	retlw	31
  5518  03FD  3414               	retlw	20
  5519  03FE  3414               	retlw	20
  5520  03FF  3414               	retlw	20
  5521  0400  341F               	retlw	31
  5522  0401  3400               	retlw	0
  5523  0402  3410               	retlw	16
  5524  0403  3410               	retlw	16
  5525  0404  3410               	retlw	16
  5526  0405  34F0               	retlw	240
  5527  0406  3400               	retlw	0
  5528  0407  3400               	retlw	0
  5529  0408  3400               	retlw	0
  5530  0409  3400               	retlw	0
  5531  040A  341F               	retlw	31
  5532  040B  3410               	retlw	16
  5533  040C  3410               	retlw	16
  5534  040D  3410               	retlw	16
  5535  040E  3410               	retlw	16
  5536  040F  341F               	retlw	31
  5537  0410  3410               	retlw	16
  5538  0411  3410               	retlw	16
  5539  0412  3410               	retlw	16
  5540  0413  3410               	retlw	16
  5541  0414  34F0               	retlw	240
  5542  0415  3410               	retlw	16
  5543  0416  3400               	retlw	0
  5544  0417  3400               	retlw	0
  5545  0418  3400               	retlw	0
  5546  0419  34FF               	retlw	255
  5547  041A  3410               	retlw	16
  5548  041B  3410               	retlw	16
  5549  041C  3410               	retlw	16
  5550  041D  3410               	retlw	16
  5551  041E  3410               	retlw	16
  5552  041F  3410               	retlw	16
  5553  0420  3410               	retlw	16
  5554  0421  3410               	retlw	16
  5555  0422  3410               	retlw	16
  5556  0423  34FF               	retlw	255
  5557  0424  3410               	retlw	16
  5558  0425  3400               	retlw	0
  5559  0426  3400               	retlw	0
  5560  0427  3400               	retlw	0
  5561  0428  34FF               	retlw	255
  5562  0429  3414               	retlw	20
  5563  042A  3400               	retlw	0
  5564  042B  3400               	retlw	0
  5565  042C  34FF               	retlw	255
  5566  042D  3400               	retlw	0
  5567  042E  34FF               	retlw	255
  5568  042F  3400               	retlw	0
  5569  0430  3400               	retlw	0
  5570  0431  341F               	retlw	31
  5571  0432  3410               	retlw	16
  5572  0433  3417               	retlw	23
  5573  0434  3400               	retlw	0
  5574  0435  3400               	retlw	0
  5575  0436  34FC               	retlw	252
  5576  0437  3404               	retlw	4
  5577  0438  34F4               	retlw	244
  5578  0439  3414               	retlw	20
  5579  043A  3414               	retlw	20
  5580  043B  3417               	retlw	23
  5581  043C  3410               	retlw	16
  5582  043D  3417               	retlw	23
  5583  043E  3414               	retlw	20
  5584  043F  3414               	retlw	20
  5585  0440  34F4               	retlw	244
  5586  0441  3404               	retlw	4
  5587  0442  34F4               	retlw	244
  5588  0443  3400               	retlw	0
  5589  0444  3400               	retlw	0
  5590  0445  34FF               	retlw	255
  5591  0446  3400               	retlw	0
  5592  0447  34F7               	retlw	247
  5593  0448  3414               	retlw	20
  5594  0449  3414               	retlw	20
  5595  044A  3414               	retlw	20
  5596  044B  3414               	retlw	20
  5597  044C  3414               	retlw	20
  5598  044D  3414               	retlw	20
  5599  044E  3414               	retlw	20
  5600  044F  34F7               	retlw	247
  5601  0450  3400               	retlw	0
  5602  0451  34F7               	retlw	247
  5603  0452  3414               	retlw	20
  5604  0453  3414               	retlw	20
  5605  0454  3414               	retlw	20
  5606  0455  3417               	retlw	23
  5607  0456  3414               	retlw	20
  5608  0457  3410               	retlw	16
  5609  0458  3410               	retlw	16
  5610  0459  341F               	retlw	31
  5611  045A  3410               	retlw	16
  5612  045B  341F               	retlw	31
  5613  045C  3414               	retlw	20
  5614  045D  3414               	retlw	20
  5615  045E  3414               	retlw	20
  5616  045F  34F4               	retlw	244
  5617  0460  3414               	retlw	20
  5618  0461  3410               	retlw	16
  5619  0462  3410               	retlw	16
  5620  0463  34F0               	retlw	240
  5621  0464  3410               	retlw	16
  5622  0465  34F0               	retlw	240
  5623  0466  3400               	retlw	0
  5624  0467  3400               	retlw	0
  5625  0468  341F               	retlw	31
  5626  0469  3410               	retlw	16
  5627  046A  341F               	retlw	31
  5628  046B  3400               	retlw	0
  5629  046C  3400               	retlw	0
  5630  046D  3400               	retlw	0
  5631  046E  341F               	retlw	31
  5632  046F  3414               	retlw	20
  5633  0470  3400               	retlw	0
  5634  0471  3400               	retlw	0
  5635  0472  3400               	retlw	0
  5636  0473  34FC               	retlw	252
  5637  0474  3414               	retlw	20
  5638  0475  3400               	retlw	0
  5639  0476  3400               	retlw	0
  5640  0477  34F0               	retlw	240
  5641  0478  3410               	retlw	16
  5642  0479  34F0               	retlw	240
  5643  047A  3410               	retlw	16
  5644  047B  3410               	retlw	16
  5645  047C  34FF               	retlw	255
  5646  047D  3410               	retlw	16
  5647  047E  34FF               	retlw	255
  5648  047F  3414               	retlw	20
  5649  0480  3414               	retlw	20
  5650  0481  3414               	retlw	20
  5651  0482  34FF               	retlw	255
  5652  0483  3414               	retlw	20
  5653  0484  3410               	retlw	16
  5654  0485  3410               	retlw	16
  5655  0486  3410               	retlw	16
  5656  0487  341F               	retlw	31
  5657  0488  3400               	retlw	0
  5658  0489  3400               	retlw	0
  5659  048A  3400               	retlw	0
  5660  048B  3400               	retlw	0
  5661  048C  34F0               	retlw	240
  5662  048D  3410               	retlw	16
  5663  048E  34FF               	retlw	255
  5664  048F  34FF               	retlw	255
  5665  0490  34FF               	retlw	255
  5666  0491  34FF               	retlw	255
  5667  0492  34FF               	retlw	255
  5668  0493  34F0               	retlw	240
  5669  0494  34F0               	retlw	240
  5670  0495  34F0               	retlw	240
  5671  0496  34F0               	retlw	240
  5672  0497  34F0               	retlw	240
  5673  0498  34FF               	retlw	255
  5674  0499  34FF               	retlw	255
  5675  049A  34FF               	retlw	255
  5676  049B  3400               	retlw	0
  5677  049C  3400               	retlw	0
  5678  049D  3400               	retlw	0
  5679  049E  3400               	retlw	0
  5680  049F  3400               	retlw	0
  5681  04A0  34FF               	retlw	255
  5682  04A1  34FF               	retlw	255
  5683  04A2  340F               	retlw	15
  5684  04A3  340F               	retlw	15
  5685  04A4  340F               	retlw	15
  5686  04A5  340F               	retlw	15
  5687  04A6  340F               	retlw	15
  5688  04A7  3438               	retlw	56
  5689  04A8  3444               	retlw	68
  5690  04A9  3444               	retlw	68
  5691  04AA  3438               	retlw	56
  5692  04AB  3444               	retlw	68
  5693  04AC  34FC               	retlw	252
  5694  04AD  344A               	retlw	74
  5695  04AE  344A               	retlw	74
  5696  04AF  344A               	retlw	74
  5697  04B0  3434               	retlw	52
  5698  04B1  347E               	retlw	126
  5699  04B2  3402               	retlw	2
  5700  04B3  3402               	retlw	2
  5701  04B4  3406               	retlw	6
  5702  04B5  3406               	retlw	6
  5703  04B6  3402               	retlw	2
  5704  04B7  347E               	retlw	126
  5705  04B8  3402               	retlw	2
  5706  04B9  347E               	retlw	126
  5707  04BA  3402               	retlw	2
  5708  04BB  3463               	retlw	99
  5709  04BC  3455               	retlw	85
  5710  04BD  3449               	retlw	73
  5711  04BE  3441               	retlw	65
  5712  04BF  3463               	retlw	99
  5713  04C0  3438               	retlw	56
  5714  04C1  3444               	retlw	68
  5715  04C2  3444               	retlw	68
  5716  04C3  343C               	retlw	60
  5717  04C4  3404               	retlw	4
  5718  04C5  3440               	retlw	64
  5719  04C6  347E               	retlw	126
  5720  04C7  3420               	retlw	32
  5721  04C8  341E               	retlw	30
  5722  04C9  3420               	retlw	32
  5723  04CA  3406               	retlw	6
  5724  04CB  3402               	retlw	2
  5725  04CC  347E               	retlw	126
  5726  04CD  3402               	retlw	2
  5727  04CE  3402               	retlw	2
  5728  04CF  3499               	retlw	153
  5729  04D0  34A5               	retlw	165
  5730  04D1  34E7               	retlw	231
  5731  04D2  34A5               	retlw	165
  5732  04D3  3499               	retlw	153
  5733  04D4  341C               	retlw	28
  5734  04D5  342A               	retlw	42
  5735  04D6  3449               	retlw	73
  5736  04D7  342A               	retlw	42
  5737  04D8  341C               	retlw	28
  5738  04D9  344C               	retlw	76
  5739  04DA  3472               	retlw	114
  5740  04DB  3401               	retlw	1
  5741  04DC  3472               	retlw	114
  5742  04DD  344C               	retlw	76
  5743  04DE  3430               	retlw	48
  5744  04DF  344A               	retlw	74
  5745  04E0  344D               	retlw	77
  5746  04E1  344D               	retlw	77
  5747  04E2  3430               	retlw	48
  5748  04E3  3430               	retlw	48
  5749  04E4  3448               	retlw	72
  5750  04E5  3478               	retlw	120
  5751  04E6  3448               	retlw	72
  5752  04E7  3430               	retlw	48
  5753  04E8  34BC               	retlw	188
  5754  04E9  3462               	retlw	98
  5755  04EA  345A               	retlw	90
  5756  04EB  3446               	retlw	70
  5757  04EC  343D               	retlw	61
  5758  04ED  343E               	retlw	62
  5759  04EE  3449               	retlw	73
  5760  04EF  3449               	retlw	73
  5761  04F0  3449               	retlw	73
  5762  04F1  3400               	retlw	0
  5763  04F2  347E               	retlw	126
  5764  04F3  3401               	retlw	1
  5765  04F4  3401               	retlw	1
  5766  04F5  3401               	retlw	1
  5767  04F6  347E               	retlw	126
  5768  04F7  342A               	retlw	42
  5769  04F8  342A               	retlw	42
  5770  04F9  342A               	retlw	42
  5771  04FA  342A               	retlw	42
  5772  04FB  342A               	retlw	42
  5773  04FC  3444               	retlw	68
  5774  04FD  3444               	retlw	68
  5775  04FE  345F               	retlw	95
  5776  04FF  3444               	retlw	68
  5777  0500  3444               	retlw	68
  5778  0501  3440               	retlw	64
  5779  0502  3451               	retlw	81
  5780  0503  344A               	retlw	74
  5781  0504  3444               	retlw	68
  5782  0505  3440               	retlw	64
  5783  0506  3440               	retlw	64
  5784  0507  3444               	retlw	68
  5785  0508  344A               	retlw	74
  5786  0509  3451               	retlw	81
  5787  050A  3440               	retlw	64
  5788  050B  3400               	retlw	0
  5789  050C  3400               	retlw	0
  5790  050D  34FF               	retlw	255
  5791  050E  3401               	retlw	1
  5792  050F  3403               	retlw	3
  5793  0510  34E0               	retlw	224
  5794  0511  3480               	retlw	128
  5795  0512  34FF               	retlw	255
  5796  0513  3400               	retlw	0
  5797  0514  3400               	retlw	0
  5798  0515  3408               	retlw	8
  5799  0516  3408               	retlw	8
  5800  0517  346B               	retlw	107
  5801  0518  346B               	retlw	107
  5802  0519  3408               	retlw	8
  5803  051A  3436               	retlw	54
  5804  051B  3412               	retlw	18
  5805  051C  3436               	retlw	54
  5806  051D  3424               	retlw	36
  5807  051E  3436               	retlw	54
  5808  051F  3406               	retlw	6
  5809  0520  340F               	retlw	15
  5810  0521  3409               	retlw	9
  5811  0522  340F               	retlw	15
  5812  0523  3406               	retlw	6
  5813  0524  3400               	retlw	0
  5814  0525  3400               	retlw	0
  5815  0526  3418               	retlw	24
  5816  0527  3418               	retlw	24
  5817  0528  3400               	retlw	0
  5818  0529  3400               	retlw	0
  5819  052A  3400               	retlw	0
  5820  052B  3410               	retlw	16
  5821  052C  3410               	retlw	16
  5822  052D  3400               	retlw	0
  5823  052E  3430               	retlw	48
  5824  052F  3440               	retlw	64
  5825  0530  34FF               	retlw	255
  5826  0531  3401               	retlw	1
  5827  0532  3401               	retlw	1
  5828  0533  3400               	retlw	0
  5829  0534  341F               	retlw	31
  5830  0535  3401               	retlw	1
  5831  0536  3401               	retlw	1
  5832  0537  341E               	retlw	30
  5833  0538  3400               	retlw	0
  5834  0539  3419               	retlw	25
  5835  053A  341D               	retlw	29
  5836  053B  3417               	retlw	23
  5837  053C  3412               	retlw	18
  5838  053D  3400               	retlw	0
  5839  053E  343C               	retlw	60
  5840  053F  343C               	retlw	60
  5841  0540  343C               	retlw	60
  5842  0541  343C               	retlw	60
  5843  0542  3400               	retlw	0
  5844  0543  3400               	retlw	0
  5845  0544  3400               	retlw	0
  5846  0545  3400               	retlw	0
  5847  0546  3400               	retlw	0
  5848  0547                     __end_of_font:
  5849                           
  5850                           	psect	stringtext2
  5851  1964                     __pstringtext2:
  5852  1964                     _spi1_configuration:
  5853  1964  3400               	retlw	0
  5854  1965  34C0               	retlw	192
  5855  1966  344F               	retlw	79
  5856  1967  3400               	retlw	0
  5857  1968                     __end_of_spi1_configuration:
  5858                           
  5859                           	psect	stringtext3
  5860  1800                     __pstringtext3:
  5861  1800                     _initcmd:
  5862  1800  34EF               	retlw	239
  5863  1801  3403               	retlw	3
  5864  1802  3403               	retlw	3
  5865  1803  3480               	retlw	128
  5866  1804  3402               	retlw	2
  5867  1805  34CF               	retlw	207
  5868  1806  3403               	retlw	3
  5869  1807  3400               	retlw	0
  5870  1808  34C1               	retlw	193
  5871  1809  3430               	retlw	48
  5872  180A  34ED               	retlw	237
  5873  180B  3404               	retlw	4
  5874  180C  3464               	retlw	100
  5875  180D  3403               	retlw	3
  5876  180E  3412               	retlw	18
  5877  180F  3481               	retlw	129
  5878  1810  34E8               	retlw	232
  5879  1811  3403               	retlw	3
  5880  1812  3485               	retlw	133
  5881  1813  3400               	retlw	0
  5882  1814  3478               	retlw	120
  5883  1815  34CB               	retlw	203
  5884  1816  3405               	retlw	5
  5885  1817  3439               	retlw	57
  5886  1818  342C               	retlw	44
  5887  1819  3400               	retlw	0
  5888  181A  3434               	retlw	52
  5889  181B  3402               	retlw	2
  5890  181C  34F7               	retlw	247
  5891  181D  3401               	retlw	1
  5892  181E  3420               	retlw	32
  5893  181F  34EA               	retlw	234
  5894  1820  3402               	retlw	2
  5895  1821  3400               	retlw	0
  5896  1822  3400               	retlw	0
  5897  1823  34C0               	retlw	192
  5898  1824  3401               	retlw	1
  5899  1825  3423               	retlw	35
  5900  1826  34C1               	retlw	193
  5901  1827  3401               	retlw	1
  5902  1828  3410               	retlw	16
  5903  1829  34C5               	retlw	197
  5904  182A  3402               	retlw	2
  5905  182B  343E               	retlw	62
  5906  182C  3428               	retlw	40
  5907  182D  34C7               	retlw	199
  5908  182E  3401               	retlw	1
  5909  182F  3486               	retlw	134
  5910  1830  3436               	retlw	54
  5911  1831  3401               	retlw	1
  5912  1832  3448               	retlw	72
  5913  1833  3437               	retlw	55
  5914  1834  3401               	retlw	1
  5915  1835  3400               	retlw	0
  5916  1836  343A               	retlw	58
  5917  1837  3401               	retlw	1
  5918  1838  3455               	retlw	85
  5919  1839  34B1               	retlw	177
  5920  183A  3402               	retlw	2
  5921  183B  3400               	retlw	0
  5922  183C  3418               	retlw	24
  5923  183D  34B6               	retlw	182
  5924  183E  3403               	retlw	3
  5925  183F  3408               	retlw	8
  5926  1840  3482               	retlw	130
  5927  1841  3427               	retlw	39
  5928  1842  34F2               	retlw	242
  5929  1843  3401               	retlw	1
  5930  1844  3400               	retlw	0
  5931  1845  3426               	retlw	38
  5932  1846  3401               	retlw	1
  5933  1847  3401               	retlw	1
  5934  1848  34E0               	retlw	224
  5935  1849  340F               	retlw	15
  5936  184A  340F               	retlw	15
  5937  184B  3431               	retlw	49
  5938  184C  342B               	retlw	43
  5939  184D  340C               	retlw	12
  5940  184E  340E               	retlw	14
  5941  184F  3408               	retlw	8
  5942  1850  344E               	retlw	78
  5943  1851  34F1               	retlw	241
  5944  1852  3437               	retlw	55
  5945  1853  3407               	retlw	7
  5946  1854  3410               	retlw	16
  5947  1855  3403               	retlw	3
  5948  1856  340E               	retlw	14
  5949  1857  3409               	retlw	9
  5950  1858  3400               	retlw	0
  5951  1859  34E1               	retlw	225
  5952  185A  340F               	retlw	15
  5953  185B  3400               	retlw	0
  5954  185C  340E               	retlw	14
  5955  185D  3414               	retlw	20
  5956  185E  3403               	retlw	3
  5957  185F  3411               	retlw	17
  5958  1860  3407               	retlw	7
  5959  1861  3431               	retlw	49
  5960  1862  34C1               	retlw	193
  5961  1863  3448               	retlw	72
  5962  1864  3408               	retlw	8
  5963  1865  340F               	retlw	15
  5964  1866  340C               	retlw	12
  5965  1867  3431               	retlw	49
  5966  1868  3436               	retlw	54
  5967  1869  340F               	retlw	15
  5968  186A  3411               	retlw	17
  5969  186B  3480               	retlw	128
  5970  186C  3429               	retlw	41
  5971  186D  3480               	retlw	128
  5972  186E  3400               	retlw	0
  5973  186F                     __end_of_initcmd:
  5974                           
  5975                           	psect	nvBANK1
  5976  00E4                     __pnvBANK1:
  5977  00E4                     _IOCCF5_InterruptHandler:
  5978  00E4                     	ds	2
  5979  00E6                     _IOCBF4_InterruptHandler:
  5980  00E6                     	ds	2
  5981  00E8                     _IOCAF2_InterruptHandler:
  5982  00E8                     	ds	2
  5983  00EA                     _IOCAF1_InterruptHandler:
  5984  00EA                     	ds	2
  5985  0016                     _LATAbits	set	22
  5986  0018                     _LATCbits	set	24
  5987  000B                     _INTCONbits	set	11
  5988  000C                     _PORTAbits	set	12
  5989  0013                     _TRISCbits	set	19
  5990  0014                     _TRISD	set	20
  5991  0013                     _TRISC	set	19
  5992  0012                     _TRISB	set	18
  5993  0011                     _TRISA	set	17
  5994  0015                     _TRISE	set	21
  5995  0018                     _LATC	set	24
  5996  0017                     _LATB	set	23
  5997  0016                     _LATA	set	22
  5998  0019                     _LATD	set	25
  5999  001A                     _LATE	set	26
  6000  018C                     _SSP1BUF	set	396
  6001  0191                     _SSP1CON2	set	401
  6002  0190                     _SSP1CON1bits	set	400
  6003  018D                     _SSP1ADD	set	397
  6004  0190                     _SSP1CON1	set	400
  6005  018F                     _SSP1STAT	set	399
  6006  070C                     _PIR0bits	set	1804
  6007  070F                     _PIR3bits	set	1807
  6008  0716                     _PIE0bits	set	1814
  6009  079B                     _PMD5	set	1947
  6010  079A                     _PMD4	set	1946
  6011  0799                     _PMD3	set	1945
  6012  0798                     _PMD2	set	1944
  6013  0797                     _PMD1	set	1943
  6014  0796                     _PMD0	set	1942
  6015  0892                     _OSCTUNE	set	2194
  6016  0893                     _OSCFRQ	set	2195
  6017  0891                     _OSCEN	set	2193
  6018  088F                     _OSCCON3	set	2191
  6019  088D                     _OSCCON1	set	2189
  6020  0EC6                     _SSP1DATPPS	set	3782
  6021  0EC5                     _SSP1CLKPPS	set	3781
  6022  0F26                     _RC6PPS	set	3878
  6023  0F23                     _RC3PPS	set	3875
  6024  0F53                     _IOCCPbits	set	3923
  6025  0F54                     _IOCCNbits	set	3924
  6026  0F55                     _IOCCFbits	set	3925
  6027  0F48                     _IOCBPbits	set	3912
  6028  0F49                     _IOCBNbits	set	3913
  6029  0F4A                     _IOCBFbits	set	3914
  6030  0F3D                     _IOCAPbits	set	3901
  6031  0F3E                     _IOCANbits	set	3902
  6032  0F3F                     _IOCAFbits	set	3903
  6033  0F68                     _INLVLE	set	3944
  6034  0F5D                     _INLVLD	set	3933
  6035  0F52                     _INLVLC	set	3922
  6036  0F47                     _INLVLB	set	3911
  6037  0F3C                     _INLVLA	set	3900
  6038  0F67                     _SLRCONE	set	3943
  6039  0F5C                     _SLRCOND	set	3932
  6040  0F51                     _SLRCONC	set	3921
  6041  0F46                     _SLRCONB	set	3910
  6042  0F3B                     _SLRCONA	set	3899
  6043  0F5B                     _ODCOND	set	3931
  6044  0F50                     _ODCONC	set	3920
  6045  0F45                     _ODCONB	set	3909
  6046  0F3A                     _ODCONA	set	3898
  6047  0F66                     _ODCONE	set	3942
  6048  0F4F                     _WPUC	set	3919
  6049  0F39                     _WPUA	set	3897
  6050  0F44                     _WPUB	set	3908
  6051  0F65                     _WPUE	set	3941
  6052  0F5A                     _WPUD	set	3930
  6053  0F38                     _ANSELA	set	3896
  6054  0F64                     _ANSELE	set	3940
  6055  0F43                     _ANSELB	set	3907
  6056  0F4E                     _ANSELC	set	3918
  6057  0F59                     _ANSELD	set	3929
  6058                           
  6059                           	psect	stringtext4
  6060  186F                     __pstringtext4:
  6061  186F                     STR_10:
  6062  186F  3477               	retlw	119	;'w'
  6063  1870  3469               	retlw	105	;'i'
  6064  1871  3474               	retlw	116	;'t'
  6065  1872  3468               	retlw	104	;'h'
  6066  1873  3420               	retlw	32	;' '
  6067  1874  3463               	retlw	99	;'c'
  6068  1875  3472               	retlw	114	;'r'
  6069  1876  3469               	retlw	105	;'i'
  6070  1877  346E               	retlw	110	;'n'
  6071  1878  346B               	retlw	107	;'k'
  6072  1879  346C               	retlw	108	;'l'
  6073  187A  3479               	retlw	121	;'y'
  6074  187B  3420               	retlw	32	;' '
  6075  187C  3462               	retlw	98	;'b'
  6076  187D  3469               	retlw	105	;'i'
  6077  187E  346E               	retlw	110	;'n'
  6078  187F  3464               	retlw	100	;'d'
  6079  1880  346C               	retlw	108	;'l'
  6080  1881  3465               	retlw	101	;'e'
  6081  1882  3477               	retlw	119	;'w'
  6082  1883  3475               	retlw	117	;'u'
  6083  1884  3472               	retlw	114	;'r'
  6084  1885  3464               	retlw	100	;'d'
  6085  1886  346C               	retlw	108	;'l'
  6086  1887  3465               	retlw	101	;'e'
  6087  1888  3473               	retlw	115	;'s'
  6088  1889  342C               	retlw	44	;','
  6089  188A  340D               	retlw	13
  6090  188B  340A               	retlw	10
  6091  188C  3400               	retlw	0
  6092                           
  6093                           	psect	stringtext5
  6094  188D                     __pstringtext5:
  6095  188D                     STR_8:
  6096  188D  346D               	retlw	109	;'m'
  6097  188E  3479               	retlw	121	;'y'
  6098  188F  3420               	retlw	32	;' '
  6099  1890  3466               	retlw	102	;'f'
  6100  1891  346F               	retlw	111	;'o'
  6101  1892  346F               	retlw	111	;'o'
  6102  1893  346E               	retlw	110	;'n'
  6103  1894  3474               	retlw	116	;'t'
  6104  1895  3469               	retlw	105	;'i'
  6105  1896  346E               	retlw	110	;'n'
  6106  1897  3467               	retlw	103	;'g'
  6107  1898  3420               	retlw	32	;' '
  6108  1899  3474               	retlw	116	;'t'
  6109  189A  3475               	retlw	117	;'u'
  6110  189B  3472               	retlw	114	;'r'
  6111  189C  346C               	retlw	108	;'l'
  6112  189D  3469               	retlw	105	;'i'
  6113  189E  346E               	retlw	110	;'n'
  6114  189F  3467               	retlw	103	;'g'
  6115  18A0  3464               	retlw	100	;'d'
  6116  18A1  3472               	retlw	114	;'r'
  6117  18A2  346F               	retlw	111	;'o'
  6118  18A3  346D               	retlw	109	;'m'
  6119  18A4  3465               	retlw	101	;'e'
  6120  18A5  3473               	retlw	115	;'s'
  6121  18A6  342E               	retlw	46	;'.'
  6122  18A7  340D               	retlw	13
  6123  18A8  340A               	retlw	10
  6124  18A9  3400               	retlw	0
  6125                           
  6126                           	psect	stringtext6
  6127  18AA                     __pstringtext6:
  6128  18AA                     STR_9:
  6129  18AA  3441               	retlw	65	;'A'
  6130  18AB  346E               	retlw	110	;'n'
  6131  18AC  3464               	retlw	100	;'d'
  6132  18AD  3420               	retlw	32	;' '
  6133  18AE  3468               	retlw	104	;'h'
  6134  18AF  346F               	retlw	111	;'o'
  6135  18B0  346F               	retlw	111	;'o'
  6136  18B1  3470               	retlw	112	;'p'
  6137  18B2  3474               	retlw	116	;'t'
  6138  18B3  3469               	retlw	105	;'i'
  6139  18B4  346F               	retlw	111	;'o'
  6140  18B5  3475               	retlw	117	;'u'
  6141  18B6  3473               	retlw	115	;'s'
  6142  18B7  346C               	retlw	108	;'l'
  6143  18B8  3479               	retlw	121	;'y'
  6144  18B9  3420               	retlw	32	;' '
  6145  18BA  3464               	retlw	100	;'d'
  6146  18BB  3472               	retlw	114	;'r'
  6147  18BC  3461               	retlw	97	;'a'
  6148  18BD  346E               	retlw	110	;'n'
  6149  18BE  3467               	retlw	103	;'g'
  6150  18BF  346C               	retlw	108	;'l'
  6151  18C0  3465               	retlw	101	;'e'
  6152  18C1  3420               	retlw	32	;' '
  6153  18C2  346D               	retlw	109	;'m'
  6154  18C3  3465               	retlw	101	;'e'
  6155  18C4  340D               	retlw	13
  6156  18C5  340A               	retlw	10
  6157  18C6  3400               	retlw	0
  6158                           
  6159                           	psect	stringtext7
  6160  18C7                     __pstringtext7:
  6161  18C7                     STR_13:
  6162  18C7  3477               	retlw	119	;'w'
  6163  18C8  3469               	retlw	105	;'i'
  6164  18C9  3474               	retlw	116	;'t'
  6165  18CA  3468               	retlw	104	;'h'
  6166  18CB  3420               	retlw	32	;' '
  6167  18CC  346D               	retlw	109	;'m'
  6168  18CD  3479               	retlw	121	;'y'
  6169  18CE  3420               	retlw	32	;' '
  6170  18CF  3462               	retlw	98	;'b'
  6171  18D0  346C               	retlw	108	;'l'
  6172  18D1  3475               	retlw	117	;'u'
  6173  18D2  3472               	retlw	114	;'r'
  6174  18D3  3467               	retlw	103	;'g'
  6175  18D4  346C               	retlw	108	;'l'
  6176  18D5  3465               	retlw	101	;'e'
  6177  18D6  3463               	retlw	99	;'c'
  6178  18D7  3472               	retlw	114	;'r'
  6179  18D8  3475               	retlw	117	;'u'
  6180  18D9  346E               	retlw	110	;'n'
  6181  18DA  3463               	retlw	99	;'c'
  6182  18DB  3468               	retlw	104	;'h'
  6183  18DC  3465               	retlw	101	;'e'
  6184  18DD  346F               	retlw	111	;'o'
  6185  18DE  346E               	retlw	110	;'n'
  6186  18DF  342C               	retlw	44	;','
  6187  18E0  340D               	retlw	13
  6188  18E1  340A               	retlw	10
  6189  18E2  3400               	retlw	0
  6190                           
  6191                           	psect	stringtext8
  6192  18E3                     __pstringtext8:
  6193  18E3                     STR_11:
  6194  18E3  344F               	retlw	79	;'O'
  6195  18E4  3472               	retlw	114	;'r'
  6196  18E5  3420               	retlw	32	;' '
  6197  18E6  3449               	retlw	73	;'I'
  6198  18E7  3420               	retlw	32	;' '
  6199  18E8  3477               	retlw	119	;'w'
  6200  18E9  3469               	retlw	105	;'i'
  6201  18EA  346C               	retlw	108	;'l'
  6202  18EB  346C               	retlw	108	;'l'
  6203  18EC  3420               	retlw	32	;' '
  6204  18ED  3472               	retlw	114	;'r'
  6205  18EE  3465               	retlw	101	;'e'
  6206  18EF  346E               	retlw	110	;'n'
  6207  18F0  3464               	retlw	100	;'d'
  6208  18F1  3420               	retlw	32	;' '
  6209  18F2  3474               	retlw	116	;'t'
  6210  18F3  3468               	retlw	104	;'h'
  6211  18F4  3465               	retlw	101	;'e'
  6212  18F5  3465               	retlw	101	;'e'
  6213  18F6  340D               	retlw	13
  6214  18F7  340A               	retlw	10
  6215  18F8  3400               	retlw	0
  6216                           
  6217                           	psect	stringtext9
  6218  18F9                     __pstringtext9:
  6219  18F9                     STR_12:
  6220  18F9  3469               	retlw	105	;'i'
  6221  18FA  346E               	retlw	110	;'n'
  6222  18FB  3420               	retlw	32	;' '
  6223  18FC  3474               	retlw	116	;'t'
  6224  18FD  3468               	retlw	104	;'h'
  6225  18FE  3465               	retlw	101	;'e'
  6226  18FF  3420               	retlw	32	;' '
  6227  1900  3467               	retlw	103	;'g'
  6228  1901  346F               	retlw	111	;'o'
  6229  1902  3462               	retlw	98	;'b'
  6230  1903  3462               	retlw	98	;'b'
  6231  1904  3465               	retlw	101	;'e'
  6232  1905  3472               	retlw	114	;'r'
  6233  1906  3477               	retlw	119	;'w'
  6234  1907  3461               	retlw	97	;'a'
  6235  1908  3472               	retlw	114	;'r'
  6236  1909  3474               	retlw	116	;'t'
  6237  190A  3473               	retlw	115	;'s'
  6238  190B  340D               	retlw	13
  6239  190C  340A               	retlw	10
  6240  190D  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext10
  6243  190E                     __pstringtext10:
  6244  190E                     STR_14:
  6245  190E  3473               	retlw	115	;'s'
  6246  190F  3465               	retlw	101	;'e'
  6247  1910  3465               	retlw	101	;'e'
  6248  1911  3420               	retlw	32	;' '
  6249  1912  3469               	retlw	105	;'i'
  6250  1913  3466               	retlw	102	;'f'
  6251  1914  3420               	retlw	32	;' '
  6252  1915  3449               	retlw	73	;'I'
  6253  1916  3420               	retlw	32	;' '
  6254  1917  3464               	retlw	100	;'d'
  6255  1918  346F               	retlw	111	;'o'
  6256  1919  346E               	retlw	110	;'n'
  6257  191A  3427               	retlw	39	;'''
  6258  191B  3474               	retlw	116	;'t'
  6259  191C  3421               	retlw	33	;'!'
  6260  191D  340D               	retlw	13
  6261  191E  340A               	retlw	10
  6262  191F  3400               	retlw	0
  6263                           
  6264                           	psect	stringtext11
  6265  1920                     __pstringtext11:
  6266  1920                     STR_7:
  6267  1920  3449               	retlw	73	;'I'
  6268  1921  3420               	retlw	32	;' '
  6269  1922  3469               	retlw	105	;'i'
  6270  1923  346D               	retlw	109	;'m'
  6271  1924  3470               	retlw	112	;'p'
  6272  1925  346C               	retlw	108	;'l'
  6273  1926  346F               	retlw	111	;'o'
  6274  1927  3472               	retlw	114	;'r'
  6275  1928  3465               	retlw	101	;'e'
  6276  1929  3420               	retlw	32	;' '
  6277  192A  3474               	retlw	116	;'t'
  6278  192B  3468               	retlw	104	;'h'
  6279  192C  3465               	retlw	101	;'e'
  6280  192D  3465               	retlw	101	;'e'
  6281  192E  342C               	retlw	44	;','
  6282  192F  340D               	retlw	13
  6283  1930  340A               	retlw	10
  6284  1931  3400               	retlw	0
  6285                           
  6286                           	psect	stringtext12
  6287  1932                     __pstringtext12:
  6288  1932                     STR_2:
  6289  1932  3448               	retlw	72	;'H'
  6290  1933  3465               	retlw	101	;'e'
  6291  1934  346C               	retlw	108	;'l'
  6292  1935  346C               	retlw	108	;'l'
  6293  1936  346F               	retlw	111	;'o'
  6294  1937  3420               	retlw	32	;' '
  6295  1938  3457               	retlw	87	;'W'
  6296  1939  346F               	retlw	111	;'o'
  6297  193A  3472               	retlw	114	;'r'
  6298  193B  346C               	retlw	108	;'l'
  6299  193C  3464               	retlw	100	;'d'
  6300  193D  3421               	retlw	33	;'!'
  6301  193E  340D               	retlw	13
  6302  193F  340A               	retlw	10
  6303  1940  3400               	retlw	0
  6304                           
  6305                           	psect	stringtext13
  6306  1941                     __pstringtext13:
  6307  1941                     STR_4:
  6308  1941  3444               	retlw	68	;'D'
  6309  1942  3445               	retlw	69	;'E'
  6310  1943  3441               	retlw	65	;'A'
  6311  1944  3444               	retlw	68	;'D'
  6312  1945  3442               	retlw	66	;'B'
  6313  1946  3445               	retlw	69	;'E'
  6314  1947  3445               	retlw	69	;'E'
  6315  1948  3446               	retlw	70	;'F'
  6316  1949  340D               	retlw	13
  6317  194A  340A               	retlw	10
  6318  194B  3400               	retlw	0
  6319                           
  6320                           	psect	stringtext14
  6321  194C                     __pstringtext14:
  6322  194C                     STR_3:
  6323  194C  3431               	retlw	49	;'1'
  6324  194D  3432               	retlw	50	;'2'
  6325  194E  3433               	retlw	51	;'3'
  6326  194F  3434               	retlw	52	;'4'
  6327  1950  342E               	retlw	46	;'.'
  6328  1951  3435               	retlw	53	;'5'
  6329  1952  3436               	retlw	54	;'6'
  6330  1953  340D               	retlw	13
  6331  1954  340A               	retlw	10
  6332  1955  3400               	retlw	0
  6333                           
  6334                           	psect	stringtext15
  6335  1956                     __pstringtext15:
  6336  1956                     STR_6:
  6337  1956  3447               	retlw	71	;'G'
  6338  1957  3472               	retlw	114	;'r'
  6339  1958  346F               	retlw	111	;'o'
  6340  1959  346F               	retlw	111	;'o'
  6341  195A  3470               	retlw	112	;'p'
  6342  195B  340D               	retlw	13
  6343  195C  340A               	retlw	10
  6344  195D  3400               	retlw	0
  6345                           
  6346                           	psect	stringtext16
  6347  195E                     __pstringtext16:
  6348  195E                     STR_1:
  6349  195E  3425               	retlw	37	;'%'
  6350  195F  3469               	retlw	105	;'i'
  6351  1960  343A               	retlw	58	;':'
  6352  1961  3425               	retlw	37	;'%'
  6353  1962  3469               	retlw	105	;'i'
  6354  1963  3400               	retlw	0
  6355                           
  6356                           	psect	stringtext17
  6357  0000                     __pstringtext17:
  6358  193E                     
  6359                           	psect	cinit
  6360  0016                     start_initialization:	
  6361                           ; #config settings
  6362                           
  6363  0016                     __initialization:
  6364                           
  6365                           ; Initialize objects allocated to BANK0
  6366  0016  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  6367  0019  00EF               	movwf	__pdataBANK0& (0+127)
  6368                           
  6369                           ; Initialize objects allocated to BANK1
  6370  001A  309F               	movlw	low __pidataBANK1
  6371  001B  0084               	movwf	4
  6372  001C  3090               	movlw	(high __pidataBANK1)| (0+128)
  6373  001D  0085               	movwf	5
  6374  001E  30A0               	movlw	low __pdataBANK1
  6375  001F  0086               	movwf	6
  6376  0020  3000               	movlw	high __pdataBANK1
  6377  0021  0087               	movwf	7
  6378  0022  301B               	movlw	27
  6379  0023  3187  27FA  3180   	fcall	init_ram
  6380                           
  6381                           ; Initialize objects allocated to BANK2
  6382  0026  3001               	movlw	low __pidataBANK2
  6383  0027  0084               	movwf	4
  6384  0028  3090               	movlw	(high __pidataBANK2)| (0+128)
  6385  0029  0085               	movwf	5
  6386  002A  3040               	movlw	low __pdataBANK2
  6387  002B  0086               	movwf	6
  6388  002C  3001               	movlw	high __pdataBANK2
  6389  002D  0087               	movwf	7
  6390  002E  300A               	movlw	10
  6391  002F  3187  27FA  3180   	fcall	init_ram
  6392                           
  6393                           ; Clear objects allocated to COMMON
  6394  0032  01FC               	clrf	__pbssCOMMON& (0+127)
  6395                           
  6396                           ; Clear objects allocated to BANK1
  6397  0033  30BB               	movlw	low __pbssBANK1
  6398  0034  0084               	movwf	4
  6399  0035  3000               	movlw	high __pbssBANK1
  6400  0036  0085               	movwf	5
  6401  0037  3017               	movlw	23
  6402  0038  3188  2000  3180   	fcall	clear_ram0
  6403                           
  6404                           ; Clear objects allocated to BANK2
  6405  003B  3020               	movlw	low __pbssBANK2
  6406  003C  0084               	movwf	4
  6407  003D  3001               	movlw	high __pbssBANK2
  6408  003E  0085               	movwf	5
  6409  003F  3020               	movlw	32
  6410  0040  3188  2000  3180   	fcall	clear_ram0
  6411  0043                     end_of_initialization:	
  6412                           ;End of C runtime variable initialization code
  6413                           
  6414  0043                     __end_of__initialization:
  6415  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6416  0044  0020               	movlb	0
  6417  0045  318B  2BBA         	ljmp	_main	;jump to C main() function
  6418                           
  6419                           	psect	bssCOMMON
  6420  007C                     __pbssCOMMON:
  6421  007C                     _movimiento_jugador1:
  6422  007C                     	ds	1
  6423                           
  6424                           	psect	dataBANK0
  6425  006F                     __pdataBANK0:
  6426  006F                     _textsize:
  6427  006F                     	ds	1
  6428                           
  6429                           	psect	bssBANK1
  6430  00BB                     __pbssBANK1:
  6431  00BB                     _nout:
  6432  00BB                     	ds	2
  6433  00BD                     _width:
  6434  00BD                     	ds	2
  6435  00BF                     _prec:
  6436  00BF                     	ds	2
  6437  00C1                     _flags:
  6438  00C1                     	ds	2
  6439  00C3                     _cursor_y:
  6440  00C3                     	ds	2
  6441  00C5                     _cursor_x:
  6442  00C5                     	ds	2
  6443  00C7                     __height:
  6444  00C7                     	ds	2
  6445  00C9                     __width:
  6446  00C9                     	ds	2
  6447  00CB                     _puntaje2:
  6448  00CB                     	ds	1
  6449  00CC                     _puntaje1:
  6450  00CC                     	ds	1
  6451  00CD                     _movimiento_jugador2:
  6452  00CD                     	ds	1
  6453  00CE                     _rotation:
  6454  00CE                     	ds	1
  6455  00CF                     _marcador:
  6456  00CF                     	ds	3
  6457                           
  6458                           	psect	dataBANK1
  6459  00A0                     __pdataBANK1:
  6460  00A0                     _textbgcolor:
  6461  00A0                     	ds	2
  6462  00A2                     _textcolor:
  6463  00A2                     	ds	2
  6464  00A4                     _wrap:
  6465  00A4                     	ds	1
  6466  00A5                     _bolita:
  6467  00A5                     	ds	12
  6468  00B1                     _jugador2:
  6469  00B1                     	ds	10
  6470                           
  6471                           	psect	bssBANK2
  6472  0120                     __pbssBANK2:
  6473  0120                     _dbuf:
  6474  0120                     	ds	32
  6475                           
  6476                           	psect	dataBANK2
  6477  0140                     __pdataBANK2:
  6478  0140                     _jugador1:
  6479  0140                     	ds	10
  6480                           
  6481                           	psect	inittext
  6482  07FA                     init_ram:
  6483  07FA  00FE               	movwf	btemp
  6484  07FB                     initloop:
  6485  07FB  0012               	moviw fsr0++
  6486  07FC  001E               	movwi fsr1++
  6487  07FD  0BFE               	decfsz	btemp,f
  6488  07FE  2FFB               	goto	initloop
  6489  07FF  3400               	retlw	0
  6490                           
  6491                           	psect	clrtext
  6492  0800                     clear_ram0:	
  6493                           ;	Called with FSR0 containing the base address, and
  6494                           ;	WREG with the size to clear
  6495                           
  6496  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  6497  0801                     clrloop0:
  6498  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  6499  0802  3101               	addfsr 0,1
  6500  0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6501  0804  2801               	goto	clrloop0	;have we reached the end yet?
  6502  0805  3400               	retlw	0	;all done for this memory range, return
  6503                           
  6504                           	psect	cstackBANK1
  6505  00D2                     __pcstackBANK1:
  6506  00D2                     	ds	2
  6507  00D4                     sprintf@ap:
  6508                           
  6509                           ; 1 bytes @ 0x2
  6510  00D4                     	ds	1
  6511  00D5                     sprintf@s:
  6512                           
  6513                           ; 1 bytes @ 0x3
  6514  00D5                     	ds	1
  6515  00D6                     sprintf@f:
  6516                           
  6517                           ; 5 bytes @ 0x4
  6518  00D6                     	ds	5
  6519  00DB                     ??_dibujarMarcador:
  6520                           
  6521                           ; 1 bytes @ 0x9
  6522  00DB                     	ds	4
  6523  00DF                     ??_main:
  6524                           
  6525                           ; 1 bytes @ 0xD
  6526  00DF                     	ds	5
  6527                           
  6528                           	psect	cstackCOMMON
  6529  0070                     __pcstackCOMMON:
  6530  0070                     ?_PMD_Initialize:
  6531  0070                     ?_SPI1_Initialize:	
  6532                           ; 1 bytes @ 0x0
  6533                           
  6534  0070                     ?_PIN_MANAGER_Initialize:	
  6535                           ; 1 bytes @ 0x0
  6536                           
  6537  0070                     ?_OSCILLATOR_Initialize:	
  6538                           ; 1 bytes @ 0x0
  6539                           
  6540  0070                     ?_IOCAF1_DefaultInterruptHandler:	
  6541                           ; 1 bytes @ 0x0
  6542                           
  6543  0070                     ??_IOCAF1_DefaultInterruptHandler:	
  6544                           ; 1 bytes @ 0x0
  6545                           
  6546  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  6547                           ; 1 bytes @ 0x0
  6548                           
  6549  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  6550                           ; 1 bytes @ 0x0
  6551                           
  6552  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  6553                           ; 1 bytes @ 0x0
  6554                           
  6555  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  6556                           ; 1 bytes @ 0x0
  6557                           
  6558  0070                     ?_IOCCF5_DefaultInterruptHandler:	
  6559                           ; 1 bytes @ 0x0
  6560                           
  6561  0070                     ??_IOCCF5_DefaultInterruptHandler:	
  6562                           ; 1 bytes @ 0x0
  6563                           
  6564  0070                     ?_IOCAF1_ISR:	
  6565                           ; 1 bytes @ 0x0
  6566                           
  6567  0070                     ??_IOCAF1_ISR:	
  6568                           ; 1 bytes @ 0x0
  6569                           
  6570  0070                     ?_IOCAF2_ISR:	
  6571                           ; 1 bytes @ 0x0
  6572                           
  6573  0070                     ?_IOCBF4_ISR:	
  6574                           ; 1 bytes @ 0x0
  6575                           
  6576  0070                     ??_IOCBF4_ISR:	
  6577                           ; 1 bytes @ 0x0
  6578                           
  6579  0070                     ?_IOCCF5_ISR:	
  6580                           ; 1 bytes @ 0x0
  6581                           
  6582  0070                     ?_ctrl_der:	
  6583                           ; 1 bytes @ 0x0
  6584                           
  6585  0070                     ??_ctrl_der:	
  6586                           ; 1 bytes @ 0x0
  6587                           
  6588  0070                     ?_ctrl_izq:	
  6589                           ; 1 bytes @ 0x0
  6590                           
  6591  0070                     ??_ctrl_izq:	
  6592                           ; 1 bytes @ 0x0
  6593                           
  6594  0070                     ?_ctrl_izq2:	
  6595                           ; 1 bytes @ 0x0
  6596                           
  6597  0070                     ??_ctrl_izq2:	
  6598                           ; 1 bytes @ 0x0
  6599                           
  6600  0070                     ?_ctrl_der2:	
  6601                           ; 1 bytes @ 0x0
  6602                           
  6603  0070                     ??_ctrl_der2:	
  6604                           ; 1 bytes @ 0x0
  6605                           
  6606  0070                     ?_tft_begin:	
  6607                           ; 1 bytes @ 0x0
  6608                           
  6609  0070                     ?_setRotation:	
  6610                           ; 1 bytes @ 0x0
  6611                           
  6612  0070                     ?_display_setTextSize:	
  6613                           ; 1 bytes @ 0x0
  6614                           
  6615  0070                     ?_display_print:	
  6616                           ; 1 bytes @ 0x0
  6617                           
  6618  0070                     ?_putch:	
  6619                           ; 1 bytes @ 0x0
  6620                           
  6621  0070                     ?_SYSTEM_Initialize:	
  6622                           ; 1 bytes @ 0x0
  6623                           
  6624  0070                     ?_PIN_MANAGER_IOC:	
  6625                           ; 1 bytes @ 0x0
  6626                           
  6627  0070                     ?_SPI1_Open:	
  6628                           ; 1 bytes @ 0x0
  6629                           
  6630  0070                     ?_SPI1_ExchangeByte:	
  6631                           ; 1 bytes @ 0x0
  6632                           
  6633  0070                     ?_INTERRUPT_InterruptManager:	
  6634                           ; 1 bytes @ 0x0
  6635                           
  6636  0070                     ?_main:	
  6637                           ; 1 bytes @ 0x0
  6638                           
  6639  0070                     ?_startWrite:	
  6640                           ; 1 bytes @ 0x0
  6641                           
  6642  0070                     ?_endWrite:	
  6643                           ; 1 bytes @ 0x0
  6644                           
  6645  0070                     ?_writeCommand:	
  6646                           ; 1 bytes @ 0x0
  6647                           
  6648  0070                     putch@c:	
  6649                           ; 1 bytes @ 0x0
  6650                           
  6651                           
  6652                           ; 1 bytes @ 0x0
  6653  0070                     	ds	1
  6654  0071                     ??_PMD_Initialize:
  6655  0071                     ??_SPI1_Initialize:	
  6656                           ; 1 bytes @ 0x1
  6657                           
  6658  0071                     ??_OSCILLATOR_Initialize:	
  6659                           ; 1 bytes @ 0x1
  6660                           
  6661  0071                     ?_IOCAF1_SetInterruptHandler:	
  6662                           ; 1 bytes @ 0x1
  6663                           
  6664  0071                     ?_IOCAF2_SetInterruptHandler:	
  6665                           ; 1 bytes @ 0x1
  6666                           
  6667  0071                     ?_IOCBF4_SetInterruptHandler:	
  6668                           ; 1 bytes @ 0x1
  6669                           
  6670  0071                     ?_IOCCF5_SetInterruptHandler:	
  6671                           ; 1 bytes @ 0x1
  6672                           
  6673  0071                     ??_IOCAF2_ISR:	
  6674                           ; 1 bytes @ 0x1
  6675                           
  6676  0071                     ??_IOCCF5_ISR:	
  6677                           ; 1 bytes @ 0x1
  6678                           
  6679  0071                     ?_display_setCursor:	
  6680                           ; 1 bytes @ 0x1
  6681                           
  6682  0071                     ??_display_setTextSize:	
  6683                           ; 1 bytes @ 0x1
  6684                           
  6685  0071                     ?_display_setTextColor:	
  6686                           ; 1 bytes @ 0x1
  6687                           
  6688  0071                     ?_display_setTextColor2:	
  6689                           ; 1 bytes @ 0x1
  6690                           
  6691  0071                     ??_putch:	
  6692                           ; 1 bytes @ 0x1
  6693                           
  6694  0071                     ??_PIN_MANAGER_IOC:	
  6695                           ; 1 bytes @ 0x1
  6696                           
  6697  0071                     ??_SPI1_Open:	
  6698                           ; 1 bytes @ 0x1
  6699                           
  6700  0071                     ??_SPI1_ExchangeByte:	
  6701                           ; 1 bytes @ 0x1
  6702                           
  6703  0071                     ??_INTERRUPT_InterruptManager:	
  6704                           ; 1 bytes @ 0x1
  6705                           
  6706  0071                     ??_startWrite:	
  6707                           ; 1 bytes @ 0x1
  6708                           
  6709  0071                     ??_endWrite:	
  6710                           ; 1 bytes @ 0x1
  6711                           
  6712  0071                     ?___bmul:	
  6713                           ; 1 bytes @ 0x1
  6714                           
  6715  0071                     ??___aodiv:	
  6716                           ; 1 bytes @ 0x1
  6717                           
  6718  0071                     ??___aomod:	
  6719                           ; 1 bytes @ 0x1
  6720                           
  6721  0071                     ?_fputc:	
  6722                           ; 1 bytes @ 0x1
  6723                           
  6724  0071                     ?_strlen:	
  6725                           ; 2 bytes @ 0x1
  6726                           
  6727  0071                     ?___wmul:	
  6728                           ; 2 bytes @ 0x1
  6729                           
  6730  0071                     ?___lmul:	
  6731                           ; 2 bytes @ 0x1
  6732                           
  6733  0071                     SPI1_ExchangeByte@data:	
  6734                           ; 4 bytes @ 0x1
  6735                           
  6736  0071                     ___bmul@multiplicand:	
  6737                           ; 1 bytes @ 0x1
  6738                           
  6739  0071                     IOCAF1_SetInterruptHandler@InterruptHandler:	
  6740                           ; 1 bytes @ 0x1
  6741                           
  6742  0071                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  6743                           ; 2 bytes @ 0x1
  6744                           
  6745  0071                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  6746                           ; 2 bytes @ 0x1
  6747                           
  6748  0071                     IOCCF5_SetInterruptHandler@InterruptHandler:	
  6749                           ; 2 bytes @ 0x1
  6750                           
  6751  0071                     display_setCursor@x:	
  6752                           ; 2 bytes @ 0x1
  6753                           
  6754  0071                     display_setTextColor@c:	
  6755                           ; 2 bytes @ 0x1
  6756                           
  6757  0071                     display_setTextColor2@c:	
  6758                           ; 2 bytes @ 0x1
  6759                           
  6760  0071                     ___wmul@multiplier:	
  6761                           ; 2 bytes @ 0x1
  6762                           
  6763  0071                     fputc@c:	
  6764                           ; 2 bytes @ 0x1
  6765                           
  6766  0071                     ___lmul@multiplier:	
  6767                           ; 2 bytes @ 0x1
  6768                           
  6769                           
  6770                           ; 4 bytes @ 0x1
  6771  0071                     	ds	1
  6772  0072                     ??_writeCommand:
  6773  0072                     ??___bmul:	
  6774                           ; 1 bytes @ 0x2
  6775                           
  6776  0072                     writeCommand@cmd:	
  6777                           ; 1 bytes @ 0x2
  6778                           
  6779  0072                     ___aodiv@counter:	
  6780                           ; 1 bytes @ 0x2
  6781                           
  6782  0072                     ___aomod@counter:	
  6783                           ; 1 bytes @ 0x2
  6784                           
  6785                           
  6786                           ; 1 bytes @ 0x2
  6787  0072                     	ds	1
  6788  0073                     ??_PIN_MANAGER_Initialize:
  6789  0073                     ??_IOCAF1_SetInterruptHandler:	
  6790                           ; 1 bytes @ 0x3
  6791                           
  6792  0073                     ??_IOCAF2_SetInterruptHandler:	
  6793                           ; 1 bytes @ 0x3
  6794                           
  6795  0073                     ??_IOCBF4_SetInterruptHandler:	
  6796                           ; 1 bytes @ 0x3
  6797                           
  6798  0073                     ??_IOCCF5_SetInterruptHandler:	
  6799                           ; 1 bytes @ 0x3
  6800                           
  6801  0073                     ??_tft_begin:	
  6802                           ; 1 bytes @ 0x3
  6803                           
  6804  0073                     ??_setRotation:	
  6805                           ; 1 bytes @ 0x3
  6806                           
  6807  0073                     ??_display_setTextColor2:	
  6808                           ; 1 bytes @ 0x3
  6809                           
  6810  0073                     ??_strlen:	
  6811                           ; 1 bytes @ 0x3
  6812                           
  6813  0073                     ??_SYSTEM_Initialize:	
  6814                           ; 1 bytes @ 0x3
  6815                           
  6816  0073                     ?_setAddrWindow:	
  6817                           ; 1 bytes @ 0x3
  6818                           
  6819  0073                     ___bmul@product:	
  6820                           ; 1 bytes @ 0x3
  6821                           
  6822  0073                     ___aodiv@sign:	
  6823                           ; 1 bytes @ 0x3
  6824                           
  6825  0073                     ___aomod@sign:	
  6826                           ; 1 bytes @ 0x3
  6827                           
  6828  0073                     fputc@fp:	
  6829                           ; 1 bytes @ 0x3
  6830                           
  6831  0073                     display_setCursor@y:	
  6832                           ; 1 bytes @ 0x3
  6833                           
  6834  0073                     _display_setTextSize$1270:	
  6835                           ; 2 bytes @ 0x3
  6836                           
  6837  0073                     display_setTextColor@bg:	
  6838                           ; 2 bytes @ 0x3
  6839                           
  6840  0073                     setAddrWindow@x1:	
  6841                           ; 2 bytes @ 0x3
  6842                           
  6843  0073                     ___wmul@multiplicand:	
  6844                           ; 2 bytes @ 0x3
  6845                           
  6846                           
  6847                           ; 2 bytes @ 0x3
  6848  0073                     	ds	1
  6849  0074                     ??_fputc:
  6850  0074                     ?_abs:	
  6851                           ; 1 bytes @ 0x4
  6852                           
  6853  0074                     SPI1_Open@spi1UniqueConfiguration:	
  6854                           ; 2 bytes @ 0x4
  6855                           
  6856  0074                     ___bmul@multiplier:	
  6857                           ; 1 bytes @ 0x4
  6858                           
  6859  0074                     strlen@a:	
  6860                           ; 1 bytes @ 0x4
  6861                           
  6862  0074                     abs@a:	
  6863                           ; 1 bytes @ 0x4
  6864                           
  6865  0074                     ___aodiv@quotient:	
  6866                           ; 2 bytes @ 0x4
  6867                           
  6868                           
  6869                           ; 8 bytes @ 0x4
  6870  0074                     	ds	1
  6871  0075                     ??_display_setCursor:
  6872  0075                     ??_display_setTextColor:	
  6873                           ; 1 bytes @ 0x5
  6874                           
  6875  0075                     ??___wmul:	
  6876                           ; 1 bytes @ 0x5
  6877                           
  6878  0075                     display_setTextSize@s:	
  6879                           ; 1 bytes @ 0x5
  6880                           
  6881  0075                     tft_begin@numArgs:	
  6882                           ; 1 bytes @ 0x5
  6883                           
  6884  0075                     setRotation@m:	
  6885                           ; 1 bytes @ 0x5
  6886                           
  6887  0075                     strlen@s:	
  6888                           ; 1 bytes @ 0x5
  6889                           
  6890  0075                     setAddrWindow@y1:	
  6891                           ; 1 bytes @ 0x5
  6892                           
  6893  0075                     ___wmul@product:	
  6894                           ; 2 bytes @ 0x5
  6895                           
  6896  0075                     ___lmul@multiplicand:	
  6897                           ; 2 bytes @ 0x5
  6898                           
  6899                           
  6900                           ; 4 bytes @ 0x5
  6901  0075                     	ds	1
  6902  0076                     ??_abs:
  6903  0076                     tft_begin@x:	
  6904                           ; 1 bytes @ 0x6
  6905                           
  6906                           
  6907                           ; 1 bytes @ 0x6
  6908  0076                     	ds	1
  6909  0077                     tft_begin@cmd:
  6910  0077                     setAddrWindow@w:	
  6911                           ; 1 bytes @ 0x7
  6912                           
  6913                           
  6914                           ; 2 bytes @ 0x7
  6915  0077                     	ds	1
  6916  0078                     tft_begin@addr:
  6917                           
  6918                           ; 2 bytes @ 0x8
  6919  0078                     	ds	1
  6920  0079                     ??___lmul:
  6921  0079                     ?_fputs:	
  6922                           ; 1 bytes @ 0x9
  6923                           
  6924  0079                     fputs@fp:	
  6925                           ; 2 bytes @ 0x9
  6926                           
  6927  0079                     setAddrWindow@h:	
  6928                           ; 1 bytes @ 0x9
  6929                           
  6930                           
  6931                           ; 2 bytes @ 0x9
  6932  0079                     	ds	1
  6933  007A                     ??_pad:
  6934                           
  6935                           ; 1 bytes @ 0xA
  6936  007A                     	ds	1
  6937  007B                     ??_fillScreen:
  6938  007B                     ??_display_drawCustomChar:	
  6939                           ; 1 bytes @ 0xB
  6940                           
  6941  007B                     ??_drawPixel:	
  6942                           ; 1 bytes @ 0xB
  6943                           
  6944  007B                     disp_texto@i:	
  6945                           ; 1 bytes @ 0xB
  6946                           
  6947                           
  6948                           ; 1 bytes @ 0xB
  6949  007B                     	ds	1
  6950                           
  6951                           	psect	cstackBANK0
  6952  0020                     __pcstackBANK0:
  6953  0020                     ??_fputs:
  6954  0020                     ??_setAddrWindow:	
  6955                           ; 1 bytes @ 0x0
  6956                           
  6957  0020                     ?___aodiv:	
  6958                           ; 1 bytes @ 0x0
  6959                           
  6960  0020                     ?___aomod:	
  6961                           ; 8 bytes @ 0x0
  6962                           
  6963  0020                     ___lmul@product:	
  6964                           ; 8 bytes @ 0x0
  6965                           
  6966  0020                     ___aodiv@divisor:	
  6967                           ; 4 bytes @ 0x0
  6968                           
  6969  0020                     ___aomod@divisor:	
  6970                           ; 8 bytes @ 0x0
  6971                           
  6972                           
  6973                           ; 8 bytes @ 0x0
  6974  0020                     	ds	2
  6975  0022                     setAddrWindow@x2:
  6976                           
  6977                           ; 2 bytes @ 0x2
  6978  0022                     	ds	1
  6979  0023                     fputs@c:
  6980                           
  6981                           ; 1 bytes @ 0x3
  6982  0023                     	ds	1
  6983  0024                     setAddrWindow@y2:
  6984  0024                     fputs@i:	
  6985                           ; 2 bytes @ 0x4
  6986                           
  6987                           
  6988                           ; 2 bytes @ 0x4
  6989  0024                     	ds	2
  6990  0026                     ?_drawVLine:
  6991  0026                     ?_fillRect:	
  6992                           ; 1 bytes @ 0x6
  6993                           
  6994  0026                     ?_drawPixel:	
  6995                           ; 1 bytes @ 0x6
  6996                           
  6997  0026                     fputs@s:	
  6998                           ; 1 bytes @ 0x6
  6999                           
  7000  0026                     drawPixel@x:	
  7001                           ; 1 bytes @ 0x6
  7002                           
  7003  0026                     drawVLine@x:	
  7004                           ; 2 bytes @ 0x6
  7005                           
  7006  0026                     fillRect@x:	
  7007                           ; 2 bytes @ 0x6
  7008                           
  7009                           
  7010                           ; 2 bytes @ 0x6
  7011  0026                     	ds	1
  7012  0027                     ?_pad:
  7013  0027                     pad@buf:	
  7014                           ; 2 bytes @ 0x7
  7015                           
  7016                           
  7017                           ; 1 bytes @ 0x7
  7018  0027                     	ds	1
  7019  0028                     drawPixel@y:
  7020  0028                     drawVLine@y:	
  7021                           ; 2 bytes @ 0x8
  7022                           
  7023  0028                     fillRect@y:	
  7024                           ; 2 bytes @ 0x8
  7025                           
  7026  0028                     pad@p:	
  7027                           ; 2 bytes @ 0x8
  7028                           
  7029  0028                     ___aodiv@dividend:	
  7030                           ; 2 bytes @ 0x8
  7031                           
  7032  0028                     ___aomod@dividend:	
  7033                           ; 8 bytes @ 0x8
  7034                           
  7035                           
  7036                           ; 8 bytes @ 0x8
  7037  0028                     	ds	2
  7038  002A                     drawPixel@color:
  7039  002A                     drawVLine@h:	
  7040                           ; 2 bytes @ 0xA
  7041                           
  7042  002A                     fillRect@w:	
  7043                           ; 2 bytes @ 0xA
  7044                           
  7045  002A                     pad@i:	
  7046                           ; 2 bytes @ 0xA
  7047                           
  7048                           
  7049                           ; 2 bytes @ 0xA
  7050  002A                     	ds	2
  7051  002C                     drawVLine@color:
  7052  002C                     fillRect@h:	
  7053                           ; 2 bytes @ 0xC
  7054                           
  7055  002C                     pad@w:	
  7056                           ; 2 bytes @ 0xC
  7057                           
  7058                           
  7059                           ; 2 bytes @ 0xC
  7060  002C                     	ds	2
  7061  002E                     ??_drawVLine:
  7062  002E                     pad@fp:	
  7063                           ; 1 bytes @ 0xE
  7064                           
  7065  002E                     fillRect@color:	
  7066                           ; 1 bytes @ 0xE
  7067                           
  7068                           
  7069                           ; 2 bytes @ 0xE
  7070  002E                     	ds	2
  7071  0030                     ??_fillRect:
  7072  0030                     ?_dtoa:	
  7073                           ; 1 bytes @ 0x10
  7074                           
  7075  0030                     dtoa@d:	
  7076                           ; 2 bytes @ 0x10
  7077                           
  7078                           
  7079                           ; 8 bytes @ 0x10
  7080  0030                     	ds	2
  7081  0032                     drawVLine@hi:
  7082                           
  7083                           ; 1 bytes @ 0x12
  7084  0032                     	ds	1
  7085  0033                     drawVLine@lo:
  7086                           
  7087                           ; 1 bytes @ 0x13
  7088  0033                     	ds	1
  7089  0034                     fillRect@px:
  7090                           
  7091                           ; 4 bytes @ 0x14
  7092  0034                     	ds	4
  7093  0038                     ??_dtoa:
  7094  0038                     fillRect@hi:	
  7095                           ; 1 bytes @ 0x18
  7096                           
  7097                           
  7098                           ; 1 bytes @ 0x18
  7099  0038                     	ds	1
  7100  0039                     fillRect@lo:
  7101                           
  7102                           ; 1 bytes @ 0x19
  7103  0039                     	ds	1
  7104  003A                     ?_fillScreen:
  7105  003A                     ??_display_print:	
  7106                           ; 1 bytes @ 0x1A
  7107                           
  7108  003A                     ?_display_customChar:	
  7109                           ; 1 bytes @ 0x1A
  7110                           
  7111  003A                     display_customChar@c:	
  7112                           ; 1 bytes @ 0x1A
  7113                           
  7114  003A                     fillScreen@color:	
  7115                           ; 2 bytes @ 0x1A
  7116                           
  7117                           
  7118                           ; 2 bytes @ 0x1A
  7119  003A                     	ds	1
  7120  003B                     dtoa@fp:
  7121                           
  7122                           ; 1 bytes @ 0x1B
  7123  003B                     	ds	1
  7124  003C                     ??_display_customChar:
  7125  003C                     _dtoa$1971:	
  7126                           ; 1 bytes @ 0x1C
  7127                           
  7128                           
  7129                           ; 2 bytes @ 0x1C
  7130  003C                     	ds	2
  7131  003E                     dtoa@p:
  7132                           
  7133                           ; 2 bytes @ 0x1E
  7134  003E                     	ds	2
  7135  0040                     dtoa@w:
  7136                           
  7137                           ; 2 bytes @ 0x20
  7138  0040                     	ds	2
  7139  0042                     dtoa@s:
  7140                           
  7141                           ; 2 bytes @ 0x22
  7142  0042                     	ds	2
  7143  0044                     dtoa@n:
  7144                           
  7145                           ; 8 bytes @ 0x24
  7146  0044                     	ds	2
  7147  0046                     display_print@line:
  7148                           
  7149                           ; 1 bytes @ 0x26
  7150  0046                     	ds	1
  7151  0047                     display_print@c:
  7152                           
  7153                           ; 1 bytes @ 0x27
  7154  0047                     	ds	1
  7155  0048                     display_print@j:
  7156  0048                     display_customChar@line:	
  7157                           ; 1 bytes @ 0x28
  7158                           
  7159                           
  7160                           ; 1 bytes @ 0x28
  7161  0048                     	ds	1
  7162  0049                     display_print@i:
  7163  0049                     display_customChar@j:	
  7164                           ; 1 bytes @ 0x29
  7165                           
  7166                           
  7167                           ; 1 bytes @ 0x29
  7168  0049                     	ds	1
  7169  004A                     ?_disp_texto:
  7170  004A                     display_customChar@i:	
  7171                           ; 1 bytes @ 0x2A
  7172                           
  7173  004A                     disp_texto@cadena:	
  7174                           ; 1 bytes @ 0x2A
  7175                           
  7176                           
  7177                           ; 2 bytes @ 0x2A
  7178  004A                     	ds	1
  7179  004B                     ?_display_drawCustomChar:
  7180  004B                     display_drawCustomChar@x:	
  7181                           ; 1 bytes @ 0x2B
  7182                           
  7183                           
  7184                           ; 2 bytes @ 0x2B
  7185  004B                     	ds	1
  7186  004C                     ??_disp_texto:
  7187  004C                     dtoa@i:	
  7188                           ; 1 bytes @ 0x2C
  7189                           
  7190                           
  7191                           ; 2 bytes @ 0x2C
  7192  004C                     	ds	1
  7193  004D                     display_drawCustomChar@y:
  7194                           
  7195                           ; 2 bytes @ 0x2D
  7196  004D                     	ds	1
  7197  004E                     ?_vfpfcnvrt:
  7198  004E                     vfpfcnvrt@fmt:	
  7199                           ; 2 bytes @ 0x2E
  7200                           
  7201                           
  7202                           ; 1 bytes @ 0x2E
  7203  004E                     	ds	1
  7204  004F                     vfpfcnvrt@ap:
  7205  004F                     display_drawCustomChar@c:	
  7206                           ; 1 bytes @ 0x2F
  7207                           
  7208                           
  7209                           ; 2 bytes @ 0x2F
  7210  004F                     	ds	1
  7211  0050                     ??_vfpfcnvrt:
  7212                           
  7213                           ; 1 bytes @ 0x30
  7214  0050                     	ds	1
  7215  0051                     display_drawCustomChar@color:
  7216                           
  7217                           ; 2 bytes @ 0x31
  7218  0051                     	ds	2
  7219  0053                     display_drawCustomChar@bg:
  7220                           
  7221                           ; 2 bytes @ 0x33
  7222  0053                     	ds	2
  7223  0055                     display_drawCustomChar@size:
  7224  0055                     vfpfcnvrt@ll:	
  7225                           ; 1 bytes @ 0x35
  7226                           
  7227                           
  7228                           ; 8 bytes @ 0x35
  7229  0055                     	ds	1
  7230  0056                     display_drawCustomChar@prev_x:
  7231                           
  7232                           ; 2 bytes @ 0x36
  7233  0056                     	ds	2
  7234  0058                     display_drawCustomChar@prev_y:
  7235                           
  7236                           ; 2 bytes @ 0x38
  7237  0058                     	ds	2
  7238  005A                     display_drawCustomChar@prev_color:
  7239                           
  7240                           ; 2 bytes @ 0x3A
  7241  005A                     	ds	2
  7242  005C                     display_drawCustomChar@prev_bg:
  7243                           
  7244                           ; 2 bytes @ 0x3C
  7245  005C                     	ds	1
  7246  005D                     vfpfcnvrt@fp:
  7247                           
  7248                           ; 1 bytes @ 0x3D
  7249  005D                     	ds	1
  7250  005E                     ?_vfprintf:
  7251  005E                     display_drawCustomChar@prev_size:	
  7252                           ; 2 bytes @ 0x3E
  7253                           
  7254  005E                     vfprintf@fmt:	
  7255                           ; 1 bytes @ 0x3E
  7256                           
  7257                           
  7258                           ; 2 bytes @ 0x3E
  7259  005E                     	ds	1
  7260  005F                     ?_moverJugador:
  7261  005F                     moverJugador@jugador:	
  7262                           ; 1 bytes @ 0x3F
  7263                           
  7264                           
  7265                           ; 2 bytes @ 0x3F
  7266  005F                     	ds	1
  7267  0060                     vfprintf@ap:
  7268                           
  7269                           ; 1 bytes @ 0x40
  7270  0060                     	ds	1
  7271  0061                     ??_moverJugador:
  7272  0061                     ??_vfprintf:	
  7273                           ; 1 bytes @ 0x41
  7274                           
  7275                           
  7276                           ; 1 bytes @ 0x41
  7277  0061                     	ds	2
  7278  0063                     vfprintf@fp:
  7279                           
  7280                           ; 1 bytes @ 0x43
  7281  0063                     	ds	1
  7282  0064                     vfprintf@cfmt:
  7283                           
  7284                           ; 2 bytes @ 0x44
  7285  0064                     	ds	2
  7286  0066                     ?_sprintf:
  7287  0066                     moverJugador@y:	
  7288                           ; 2 bytes @ 0x46
  7289                           
  7290  0066                     sprintf@fmt:	
  7291                           ; 1 bytes @ 0x46
  7292                           
  7293                           
  7294                           ; 2 bytes @ 0x46
  7295  0066                     	ds	6
  7296  006C                     ??_sprintf:
  7297                           
  7298                           ; 1 bytes @ 0x4C
  7299  006C                     	ds	1
  7300  006D                     ?_dibujarMarcador:
  7301  006D                     dibujarMarcador@puntaje2:	
  7302                           ; 1 bytes @ 0x4D
  7303                           
  7304                           
  7305                           ; 1 bytes @ 0x4D
  7306  006D                     	ds	1
  7307  006E                     dibujarMarcador@puntaje1:
  7308                           
  7309                           ; 1 bytes @ 0x4E
  7310  006E                     	ds	1
  7311                           
  7312                           	psect	maintext
  7313  0BBA                     __pmaintext:	
  7314 ;;
  7315 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  7316 ;;
  7317 ;; *************** function _main *****************
  7318 ;; Defined at:
  7319 ;;		line 91 in file "main.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : B1F/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;Total ram usage:        5 bytes
  7338 ;; Hardware stack levels required when called:   13
  7339 ;; This function calls:
  7340 ;;		_IOCAF1_SetInterruptHandler
  7341 ;;		_IOCAF2_SetInterruptHandler
  7342 ;;		_IOCBF4_SetInterruptHandler
  7343 ;;		_IOCCF5_SetInterruptHandler
  7344 ;;		_SPI1_Open
  7345 ;;		_SYSTEM_Initialize
  7346 ;;		_dibujarMarcador
  7347 ;;		_display_drawCustomChar
  7348 ;;		_fillScreen
  7349 ;;		_moverJugador
  7350 ;;		_tft_begin
  7351 ;; This function is called by:
  7352 ;;		Startup code after reset
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _main
  7358  0BBA                     _main:
  7359  0BBA                     l5939:	
  7360                           ;incstack = 0
  7361                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7362                           
  7363                           
  7364                           ;main.c: 92:     PORTAbits.RA0=0;
  7365  0BBA  0020               	movlb	0	; select bank0
  7366  0BBB  100C               	bcf	12,0	;volatile
  7367  0BBC                     l5941:
  7368                           
  7369                           ;main.c: 94:     SYSTEM_Initialize();
  7370  0BBC  319F  27C8  318B   	fcall	_SYSTEM_Initialize
  7371  0BBF                     l5943:
  7372                           
  7373                           ;main.c: 95:     SPI1_Open(SPI1_DEFAULT);
  7374  0BBF  3000               	movlw	0
  7375  0BC0  3192  225C  318B   	fcall	_SPI1_Open
  7376  0BC3                     l5945:
  7377                           
  7378                           ;main.c: 98:     (INTCONbits.GIE = 1);
  7379  0BC3  178B               	bsf	11,7	;volatile
  7380  0BC4                     l5947:
  7381                           
  7382                           ;main.c: 100:     (INTCONbits.PEIE = 1);
  7383  0BC4  170B               	bsf	11,6	;volatile
  7384  0BC5                     l5949:
  7385                           
  7386                           ;main.c: 102:     IOCCF5_SetInterruptHandler(ctrl_der);
  7387  0BC5  306C               	movlw	low _ctrl_der
  7388  0BC6  00F1               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler
  7389  0BC7  301F               	movlw	high _ctrl_der
  7390  0BC8  00F2               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler+1
  7391  0BC9  319F  2789  318B   	fcall	_IOCCF5_SetInterruptHandler
  7392  0BCC                     l5951:
  7393                           
  7394                           ;main.c: 103:     IOCBF4_SetInterruptHandler(ctrl_izq);
  7395  0BCC  305E               	movlw	low _ctrl_izq
  7396  0BCD  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  7397  0BCE  301F               	movlw	high _ctrl_izq
  7398  0BCF  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  7399  0BD0  319F  2783  318B   	fcall	_IOCBF4_SetInterruptHandler
  7400  0BD3                     l5953:
  7401                           
  7402                           ;main.c: 105:     IOCAF1_SetInterruptHandler(ctrl_izq2);
  7403  0BD3  3064               	movlw	low _ctrl_izq2
  7404  0BD4  00F1               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler
  7405  0BD5  301F               	movlw	high _ctrl_izq2
  7406  0BD6  00F2               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler+1
  7407  0BD7  319F  2777  318B   	fcall	_IOCAF1_SetInterruptHandler
  7408  0BDA                     l5955:
  7409                           
  7410                           ;main.c: 106:     IOCAF2_SetInterruptHandler(ctrl_der2);
  7411  0BDA  3071               	movlw	low _ctrl_der2
  7412  0BDB  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  7413  0BDC  301F               	movlw	high _ctrl_der2
  7414  0BDD  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  7415  0BDE  319F  277D  318B   	fcall	_IOCAF2_SetInterruptHandler
  7416  0BE1                     l5957:
  7417                           
  7418                           ;main.c: 109:     tft_begin();
  7419  0BE1  3195  2525  318B   	fcall	_tft_begin
  7420                           
  7421                           ;main.c: 112:     fillScreen(0x0000);
  7422  0BE4  3000               	movlw	0
  7423  0BE5  0020               	movlb	0	; select bank0
  7424  0BE6  00BA               	movwf	fillScreen@color
  7425  0BE7  00BB               	movwf	fillScreen@color+1
  7426  0BE8  3190  20D9  318B   	fcall	_fillScreen
  7427  0BEB                     l5959:
  7428                           
  7429                           ;main.c: 114:     display_drawCustomChar(0, 0, jugador1.forma, 0x07E0, 0x0000,jugador1.e
      +                          scala);
  7430  0BEB  3000               	movlw	0
  7431  0BEC  0020               	movlb	0	; select bank0
  7432  0BED  00CB               	movwf	display_drawCustomChar@x
  7433  0BEE  00CC               	movwf	display_drawCustomChar@x+1
  7434  0BEF  3000               	movlw	0
  7435  0BF0  00CD               	movwf	display_drawCustomChar@y
  7436  0BF1  00CE               	movwf	display_drawCustomChar@y+1
  7437  0BF2  3044               	movlw	low (_jugador1+4)
  7438  0BF3  00CF               	movwf	display_drawCustomChar@c
  7439  0BF4  3001               	movlw	high (_jugador1+4)
  7440  0BF5  00D0               	movwf	display_drawCustomChar@c+1
  7441  0BF6  30E0               	movlw	224
  7442  0BF7  00D1               	movwf	display_drawCustomChar@color
  7443  0BF8  3007               	movlw	7
  7444  0BF9  00D2               	movwf	display_drawCustomChar@color+1
  7445  0BFA  3000               	movlw	0
  7446  0BFB  00D3               	movwf	display_drawCustomChar@bg
  7447  0BFC  00D4               	movwf	display_drawCustomChar@bg+1
  7448  0BFD  0022               	movlb	2	; select bank2
  7449  0BFE  0842               	movf	(_jugador1^(0+256)+2),w
  7450  0BFF  0021               	movlb	1	; select bank1
  7451  0C00  00DF               	movwf	??_main^(0+128)
  7452  0C01  085F               	movf	??_main^(0+128),w
  7453  0C02  0020               	movlb	0	; select bank0
  7454  0C03  00D5               	movwf	display_drawCustomChar@size
  7455  0C04  3193  23C6  318B   	fcall	_display_drawCustomChar
  7456  0C07                     l5961:
  7457                           
  7458                           ;main.c: 115:     display_drawCustomChar(0, 320 -(jugador2.escala * 8), jugador2.forma, 
      +                          0x07E0, 0x0000,jugador2.escala);
  7459  0C07  3000               	movlw	0
  7460  0C08  0020               	movlb	0	; select bank0
  7461  0C09  00CB               	movwf	display_drawCustomChar@x
  7462  0C0A  00CC               	movwf	display_drawCustomChar@x+1
  7463  0C0B  0021               	movlb	1	; select bank1
  7464  0C0C  0833               	movf	(_jugador2^(0+128)+2),w
  7465  0C0D  00DF               	movwf	??_main^(0+128)
  7466  0C0E  01E0               	clrf	(??_main^(0+128)+1)
  7467  0C0F  35DF               	lslf	??_main^(0+128),f
  7468  0C10  0DE0               	rlf	(??_main^(0+128)+1),f
  7469  0C11  35DF               	lslf	??_main^(0+128),f
  7470  0C12  0DE0               	rlf	(??_main^(0+128)+1),f
  7471  0C13  35DF               	lslf	??_main^(0+128),f
  7472  0C14  0DE0               	rlf	(??_main^(0+128)+1),f
  7473  0C15  3040               	movlw	64
  7474  0C16  00E1               	movwf	(??_main+2)^(0+128)
  7475  0C17  3001               	movlw	1
  7476  0C18  00E2               	movwf	((??_main+2)^(0+128)+1)
  7477  0C19  085F               	movf	??_main^(0+128),w
  7478  0C1A  0261               	subwf	(??_main+2)^(0+128),w
  7479  0C1B  0020               	movlb	0	; select bank0
  7480  0C1C  00CD               	movwf	display_drawCustomChar@y
  7481  0C1D  0021               	movlb	1	; select bank1
  7482  0C1E  0860               	movf	(??_main+1)^(0+128),w
  7483  0C1F  3B62               	subwfb	(??_main+3)^(0+128),w
  7484  0C20  0020               	movlb	0	; select bank0
  7485  0C21  00CE               	movwf	display_drawCustomChar@y+1
  7486  0C22  30B5               	movlw	low (_jugador2+4)
  7487  0C23  00CF               	movwf	display_drawCustomChar@c
  7488  0C24  3000               	movlw	high (_jugador2+4)
  7489  0C25  00D0               	movwf	display_drawCustomChar@c+1
  7490  0C26  30E0               	movlw	224
  7491  0C27  00D1               	movwf	display_drawCustomChar@color
  7492  0C28  3007               	movlw	7
  7493  0C29  00D2               	movwf	display_drawCustomChar@color+1
  7494  0C2A  3000               	movlw	0
  7495  0C2B  00D3               	movwf	display_drawCustomChar@bg
  7496  0C2C  00D4               	movwf	display_drawCustomChar@bg+1
  7497  0C2D  0021               	movlb	1	; select bank1
  7498  0C2E  0833               	movf	(_jugador2^(0+128)+2),w
  7499  0C2F  00E3               	movwf	(??_main+4)^(0+128)
  7500  0C30  0863               	movf	(??_main+4)^(0+128),w
  7501  0C31  0020               	movlb	0	; select bank0
  7502  0C32  00D5               	movwf	display_drawCustomChar@size
  7503  0C33  3193  23C6  318B   	fcall	_display_drawCustomChar
  7504  0C36                     l5963:
  7505                           
  7506                           ;main.c: 117:     display_drawCustomChar(bolita.posicionx,bolita.posiciony,bolita.forma,
      +                          0xFFFF, 0x0000,bolita.escala);
  7507  0C36  0021               	movlb	1	; select bank1
  7508  0C37  082E               	movf	(_bolita^(0+128)+9),w
  7509  0C38  00DF               	movwf	??_main^(0+128)
  7510  0C39  01E0               	clrf	(??_main^(0+128)+1)
  7511  0C3A  085F               	movf	??_main^(0+128),w
  7512  0C3B  0020               	movlb	0	; select bank0
  7513  0C3C  00CB               	movwf	display_drawCustomChar@x
  7514  0C3D  0021               	movlb	1	; select bank1
  7515  0C3E  0860               	movf	(??_main+1)^(0+128),w
  7516  0C3F  0020               	movlb	0	; select bank0
  7517  0C40  00CC               	movwf	display_drawCustomChar@x+1
  7518  0C41  0021               	movlb	1	; select bank1
  7519  0C42  0830               	movf	((_bolita+1)^(0+128)+10),w
  7520  0C43  0020               	movlb	0	; select bank0
  7521  0C44  00CE               	movwf	display_drawCustomChar@y+1
  7522  0C45  0021               	movlb	1	; select bank1
  7523  0C46  082F               	movf	(_bolita^(0+128)+10),w
  7524  0C47  0020               	movlb	0	; select bank0
  7525  0C48  00CD               	movwf	display_drawCustomChar@y
  7526  0C49  30A9               	movlw	low (_bolita+4)
  7527  0C4A  00CF               	movwf	display_drawCustomChar@c
  7528  0C4B  3000               	movlw	high (_bolita+4)
  7529  0C4C  00D0               	movwf	display_drawCustomChar@c+1
  7530  0C4D  30FF               	movlw	255
  7531  0C4E  00D1               	movwf	display_drawCustomChar@color
  7532  0C4F  30FF               	movlw	255
  7533  0C50  00D2               	movwf	display_drawCustomChar@color+1
  7534  0C51  3000               	movlw	0
  7535  0C52  00D3               	movwf	display_drawCustomChar@bg
  7536  0C53  00D4               	movwf	display_drawCustomChar@bg+1
  7537  0C54  0021               	movlb	1	; select bank1
  7538  0C55  0828               	movf	(_bolita^(0+128)+3),w
  7539  0C56  00E1               	movwf	(??_main+2)^(0+128)
  7540  0C57  0861               	movf	(??_main+2)^(0+128),w
  7541  0C58  0020               	movlb	0	; select bank0
  7542  0C59  00D5               	movwf	display_drawCustomChar@size
  7543  0C5A  3193  23C6  318B   	fcall	_display_drawCustomChar
  7544  0C5D                     l5965:
  7545                           
  7546                           ;main.c: 118:     dibujarMarcador(0,0);
  7547  0C5D  0020               	movlb	0	; select bank0
  7548  0C5E  01ED               	clrf	dibujarMarcador@puntaje2
  7549  0C5F  3000               	movlw	0
  7550  0C60  3193  235B  318B   	fcall	_dibujarMarcador
  7551  0C63                     l5967:
  7552                           
  7553                           ;main.c: 121:         if (movimiento_jugador1 == izquierda) {
  7554  0C63  037C               	decf	_movimiento_jugador1,w
  7555  0C64  1D03               	btfss	3,2
  7556  0C65  2C67               	goto	u6111
  7557  0C66  2C68               	goto	u6110
  7558  0C67                     u6111:
  7559  0C67  2C6B               	goto	l5971
  7560  0C68                     u6110:
  7561  0C68                     l5969:
  7562                           
  7563                           ;main.c: 122:             jugador1.sentido=0;
  7564  0C68  0022               	movlb	2	; select bank2
  7565  0C69  01C0               	clrf	_jugador1^(0+256)
  7566                           
  7567                           ;main.c: 123:         } else if (movimiento_jugador1 == derecha) {
  7568  0C6A  2C74               	goto	l5975
  7569  0C6B                     l5971:
  7570  0C6B  3002               	movlw	2
  7571  0C6C  067C               	xorwf	_movimiento_jugador1,w
  7572  0C6D  1D03               	btfss	3,2
  7573  0C6E  2C70               	goto	u6121
  7574  0C6F  2C71               	goto	u6120
  7575  0C70                     u6121:
  7576  0C70  2C74               	goto	l5975
  7577  0C71                     u6120:
  7578  0C71                     l5973:
  7579                           
  7580                           ;main.c: 124:             jugador1.sentido=1;
  7581  0C71  0022               	movlb	2	; select bank2
  7582  0C72  01C0               	clrf	_jugador1^(0+256)
  7583  0C73  0AC0               	incf	_jugador1^(0+256),f
  7584  0C74                     l5975:
  7585                           
  7586                           ;main.c: 126:         if (movimiento_jugador2 == izquierda) {
  7587  0C74  0021               	movlb	1	; select bank1
  7588  0C75  034D               	decf	_movimiento_jugador2^(0+128),w
  7589  0C76  1D03               	btfss	3,2
  7590  0C77  2C79               	goto	u6131
  7591  0C78  2C7A               	goto	u6130
  7592  0C79                     u6131:
  7593  0C79  2C7C               	goto	l5979
  7594  0C7A                     u6130:
  7595  0C7A                     l5977:
  7596                           
  7597                           ;main.c: 127:             jugador2.sentido=0;
  7598  0C7A  01B1               	clrf	_jugador2^(0+128)
  7599                           
  7600                           ;main.c: 128:         } else if (movimiento_jugador2 == derecha) {
  7601  0C7B  2C84               	goto	l5983
  7602  0C7C                     l5979:
  7603  0C7C  3002               	movlw	2
  7604  0C7D  064D               	xorwf	_movimiento_jugador2^(0+128),w
  7605  0C7E  1D03               	btfss	3,2
  7606  0C7F  2C81               	goto	u6141
  7607  0C80  2C82               	goto	u6140
  7608  0C81                     u6141:
  7609  0C81  2C84               	goto	l5983
  7610  0C82                     u6140:
  7611  0C82                     l5981:
  7612                           
  7613                           ;main.c: 129:             jugador2.sentido=1;
  7614  0C82  01B1               	clrf	_jugador2^(0+128)
  7615  0C83  0AB1               	incf	_jugador2^(0+128),f
  7616  0C84                     l5983:
  7617                           
  7618                           ;main.c: 132:         if (!(movimiento_jugador1 || movimiento_jugador2)) {
  7619  0C84  087C               	movf	_movimiento_jugador1,w
  7620  0C85  1D03               	btfss	3,2
  7621  0C86  2C88               	goto	u6151
  7622  0C87  2C89               	goto	u6150
  7623  0C88                     u6151:
  7624  0C88  2C9B               	goto	l5989
  7625  0C89                     u6150:
  7626  0C89                     l5985:
  7627  0C89  084D               	movf	_movimiento_jugador2^(0+128),w
  7628  0C8A  1D03               	btfss	3,2
  7629  0C8B  2C8D               	goto	u6161
  7630  0C8C  2C8E               	goto	u6160
  7631  0C8D                     u6161:
  7632  0C8D  2C9B               	goto	l5989
  7633  0C8E                     u6160:
  7634  0C8E                     l5987:
  7635                           
  7636                           ;main.c: 133:             _delay((unsigned long)((65)*(32000000/4000.0)));
  7637  0C8E  3003               	movlw	3
  7638  0C8F  0021               	movlb	1	; select bank1
  7639  0C90  00E0               	movwf	(??_main^(0+128)+1)
  7640  0C91  30A4               	movlw	164
  7641  0C92  00DF               	movwf	??_main^(0+128)
  7642  0C93  304F               	movlw	79
  7643  0C94                     u6957:
  7644  0C94  0B89               	decfsz	9,f
  7645  0C95  2C94               	goto	u6957
  7646  0C96  0BDF               	decfsz	??_main^(0+128),f
  7647  0C97  2C94               	goto	u6957
  7648  0C98  0BE0               	decfsz	(??_main^(0+128)+1),f
  7649  0C99  2C94               	goto	u6957
  7650                           
  7651                           ;main.c: 134:         } else if(movimiento_jugador1) {
  7652  0C9A  2CC9               	goto	l6003
  7653  0C9B                     l5989:
  7654  0C9B  087C               	movf	_movimiento_jugador1,w
  7655  0C9C  1903               	btfsc	3,2
  7656  0C9D  2C9F               	goto	u6171
  7657  0C9E  2CA0               	goto	u6170
  7658  0C9F                     u6171:
  7659  0C9F  2CB5               	goto	l5997
  7660  0CA0                     u6170:
  7661  0CA0                     l5991:
  7662                           
  7663                           ;main.c: 135:             moverJugador(&jugador1);
  7664  0CA0  3040               	movlw	low _jugador1
  7665  0CA1  0020               	movlb	0	; select bank0
  7666  0CA2  00DF               	movwf	moverJugador@jugador
  7667  0CA3  3001               	movlw	high _jugador1
  7668  0CA4  00E0               	movwf	moverJugador@jugador+1
  7669  0CA5  3195  25B2  318B   	fcall	_moverJugador
  7670  0CA8                     l5993:
  7671                           
  7672                           ;main.c: 136:             movimiento_jugador1 = inactivo;
  7673  0CA8  01FC               	clrf	_movimiento_jugador1
  7674  0CA9                     l5995:
  7675                           
  7676                           ;main.c: 137:             dibujarMarcador(puntaje1,puntaje2);
  7677  0CA9  0021               	movlb	1	; select bank1
  7678  0CAA  084B               	movf	_puntaje2^(0+128),w
  7679  0CAB  00DF               	movwf	??_main^(0+128)
  7680  0CAC  085F               	movf	??_main^(0+128),w
  7681  0CAD  0020               	movlb	0	; select bank0
  7682  0CAE  00ED               	movwf	dibujarMarcador@puntaje2
  7683  0CAF  0021               	movlb	1	; select bank1
  7684  0CB0  084C               	movf	_puntaje1^(0+128),w
  7685  0CB1  3193  235B  318B   	fcall	_dibujarMarcador
  7686                           
  7687                           ;main.c: 138:         }else{
  7688  0CB4  2CC9               	goto	l6003
  7689  0CB5                     l5997:
  7690                           
  7691                           ;main.c: 139:             moverJugador(&jugador2);
  7692  0CB5  30B1               	movlw	low _jugador2
  7693  0CB6  0020               	movlb	0	; select bank0
  7694  0CB7  00DF               	movwf	moverJugador@jugador
  7695  0CB8  3000               	movlw	high _jugador2
  7696  0CB9  00E0               	movwf	moverJugador@jugador+1
  7697  0CBA  3195  25B2  318B   	fcall	_moverJugador
  7698  0CBD                     l5999:
  7699                           
  7700                           ;main.c: 140:             movimiento_jugador2 = inactivo;
  7701  0CBD  0021               	movlb	1	; select bank1
  7702  0CBE  01CD               	clrf	_movimiento_jugador2^(0+128)
  7703  0CBF                     l6001:
  7704                           
  7705                           ;main.c: 141:             dibujarMarcador(puntaje1,puntaje2);
  7706  0CBF  084B               	movf	_puntaje2^(0+128),w
  7707  0CC0  00DF               	movwf	??_main^(0+128)
  7708  0CC1  085F               	movf	??_main^(0+128),w
  7709  0CC2  0020               	movlb	0	; select bank0
  7710  0CC3  00ED               	movwf	dibujarMarcador@puntaje2
  7711  0CC4  0021               	movlb	1	; select bank1
  7712  0CC5  084C               	movf	_puntaje1^(0+128),w
  7713  0CC6  3193  235B  318B   	fcall	_dibujarMarcador
  7714  0CC9                     l6003:
  7715                           
  7716                           ;main.c: 145:         display_drawCustomChar(bolita.posicionx,bolita.posiciony,bolita.fo
      +                          rma,0x0000,0x0000,bolita.escala);
  7717  0CC9  0021               	movlb	1	; select bank1
  7718  0CCA  082E               	movf	(_bolita^(0+128)+9),w
  7719  0CCB  00DF               	movwf	??_main^(0+128)
  7720  0CCC  01E0               	clrf	(??_main^(0+128)+1)
  7721  0CCD  085F               	movf	??_main^(0+128),w
  7722  0CCE  0020               	movlb	0	; select bank0
  7723  0CCF  00CB               	movwf	display_drawCustomChar@x
  7724  0CD0  0021               	movlb	1	; select bank1
  7725  0CD1  0860               	movf	(??_main+1)^(0+128),w
  7726  0CD2  0020               	movlb	0	; select bank0
  7727  0CD3  00CC               	movwf	display_drawCustomChar@x+1
  7728  0CD4  0021               	movlb	1	; select bank1
  7729  0CD5  0830               	movf	((_bolita+1)^(0+128)+10),w
  7730  0CD6  0020               	movlb	0	; select bank0
  7731  0CD7  00CE               	movwf	display_drawCustomChar@y+1
  7732  0CD8  0021               	movlb	1	; select bank1
  7733  0CD9  082F               	movf	(_bolita^(0+128)+10),w
  7734  0CDA  0020               	movlb	0	; select bank0
  7735  0CDB  00CD               	movwf	display_drawCustomChar@y
  7736  0CDC  30A9               	movlw	low (_bolita+4)
  7737  0CDD  00CF               	movwf	display_drawCustomChar@c
  7738  0CDE  3000               	movlw	high (_bolita+4)
  7739  0CDF  00D0               	movwf	display_drawCustomChar@c+1
  7740  0CE0  3000               	movlw	0
  7741  0CE1  00D1               	movwf	display_drawCustomChar@color
  7742  0CE2  00D2               	movwf	display_drawCustomChar@color+1
  7743  0CE3  3000               	movlw	0
  7744  0CE4  00D3               	movwf	display_drawCustomChar@bg
  7745  0CE5  00D4               	movwf	display_drawCustomChar@bg+1
  7746  0CE6  0021               	movlb	1	; select bank1
  7747  0CE7  0828               	movf	(_bolita^(0+128)+3),w
  7748  0CE8  00E1               	movwf	(??_main+2)^(0+128)
  7749  0CE9  0861               	movf	(??_main+2)^(0+128),w
  7750  0CEA  0020               	movlb	0	; select bank0
  7751  0CEB  00D5               	movwf	display_drawCustomChar@size
  7752  0CEC  3193  23C6  318B   	fcall	_display_drawCustomChar
  7753  0CEF                     l6005:
  7754                           
  7755                           ;main.c: 146:         if (bolita.posicionx >= (240 -(2 * 5))) {
  7756  0CEF  30E6               	movlw	230
  7757  0CF0  0021               	movlb	1	; select bank1
  7758  0CF1  022E               	subwf	(_bolita^(0+128)+9),w
  7759  0CF2  1C03               	skipc
  7760  0CF3  2CF5               	goto	u6181
  7761  0CF4  2CF6               	goto	u6180
  7762  0CF5                     u6181:
  7763  0CF5  2CF9               	goto	l6009
  7764  0CF6                     u6180:
  7765  0CF6                     l6007:
  7766                           
  7767                           ;main.c: 147:             bolita.sentidox = 1;
  7768  0CF6  01A5               	clrf	_bolita^(0+128)
  7769  0CF7  0AA5               	incf	_bolita^(0+128),f
  7770                           
  7771                           ;main.c: 148:         } else if (bolita.posicionx <= 10) {
  7772  0CF8  2D00               	goto	l6013
  7773  0CF9                     l6009:
  7774  0CF9  300B               	movlw	11
  7775  0CFA  022E               	subwf	(_bolita^(0+128)+9),w
  7776  0CFB  1803               	skipnc
  7777  0CFC  2CFE               	goto	u6191
  7778  0CFD  2CFF               	goto	u6190
  7779  0CFE                     u6191:
  7780  0CFE  2D00               	goto	l6013
  7781  0CFF                     u6190:
  7782  0CFF                     l6011:
  7783                           
  7784                           ;main.c: 149:             bolita.sentidox = 0;
  7785  0CFF  01A5               	clrf	_bolita^(0+128)
  7786  0D00                     l6013:
  7787                           
  7788                           ;main.c: 152:         if (bolita.posiciony >= ((320 -(2 * 8))-16)) {
  7789  0D00  3001               	movlw	1
  7790  0D01  0230               	subwf	((_bolita+1)^(0+128)+10),w
  7791  0D02  3020               	movlw	32
  7792  0D03  1903               	skipnz
  7793  0D04  022F               	subwf	(_bolita^(0+128)+10),w
  7794  0D05  1C03               	skipc
  7795  0D06  2D08               	goto	u6201
  7796  0D07  2D09               	goto	u6200
  7797  0D08                     u6201:
  7798  0D08  2D40               	goto	l6029
  7799  0D09                     u6200:
  7800  0D09                     l6015:
  7801                           
  7802                           ;main.c: 154:             if ((bolita.posicionx >= jugador2.posicion)&&(bolita.posicionx
      +                           <= (jugador2.posicion+((5 * 13) / 2)) + 30)) {
  7803  0D09  083A               	movf	(_jugador2^(0+128)+9),w
  7804  0D0A  022E               	subwf	(_bolita^(0+128)+9),w
  7805  0D0B  1C03               	skipc
  7806  0D0C  2D0E               	goto	u6211
  7807  0D0D  2D0F               	goto	u6210
  7808  0D0E                     u6211:
  7809  0D0E  2D27               	goto	l6021
  7810  0D0F                     u6210:
  7811  0D0F                     l6017:
  7812  0D0F  083A               	movf	(_jugador2^(0+128)+9),w
  7813  0D10  3E3E               	addlw	62
  7814  0D11  00DF               	movwf	??_main^(0+128)
  7815  0D12  3000               	movlw	0
  7816  0D13  1803               	skipnc
  7817  0D14  3001               	movlw	1
  7818  0D15  00E0               	movwf	(??_main^(0+128)+1)
  7819  0D16  0860               	movf	(??_main+1)^(0+128),w
  7820  0D17  3A80               	xorlw	128
  7821  0D18  00E1               	movwf	(??_main+2)^(0+128)
  7822  0D19  3080               	movlw	128
  7823  0D1A  0261               	subwf	(??_main+2)^(0+128),w
  7824  0D1B  1D03               	skipz
  7825  0D1C  2D1F               	goto	u6225
  7826  0D1D  082E               	movf	(_bolita^(0+128)+9),w
  7827  0D1E  025F               	subwf	??_main^(0+128),w
  7828  0D1F                     u6225:
  7829  0D1F  1C03               	skipc
  7830  0D20  2D22               	goto	u6221
  7831  0D21  2D23               	goto	u6220
  7832  0D22                     u6221:
  7833  0D22  2D27               	goto	l6021
  7834  0D23                     u6220:
  7835  0D23                     l6019:
  7836                           
  7837                           ;main.c: 155:                 bolita.sentidoy = 1;
  7838  0D23  0021               	movlb	1	; select bank1
  7839  0D24  01A6               	clrf	(_bolita^(0+128)+1)
  7840  0D25  0AA6               	incf	(_bolita^(0+128)+1),f
  7841                           
  7842                           ;main.c: 156:             }else{
  7843  0D26  2D7A               	goto	l6045
  7844  0D27                     l6021:
  7845                           
  7846                           ;main.c: 157:                 puntaje1++;
  7847  0D27  3001               	movlw	1
  7848  0D28  0021               	movlb	1	; select bank1
  7849  0D29  00DF               	movwf	??_main^(0+128)
  7850  0D2A  085F               	movf	??_main^(0+128),w
  7851  0D2B  07CC               	addwf	_puntaje1^(0+128),f
  7852  0D2C                     l6023:
  7853                           
  7854                           ;main.c: 158:                 dibujarMarcador(puntaje1,puntaje2);
  7855  0D2C  084B               	movf	_puntaje2^(0+128),w
  7856  0D2D  00DF               	movwf	??_main^(0+128)
  7857  0D2E  085F               	movf	??_main^(0+128),w
  7858  0D2F  0020               	movlb	0	; select bank0
  7859  0D30  00ED               	movwf	dibujarMarcador@puntaje2
  7860  0D31  0021               	movlb	1	; select bank1
  7861  0D32  084C               	movf	_puntaje1^(0+128),w
  7862  0D33  3193  235B  318B   	fcall	_dibujarMarcador
  7863  0D36                     l6025:
  7864                           
  7865                           ;main.c: 159:                 bolita.posicionx=(240 -(2 * 5)) / 2;
  7866  0D36  3073               	movlw	115
  7867  0D37  0021               	movlb	1	; select bank1
  7868  0D38  00DF               	movwf	??_main^(0+128)
  7869  0D39  085F               	movf	??_main^(0+128),w
  7870  0D3A  00AE               	movwf	(_bolita^(0+128)+9)
  7871  0D3B                     l6027:
  7872                           
  7873                           ;main.c: 160:                 bolita.posiciony=(320 -(2 * 8)) / 2;
  7874  0D3B  3098               	movlw	152
  7875  0D3C  00AF               	movwf	(_bolita^(0+128)+10)
  7876  0D3D  3000               	movlw	0
  7877  0D3E  00B0               	movwf	(_bolita^(0+128)+11)
  7878  0D3F  2D7A               	goto	l6045
  7879  0D40                     l6029:
  7880  0D40  3000               	movlw	0
  7881  0D41  0230               	subwf	((_bolita+1)^(0+128)+10),w
  7882  0D42  3013               	movlw	19
  7883  0D43  1903               	skipnz
  7884  0D44  022F               	subwf	(_bolita^(0+128)+10),w
  7885  0D45  1803               	skipnc
  7886  0D46  2D48               	goto	u6231
  7887  0D47  2D49               	goto	u6230
  7888  0D48                     u6231:
  7889  0D48  2D7A               	goto	l6045
  7890  0D49                     u6230:
  7891  0D49                     l6031:
  7892                           
  7893                           ;main.c: 164:             if ((bolita.posicionx >= jugador1.posicion)&&(bolita.posicionx
      +                           <= (jugador1.posicion+((5 * 13) / 2)) + 30)) {
  7894  0D49  0022               	movlb	2	; select bank2
  7895  0D4A  0849               	movf	(_jugador1^(0+256)+9),w
  7896  0D4B  0021               	movlb	1	; select bank1
  7897  0D4C  022E               	subwf	(_bolita^(0+128)+9),w
  7898  0D4D  1C03               	skipc
  7899  0D4E  2D50               	goto	u6241
  7900  0D4F  2D51               	goto	u6240
  7901  0D50                     u6241:
  7902  0D50  2D6A               	goto	l6037
  7903  0D51                     u6240:
  7904  0D51                     l6033:
  7905  0D51  0022               	movlb	2	; select bank2
  7906  0D52  0849               	movf	(_jugador1^(0+256)+9),w
  7907  0D53  3E3E               	addlw	62
  7908  0D54  0021               	movlb	1	; select bank1
  7909  0D55  00DF               	movwf	??_main^(0+128)
  7910  0D56  3000               	movlw	0
  7911  0D57  1803               	skipnc
  7912  0D58  3001               	movlw	1
  7913  0D59  00E0               	movwf	(??_main^(0+128)+1)
  7914  0D5A  0860               	movf	(??_main+1)^(0+128),w
  7915  0D5B  3A80               	xorlw	128
  7916  0D5C  00E1               	movwf	(??_main+2)^(0+128)
  7917  0D5D  3080               	movlw	128
  7918  0D5E  0261               	subwf	(??_main+2)^(0+128),w
  7919  0D5F  1D03               	skipz
  7920  0D60  2D63               	goto	u6255
  7921  0D61  082E               	movf	(_bolita^(0+128)+9),w
  7922  0D62  025F               	subwf	??_main^(0+128),w
  7923  0D63                     u6255:
  7924  0D63  1C03               	skipc
  7925  0D64  2D66               	goto	u6251
  7926  0D65  2D67               	goto	u6250
  7927  0D66                     u6251:
  7928  0D66  2D6A               	goto	l6037
  7929  0D67                     u6250:
  7930  0D67                     l6035:
  7931                           
  7932                           ;main.c: 165:                 bolita.sentidoy = 0;
  7933  0D67  0021               	movlb	1	; select bank1
  7934  0D68  01A6               	clrf	(_bolita^(0+128)+1)
  7935                           
  7936                           ;main.c: 166:             }else{
  7937  0D69  2D7A               	goto	l6045
  7938  0D6A                     l6037:
  7939                           
  7940                           ;main.c: 167:                 puntaje2++;
  7941  0D6A  3001               	movlw	1
  7942  0D6B  0021               	movlb	1	; select bank1
  7943  0D6C  00DF               	movwf	??_main^(0+128)
  7944  0D6D  085F               	movf	??_main^(0+128),w
  7945  0D6E  07CB               	addwf	_puntaje2^(0+128),f
  7946  0D6F                     l6039:
  7947                           
  7948                           ;main.c: 168:                 dibujarMarcador(puntaje1,puntaje2);
  7949  0D6F  084B               	movf	_puntaje2^(0+128),w
  7950  0D70  00DF               	movwf	??_main^(0+128)
  7951  0D71  085F               	movf	??_main^(0+128),w
  7952  0D72  0020               	movlb	0	; select bank0
  7953  0D73  00ED               	movwf	dibujarMarcador@puntaje2
  7954  0D74  0021               	movlb	1	; select bank1
  7955  0D75  084C               	movf	_puntaje1^(0+128),w
  7956  0D76  3193  235B  318B   	fcall	_dibujarMarcador
  7957  0D79  2D36               	goto	l6025
  7958  0D7A                     l6045:
  7959                           
  7960                           ;main.c: 174:         if (bolita.sentidox) {
  7961  0D7A  0825               	movf	_bolita^(0+128),w
  7962  0D7B  1903               	btfsc	3,2
  7963  0D7C  2D7E               	goto	u6261
  7964  0D7D  2D7F               	goto	u6260
  7965  0D7E                     u6261:
  7966  0D7E  2D82               	goto	l6049
  7967  0D7F                     u6260:
  7968  0D7F                     l6047:
  7969                           
  7970                           ;main.c: 175:             bolita.posicionx -= bolita.velocidad;
  7971  0D7F  0827               	movf	(_bolita^(0+128)+2),w
  7972  0D80  02AE               	subwf	(_bolita^(0+128)+9),f
  7973                           
  7974                           ;main.c: 176:         } else {
  7975  0D81  2D86               	goto	l442
  7976  0D82                     l6049:
  7977                           
  7978                           ;main.c: 177:             bolita.posicionx += bolita.velocidad;
  7979  0D82  0827               	movf	(_bolita^(0+128)+2),w
  7980  0D83  00DF               	movwf	??_main^(0+128)
  7981  0D84  085F               	movf	??_main^(0+128),w
  7982  0D85  07AE               	addwf	(_bolita^(0+128)+9),f
  7983  0D86                     l442:	
  7984                           ;main.c: 178:         }
  7985                           
  7986                           
  7987                           ;main.c: 180:         if (bolita.sentidoy) {
  7988  0D86  0826               	movf	(_bolita^(0+128)+1),w
  7989  0D87  1903               	btfsc	3,2
  7990  0D88  2D8A               	goto	u6271
  7991  0D89  2D8B               	goto	u6270
  7992  0D8A                     u6271:
  7993  0D8A  2D93               	goto	l6053
  7994  0D8B                     u6270:
  7995  0D8B                     l6051:
  7996                           
  7997                           ;main.c: 181:             bolita.posiciony -= bolita.velocidad;
  7998  0D8B  0827               	movf	(_bolita^(0+128)+2),w
  7999  0D8C  00DF               	movwf	??_main^(0+128)
  8000  0D8D  01E0               	clrf	(??_main^(0+128)+1)
  8001  0D8E  085F               	movf	??_main^(0+128),w
  8002  0D8F  02AF               	subwf	(_bolita^(0+128)+10),f
  8003  0D90  0860               	movf	(??_main+1)^(0+128),w
  8004  0D91  3BB0               	subwfb	((_bolita+1)^(0+128)+10),f
  8005                           
  8006                           ;main.c: 182:         } else {
  8007  0D92  2D9A               	goto	l6055
  8008  0D93                     l6053:
  8009                           
  8010                           ;main.c: 183:             bolita.posiciony += bolita.velocidad;
  8011  0D93  0827               	movf	(_bolita^(0+128)+2),w
  8012  0D94  00DF               	movwf	??_main^(0+128)
  8013  0D95  01E0               	clrf	(??_main^(0+128)+1)
  8014  0D96  085F               	movf	??_main^(0+128),w
  8015  0D97  07AF               	addwf	(_bolita^(0+128)+10),f
  8016  0D98  0860               	movf	(??_main^(0+128)+1),w
  8017  0D99  3DB0               	addwfc	((_bolita+1)^(0+128)+10),f
  8018  0D9A                     l6055:
  8019                           
  8020                           ;main.c: 185:         display_drawCustomChar(bolita.posicionx, bolita.posiciony, bolita.
      +                          forma, 0x07E0, 0x0000,bolita.escala);
  8021  0D9A  082E               	movf	(_bolita^(0+128)+9),w
  8022  0D9B  00DF               	movwf	??_main^(0+128)
  8023  0D9C  01E0               	clrf	(??_main^(0+128)+1)
  8024  0D9D  085F               	movf	??_main^(0+128),w
  8025  0D9E  0020               	movlb	0	; select bank0
  8026  0D9F  00CB               	movwf	display_drawCustomChar@x
  8027  0DA0  0021               	movlb	1	; select bank1
  8028  0DA1  0860               	movf	(??_main+1)^(0+128),w
  8029  0DA2  0020               	movlb	0	; select bank0
  8030  0DA3  00CC               	movwf	display_drawCustomChar@x+1
  8031  0DA4  0021               	movlb	1	; select bank1
  8032  0DA5  0830               	movf	((_bolita+1)^(0+128)+10),w
  8033  0DA6  0020               	movlb	0	; select bank0
  8034  0DA7  00CE               	movwf	display_drawCustomChar@y+1
  8035  0DA8  0021               	movlb	1	; select bank1
  8036  0DA9  082F               	movf	(_bolita^(0+128)+10),w
  8037  0DAA  0020               	movlb	0	; select bank0
  8038  0DAB  00CD               	movwf	display_drawCustomChar@y
  8039  0DAC  30A9               	movlw	low (_bolita+4)
  8040  0DAD  00CF               	movwf	display_drawCustomChar@c
  8041  0DAE  3000               	movlw	high (_bolita+4)
  8042  0DAF  00D0               	movwf	display_drawCustomChar@c+1
  8043  0DB0  30E0               	movlw	224
  8044  0DB1  00D1               	movwf	display_drawCustomChar@color
  8045  0DB2  3007               	movlw	7
  8046  0DB3  00D2               	movwf	display_drawCustomChar@color+1
  8047  0DB4  3000               	movlw	0
  8048  0DB5  00D3               	movwf	display_drawCustomChar@bg
  8049  0DB6  00D4               	movwf	display_drawCustomChar@bg+1
  8050  0DB7  0021               	movlb	1	; select bank1
  8051  0DB8  0828               	movf	(_bolita^(0+128)+3),w
  8052  0DB9  00E1               	movwf	(??_main+2)^(0+128)
  8053  0DBA  0861               	movf	(??_main+2)^(0+128),w
  8054  0DBB  0020               	movlb	0	; select bank0
  8055  0DBC  00D5               	movwf	display_drawCustomChar@size
  8056  0DBD  3193  23C6  318B   	fcall	_display_drawCustomChar
  8057  0DC0  2C63               	goto	l5967
  8058  0DC1  3180  2814         	ljmp	start
  8059  0DC3                     __end_of_main:
  8060                           
  8061                           	psect	text1
  8062  1525                     __ptext1:	
  8063 ;; *************** function _tft_begin *****************
  8064 ;; Defined at:
  8065 ;;		line 94 in file "ILI9341.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  addr            2    8[COMMON] PTR const unsigned char 
  8070 ;;		 -> initcmd(111), 
  8071 ;;  cmd             1    7[COMMON] unsigned char 
  8072 ;;  x               1    6[COMMON] unsigned char 
  8073 ;;  numArgs         1    5[COMMON] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;Total ram usage:        7 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    6
  8090 ;; This function calls:
  8091 ;;		_SPI1_ExchangeByte
  8092 ;;		_endWrite
  8093 ;;		_startWrite
  8094 ;;		_writeCommand
  8095 ;; This function is called by:
  8096 ;;		_main
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           
  8101                           ;psect for function _tft_begin
  8102  1525                     _tft_begin:
  8103  1525                     l898:	
  8104                           ;incstack = 0
  8105                           ; Regs used in _tft_begin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8106                           ;ILI9341.c: 98:       do { LATAbits.LATA0 = 1; } while(0);
  8107                           
  8108  1525  0020               	movlb	0	; select bank0
  8109  1526  1416               	bsf	22,0	;volatile
  8110  1527                     l5751:
  8111                           
  8112                           ;ILI9341.c: 101:       _delay((unsigned long)((100)*(32000000/4000.0)));
  8113  1527  3005               	movlw	5
  8114  1528  00F4               	movwf	??_tft_begin+1
  8115  1529  300F               	movlw	15
  8116  152A  00F3               	movwf	??_tft_begin
  8117  152B  30F1               	movlw	241
  8118  152C                     u6967:
  8119  152C  0B89               	decfsz	9,f
  8120  152D  2D2C               	goto	u6967
  8121  152E  0BF3               	decfsz	??_tft_begin,f
  8122  152F  2D2C               	goto	u6967
  8123  1530  0BF4               	decfsz	??_tft_begin+1,f
  8124  1531  2D2C               	goto	u6967
  8125  1532  0000               	nop
  8126  1533                     l5753:
  8127  1533  0020               	movlb	0	; select bank0
  8128  1534  1016               	bcf	22,0	;volatile
  8129  1535                     l901:
  8130                           
  8131                           ;ILI9341.c: 104:       _delay((unsigned long)((100)*(32000000/4000.0)));
  8132  1535  3005               	movlw	5
  8133  1536  00F4               	movwf	??_tft_begin+1
  8134  1537  300F               	movlw	15
  8135  1538  00F3               	movwf	??_tft_begin
  8136  1539  30F1               	movlw	241
  8137  153A                     u6977:
  8138  153A  0B89               	decfsz	9,f
  8139  153B  2D3A               	goto	u6977
  8140  153C  0BF3               	decfsz	??_tft_begin,f
  8141  153D  2D3A               	goto	u6977
  8142  153E  0BF4               	decfsz	??_tft_begin+1,f
  8143  153F  2D3A               	goto	u6977
  8144  1540  0000               	nop
  8145  1541                     l5755:
  8146  1541  0020               	movlb	0	; select bank0
  8147  1542  1416               	bsf	22,0	;volatile
  8148  1543                     l903:
  8149                           
  8150                           ;ILI9341.c: 107:       _delay((unsigned long)((200)*(32000000/4000.0)));
  8151  1543  3009               	movlw	9
  8152  1544  00F4               	movwf	??_tft_begin+1
  8153  1545  301E               	movlw	30
  8154  1546  00F3               	movwf	??_tft_begin
  8155  1547  30E4               	movlw	228
  8156  1548                     u6987:
  8157  1548  0B89               	decfsz	9,f
  8158  1549  2D48               	goto	u6987
  8159  154A  0BF3               	decfsz	??_tft_begin,f
  8160  154B  2D48               	goto	u6987
  8161  154C  0BF4               	decfsz	??_tft_begin+1,f
  8162  154D  2D48               	goto	u6987
  8163  154E  3200               	nop2
  8164  154F                     l5757:
  8165  154F  0020               	movlb	0	; select bank0
  8166  1550  1418               	bsf	24,0	;volatile
  8167  1551                     l5759:
  8168                           
  8169                           ;ILI9341.c: 118:     startWrite();
  8170  1551  319F  2761  3195   	fcall	_startWrite
  8171  1554                     l5761:
  8172                           
  8173                           ;ILI9341.c: 120:     uint8_t cmd, x, numArgs;;ILI9341.c: 121:     const uint8_t *addr = 
      +                          &initcmd;
  8174  1554  3000               	movlw	low (_initcmd| (0+32768))
  8175  1555  00F8               	movwf	tft_begin@addr
  8176  1556  3098               	movlw	high (_initcmd| (0+32768))
  8177  1557  00F9               	movwf	tft_begin@addr+1
  8178  1558                     l5763:
  8179                           
  8180                           ;ILI9341.c: 122:     cmd = *addr++;
  8181  1558  0878               	movf	tft_begin@addr,w
  8182  1559  0084               	movwf	4
  8183  155A  0879               	movf	tft_begin@addr+1,w
  8184  155B  0085               	movwf	5
  8185  155C  0800               	movf	0,w	;code access
  8186  155D  00F3               	movwf	??_tft_begin
  8187  155E  0873               	movf	??_tft_begin,w
  8188  155F  00F7               	movwf	tft_begin@cmd
  8189  1560                     l5765:
  8190  1560  3001               	movlw	1
  8191  1561  07F8               	addwf	tft_begin@addr,f
  8192  1562  3000               	movlw	0
  8193  1563  3DF9               	addwfc	tft_begin@addr+1,f
  8194                           
  8195                           ;ILI9341.c: 123:     while( cmd > 0 ) {
  8196  1564  2D9F               	goto	l5787
  8197  1565                     l5767:
  8198                           
  8199                           ;ILI9341.c: 124:         writeCommand(cmd);
  8200  1565  0877               	movf	tft_begin@cmd,w
  8201  1566  319F  27A0  3195   	fcall	_writeCommand
  8202  1569                     l5769:
  8203                           
  8204                           ;ILI9341.c: 125:         x = *addr++;
  8205  1569  0878               	movf	tft_begin@addr,w
  8206  156A  0084               	movwf	4
  8207  156B  0879               	movf	tft_begin@addr+1,w
  8208  156C  0085               	movwf	5
  8209  156D  0800               	movf	0,w	;code access
  8210  156E  00F3               	movwf	??_tft_begin
  8211  156F  0873               	movf	??_tft_begin,w
  8212  1570  00F6               	movwf	tft_begin@x
  8213  1571                     l5771:
  8214  1571  3001               	movlw	1
  8215  1572  07F8               	addwf	tft_begin@addr,f
  8216  1573  3000               	movlw	0
  8217  1574  3DF9               	addwfc	tft_begin@addr+1,f
  8218  1575                     l5773:
  8219                           
  8220                           ;ILI9341.c: 126:         numArgs = x & 0x7F;
  8221  1575  0876               	movf	tft_begin@x,w
  8222  1576  397F               	andlw	127
  8223  1577  00F3               	movwf	??_tft_begin
  8224  1578  0873               	movf	??_tft_begin,w
  8225  1579  00F5               	movwf	tft_begin@numArgs
  8226                           
  8227                           ;ILI9341.c: 127:         while(numArgs--) SPI1_ExchangeByte(*addr++);
  8228  157A  2D87               	goto	l5779
  8229  157B                     l5775:
  8230  157B  0878               	movf	tft_begin@addr,w
  8231  157C  0084               	movwf	4
  8232  157D  0879               	movf	tft_begin@addr+1,w
  8233  157E  0085               	movwf	5
  8234  157F  0800               	movf	0,w	;code access
  8235  1580  319F  27D5  3195   	fcall	_SPI1_ExchangeByte
  8236  1583                     l5777:
  8237  1583  3001               	movlw	1
  8238  1584  07F8               	addwf	tft_begin@addr,f
  8239  1585  3000               	movlw	0
  8240  1586  3DF9               	addwfc	tft_begin@addr+1,f
  8241  1587                     l5779:
  8242  1587  3001               	movlw	1
  8243  1588  02F5               	subwf	tft_begin@numArgs,f
  8244  1589  0A75               	incf	tft_begin@numArgs,w
  8245  158A  1D03               	btfss	3,2
  8246  158B  2D8D               	goto	u5861
  8247  158C  2D8E               	goto	u5860
  8248  158D                     u5861:
  8249  158D  2D7B               	goto	l5775
  8250  158E                     u5860:
  8251  158E                     l910:
  8252                           
  8253                           ;ILI9341.c: 129:         if(x & 0x80) _delay((unsigned long)((150)*(32000000/4000.0)));
  8254  158E  1FF6               	btfss	tft_begin@x,7
  8255  158F  2D91               	goto	u5871
  8256  1590  2D92               	goto	u5870
  8257  1591                     u5871:
  8258  1591  2D58               	goto	l5763
  8259  1592                     u5870:
  8260  1592                     l5781:
  8261  1592  3007               	movlw	7
  8262  1593  00F4               	movwf	??_tft_begin+1
  8263  1594  3017               	movlw	23
  8264  1595  00F3               	movwf	??_tft_begin
  8265  1596  306A               	movlw	106
  8266  1597                     u6997:
  8267  1597  0B89               	decfsz	9,f
  8268  1598  2D97               	goto	u6997
  8269  1599  0BF3               	decfsz	??_tft_begin,f
  8270  159A  2D97               	goto	u6997
  8271  159B  0BF4               	decfsz	??_tft_begin+1,f
  8272  159C  2D97               	goto	u6997
  8273  159D  3200               	nop2
  8274  159E  2D58               	goto	l5763
  8275  159F                     l5787:
  8276                           
  8277                           ;ILI9341.c: 123:     while( cmd > 0 ) {
  8278  159F  0877               	movf	tft_begin@cmd,w
  8279  15A0  1D03               	btfss	3,2
  8280  15A1  2DA3               	goto	u5881
  8281  15A2  2DA4               	goto	u5880
  8282  15A3                     u5881:
  8283  15A3  2D65               	goto	l5767
  8284  15A4                     u5880:
  8285  15A4                     l5789:
  8286                           
  8287                           ;ILI9341.c: 133:     endWrite();
  8288  15A4  319F  2768  3195   	fcall	_endWrite
  8289  15A7                     l5791:
  8290                           
  8291                           ;ILI9341.c: 135:     _width = 240;
  8292  15A7  30F0               	movlw	240
  8293  15A8  0021               	movlb	1	; select bank1
  8294  15A9  00C9               	movwf	__width^(0+128)
  8295  15AA  3000               	movlw	0
  8296  15AB  00CA               	movwf	(__width^(0+128)+1)
  8297  15AC                     l5793:
  8298                           
  8299                           ;ILI9341.c: 136:     _height = 320;
  8300  15AC  3040               	movlw	64
  8301  15AD  00C7               	movwf	__height^(0+128)
  8302  15AE  3001               	movlw	1
  8303  15AF  00C8               	movwf	(__height^(0+128)+1)
  8304  15B0                     l5795:
  8305                           
  8306                           ;ILI9341.c: 137:     rotation = 0;
  8307  15B0  01CE               	clrf	_rotation^(0+128)
  8308  15B1                     l913:
  8309  15B1  0008               	return
  8310  15B2                     __end_of_tft_begin:
  8311                           
  8312                           	psect	text2
  8313  15B2                     __ptext2:	
  8314 ;; *************** function _moverJugador *****************
  8315 ;; Defined at:
  8316 ;;		line 223 in file "main.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  jugador         2   63[BANK0 ] PTR struct .
  8319 ;;		 -> jugador2(10), jugador1(10), 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  y               1   70[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;Total ram usage:        8 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   10
  8338 ;; This function calls:
  8339 ;;		___bmul
  8340 ;;		_display_drawCustomChar
  8341 ;; This function is called by:
  8342 ;;		_main
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           
  8347                           ;psect for function _moverJugador
  8348  15B2                     _moverJugador:
  8349  15B2                     l5821:	
  8350                           ;incstack = 0
  8351                           ; Regs used in _moverJugador: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8352                           
  8353                           
  8354                           ;main.c: 224:     uint8_t y = 0;
  8355  15B2  0020               	movlb	0	; select bank0
  8356  15B3  01E6               	clrf	moverJugador@y
  8357  15B4                     l5823:
  8358                           
  8359                           ;main.c: 225:     if (jugador->id) {
  8360  15B4  085F               	movf	moverJugador@jugador,w
  8361  15B5  0086               	movwf	6
  8362  15B6  0860               	movf	moverJugador@jugador+1,w
  8363  15B7  0087               	movwf	7
  8364  15B8  3143               	addfsr 1,3
  8365  15B9  0801               	movf	1,w
  8366  15BA  1903               	btfsc	3,2
  8367  15BB  2DBD               	goto	u5891
  8368  15BC  2DBE               	goto	u5890
  8369  15BD                     u5891:
  8370  15BD  2DD0               	goto	l465
  8371  15BE                     u5890:
  8372  15BE                     l5825:
  8373                           
  8374                           ;main.c: 226:         y = 320 -(jugador->escala * 8);
  8375  15BE  30F8               	movlw	248
  8376  15BF  00E1               	movwf	??_moverJugador
  8377  15C0  0861               	movf	??_moverJugador,w
  8378  15C1  00F1               	movwf	___bmul@multiplicand
  8379  15C2  085F               	movf	moverJugador@jugador,w
  8380  15C3  0086               	movwf	6
  8381  15C4  0860               	movf	moverJugador@jugador+1,w
  8382  15C5  0087               	movwf	7
  8383  15C6  3142               	addfsr 1,2
  8384  15C7  0801               	movf	1,w
  8385  15C8  3190  203E  3195   	fcall	___bmul
  8386  15CB  3E40               	addlw	64
  8387  15CC  0020               	movlb	0	; select bank0
  8388  15CD  00E2               	movwf	??_moverJugador+1
  8389  15CE  0862               	movf	??_moverJugador+1,w
  8390  15CF  00E6               	movwf	moverJugador@y
  8391  15D0                     l465:	
  8392                           ;main.c: 227:     }
  8393                           
  8394                           
  8395                           ;main.c: 229:     display_drawCustomChar(jugador->posicion, y, jugador->forma, 0x0000, 0
      +                          x0000, jugador->escala);
  8396  15D0  085F               	movf	moverJugador@jugador,w
  8397  15D1  0086               	movwf	6
  8398  15D2  0860               	movf	moverJugador@jugador+1,w
  8399  15D3  0087               	movwf	7
  8400  15D4  3149               	addfsr 1,9
  8401  15D5  0801               	movf	1,w
  8402  15D6  00E1               	movwf	??_moverJugador
  8403  15D7  01E2               	clrf	??_moverJugador+1
  8404  15D8  0861               	movf	??_moverJugador,w
  8405  15D9  00CB               	movwf	display_drawCustomChar@x
  8406  15DA  0862               	movf	??_moverJugador+1,w
  8407  15DB  00CC               	movwf	display_drawCustomChar@x+1
  8408  15DC  0866               	movf	moverJugador@y,w
  8409  15DD  00E3               	movwf	??_moverJugador+2
  8410  15DE  01E4               	clrf	??_moverJugador+3
  8411  15DF  0863               	movf	??_moverJugador+2,w
  8412  15E0  00CD               	movwf	display_drawCustomChar@y
  8413  15E1  0864               	movf	??_moverJugador+3,w
  8414  15E2  00CE               	movwf	display_drawCustomChar@y+1
  8415  15E3  085F               	movf	moverJugador@jugador,w
  8416  15E4  3E04               	addlw	4
  8417  15E5  00CF               	movwf	display_drawCustomChar@c
  8418  15E6  3000               	movlw	0
  8419  15E7  3D60               	addwfc	moverJugador@jugador+1,w
  8420  15E8  00D0               	movwf	display_drawCustomChar@c+1
  8421  15E9  3000               	movlw	0
  8422  15EA  00D1               	movwf	display_drawCustomChar@color
  8423  15EB  00D2               	movwf	display_drawCustomChar@color+1
  8424  15EC  3000               	movlw	0
  8425  15ED  00D3               	movwf	display_drawCustomChar@bg
  8426  15EE  00D4               	movwf	display_drawCustomChar@bg+1
  8427  15EF  085F               	movf	moverJugador@jugador,w
  8428  15F0  0086               	movwf	6
  8429  15F1  0860               	movf	moverJugador@jugador+1,w
  8430  15F2  0087               	movwf	7
  8431  15F3  3142               	addfsr 1,2
  8432  15F4  0801               	movf	1,w
  8433  15F5  00E5               	movwf	??_moverJugador+4
  8434  15F6  0865               	movf	??_moverJugador+4,w
  8435  15F7  00D5               	movwf	display_drawCustomChar@size
  8436  15F8  3193  23C6  3195   	fcall	_display_drawCustomChar
  8437  15FB                     l5827:
  8438                           
  8439                           ;main.c: 230:     if (jugador->sentido) {
  8440  15FB  0020               	movlb	0	; select bank0
  8441  15FC  085F               	movf	moverJugador@jugador,w
  8442  15FD  0086               	movwf	6
  8443  15FE  0860               	movf	moverJugador@jugador+1,w
  8444  15FF  0087               	movwf	7
  8445  1600  0801               	movf	1,w
  8446  1601  1903               	btfsc	3,2
  8447  1602  2E04               	goto	u5901
  8448  1603  2E05               	goto	u5900
  8449  1604                     u5901:
  8450  1604  2E14               	goto	l5831
  8451  1605                     u5900:
  8452  1605                     l5829:
  8453                           
  8454                           ;main.c: 231:         jugador->posicion += jugador->velocidad;
  8455  1605  085F               	movf	moverJugador@jugador,w
  8456  1606  0086               	movwf	6
  8457  1607  0860               	movf	moverJugador@jugador+1,w
  8458  1608  0087               	movwf	7
  8459  1609  3141               	addfsr 1,1
  8460  160A  0801               	movf	1,w
  8461  160B  00E1               	movwf	??_moverJugador
  8462  160C  085F               	movf	moverJugador@jugador,w
  8463  160D  0086               	movwf	6
  8464  160E  0860               	movf	moverJugador@jugador+1,w
  8465  160F  0087               	movwf	7
  8466  1610  3149               	addfsr 1,9
  8467  1611  0861               	movf	??_moverJugador,w
  8468  1612  0781               	addwf	1,f
  8469                           
  8470                           ;main.c: 232:     } else {
  8471  1613  2E20               	goto	l5833
  8472  1614                     l5831:
  8473                           
  8474                           ;main.c: 233:         jugador->posicion -= jugador->velocidad;
  8475  1614  085F               	movf	moverJugador@jugador,w
  8476  1615  0086               	movwf	6
  8477  1616  0860               	movf	moverJugador@jugador+1,w
  8478  1617  0087               	movwf	7
  8479  1618  3141               	addfsr 1,1
  8480  1619  085F               	movf	moverJugador@jugador,w
  8481  161A  0084               	movwf	4
  8482  161B  0860               	movf	moverJugador@jugador+1,w
  8483  161C  0085               	movwf	5
  8484  161D  3109               	addfsr 0,9
  8485  161E  0801               	movf	1,w
  8486  161F  0280               	subwf	0,f
  8487  1620                     l5833:
  8488                           
  8489                           ;main.c: 235:     display_drawCustomChar(jugador->posicion, y, jugador->forma, 0x07E0, 0
      +                          x0000, jugador->escala);
  8490  1620  085F               	movf	moverJugador@jugador,w
  8491  1621  0086               	movwf	6
  8492  1622  0860               	movf	moverJugador@jugador+1,w
  8493  1623  0087               	movwf	7
  8494  1624  3149               	addfsr 1,9
  8495  1625  0801               	movf	1,w
  8496  1626  00E1               	movwf	??_moverJugador
  8497  1627  01E2               	clrf	??_moverJugador+1
  8498  1628  0861               	movf	??_moverJugador,w
  8499  1629  00CB               	movwf	display_drawCustomChar@x
  8500  162A  0862               	movf	??_moverJugador+1,w
  8501  162B  00CC               	movwf	display_drawCustomChar@x+1
  8502  162C  0866               	movf	moverJugador@y,w
  8503  162D  00E3               	movwf	??_moverJugador+2
  8504  162E  01E4               	clrf	??_moverJugador+3
  8505  162F  0863               	movf	??_moverJugador+2,w
  8506  1630  00CD               	movwf	display_drawCustomChar@y
  8507  1631  0864               	movf	??_moverJugador+3,w
  8508  1632  00CE               	movwf	display_drawCustomChar@y+1
  8509  1633  085F               	movf	moverJugador@jugador,w
  8510  1634  3E04               	addlw	4
  8511  1635  00CF               	movwf	display_drawCustomChar@c
  8512  1636  3000               	movlw	0
  8513  1637  3D60               	addwfc	moverJugador@jugador+1,w
  8514  1638  00D0               	movwf	display_drawCustomChar@c+1
  8515  1639  30E0               	movlw	224
  8516  163A  00D1               	movwf	display_drawCustomChar@color
  8517  163B  3007               	movlw	7
  8518  163C  00D2               	movwf	display_drawCustomChar@color+1
  8519  163D  3000               	movlw	0
  8520  163E  00D3               	movwf	display_drawCustomChar@bg
  8521  163F  00D4               	movwf	display_drawCustomChar@bg+1
  8522  1640  085F               	movf	moverJugador@jugador,w
  8523  1641  0086               	movwf	6
  8524  1642  0860               	movf	moverJugador@jugador+1,w
  8525  1643  0087               	movwf	7
  8526  1644  3142               	addfsr 1,2
  8527  1645  0801               	movf	1,w
  8528  1646  00E5               	movwf	??_moverJugador+4
  8529  1647  0865               	movf	??_moverJugador+4,w
  8530  1648  00D5               	movwf	display_drawCustomChar@size
  8531  1649  3193  23C6  3195   	fcall	_display_drawCustomChar
  8532  164C                     l468:
  8533  164C  0008               	return
  8534  164D                     __end_of_moverJugador:
  8535                           
  8536                           	psect	text3
  8537  13C6                     __ptext3:	
  8538 ;; *************** function _display_drawCustomChar *****************
  8539 ;; Defined at:
  8540 ;;		line 827 in file "GFX_Library.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  x               2   43[BANK0 ] unsigned short 
  8543 ;;  y               2   45[BANK0 ] unsigned short 
  8544 ;;  c               2   47[BANK0 ] PTR unsigned char 
  8545 ;;		 -> bolita(12), jugador2(10), jugador1(10), 
  8546 ;;  color           2   49[BANK0 ] unsigned short 
  8547 ;;  bg              2   51[BANK0 ] unsigned short 
  8548 ;;  size            1   53[BANK0 ] unsigned char 
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  prev_bg         2   60[BANK0 ] unsigned short 
  8551 ;;  prev_color      2   58[BANK0 ] unsigned short 
  8552 ;;  prev_y          2   56[BANK0 ] unsigned short 
  8553 ;;  prev_x          2   54[BANK0 ] unsigned short 
  8554 ;;  prev_size       1   62[BANK0 ] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8564 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Totals:         1      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;Total ram usage:       21 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    9
  8571 ;; This function calls:
  8572 ;;		_display_customChar
  8573 ;;		_display_setCursor
  8574 ;;		_display_setTextColor
  8575 ;;		_display_setTextSize
  8576 ;; This function is called by:
  8577 ;;		_main
  8578 ;;		_moverJugador
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function _display_drawCustomChar
  8584  13C6                     _display_drawCustomChar:
  8585  13C6                     l5657:	
  8586                           ;incstack = 0
  8587                           ; Regs used in _display_drawCustomChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8588                           
  8589                           
  8590                           ;GFX_Library.c: 827: void display_drawCustomChar(uint16_t x, uint16_t y, uint8_t c[5], u
      +                          int16_t color, uint16_t bg,;GFX_Library.c: 828:      uint8_t size) {;GFX_Library.c: 829:
      +                             uint16_t prev_x = cursor_x,
  8591  13C6  0021               	movlb	1	; select bank1
  8592  13C7  0846               	movf	(_cursor_x+1)^(0+128),w
  8593  13C8  0020               	movlb	0	; select bank0
  8594  13C9  00D7               	movwf	display_drawCustomChar@prev_x+1
  8595  13CA  0021               	movlb	1	; select bank1
  8596  13CB  0845               	movf	_cursor_x^(0+128),w
  8597  13CC  0020               	movlb	0	; select bank0
  8598  13CD  00D6               	movwf	display_drawCustomChar@prev_x
  8599                           
  8600                           ;GFX_Library.c: 830:            prev_y = cursor_y,
  8601  13CE  0021               	movlb	1	; select bank1
  8602  13CF  0844               	movf	(_cursor_y+1)^(0+128),w
  8603  13D0  0020               	movlb	0	; select bank0
  8604  13D1  00D9               	movwf	display_drawCustomChar@prev_y+1
  8605  13D2  0021               	movlb	1	; select bank1
  8606  13D3  0843               	movf	_cursor_y^(0+128),w
  8607  13D4  0020               	movlb	0	; select bank0
  8608  13D5  00D8               	movwf	display_drawCustomChar@prev_y
  8609                           
  8610                           ;GFX_Library.c: 831:            prev_color = textcolor,
  8611  13D6  0021               	movlb	1	; select bank1
  8612  13D7  0823               	movf	(_textcolor+1)^(0+128),w
  8613  13D8  0020               	movlb	0	; select bank0
  8614  13D9  00DB               	movwf	display_drawCustomChar@prev_color+1
  8615  13DA  0021               	movlb	1	; select bank1
  8616  13DB  0822               	movf	_textcolor^(0+128),w
  8617  13DC  0020               	movlb	0	; select bank0
  8618  13DD  00DA               	movwf	display_drawCustomChar@prev_color
  8619                           
  8620                           ;GFX_Library.c: 832:            prev_bg = textbgcolor;
  8621  13DE  0021               	movlb	1	; select bank1
  8622  13DF  0821               	movf	(_textbgcolor+1)^(0+128),w
  8623  13E0  0020               	movlb	0	; select bank0
  8624  13E1  00DD               	movwf	display_drawCustomChar@prev_bg+1
  8625  13E2  0021               	movlb	1	; select bank1
  8626  13E3  0820               	movf	_textbgcolor^(0+128),w
  8627  13E4  0020               	movlb	0	; select bank0
  8628  13E5  00DC               	movwf	display_drawCustomChar@prev_bg
  8629                           
  8630                           ;GFX_Library.c: 833:   uint8_t prev_size = textsize;
  8631  13E6  086F               	movf	_textsize,w
  8632  13E7  00FB               	movwf	??_display_drawCustomChar
  8633  13E8  087B               	movf	??_display_drawCustomChar,w
  8634  13E9  00DE               	movwf	display_drawCustomChar@prev_size
  8635  13EA                     l5659:
  8636                           
  8637                           ;GFX_Library.c: 835:   display_setCursor(x, y);
  8638  13EA  084C               	movf	display_drawCustomChar@x+1,w
  8639  13EB  00F2               	movwf	display_setCursor@x+1
  8640  13EC  084B               	movf	display_drawCustomChar@x,w
  8641  13ED  00F1               	movwf	display_setCursor@x
  8642  13EE  084E               	movf	display_drawCustomChar@y+1,w
  8643  13EF  00F4               	movwf	display_setCursor@y+1
  8644  13F0  084D               	movf	display_drawCustomChar@y,w
  8645  13F1  00F3               	movwf	display_setCursor@y
  8646  13F2  319F  27AA  3193   	fcall	_display_setCursor
  8647  13F5                     l5661:
  8648                           
  8649                           ;GFX_Library.c: 836:   display_setTextSize(size);
  8650  13F5  0020               	movlb	0	; select bank0
  8651  13F6  0855               	movf	display_drawCustomChar@size,w
  8652  13F7  3190  2053  3193   	fcall	_display_setTextSize
  8653  13FA                     l5663:
  8654                           
  8655                           ;GFX_Library.c: 837:   display_setTextColor(color, bg);
  8656  13FA  0020               	movlb	0	; select bank0
  8657  13FB  0852               	movf	display_drawCustomChar@color+1,w
  8658  13FC  00F2               	movwf	display_setTextColor@c+1
  8659  13FD  0851               	movf	display_drawCustomChar@color,w
  8660  13FE  00F1               	movwf	display_setTextColor@c
  8661  13FF  0854               	movf	display_drawCustomChar@bg+1,w
  8662  1400  00F4               	movwf	display_setTextColor@bg+1
  8663  1401  0853               	movf	display_drawCustomChar@bg,w
  8664  1402  00F3               	movwf	display_setTextColor@bg
  8665  1403  319F  27B4  3193   	fcall	_display_setTextColor
  8666  1406                     l5665:
  8667                           
  8668                           ;GFX_Library.c: 838:   display_customChar(c);
  8669  1406  0020               	movlb	0	; select bank0
  8670  1407  0850               	movf	display_drawCustomChar@c+1,w
  8671  1408  00BB               	movwf	display_customChar@c+1
  8672  1409  084F               	movf	display_drawCustomChar@c,w
  8673  140A  00BA               	movwf	display_customChar@c
  8674  140B  318D  25C3  3193   	fcall	_display_customChar
  8675  140E                     l5667:
  8676                           
  8677                           ;GFX_Library.c: 841:   cursor_x = prev_x;
  8678  140E  0020               	movlb	0	; select bank0
  8679  140F  0857               	movf	display_drawCustomChar@prev_x+1,w
  8680  1410  0021               	movlb	1	; select bank1
  8681  1411  00C6               	movwf	(_cursor_x+1)^(0+128)
  8682  1412  0020               	movlb	0	; select bank0
  8683  1413  0856               	movf	display_drawCustomChar@prev_x,w
  8684  1414  0021               	movlb	1	; select bank1
  8685  1415  00C5               	movwf	_cursor_x^(0+128)
  8686  1416                     l5669:
  8687                           
  8688                           ;GFX_Library.c: 842:   cursor_y = prev_y;
  8689  1416  0020               	movlb	0	; select bank0
  8690  1417  0859               	movf	display_drawCustomChar@prev_y+1,w
  8691  1418  0021               	movlb	1	; select bank1
  8692  1419  00C4               	movwf	(_cursor_y+1)^(0+128)
  8693  141A  0020               	movlb	0	; select bank0
  8694  141B  0858               	movf	display_drawCustomChar@prev_y,w
  8695  141C  0021               	movlb	1	; select bank1
  8696  141D  00C3               	movwf	_cursor_y^(0+128)
  8697  141E                     l5671:
  8698                           
  8699                           ;GFX_Library.c: 843:   textcolor = prev_color;
  8700  141E  0020               	movlb	0	; select bank0
  8701  141F  085B               	movf	display_drawCustomChar@prev_color+1,w
  8702  1420  0021               	movlb	1	; select bank1
  8703  1421  00A3               	movwf	(_textcolor+1)^(0+128)
  8704  1422  0020               	movlb	0	; select bank0
  8705  1423  085A               	movf	display_drawCustomChar@prev_color,w
  8706  1424  0021               	movlb	1	; select bank1
  8707  1425  00A2               	movwf	_textcolor^(0+128)
  8708  1426                     l5673:
  8709                           
  8710                           ;GFX_Library.c: 844:   textbgcolor = prev_bg;
  8711  1426  0020               	movlb	0	; select bank0
  8712  1427  085D               	movf	display_drawCustomChar@prev_bg+1,w
  8713  1428  0021               	movlb	1	; select bank1
  8714  1429  00A1               	movwf	(_textbgcolor+1)^(0+128)
  8715  142A  0020               	movlb	0	; select bank0
  8716  142B  085C               	movf	display_drawCustomChar@prev_bg,w
  8717  142C  0021               	movlb	1	; select bank1
  8718  142D  00A0               	movwf	_textbgcolor^(0+128)
  8719  142E                     l5675:
  8720                           
  8721                           ;GFX_Library.c: 845:   textsize = prev_size;
  8722  142E  0020               	movlb	0	; select bank0
  8723  142F  085E               	movf	display_drawCustomChar@prev_size,w
  8724  1430  00FB               	movwf	??_display_drawCustomChar
  8725  1431  087B               	movf	??_display_drawCustomChar,w
  8726  1432  00EF               	movwf	_textsize
  8727  1433                     l864:
  8728  1433  0008               	return
  8729  1434                     __end_of_display_drawCustomChar:
  8730                           
  8731                           	psect	text4
  8732  0DC3                     __ptext4:	
  8733 ;; *************** function _display_customChar *****************
  8734 ;; Defined at:
  8735 ;;		line 515 in file "GFX_Library.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  c               2   26[BANK0 ] PTR const unsigned char 
  8738 ;;		 -> bolita(12), jugador2(10), jugador1(10), 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  j               1   41[BANK0 ] unsigned char 
  8741 ;;  line            1   40[BANK0 ] unsigned char 
  8742 ;;  i               1   42[BANK0 ] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;Total ram usage:       17 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    8
  8759 ;; This function calls:
  8760 ;;		___wmul
  8761 ;;		_drawPixel
  8762 ;;		_drawVLine
  8763 ;;		_fillRect
  8764 ;; This function is called by:
  8765 ;;		_display_drawCustomChar
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _display_customChar
  8771  0DC3                     _display_customChar:
  8772  0DC3                     l5585:	
  8773                           ;incstack = 0
  8774                           ; Regs used in _display_customChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8775                           
  8776                           
  8777                           ;GFX_Library.c: 517:   for(uint8_t i = 0; i < 5; i++ ) {
  8778  0DC3  0020               	movlb	0	; select bank0
  8779  0DC4  01CA               	clrf	display_customChar@i
  8780  0DC5                     l5591:
  8781                           
  8782                           ;GFX_Library.c: 518:     uint8_t line = c[i];
  8783  0DC5  084A               	movf	display_customChar@i,w
  8784  0DC6  00BC               	movwf	??_display_customChar
  8785  0DC7  01BD               	clrf	??_display_customChar+1
  8786  0DC8  083C               	movf	??_display_customChar,w
  8787  0DC9  073A               	addwf	display_customChar@c,w
  8788  0DCA  0086               	movwf	6
  8789  0DCB  083D               	movf	??_display_customChar+1,w
  8790  0DCC  3D3B               	addwfc	display_customChar@c+1,w
  8791  0DCD  0087               	movwf	7
  8792  0DCE  0801               	movf	1,w
  8793  0DCF  00BE               	movwf	??_display_customChar+2
  8794  0DD0  083E               	movf	??_display_customChar+2,w
  8795  0DD1  00C8               	movwf	display_customChar@line
  8796  0DD2                     l5593:
  8797                           
  8798                           ;GFX_Library.c: 519:     for(uint8_t j = 0; j < 8; j++, line >>= 1) {
  8799  0DD2  01C9               	clrf	display_customChar@j
  8800  0DD3                     l760:
  8801                           
  8802                           ;GFX_Library.c: 520:       if(line & 1) {
  8803  0DD3  1C48               	btfss	display_customChar@line,0
  8804  0DD4  2DD6               	goto	u5641
  8805  0DD5  2DD7               	goto	u5640
  8806  0DD6                     u5641:
  8807  0DD6  2E4E               	goto	l5605
  8808  0DD7                     u5640:
  8809  0DD7                     l5599:
  8810                           
  8811                           ;GFX_Library.c: 521:         if(textsize == 1)
  8812  0DD7  036F               	decf	_textsize,w
  8813  0DD8  1D03               	btfss	3,2
  8814  0DD9  2DDB               	goto	u5651
  8815  0DDA  2DDC               	goto	u5650
  8816  0DDB                     u5651:
  8817  0DDB  2DFE               	goto	l5603
  8818  0DDC                     u5650:
  8819  0DDC                     l5601:
  8820                           
  8821                           ;GFX_Library.c: 522:           drawPixel(cursor_x + i, cursor_y + j, textcolor);
  8822  0DDC  084A               	movf	display_customChar@i,w
  8823  0DDD  0021               	movlb	1	; select bank1
  8824  0DDE  0745               	addwf	_cursor_x^(0+128),w
  8825  0DDF  0020               	movlb	0	; select bank0
  8826  0DE0  00A6               	movwf	drawPixel@x
  8827  0DE1  0021               	movlb	1	; select bank1
  8828  0DE2  0846               	movf	(_cursor_x+1)^(0+128),w
  8829  0DE3  1803               	skipnc
  8830  0DE4  0A46               	incf	(_cursor_x+1)^(0+128),w
  8831  0DE5  0020               	movlb	0	; select bank0
  8832  0DE6  00A7               	movwf	drawPixel@x+1
  8833  0DE7  0849               	movf	display_customChar@j,w
  8834  0DE8  0021               	movlb	1	; select bank1
  8835  0DE9  0743               	addwf	_cursor_y^(0+128),w
  8836  0DEA  0020               	movlb	0	; select bank0
  8837  0DEB  00A8               	movwf	drawPixel@y
  8838  0DEC  0021               	movlb	1	; select bank1
  8839  0DED  0844               	movf	(_cursor_y+1)^(0+128),w
  8840  0DEE  1803               	skipnc
  8841  0DEF  0A44               	incf	(_cursor_y+1)^(0+128),w
  8842  0DF0  0020               	movlb	0	; select bank0
  8843  0DF1  00A9               	movwf	drawPixel@y+1
  8844  0DF2  0021               	movlb	1	; select bank1
  8845  0DF3  0823               	movf	(_textcolor+1)^(0+128),w
  8846  0DF4  0020               	movlb	0	; select bank0
  8847  0DF5  00AB               	movwf	drawPixel@color+1
  8848  0DF6  0021               	movlb	1	; select bank1
  8849  0DF7  0822               	movf	_textcolor^(0+128),w
  8850  0DF8  0020               	movlb	0	; select bank0
  8851  0DF9  00AA               	movwf	drawPixel@color
  8852  0DFA  3191  21D1  318D   	fcall	_drawPixel
  8853  0DFD  2ED0               	goto	l5613
  8854  0DFE                     l5603:
  8855                           
  8856                           ;GFX_Library.c: 524:           fillRect(cursor_x + i * textsize, cursor_y + j * textsize
      +                          , textsize, textsize, textcolor);
  8857  0DFE  084A               	movf	display_customChar@i,w
  8858  0DFF  00BC               	movwf	??_display_customChar
  8859  0E00  01BD               	clrf	??_display_customChar+1
  8860  0E01  083C               	movf	??_display_customChar,w
  8861  0E02  00F1               	movwf	___wmul@multiplier
  8862  0E03  083D               	movf	??_display_customChar+1,w
  8863  0E04  00F2               	movwf	___wmul@multiplier+1
  8864  0E05  086F               	movf	_textsize,w
  8865  0E06  00BE               	movwf	??_display_customChar+2
  8866  0E07  01BF               	clrf	??_display_customChar+3
  8867  0E08  083E               	movf	??_display_customChar+2,w
  8868  0E09  00F3               	movwf	___wmul@multiplicand
  8869  0E0A  083F               	movf	??_display_customChar+3,w
  8870  0E0B  00F4               	movwf	___wmul@multiplicand+1
  8871  0E0C  3190  20BA  318D   	fcall	___wmul
  8872  0E0F  0021               	movlb	1	; select bank1
  8873  0E10  0845               	movf	_cursor_x^(0+128),w
  8874  0E11  0771               	addwf	?___wmul,w
  8875  0E12  0020               	movlb	0	; select bank0
  8876  0E13  00A6               	movwf	fillRect@x
  8877  0E14  0021               	movlb	1	; select bank1
  8878  0E15  0846               	movf	(_cursor_x+1)^(0+128),w
  8879  0E16  3D72               	addwfc	?___wmul+1,w
  8880  0E17  0020               	movlb	0	; select bank0
  8881  0E18  00A7               	movwf	fillRect@x+1
  8882  0E19  0849               	movf	display_customChar@j,w
  8883  0E1A  00C0               	movwf	??_display_customChar+4
  8884  0E1B  01C1               	clrf	??_display_customChar+5
  8885  0E1C  0840               	movf	??_display_customChar+4,w
  8886  0E1D  00F1               	movwf	___wmul@multiplier
  8887  0E1E  0841               	movf	??_display_customChar+5,w
  8888  0E1F  00F2               	movwf	___wmul@multiplier+1
  8889  0E20  086F               	movf	_textsize,w
  8890  0E21  00C2               	movwf	??_display_customChar+6
  8891  0E22  01C3               	clrf	??_display_customChar+7
  8892  0E23  0842               	movf	??_display_customChar+6,w
  8893  0E24  00F3               	movwf	___wmul@multiplicand
  8894  0E25  0843               	movf	??_display_customChar+7,w
  8895  0E26  00F4               	movwf	___wmul@multiplicand+1
  8896  0E27  3190  20BA  318D   	fcall	___wmul
  8897  0E2A  0021               	movlb	1	; select bank1
  8898  0E2B  0843               	movf	_cursor_y^(0+128),w
  8899  0E2C  0771               	addwf	?___wmul,w
  8900  0E2D  0020               	movlb	0	; select bank0
  8901  0E2E  00A8               	movwf	fillRect@y
  8902  0E2F  0021               	movlb	1	; select bank1
  8903  0E30  0844               	movf	(_cursor_y+1)^(0+128),w
  8904  0E31  3D72               	addwfc	?___wmul+1,w
  8905  0E32  0020               	movlb	0	; select bank0
  8906  0E33  00A9               	movwf	fillRect@y+1
  8907  0E34  086F               	movf	_textsize,w
  8908  0E35  00C4               	movwf	??_display_customChar+8
  8909  0E36  01C5               	clrf	??_display_customChar+9
  8910  0E37  0844               	movf	??_display_customChar+8,w
  8911  0E38  00AA               	movwf	fillRect@w
  8912  0E39  0845               	movf	??_display_customChar+9,w
  8913  0E3A  00AB               	movwf	fillRect@w+1
  8914  0E3B  086F               	movf	_textsize,w
  8915  0E3C  00C6               	movwf	??_display_customChar+10
  8916  0E3D  01C7               	clrf	??_display_customChar+11
  8917  0E3E  0846               	movf	??_display_customChar+10,w
  8918  0E3F  00AC               	movwf	fillRect@h
  8919  0E40  0847               	movf	??_display_customChar+11,w
  8920  0E41  00AD               	movwf	fillRect@h+1
  8921  0E42  0021               	movlb	1	; select bank1
  8922  0E43  0823               	movf	(_textcolor+1)^(0+128),w
  8923  0E44  0020               	movlb	0	; select bank0
  8924  0E45  00AF               	movwf	fillRect@color+1
  8925  0E46  0021               	movlb	1	; select bank1
  8926  0E47  0822               	movf	_textcolor^(0+128),w
  8927  0E48  0020               	movlb	0	; select bank0
  8928  0E49  00AE               	movwf	fillRect@color
  8929  0E4A  3196  264D  318D   	fcall	_fillRect
  8930  0E4D  2ED0               	goto	l5613
  8931  0E4E                     l5605:
  8932                           
  8933                           ;GFX_Library.c: 527:         if(textbgcolor != textcolor) {
  8934  0E4E  0021               	movlb	1	; select bank1
  8935  0E4F  0823               	movf	(_textcolor+1)^(0+128),w
  8936  0E50  0621               	xorwf	(_textbgcolor+1)^(0+128),w
  8937  0E51  1D03               	skipz
  8938  0E52  2E55               	goto	u5665
  8939  0E53  0822               	movf	_textcolor^(0+128),w
  8940  0E54  0620               	xorwf	_textbgcolor^(0+128),w
  8941  0E55                     u5665:
  8942  0E55  1903               	skipnz
  8943  0E56  2E58               	goto	u5661
  8944  0E57  2E59               	goto	u5660
  8945  0E58                     u5661:
  8946  0E58  2ED0               	goto	l5613
  8947  0E59                     u5660:
  8948  0E59                     l5607:
  8949                           
  8950                           ;GFX_Library.c: 528:           if(textsize == 1)
  8951  0E59  0020               	movlb	0	; select bank0
  8952  0E5A  036F               	decf	_textsize,w
  8953  0E5B  1D03               	btfss	3,2
  8954  0E5C  2E5E               	goto	u5671
  8955  0E5D  2E5F               	goto	u5670
  8956  0E5E                     u5671:
  8957  0E5E  2E81               	goto	l5611
  8958  0E5F                     u5670:
  8959  0E5F                     l5609:
  8960                           
  8961                           ;GFX_Library.c: 529:             drawPixel(cursor_x + i, cursor_y + j, textbgcolor);
  8962  0E5F  084A               	movf	display_customChar@i,w
  8963  0E60  0021               	movlb	1	; select bank1
  8964  0E61  0745               	addwf	_cursor_x^(0+128),w
  8965  0E62  0020               	movlb	0	; select bank0
  8966  0E63  00A6               	movwf	drawPixel@x
  8967  0E64  0021               	movlb	1	; select bank1
  8968  0E65  0846               	movf	(_cursor_x+1)^(0+128),w
  8969  0E66  1803               	skipnc
  8970  0E67  0A46               	incf	(_cursor_x+1)^(0+128),w
  8971  0E68  0020               	movlb	0	; select bank0
  8972  0E69  00A7               	movwf	drawPixel@x+1
  8973  0E6A  0849               	movf	display_customChar@j,w
  8974  0E6B  0021               	movlb	1	; select bank1
  8975  0E6C  0743               	addwf	_cursor_y^(0+128),w
  8976  0E6D  0020               	movlb	0	; select bank0
  8977  0E6E  00A8               	movwf	drawPixel@y
  8978  0E6F  0021               	movlb	1	; select bank1
  8979  0E70  0844               	movf	(_cursor_y+1)^(0+128),w
  8980  0E71  1803               	skipnc
  8981  0E72  0A44               	incf	(_cursor_y+1)^(0+128),w
  8982  0E73  0020               	movlb	0	; select bank0
  8983  0E74  00A9               	movwf	drawPixel@y+1
  8984  0E75  0021               	movlb	1	; select bank1
  8985  0E76  0821               	movf	(_textbgcolor+1)^(0+128),w
  8986  0E77  0020               	movlb	0	; select bank0
  8987  0E78  00AB               	movwf	drawPixel@color+1
  8988  0E79  0021               	movlb	1	; select bank1
  8989  0E7A  0820               	movf	_textbgcolor^(0+128),w
  8990  0E7B  0020               	movlb	0	; select bank0
  8991  0E7C  00AA               	movwf	drawPixel@color
  8992  0E7D  3191  21D1  318D   	fcall	_drawPixel
  8993  0E80  2ED0               	goto	l5613
  8994  0E81                     l5611:
  8995                           
  8996                           ;GFX_Library.c: 531:             fillRect(cursor_x + i * textsize, cursor_y + j * textsi
      +                          ze, textsize, textsize, textbgcolor);
  8997  0E81  084A               	movf	display_customChar@i,w
  8998  0E82  00BC               	movwf	??_display_customChar
  8999  0E83  01BD               	clrf	??_display_customChar+1
  9000  0E84  083C               	movf	??_display_customChar,w
  9001  0E85  00F1               	movwf	___wmul@multiplier
  9002  0E86  083D               	movf	??_display_customChar+1,w
  9003  0E87  00F2               	movwf	___wmul@multiplier+1
  9004  0E88  086F               	movf	_textsize,w
  9005  0E89  00BE               	movwf	??_display_customChar+2
  9006  0E8A  01BF               	clrf	??_display_customChar+3
  9007  0E8B  083E               	movf	??_display_customChar+2,w
  9008  0E8C  00F3               	movwf	___wmul@multiplicand
  9009  0E8D  083F               	movf	??_display_customChar+3,w
  9010  0E8E  00F4               	movwf	___wmul@multiplicand+1
  9011  0E8F  3190  20BA  318D   	fcall	___wmul
  9012  0E92  0021               	movlb	1	; select bank1
  9013  0E93  0845               	movf	_cursor_x^(0+128),w
  9014  0E94  0771               	addwf	?___wmul,w
  9015  0E95  0020               	movlb	0	; select bank0
  9016  0E96  00A6               	movwf	fillRect@x
  9017  0E97  0021               	movlb	1	; select bank1
  9018  0E98  0846               	movf	(_cursor_x+1)^(0+128),w
  9019  0E99  3D72               	addwfc	?___wmul+1,w
  9020  0E9A  0020               	movlb	0	; select bank0
  9021  0E9B  00A7               	movwf	fillRect@x+1
  9022  0E9C  0849               	movf	display_customChar@j,w
  9023  0E9D  00C0               	movwf	??_display_customChar+4
  9024  0E9E  01C1               	clrf	??_display_customChar+5
  9025  0E9F  0840               	movf	??_display_customChar+4,w
  9026  0EA0  00F1               	movwf	___wmul@multiplier
  9027  0EA1  0841               	movf	??_display_customChar+5,w
  9028  0EA2  00F2               	movwf	___wmul@multiplier+1
  9029  0EA3  086F               	movf	_textsize,w
  9030  0EA4  00C2               	movwf	??_display_customChar+6
  9031  0EA5  01C3               	clrf	??_display_customChar+7
  9032  0EA6  0842               	movf	??_display_customChar+6,w
  9033  0EA7  00F3               	movwf	___wmul@multiplicand
  9034  0EA8  0843               	movf	??_display_customChar+7,w
  9035  0EA9  00F4               	movwf	___wmul@multiplicand+1
  9036  0EAA  3190  20BA  318D   	fcall	___wmul
  9037  0EAD  0021               	movlb	1	; select bank1
  9038  0EAE  0843               	movf	_cursor_y^(0+128),w
  9039  0EAF  0771               	addwf	?___wmul,w
  9040  0EB0  0020               	movlb	0	; select bank0
  9041  0EB1  00A8               	movwf	fillRect@y
  9042  0EB2  0021               	movlb	1	; select bank1
  9043  0EB3  0844               	movf	(_cursor_y+1)^(0+128),w
  9044  0EB4  3D72               	addwfc	?___wmul+1,w
  9045  0EB5  0020               	movlb	0	; select bank0
  9046  0EB6  00A9               	movwf	fillRect@y+1
  9047  0EB7  086F               	movf	_textsize,w
  9048  0EB8  00C4               	movwf	??_display_customChar+8
  9049  0EB9  01C5               	clrf	??_display_customChar+9
  9050  0EBA  0844               	movf	??_display_customChar+8,w
  9051  0EBB  00AA               	movwf	fillRect@w
  9052  0EBC  0845               	movf	??_display_customChar+9,w
  9053  0EBD  00AB               	movwf	fillRect@w+1
  9054  0EBE  086F               	movf	_textsize,w
  9055  0EBF  00C6               	movwf	??_display_customChar+10
  9056  0EC0  01C7               	clrf	??_display_customChar+11
  9057  0EC1  0846               	movf	??_display_customChar+10,w
  9058  0EC2  00AC               	movwf	fillRect@h
  9059  0EC3  0847               	movf	??_display_customChar+11,w
  9060  0EC4  00AD               	movwf	fillRect@h+1
  9061  0EC5  0021               	movlb	1	; select bank1
  9062  0EC6  0821               	movf	(_textbgcolor+1)^(0+128),w
  9063  0EC7  0020               	movlb	0	; select bank0
  9064  0EC8  00AF               	movwf	fillRect@color+1
  9065  0EC9  0021               	movlb	1	; select bank1
  9066  0ECA  0820               	movf	_textbgcolor^(0+128),w
  9067  0ECB  0020               	movlb	0	; select bank0
  9068  0ECC  00AE               	movwf	fillRect@color
  9069  0ECD  3196  264D  318D   	fcall	_fillRect
  9070  0ED0                     l5613:
  9071                           
  9072                           ;GFX_Library.c: 533:     }
  9073  0ED0  3001               	movlw	1
  9074  0ED1  0020               	movlb	0	; select bank0
  9075  0ED2  00BC               	movwf	??_display_customChar
  9076  0ED3  083C               	movf	??_display_customChar,w
  9077  0ED4  07C9               	addwf	display_customChar@j,f
  9078  0ED5                     l5615:
  9079  0ED5  1003               	clrc
  9080  0ED6  0CC8               	rrf	display_customChar@line,f
  9081  0ED7                     l5617:
  9082  0ED7  3008               	movlw	8
  9083  0ED8  0249               	subwf	display_customChar@j,w
  9084  0ED9  1C03               	skipc
  9085  0EDA  2EDC               	goto	u5681
  9086  0EDB  2EDD               	goto	u5680
  9087  0EDC                     u5681:
  9088  0EDC  2DD3               	goto	l760
  9089  0EDD                     u5680:
  9090  0EDD                     l5619:
  9091                           
  9092                           ;GFX_Library.c: 534:   }
  9093  0EDD  3001               	movlw	1
  9094  0EDE  00BC               	movwf	??_display_customChar
  9095  0EDF  083C               	movf	??_display_customChar,w
  9096  0EE0  07CA               	addwf	display_customChar@i,f
  9097  0EE1                     l5621:
  9098  0EE1  3005               	movlw	5
  9099  0EE2  024A               	subwf	display_customChar@i,w
  9100  0EE3  1C03               	skipc
  9101  0EE4  2EE6               	goto	u5691
  9102  0EE5  2EE7               	goto	u5690
  9103  0EE6                     u5691:
  9104  0EE6  2DC5               	goto	l5591
  9105  0EE7                     u5690:
  9106  0EE7                     l5623:
  9107                           
  9108                           ;GFX_Library.c: 536:   if(textbgcolor != textcolor) {
  9109  0EE7  0021               	movlb	1	; select bank1
  9110  0EE8  0823               	movf	(_textcolor+1)^(0+128),w
  9111  0EE9  0621               	xorwf	(_textbgcolor+1)^(0+128),w
  9112  0EEA  1D03               	skipz
  9113  0EEB  2EEE               	goto	u5705
  9114  0EEC  0822               	movf	_textcolor^(0+128),w
  9115  0EED  0620               	xorwf	_textbgcolor^(0+128),w
  9116  0EEE                     u5705:
  9117  0EEE  1903               	skipnz
  9118  0EEF  2EF1               	goto	u5701
  9119  0EF0  2EF2               	goto	u5700
  9120  0EF1                     u5701:
  9121  0EF1  2F59               	goto	l769
  9122  0EF2                     u5700:
  9123  0EF2                     l5625:
  9124                           
  9125                           ;GFX_Library.c: 537:     if(textsize == 1) drawVLine(cursor_x + 5, cursor_y, 8, textbgco
      +                          lor);
  9126  0EF2  0020               	movlb	0	; select bank0
  9127  0EF3  036F               	decf	_textsize,w
  9128  0EF4  1D03               	btfss	3,2
  9129  0EF5  2EF7               	goto	u5711
  9130  0EF6  2EF8               	goto	u5710
  9131  0EF7                     u5711:
  9132  0EF7  2F1A               	goto	l5629
  9133  0EF8                     u5710:
  9134  0EF8                     l5627:
  9135  0EF8  0021               	movlb	1	; select bank1
  9136  0EF9  0845               	movf	_cursor_x^(0+128),w
  9137  0EFA  3E05               	addlw	5
  9138  0EFB  0020               	movlb	0	; select bank0
  9139  0EFC  00A6               	movwf	drawVLine@x
  9140  0EFD  3000               	movlw	0
  9141  0EFE  0021               	movlb	1	; select bank1
  9142  0EFF  3D46               	addwfc	(_cursor_x+1)^(0+128),w
  9143  0F00  0020               	movlb	0	; select bank0
  9144  0F01  00A7               	movwf	drawVLine@x+1
  9145  0F02  0021               	movlb	1	; select bank1
  9146  0F03  0844               	movf	(_cursor_y+1)^(0+128),w
  9147  0F04  0020               	movlb	0	; select bank0
  9148  0F05  00A9               	movwf	drawVLine@y+1
  9149  0F06  0021               	movlb	1	; select bank1
  9150  0F07  0843               	movf	_cursor_y^(0+128),w
  9151  0F08  0020               	movlb	0	; select bank0
  9152  0F09  00A8               	movwf	drawVLine@y
  9153  0F0A  3008               	movlw	8
  9154  0F0B  00AA               	movwf	drawVLine@h
  9155  0F0C  3000               	movlw	0
  9156  0F0D  00AB               	movwf	drawVLine@h+1
  9157  0F0E  0021               	movlb	1	; select bank1
  9158  0F0F  0821               	movf	(_textbgcolor+1)^(0+128),w
  9159  0F10  0020               	movlb	0	; select bank0
  9160  0F11  00AD               	movwf	drawVLine@color+1
  9161  0F12  0021               	movlb	1	; select bank1
  9162  0F13  0820               	movf	_textbgcolor^(0+128),w
  9163  0F14  0020               	movlb	0	; select bank0
  9164  0F15  00AC               	movwf	drawVLine@color
  9165  0F16  3194  24A5  318D   	fcall	_drawVLine
  9166  0F19  2F59               	goto	l769
  9167  0F1A                     l5629:
  9168  0F1A  086F               	movf	_textsize,w
  9169  0F1B  00BC               	movwf	??_display_customChar
  9170  0F1C  01BD               	clrf	??_display_customChar+1
  9171  0F1D  083C               	movf	??_display_customChar,w
  9172  0F1E  00F1               	movwf	___wmul@multiplier
  9173  0F1F  083D               	movf	??_display_customChar+1,w
  9174  0F20  00F2               	movwf	___wmul@multiplier+1
  9175  0F21  3005               	movlw	5
  9176  0F22  00F3               	movwf	___wmul@multiplicand
  9177  0F23  3000               	movlw	0
  9178  0F24  00F4               	movwf	___wmul@multiplicand+1
  9179  0F25  3190  20BA  318D   	fcall	___wmul
  9180  0F28  0021               	movlb	1	; select bank1
  9181  0F29  0845               	movf	_cursor_x^(0+128),w
  9182  0F2A  0771               	addwf	?___wmul,w
  9183  0F2B  0020               	movlb	0	; select bank0
  9184  0F2C  00A6               	movwf	fillRect@x
  9185  0F2D  0021               	movlb	1	; select bank1
  9186  0F2E  0846               	movf	(_cursor_x+1)^(0+128),w
  9187  0F2F  3D72               	addwfc	?___wmul+1,w
  9188  0F30  0020               	movlb	0	; select bank0
  9189  0F31  00A7               	movwf	fillRect@x+1
  9190  0F32  0021               	movlb	1	; select bank1
  9191  0F33  0844               	movf	(_cursor_y+1)^(0+128),w
  9192  0F34  0020               	movlb	0	; select bank0
  9193  0F35  00A9               	movwf	fillRect@y+1
  9194  0F36  0021               	movlb	1	; select bank1
  9195  0F37  0843               	movf	_cursor_y^(0+128),w
  9196  0F38  0020               	movlb	0	; select bank0
  9197  0F39  00A8               	movwf	fillRect@y
  9198  0F3A  086F               	movf	_textsize,w
  9199  0F3B  00BE               	movwf	??_display_customChar+2
  9200  0F3C  01BF               	clrf	??_display_customChar+3
  9201  0F3D  083E               	movf	??_display_customChar+2,w
  9202  0F3E  00AA               	movwf	fillRect@w
  9203  0F3F  083F               	movf	??_display_customChar+3,w
  9204  0F40  00AB               	movwf	fillRect@w+1
  9205  0F41  086F               	movf	_textsize,w
  9206  0F42  00C0               	movwf	??_display_customChar+4
  9207  0F43  01C1               	clrf	??_display_customChar+5
  9208  0F44  35C0               	lslf	??_display_customChar+4,f
  9209  0F45  0DC1               	rlf	??_display_customChar+5,f
  9210  0F46  35C0               	lslf	??_display_customChar+4,f
  9211  0F47  0DC1               	rlf	??_display_customChar+5,f
  9212  0F48  35C0               	lslf	??_display_customChar+4,f
  9213  0F49  0DC1               	rlf	??_display_customChar+5,f
  9214  0F4A  0840               	movf	??_display_customChar+4,w
  9215  0F4B  00AC               	movwf	fillRect@h
  9216  0F4C  0841               	movf	??_display_customChar+5,w
  9217  0F4D  00AD               	movwf	fillRect@h+1
  9218  0F4E  0021               	movlb	1	; select bank1
  9219  0F4F  0821               	movf	(_textbgcolor+1)^(0+128),w
  9220  0F50  0020               	movlb	0	; select bank0
  9221  0F51  00AF               	movwf	fillRect@color+1
  9222  0F52  0021               	movlb	1	; select bank1
  9223  0F53  0820               	movf	_textbgcolor^(0+128),w
  9224  0F54  0020               	movlb	0	; select bank0
  9225  0F55  00AE               	movwf	fillRect@color
  9226  0F56  3196  264D  318D   	fcall	_fillRect
  9227  0F59                     l769:	
  9228                           ;GFX_Library.c: 539:   }
  9229                           
  9230                           
  9231                           ;GFX_Library.c: 541:   cursor_x += textsize * 6;
  9232  0F59  0020               	movlb	0	; select bank0
  9233  0F5A  086F               	movf	_textsize,w
  9234  0F5B  00BC               	movwf	??_display_customChar
  9235  0F5C  01BD               	clrf	??_display_customChar+1
  9236  0F5D  083C               	movf	??_display_customChar,w
  9237  0F5E  00F1               	movwf	___wmul@multiplier
  9238  0F5F  083D               	movf	??_display_customChar+1,w
  9239  0F60  00F2               	movwf	___wmul@multiplier+1
  9240  0F61  3006               	movlw	6
  9241  0F62  00F3               	movwf	___wmul@multiplicand
  9242  0F63  3000               	movlw	0
  9243  0F64  00F4               	movwf	___wmul@multiplicand+1
  9244  0F65  3190  20BA  318D   	fcall	___wmul
  9245  0F68  0871               	movf	?___wmul,w
  9246  0F69  0021               	movlb	1	; select bank1
  9247  0F6A  07C5               	addwf	_cursor_x^(0+128),f
  9248  0F6B  0872               	movf	?___wmul+1,w
  9249  0F6C  3DC6               	addwfc	(_cursor_x+1)^(0+128),f
  9250                           
  9251                           ;GFX_Library.c: 543:   if( cursor_x > ((uint16_t)_width + textsize * 6) )
  9252  0F6D  0020               	movlb	0	; select bank0
  9253  0F6E  086F               	movf	_textsize,w
  9254  0F6F  00BC               	movwf	??_display_customChar
  9255  0F70  01BD               	clrf	??_display_customChar+1
  9256  0F71  083C               	movf	??_display_customChar,w
  9257  0F72  00F1               	movwf	___wmul@multiplier
  9258  0F73  083D               	movf	??_display_customChar+1,w
  9259  0F74  00F2               	movwf	___wmul@multiplier+1
  9260  0F75  3006               	movlw	6
  9261  0F76  00F3               	movwf	___wmul@multiplicand
  9262  0F77  3000               	movlw	0
  9263  0F78  00F4               	movwf	___wmul@multiplicand+1
  9264  0F79  3190  20BA  318D   	fcall	___wmul
  9265  0F7C  0021               	movlb	1	; select bank1
  9266  0F7D  0849               	movf	__width^(0+128),w
  9267  0F7E  0771               	addwf	?___wmul,w
  9268  0F7F  0020               	movlb	0	; select bank0
  9269  0F80  00BE               	movwf	??_display_customChar+2
  9270  0F81  0021               	movlb	1	; select bank1
  9271  0F82  084A               	movf	(__width+1)^(0+128),w
  9272  0F83  3D72               	addwfc	?___wmul+1,w
  9273  0F84  0020               	movlb	0	; select bank0
  9274  0F85  00BF               	movwf	??_display_customChar+3
  9275  0F86  0021               	movlb	1	; select bank1
  9276  0F87  0846               	movf	(_cursor_x+1)^(0+128),w
  9277  0F88  0020               	movlb	0	; select bank0
  9278  0F89  023F               	subwf	??_display_customChar+3,w
  9279  0F8A  1D03               	skipz
  9280  0F8B  2F90               	goto	u5725
  9281  0F8C  0021               	movlb	1	; select bank1
  9282  0F8D  0845               	movf	_cursor_x^(0+128),w
  9283  0F8E  0020               	movlb	0	; select bank0
  9284  0F8F  023E               	subwf	??_display_customChar+2,w
  9285  0F90                     u5725:
  9286  0F90  1803               	skipnc
  9287  0F91  2F93               	goto	u5721
  9288  0F92  2F94               	goto	u5720
  9289  0F93                     u5721:
  9290  0F93  2F99               	goto	l5633
  9291  0F94                     u5720:
  9292  0F94                     l5631:
  9293                           
  9294                           ;GFX_Library.c: 544:     cursor_x = _width;
  9295  0F94  0021               	movlb	1	; select bank1
  9296  0F95  084A               	movf	(__width+1)^(0+128),w
  9297  0F96  00C6               	movwf	(_cursor_x+1)^(0+128)
  9298  0F97  0849               	movf	__width^(0+128),w
  9299  0F98  00C5               	movwf	_cursor_x^(0+128)
  9300  0F99                     l5633:
  9301                           
  9302                           ;GFX_Library.c: 546:   if (wrap && (cursor_x + (textsize * 5)) > _width)
  9303  0F99  0021               	movlb	1	; select bank1
  9304  0F9A  0824               	movf	_wrap^(0+128),w
  9305  0F9B  1903               	btfsc	3,2
  9306  0F9C  2F9E               	goto	u5731
  9307  0F9D  2F9F               	goto	u5730
  9308  0F9E                     u5731:
  9309  0F9E  2FFF               	goto	l775
  9310  0F9F                     u5730:
  9311  0F9F                     l5635:
  9312  0F9F  0020               	movlb	0	; select bank0
  9313  0FA0  086F               	movf	_textsize,w
  9314  0FA1  00BC               	movwf	??_display_customChar
  9315  0FA2  01BD               	clrf	??_display_customChar+1
  9316  0FA3  083C               	movf	??_display_customChar,w
  9317  0FA4  00F1               	movwf	___wmul@multiplier
  9318  0FA5  083D               	movf	??_display_customChar+1,w
  9319  0FA6  00F2               	movwf	___wmul@multiplier+1
  9320  0FA7  3005               	movlw	5
  9321  0FA8  00F3               	movwf	___wmul@multiplicand
  9322  0FA9  3000               	movlw	0
  9323  0FAA  00F4               	movwf	___wmul@multiplicand+1
  9324  0FAB  3190  20BA  318D   	fcall	___wmul
  9325  0FAE  0021               	movlb	1	; select bank1
  9326  0FAF  0845               	movf	_cursor_x^(0+128),w
  9327  0FB0  0771               	addwf	?___wmul,w
  9328  0FB1  0020               	movlb	0	; select bank0
  9329  0FB2  00BE               	movwf	??_display_customChar+2
  9330  0FB3  0021               	movlb	1	; select bank1
  9331  0FB4  0846               	movf	(_cursor_x+1)^(0+128),w
  9332  0FB5  3D72               	addwfc	?___wmul+1,w
  9333  0FB6  0020               	movlb	0	; select bank0
  9334  0FB7  00BF               	movwf	??_display_customChar+3
  9335  0FB8  083F               	movf	??_display_customChar+3,w
  9336  0FB9  0021               	movlb	1	; select bank1
  9337  0FBA  024A               	subwf	(__width+1)^(0+128),w
  9338  0FBB  1D03               	skipz
  9339  0FBC  2FC1               	goto	u5745
  9340  0FBD  0020               	movlb	0	; select bank0
  9341  0FBE  083E               	movf	??_display_customChar+2,w
  9342  0FBF  0021               	movlb	1	; select bank1
  9343  0FC0  0249               	subwf	__width^(0+128),w
  9344  0FC1                     u5745:
  9345  0FC1  1803               	skipnc
  9346  0FC2  2FC4               	goto	u5741
  9347  0FC3  2FC5               	goto	u5740
  9348  0FC4                     u5741:
  9349  0FC4  2FFF               	goto	l775
  9350  0FC5                     u5740:
  9351  0FC5                     l5637:
  9352                           
  9353                           ;GFX_Library.c: 547:   {;GFX_Library.c: 548:     cursor_x = 0;
  9354  0FC5  01C5               	clrf	_cursor_x^(0+128)
  9355  0FC6  01C6               	clrf	(_cursor_x+1)^(0+128)
  9356  0FC7                     l5639:
  9357                           
  9358                           ;GFX_Library.c: 549:     cursor_y += textsize * 8;
  9359  0FC7  0020               	movlb	0	; select bank0
  9360  0FC8  086F               	movf	_textsize,w
  9361  0FC9  00BC               	movwf	??_display_customChar
  9362  0FCA  01BD               	clrf	??_display_customChar+1
  9363  0FCB  35BC               	lslf	??_display_customChar,f
  9364  0FCC  0DBD               	rlf	??_display_customChar+1,f
  9365  0FCD  35BC               	lslf	??_display_customChar,f
  9366  0FCE  0DBD               	rlf	??_display_customChar+1,f
  9367  0FCF  35BC               	lslf	??_display_customChar,f
  9368  0FD0  0DBD               	rlf	??_display_customChar+1,f
  9369  0FD1  083C               	movf	??_display_customChar,w
  9370  0FD2  0021               	movlb	1	; select bank1
  9371  0FD3  07C3               	addwf	_cursor_y^(0+128),f
  9372  0FD4  0020               	movlb	0	; select bank0
  9373  0FD5  083D               	movf	??_display_customChar+1,w
  9374  0FD6  0021               	movlb	1	; select bank1
  9375  0FD7  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
  9376  0FD8                     l5641:
  9377                           
  9378                           ;GFX_Library.c: 550:     if( cursor_y > ((uint16_t)_height + textsize * 8) )
  9379  0FD8  0020               	movlb	0	; select bank0
  9380  0FD9  086F               	movf	_textsize,w
  9381  0FDA  00BC               	movwf	??_display_customChar
  9382  0FDB  01BD               	clrf	??_display_customChar+1
  9383  0FDC  35BC               	lslf	??_display_customChar,f
  9384  0FDD  0DBD               	rlf	??_display_customChar+1,f
  9385  0FDE  35BC               	lslf	??_display_customChar,f
  9386  0FDF  0DBD               	rlf	??_display_customChar+1,f
  9387  0FE0  35BC               	lslf	??_display_customChar,f
  9388  0FE1  0DBD               	rlf	??_display_customChar+1,f
  9389  0FE2  0021               	movlb	1	; select bank1
  9390  0FE3  0847               	movf	__height^(0+128),w
  9391  0FE4  0020               	movlb	0	; select bank0
  9392  0FE5  073C               	addwf	??_display_customChar,w
  9393  0FE6  00BE               	movwf	??_display_customChar+2
  9394  0FE7  0021               	movlb	1	; select bank1
  9395  0FE8  0848               	movf	(__height+1)^(0+128),w
  9396  0FE9  0020               	movlb	0	; select bank0
  9397  0FEA  3D3D               	addwfc	??_display_customChar+1,w
  9398  0FEB  00BF               	movwf	??_display_customChar+3
  9399  0FEC  0021               	movlb	1	; select bank1
  9400  0FED  0844               	movf	(_cursor_y+1)^(0+128),w
  9401  0FEE  0020               	movlb	0	; select bank0
  9402  0FEF  023F               	subwf	??_display_customChar+3,w
  9403  0FF0  1D03               	skipz
  9404  0FF1  2FF6               	goto	u5755
  9405  0FF2  0021               	movlb	1	; select bank1
  9406  0FF3  0843               	movf	_cursor_y^(0+128),w
  9407  0FF4  0020               	movlb	0	; select bank0
  9408  0FF5  023E               	subwf	??_display_customChar+2,w
  9409  0FF6                     u5755:
  9410  0FF6  1803               	skipnc
  9411  0FF7  2FF9               	goto	u5751
  9412  0FF8  2FFA               	goto	u5750
  9413  0FF9                     u5751:
  9414  0FF9  2FFF               	goto	l775
  9415  0FFA                     u5750:
  9416  0FFA                     l5643:
  9417                           
  9418                           ;GFX_Library.c: 551:       cursor_y = _height;
  9419  0FFA  0021               	movlb	1	; select bank1
  9420  0FFB  0848               	movf	(__height+1)^(0+128),w
  9421  0FFC  00C4               	movwf	(_cursor_y+1)^(0+128)
  9422  0FFD  0847               	movf	__height^(0+128),w
  9423  0FFE  00C3               	movwf	_cursor_y^(0+128)
  9424  0FFF                     l775:
  9425  0FFF  0008               	return
  9426  1000                     __end_of_display_customChar:
  9427                           
  9428                           	psect	text5
  9429  103E                     __ptext5:	
  9430 ;; *************** function ___bmul *****************
  9431 ;; Defined at:
  9432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  multiplier      1    wreg     unsigned char 
  9435 ;;  multiplicand    1    1[COMMON] unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  multiplier      1    4[COMMON] unsigned char 
  9438 ;;  product         1    3[COMMON] unsigned char 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      unsigned char 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9448 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;Total ram usage:        4 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    4
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_moverJugador
  9459 ;;		_display_drawBitmapV1
  9460 ;;		_display_drawBitmapV1_bg
  9461 ;;		_display_drawBitmapV2
  9462 ;;		_display_drawBitmapV2_bg
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function ___bmul
  9468  103E                     ___bmul:
  9469                           
  9470                           ;incstack = 0
  9471                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9472                           ;___bmul@multiplier stored from wreg
  9473  103E  00F4               	movwf	___bmul@multiplier
  9474  103F                     l4175:
  9475  103F  01F3               	clrf	___bmul@product
  9476  1040                     l4177:
  9477  1040  1C74               	btfss	___bmul@multiplier,0
  9478  1041  2843               	goto	u3601
  9479  1042  2844               	goto	u3600
  9480  1043                     u3601:
  9481  1043  2848               	goto	l4181
  9482  1044                     u3600:
  9483  1044                     l4179:
  9484  1044  0871               	movf	___bmul@multiplicand,w
  9485  1045  00F2               	movwf	??___bmul
  9486  1046  0872               	movf	??___bmul,w
  9487  1047  07F3               	addwf	___bmul@product,f
  9488  1048                     l4181:
  9489  1048  1003               	clrc
  9490  1049  0DF1               	rlf	___bmul@multiplicand,f
  9491  104A                     l4183:
  9492  104A  1003               	clrc
  9493  104B  0CF4               	rrf	___bmul@multiplier,f
  9494  104C  0874               	movf	___bmul@multiplier,w
  9495  104D  1D03               	btfss	3,2
  9496  104E  2850               	goto	u3611
  9497  104F  2851               	goto	u3610
  9498  1050                     u3611:
  9499  1050  2840               	goto	l4177
  9500  1051                     u3610:
  9501  1051                     l4185:
  9502  1051  0873               	movf	___bmul@product,w
  9503  1052                     l1138:
  9504  1052  0008               	return
  9505  1053                     __end_of___bmul:
  9506                           
  9507                           	psect	text6
  9508  10D9                     __ptext6:	
  9509 ;; *************** function _fillScreen *****************
  9510 ;; Defined at:
  9511 ;;		line 297 in file "ILI9341.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  color           2   26[BANK0 ] unsigned short 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1    wreg      void 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0, pclath, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;Total ram usage:        2 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    8
  9532 ;; This function calls:
  9533 ;;		_fillRect
  9534 ;; This function is called by:
  9535 ;;		_main
  9536 ;;		_testFillScreen
  9537 ;;		_testText
  9538 ;;		_testLines
  9539 ;;		_testFastLines
  9540 ;;		_testRects
  9541 ;;		_testFilledRects
  9542 ;;		_testFilledCircles
  9543 ;;		_testTriangles
  9544 ;;		_testFilledTriangles
  9545 ;;		_testRoundRects
  9546 ;;		_testFilledRoundRects
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           
  9551                           ;psect for function _fillScreen
  9552  10D9                     _fillScreen:
  9553  10D9                     l5797:	
  9554                           ;incstack = 0
  9555                           ; Regs used in _fillScreen: [wreg+status,2+status,0+pclath+cstack]
  9556                           
  9557                           
  9558                           ;ILI9341.c: 298:     fillRect(0, 0, _width, _height, color);
  9559  10D9  3000               	movlw	0
  9560  10DA  0020               	movlb	0	; select bank0
  9561  10DB  00A6               	movwf	fillRect@x
  9562  10DC  00A7               	movwf	fillRect@x+1
  9563  10DD  3000               	movlw	0
  9564  10DE  00A8               	movwf	fillRect@y
  9565  10DF  00A9               	movwf	fillRect@y+1
  9566  10E0  0021               	movlb	1	; select bank1
  9567  10E1  084A               	movf	(__width+1)^(0+128),w
  9568  10E2  0020               	movlb	0	; select bank0
  9569  10E3  00AB               	movwf	fillRect@w+1
  9570  10E4  0021               	movlb	1	; select bank1
  9571  10E5  0849               	movf	__width^(0+128),w
  9572  10E6  0020               	movlb	0	; select bank0
  9573  10E7  00AA               	movwf	fillRect@w
  9574  10E8  0021               	movlb	1	; select bank1
  9575  10E9  0848               	movf	(__height+1)^(0+128),w
  9576  10EA  0020               	movlb	0	; select bank0
  9577  10EB  00AD               	movwf	fillRect@h+1
  9578  10EC  0021               	movlb	1	; select bank1
  9579  10ED  0847               	movf	__height^(0+128),w
  9580  10EE  0020               	movlb	0	; select bank0
  9581  10EF  00AC               	movwf	fillRect@h
  9582  10F0  083B               	movf	fillScreen@color+1,w
  9583  10F1  00AF               	movwf	fillRect@color+1
  9584  10F2  083A               	movf	fillScreen@color,w
  9585  10F3  00AE               	movwf	fillRect@color
  9586  10F4  3196  264D  3190   	fcall	_fillRect
  9587  10F7                     l960:
  9588  10F7  0008               	return
  9589  10F8                     __end_of_fillScreen:
  9590                           
  9591                           	psect	text7
  9592  135B                     __ptext7:	
  9593 ;; *************** function _dibujarMarcador *****************
  9594 ;; Defined at:
  9595 ;;		line 208 in file "main.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  puntaje1        1    wreg     unsigned char 
  9598 ;;  puntaje2        1   77[BANK0 ] unsigned char 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  puntaje1        1   78[BANK0 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;Total ram usage:        6 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   12
  9617 ;; This function calls:
  9618 ;;		_disp_texto
  9619 ;;		_display_setCursor
  9620 ;;		_display_setTextColor
  9621 ;;		_display_setTextColor2
  9622 ;;		_display_setTextSize
  9623 ;;		_setRotation
  9624 ;;		_sprintf
  9625 ;; This function is called by:
  9626 ;;		_main
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _dibujarMarcador
  9632  135B                     _dibujarMarcador:
  9633                           
  9634                           ;incstack = 0
  9635                           ; Regs used in _dibujarMarcador: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9636                           ;dibujarMarcador@puntaje1 stored from wreg
  9637  135B  0020               	movlb	0	; select bank0
  9638  135C  00EE               	movwf	dibujarMarcador@puntaje1
  9639  135D                     l5799:
  9640                           
  9641                           ;main.c: 209:     setRotation(1);
  9642  135D  3001               	movlw	1
  9643  135E  3192  22FA  3193   	fcall	_setRotation
  9644  1361                     l5801:
  9645                           
  9646                           ;main.c: 210:     _delay((unsigned long)((10)*(32000000/4000.0)));
  9647  1361  3068               	movlw	104
  9648  1362  0021               	movlb	1	; select bank1
  9649  1363  00DB               	movwf	??_dibujarMarcador^(0+128)
  9650  1364  30E4               	movlw	228
  9651  1365                     u7007:
  9652  1365  0B89               	decfsz	9,f
  9653  1366  2B65               	goto	u7007
  9654  1367  0BDB               	decfsz	??_dibujarMarcador^(0+128),f
  9655  1368  2B65               	goto	u7007
  9656  1369  0000               	nop
  9657  136A                     l5803:
  9658                           
  9659                           ;main.c: 211:     display_setCursor((320/2)-10,0);
  9660  136A  3096               	movlw	150
  9661  136B  00F1               	movwf	display_setCursor@x
  9662  136C  3000               	movlw	0
  9663  136D  00F2               	movwf	display_setCursor@x+1
  9664  136E  3000               	movlw	0
  9665  136F  00F3               	movwf	display_setCursor@y
  9666  1370  00F4               	movwf	display_setCursor@y+1
  9667  1371  319F  27AA  3193   	fcall	_display_setCursor
  9668  1374                     l5805:
  9669                           
  9670                           ;main.c: 212:     display_setTextSize(2);
  9671  1374  3002               	movlw	2
  9672  1375  3190  2053  3193   	fcall	_display_setTextSize
  9673  1378                     l5807:
  9674                           
  9675                           ;main.c: 213:     display_setTextColor(0x0000,0x0000);
  9676  1378  3000               	movlw	0
  9677  1379  00F1               	movwf	display_setTextColor@c
  9678  137A  00F2               	movwf	display_setTextColor@c+1
  9679  137B  3000               	movlw	0
  9680  137C  00F3               	movwf	display_setTextColor@bg
  9681  137D  00F4               	movwf	display_setTextColor@bg+1
  9682  137E  319F  27B4  3193   	fcall	_display_setTextColor
  9683  1381                     l5809:
  9684                           
  9685                           ;main.c: 214:     disp_texto(marcador);
  9686  1381  30CF               	movlw	low _marcador
  9687  1382  0020               	movlb	0	; select bank0
  9688  1383  00CA               	movwf	disp_texto@cadena
  9689  1384  3000               	movlw	high _marcador
  9690  1385  00CB               	movwf	disp_texto@cadena+1
  9691  1386  3191  2119  3193   	fcall	_disp_texto
  9692  1389                     l5811:
  9693                           
  9694                           ;main.c: 215:     display_setCursor((320/2)-10,0);
  9695  1389  3096               	movlw	150
  9696  138A  00F1               	movwf	display_setCursor@x
  9697  138B  3000               	movlw	0
  9698  138C  00F2               	movwf	display_setCursor@x+1
  9699  138D  3000               	movlw	0
  9700  138E  00F3               	movwf	display_setCursor@y
  9701  138F  00F4               	movwf	display_setCursor@y+1
  9702  1390  319F  27AA  3193   	fcall	_display_setCursor
  9703  1393                     l5813:
  9704                           
  9705                           ;main.c: 216:     display_setTextColor2(0x07E0);
  9706  1393  30E0               	movlw	224
  9707  1394  00F1               	movwf	display_setTextColor2@c
  9708  1395  3007               	movlw	7
  9709  1396  00F2               	movwf	display_setTextColor2@c+1
  9710  1397  319F  27BE  3193   	fcall	_display_setTextColor2
  9711  139A                     l5815:
  9712                           
  9713                           ;main.c: 217:     sprintf(marcador,"%i:%i",puntaje1,puntaje2);
  9714  139A  305E               	movlw	low (STR_1| (0+32768))
  9715  139B  0020               	movlb	0	; select bank0
  9716  139C  00E6               	movwf	sprintf@fmt
  9717  139D  3099               	movlw	high (STR_1| (0+32768))
  9718  139E  00E7               	movwf	sprintf@fmt+1
  9719  139F  086E               	movf	dibujarMarcador@puntaje1,w
  9720  13A0  0021               	movlb	1	; select bank1
  9721  13A1  00DB               	movwf	??_dibujarMarcador^(0+128)
  9722  13A2  01DC               	clrf	(??_dibujarMarcador^(0+128)+1)
  9723  13A3  085B               	movf	??_dibujarMarcador^(0+128),w
  9724  13A4  0020               	movlb	0	; select bank0
  9725  13A5  00E8               	movwf	?_sprintf+2
  9726  13A6  0021               	movlb	1	; select bank1
  9727  13A7  085C               	movf	(??_dibujarMarcador+1)^(0+128),w
  9728  13A8  0020               	movlb	0	; select bank0
  9729  13A9  00E9               	movwf	?_sprintf+3
  9730  13AA  086D               	movf	dibujarMarcador@puntaje2,w
  9731  13AB  0021               	movlb	1	; select bank1
  9732  13AC  00DD               	movwf	(??_dibujarMarcador+2)^(0+128)
  9733  13AD  01DE               	clrf	((??_dibujarMarcador+2)^(0+128)+1)
  9734  13AE  085D               	movf	(??_dibujarMarcador+2)^(0+128),w
  9735  13AF  0020               	movlb	0	; select bank0
  9736  13B0  00EA               	movwf	?_sprintf+4
  9737  13B1  0021               	movlb	1	; select bank1
  9738  13B2  085E               	movf	(??_dibujarMarcador+3)^(0+128),w
  9739  13B3  0020               	movlb	0	; select bank0
  9740  13B4  00EB               	movwf	?_sprintf+5
  9741  13B5  30CF               	movlw	(low (_marcador| 0))& (0+255)
  9742  13B6  3187  27D1  3193   	fcall	_sprintf
  9743  13B9                     l5817:
  9744                           
  9745                           ;main.c: 218:     disp_texto(marcador);
  9746  13B9  30CF               	movlw	low _marcador
  9747  13BA  0020               	movlb	0	; select bank0
  9748  13BB  00CA               	movwf	disp_texto@cadena
  9749  13BC  3000               	movlw	high _marcador
  9750  13BD  00CB               	movwf	disp_texto@cadena+1
  9751  13BE  3191  2119  3193   	fcall	_disp_texto
  9752  13C1                     l5819:
  9753                           
  9754                           ;main.c: 219:     setRotation(0);
  9755  13C1  3000               	movlw	0
  9756  13C2  3192  22FA  3193   	fcall	_setRotation
  9757  13C5                     l462:
  9758  13C5  0008               	return
  9759  13C6                     __end_of_dibujarMarcador:
  9760                           
  9761                           	psect	text8
  9762  07D1                     __ptext8:	
  9763 ;; *************** function _sprintf *****************
  9764 ;; Defined at:
  9765 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  s               1    wreg     PTR unsigned char 
  9768 ;;		 -> marcador(3), 
  9769 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  9770 ;;		 -> STR_1(6), 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  s               1    3[BANK1 ] PTR unsigned char 
  9773 ;;		 -> marcador(3), 
  9774 ;;  f               5    4[BANK1 ] struct _IO_FILE
  9775 ;;  ret             2    0        int 
  9776 ;;  ap              1    2[BANK1 ] PTR void [1]
  9777 ;;		 -> ?_sprintf(2), 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  2   70[BANK0 ] int 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9787 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;Total ram usage:       16 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:   11
  9794 ;; This function calls:
  9795 ;;		_vfprintf
  9796 ;; This function is called by:
  9797 ;;		_dibujarMarcador
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           
  9802                           ;psect for function _sprintf
  9803  07D1                     _sprintf:
  9804                           
  9805                           ;incstack = 0
  9806                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9807                           ;sprintf@s stored from wreg
  9808  07D1  0021               	movlb	1	; select bank1
  9809  07D2  00D5               	movwf	sprintf@s^(0+128)
  9810  07D3                     l5707:
  9811  07D3  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9812  07D4  0020               	movlb	0	; select bank0
  9813  07D5  00EC               	movwf	??_sprintf
  9814  07D6  086C               	movf	??_sprintf,w
  9815  07D7  0021               	movlb	1	; select bank1
  9816  07D8  00D4               	movwf	sprintf@ap^(0+128)
  9817  07D9  0855               	movf	sprintf@s^(0+128),w
  9818  07DA  0020               	movlb	0	; select bank0
  9819  07DB  00EC               	movwf	??_sprintf
  9820  07DC  086C               	movf	??_sprintf,w
  9821  07DD  0021               	movlb	1	; select bank1
  9822  07DE  00D6               	movwf	sprintf@f^(0+128)
  9823  07DF                     l5709:
  9824  07DF  01D7               	clrf	(sprintf@f^(0+128)+1)
  9825  07E0  01D8               	clrf	((sprintf@f+1)^(0+128)+1)
  9826  07E1                     l5711:
  9827  07E1  01D9               	clrf	(sprintf@f^(0+128)+3)
  9828  07E2  01DA               	clrf	((sprintf@f+1)^(0+128)+3)
  9829  07E3                     l5713:
  9830  07E3  0020               	movlb	0	; select bank0
  9831  07E4  0867               	movf	sprintf@fmt+1,w
  9832  07E5  00DF               	movwf	vfprintf@fmt+1
  9833  07E6  0866               	movf	sprintf@fmt,w
  9834  07E7  00DE               	movwf	vfprintf@fmt
  9835  07E8  30D4               	movlw	(low (sprintf@ap| 0))& (0+255)
  9836  07E9  00EC               	movwf	??_sprintf
  9837  07EA  086C               	movf	??_sprintf,w
  9838  07EB  00E0               	movwf	vfprintf@ap
  9839  07EC  30D6               	movlw	(low (sprintf@f| 0))& (0+255)
  9840  07ED  3191  216A  3187   	fcall	_vfprintf
  9841  07F0                     l5715:
  9842  07F0  0021               	movlb	1	; select bank1
  9843  07F1  0857               	movf	(sprintf@f^(0+128)+1),w
  9844  07F2  0755               	addwf	sprintf@s^(0+128),w
  9845  07F3  0020               	movlb	0	; select bank0
  9846  07F4  00EC               	movwf	??_sprintf
  9847  07F5  086C               	movf	??_sprintf,w
  9848  07F6  0086               	movwf	6
  9849  07F7  0187               	clrf	7
  9850  07F8  0181               	clrf	1
  9851  07F9                     l1582:
  9852  07F9  0008               	return
  9853  07FA                     __end_of_sprintf:
  9854                           
  9855                           	psect	text9
  9856  116A                     __ptext9:	
  9857 ;; *************** function _vfprintf *****************
  9858 ;; Defined at:
  9859 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  fp              1    wreg     PTR struct _IO_FILE
  9862 ;;		 -> sprintf@f(5), 
  9863 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  9864 ;;		 -> STR_1(6), 
  9865 ;;  ap              1   64[BANK0 ] PTR PTR void 
  9866 ;;		 -> sprintf@ap(1), 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  9869 ;;		 -> sprintf@f(5), 
  9870 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  9871 ;;		 -> STR_1(6), 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  2   62[BANK0 ] int 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9881 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;Total ram usage:        8 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:   10
  9888 ;; This function calls:
  9889 ;;		_vfpfcnvrt
  9890 ;; This function is called by:
  9891 ;;		_sprintf
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           
  9896                           ;psect for function _vfprintf
  9897  116A                     _vfprintf:
  9898                           
  9899                           ;incstack = 0
  9900                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9901                           ;vfprintf@fp stored from wreg
  9902  116A  0020               	movlb	0	; select bank0
  9903  116B  00E3               	movwf	vfprintf@fp
  9904  116C                     l5645:
  9905                           
  9906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9907  116C  085F               	movf	vfprintf@fmt+1,w
  9908  116D  00E5               	movwf	vfprintf@cfmt+1
  9909  116E  085E               	movf	vfprintf@fmt,w
  9910  116F  00E4               	movwf	vfprintf@cfmt
  9911  1170                     l5647:
  9912                           
  9913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9914  1170  0021               	movlb	1	; select bank1
  9915  1171  01BB               	clrf	_nout^(0+128)
  9916  1172  01BC               	clrf	(_nout+1)^(0+128)
  9917                           
  9918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9919  1173  2988               	goto	l5651
  9920  1174                     l5649:
  9921                           
  9922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9923  1174  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9924  1175  00E1               	movwf	??_vfprintf
  9925  1176  0861               	movf	??_vfprintf,w
  9926  1177  00CE               	movwf	vfpfcnvrt@fmt
  9927  1178  0860               	movf	vfprintf@ap,w
  9928  1179  00E2               	movwf	??_vfprintf+1
  9929  117A  0862               	movf	??_vfprintf+1,w
  9930  117B  00CF               	movwf	vfpfcnvrt@ap
  9931  117C  0863               	movf	vfprintf@fp,w
  9932  117D  3197  2725  3191   	fcall	_vfpfcnvrt
  9933  1180  0020               	movlb	0	; select bank0
  9934  1181  084E               	movf	?_vfpfcnvrt,w
  9935  1182  0021               	movlb	1	; select bank1
  9936  1183  07BB               	addwf	_nout^(0+128),f
  9937  1184  0020               	movlb	0	; select bank0
  9938  1185  084F               	movf	?_vfpfcnvrt+1,w
  9939  1186  0021               	movlb	1	; select bank1
  9940  1187  3DBC               	addwfc	(_nout+1)^(0+128),f
  9941  1188                     l5651:
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9944  1188  0020               	movlb	0	; select bank0
  9945  1189  0864               	movf	vfprintf@cfmt,w
  9946  118A  0084               	movwf	4
  9947  118B  0865               	movf	vfprintf@cfmt+1,w
  9948  118C  0085               	movwf	5
  9949  118D  0012               	moviw fsr0++
  9950  118E  1D03               	btfss	3,2
  9951  118F  2991               	goto	u5761
  9952  1190  2992               	goto	u5760
  9953  1191                     u5761:
  9954  1191  2974               	goto	l5649
  9955  1192                     u5760:
  9956  1192                     l5653:
  9957                           
  9958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9959  1192  0021               	movlb	1	; select bank1
  9960  1193  083C               	movf	(_nout+1)^(0+128),w
  9961  1194  0020               	movlb	0	; select bank0
  9962  1195  00DF               	movwf	?_vfprintf+1
  9963  1196  0021               	movlb	1	; select bank1
  9964  1197  083B               	movf	_nout^(0+128),w
  9965  1198  0020               	movlb	0	; select bank0
  9966  1199  00DE               	movwf	?_vfprintf
  9967  119A                     l1654:
  9968  119A  0008               	return
  9969  119B                     __end_of_vfprintf:
  9970                           
  9971                           	psect	text10
  9972  1725                     __ptext10:	
  9973 ;; *************** function _vfpfcnvrt *****************
  9974 ;; Defined at:
  9975 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  fp              1    wreg     PTR struct _IO_FILE
  9978 ;;		 -> sprintf@f(5), 
  9979 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  9980 ;;		 -> vfprintf@cfmt(2), 
  9981 ;;  ap              1   47[BANK0 ] PTR PTR void 
  9982 ;;		 -> sprintf@ap(1), 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  9985 ;;		 -> sprintf@f(5), 
  9986 ;;  ll              8   53[BANK0 ] long long 
  9987 ;;  llu             8    0        unsigned long long 
  9988 ;;  f               4    0        unsigned long long 
  9989 ;;  ct              3    0        unsigned char [3]
  9990 ;;  vp              2    0        PTR void 
  9991 ;;  i               2    0        int 
  9992 ;;  done            2    0        int 
  9993 ;;  cp              2    0        PTR unsigned char 
  9994 ;;  c               1    0        unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  2   46[BANK0 ] int 
  9997 ;; Registers used:
  9998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;Total ram usage:       16 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    9
 10011 ;; This function calls:
 10012 ;;		_dtoa
 10013 ;;		_fputc
 10014 ;; This function is called by:
 10015 ;;		_vfprintf
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _vfpfcnvrt
 10021  1725                     _vfpfcnvrt:
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10025                           ;vfpfcnvrt@fp stored from wreg
 10026  1725  0020               	movlb	0	; select bank0
 10027  1726  00DD               	movwf	vfpfcnvrt@fp
 10028  1727                     l5461:
 10029                           
 10030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 10031  1727  084E               	movf	vfpfcnvrt@fmt,w
 10032  1728  0086               	movwf	6
 10033  1729  0187               	clrf	7
 10034  172A  3F40               	moviw [0]fsr1
 10035  172B  00D0               	movwf	??_vfpfcnvrt
 10036  172C  3F41               	moviw [1]fsr1
 10037  172D  00D1               	movwf	??_vfpfcnvrt+1
 10038  172E  0850               	movf	??_vfpfcnvrt,w
 10039  172F  0084               	movwf	4
 10040  1730  0851               	movf	??_vfpfcnvrt+1,w
 10041  1731  0085               	movwf	5
 10042  1732  0012               	moviw fsr0++
 10043  1733  3A25               	xorlw	37
 10044  1734  1D03               	btfss	3,2
 10045  1735  2F37               	goto	u5431
 10046  1736  2F38               	goto	u5430
 10047  1737                     u5431:
 10048  1737  2FDC               	goto	l5497
 10049  1738                     u5430:
 10050  1738                     l5463:
 10051                           
 10052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 10053  1738  084E               	movf	vfpfcnvrt@fmt,w
 10054  1739  0086               	movwf	6
 10055  173A  0187               	clrf	7
 10056  173B  3001               	movlw	1
 10057  173C  0781               	addwf	1,f
 10058  173D  3141               	addfsr 1,1
 10059  173E  1803               	skipnc
 10060  173F  0A81               	incf	1,f
 10061  1740                     l5465:
 10062                           
 10063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 10064  1740  0021               	movlb	1	; select bank1
 10065  1741  01BD               	clrf	_width^(0+128)
 10066  1742  01BE               	clrf	(_width+1)^(0+128)
 10067  1743  01C1               	clrf	_flags^(0+128)
 10068  1744  01C2               	clrf	(_flags+1)^(0+128)
 10069  1745                     l5467:
 10070                           
 10071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 10072  1745  30FF               	movlw	255
 10073  1746  00BF               	movwf	_prec^(0+128)
 10074  1747  30FF               	movlw	255
 10075  1748  00C0               	movwf	(_prec^(0+128)+1)
 10076  1749                     l5469:
 10077                           
 10078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10079  1749  0020               	movlb	0	; select bank0
 10080  174A  084E               	movf	vfpfcnvrt@fmt,w
 10081  174B  0086               	movwf	6
 10082  174C  0187               	clrf	7
 10083  174D  3F40               	moviw [0]fsr1
 10084  174E  00D0               	movwf	??_vfpfcnvrt
 10085  174F  3F41               	moviw [1]fsr1
 10086  1750  00D1               	movwf	??_vfpfcnvrt+1
 10087  1751  0850               	movf	??_vfpfcnvrt,w
 10088  1752  0084               	movwf	4
 10089  1753  0851               	movf	??_vfpfcnvrt+1,w
 10090  1754  0085               	movwf	5
 10091  1755  0012               	moviw fsr0++
 10092  1756  3A64               	xorlw	100
 10093  1757  1903               	btfsc	3,2
 10094  1758  2F5A               	goto	u5441
 10095  1759  2F5B               	goto	u5440
 10096  175A                     u5441:
 10097  175A  2F6C               	goto	l5473
 10098  175B                     u5440:
 10099  175B                     l5471:
 10100  175B  084E               	movf	vfpfcnvrt@fmt,w
 10101  175C  0086               	movwf	6
 10102  175D  0187               	clrf	7
 10103  175E  3F40               	moviw [0]fsr1
 10104  175F  00D0               	movwf	??_vfpfcnvrt
 10105  1760  3F41               	moviw [1]fsr1
 10106  1761  00D1               	movwf	??_vfpfcnvrt+1
 10107  1762  0850               	movf	??_vfpfcnvrt,w
 10108  1763  0084               	movwf	4
 10109  1764  0851               	movf	??_vfpfcnvrt+1,w
 10110  1765  0085               	movwf	5
 10111  1766  0012               	moviw fsr0++
 10112  1767  3A69               	xorlw	105
 10113  1768  1D03               	btfss	3,2
 10114  1769  2F6B               	goto	u5451
 10115  176A  2F6C               	goto	u5450
 10116  176B                     u5451:
 10117  176B  2FA7               	goto	l5481
 10118  176C                     u5450:
 10119  176C                     l5473:
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 10122  176C  084E               	movf	vfpfcnvrt@fmt,w
 10123  176D  0086               	movwf	6
 10124  176E  0187               	clrf	7
 10125  176F  3001               	movlw	1
 10126  1770  0781               	addwf	1,f
 10127  1771  3141               	addfsr 1,1
 10128  1772  1803               	skipnc
 10129  1773  0A81               	incf	1,f
 10130  1774                     l5475:
 10131                           
 10132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10133  1774  084F               	movf	vfpfcnvrt@ap,w
 10134  1775  0086               	movwf	6
 10135  1776  0187               	clrf	7
 10136  1777  0801               	movf	1,w
 10137  1778  0084               	movwf	4
 10138  1779  0185               	clrf	5
 10139  177A  3002               	movlw	2
 10140  177B  0781               	addwf	1,f
 10141  177C  3F00               	moviw [0]fsr0
 10142  177D  00D0               	movwf	??_vfpfcnvrt
 10143  177E  3F01               	moviw [1]fsr0
 10144  177F  00D1               	movwf	??_vfpfcnvrt+1
 10145  1780  0850               	movf	??_vfpfcnvrt,w
 10146  1781  00D5               	movwf	vfpfcnvrt@ll
 10147  1782  0851               	movf	??_vfpfcnvrt+1,w
 10148  1783  00D6               	movwf	vfpfcnvrt@ll+1
 10149  1784  0D89               	rlf	9,f
 10150  1785  3B89               	subwfb	9,f
 10151  1786  0989               	comf	9,f
 10152  1787  00D7               	movwf	vfpfcnvrt@ll+2
 10153  1788  00D8               	movwf	vfpfcnvrt@ll+3
 10154  1789  00D9               	movwf	vfpfcnvrt@ll+4
 10155  178A  00DA               	movwf	vfpfcnvrt@ll+5
 10156  178B  00DB               	movwf	vfpfcnvrt@ll+6
 10157  178C  00DC               	movwf	vfpfcnvrt@ll+7
 10158  178D                     l5477:
 10159                           
 10160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 10161  178D  0855               	movf	vfpfcnvrt@ll,w
 10162  178E  00B0               	movwf	dtoa@d
 10163  178F  0856               	movf	vfpfcnvrt@ll+1,w
 10164  1790  00B1               	movwf	dtoa@d+1
 10165  1791  0857               	movf	vfpfcnvrt@ll+2,w
 10166  1792  00B2               	movwf	dtoa@d+2
 10167  1793  0858               	movf	vfpfcnvrt@ll+3,w
 10168  1794  00B3               	movwf	dtoa@d+3
 10169  1795  0859               	movf	vfpfcnvrt@ll+4,w
 10170  1796  00B4               	movwf	dtoa@d+4
 10171  1797  085A               	movf	vfpfcnvrt@ll+5,w
 10172  1798  00B5               	movwf	dtoa@d+5
 10173  1799  085B               	movf	vfpfcnvrt@ll+6,w
 10174  179A  00B6               	movwf	dtoa@d+6
 10175  179B  085C               	movf	vfpfcnvrt@ll+7,w
 10176  179C  00B7               	movwf	dtoa@d+7
 10177  179D  085D               	movf	vfpfcnvrt@fp,w
 10178  179E  318A  224A  3197   	fcall	_dtoa
 10179  17A1  0020               	movlb	0	; select bank0
 10180  17A2  0831               	movf	?_dtoa+1,w
 10181  17A3  00CF               	movwf	?_vfpfcnvrt+1
 10182  17A4  0830               	movf	?_dtoa,w
 10183  17A5  00CE               	movwf	?_vfpfcnvrt
 10184  17A6  2FFF               	goto	l1647
 10185  17A7                     l5481:
 10186                           
 10187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 10188  17A7  084E               	movf	vfpfcnvrt@fmt,w
 10189  17A8  0086               	movwf	6
 10190  17A9  0187               	clrf	7
 10191  17AA  3F40               	moviw [0]fsr1
 10192  17AB  00D0               	movwf	??_vfpfcnvrt
 10193  17AC  3F41               	moviw [1]fsr1
 10194  17AD  00D1               	movwf	??_vfpfcnvrt+1
 10195  17AE  0850               	movf	??_vfpfcnvrt,w
 10196  17AF  0084               	movwf	4
 10197  17B0  0851               	movf	??_vfpfcnvrt+1,w
 10198  17B1  0085               	movwf	5
 10199  17B2  0012               	moviw fsr0++
 10200  17B3  3A25               	xorlw	37
 10201  17B4  1D03               	btfss	3,2
 10202  17B5  2FB7               	goto	u5461
 10203  17B6  2FB8               	goto	u5460
 10204  17B7                     u5461:
 10205  17B7  2FD1               	goto	l5491
 10206  17B8                     u5460:
 10207  17B8                     l5483:
 10208                           
 10209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 10210  17B8  084E               	movf	vfpfcnvrt@fmt,w
 10211  17B9  0086               	movwf	6
 10212  17BA  0187               	clrf	7
 10213  17BB  3001               	movlw	1
 10214  17BC  0781               	addwf	1,f
 10215  17BD  3141               	addfsr 1,1
 10216  17BE  1803               	skipnc
 10217  17BF  0A81               	incf	1,f
 10218  17C0                     l5485:
 10219                           
 10220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 10221  17C0  3025               	movlw	37
 10222  17C1  00F1               	movwf	fputc@c
 10223  17C2  3000               	movlw	0
 10224  17C3  00F2               	movwf	fputc@c+1
 10225  17C4  085D               	movf	vfpfcnvrt@fp,w
 10226  17C5  00D0               	movwf	??_vfpfcnvrt
 10227  17C6  0850               	movf	??_vfpfcnvrt,w
 10228  17C7  00F3               	movwf	fputc@fp
 10229  17C8  3192  22AB  3197   	fcall	_fputc
 10230  17CB                     l5487:
 10231                           
 10232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 10233  17CB  3001               	movlw	1
 10234  17CC  0020               	movlb	0	; select bank0
 10235  17CD  00CE               	movwf	?_vfpfcnvrt
 10236  17CE  3000               	movlw	0
 10237  17CF  00CF               	movwf	?_vfpfcnvrt+1
 10238  17D0  2FFF               	goto	l1647
 10239  17D1                     l5491:
 10240                           
 10241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 10242  17D1  084E               	movf	vfpfcnvrt@fmt,w
 10243  17D2  0086               	movwf	6
 10244  17D3  0187               	clrf	7
 10245  17D4  3001               	movlw	1
 10246  17D5  0781               	addwf	1,f
 10247  17D6  3141               	addfsr 1,1
 10248  17D7  1803               	skipnc
 10249  17D8  0A81               	incf	1,f
 10250  17D9                     l5493:
 10251                           
 10252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 10253  17D9  01CE               	clrf	?_vfpfcnvrt
 10254  17DA  01CF               	clrf	?_vfpfcnvrt+1
 10255  17DB  2FFF               	goto	l1647
 10256  17DC                     l5497:
 10257                           
 10258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 10259  17DC  084E               	movf	vfpfcnvrt@fmt,w
 10260  17DD  0086               	movwf	6
 10261  17DE  0187               	clrf	7
 10262  17DF  3F40               	moviw [0]fsr1
 10263  17E0  00D0               	movwf	??_vfpfcnvrt
 10264  17E1  3F41               	moviw [1]fsr1
 10265  17E2  00D1               	movwf	??_vfpfcnvrt+1
 10266  17E3  0850               	movf	??_vfpfcnvrt,w
 10267  17E4  0084               	movwf	4
 10268  17E5  0851               	movf	??_vfpfcnvrt+1,w
 10269  17E6  0085               	movwf	5
 10270  17E7  0800               	movf	0,w	;code access
 10271  17E8  00D2               	movwf	??_vfpfcnvrt+2
 10272  17E9  01D3               	clrf	??_vfpfcnvrt+3
 10273  17EA  0852               	movf	??_vfpfcnvrt+2,w
 10274  17EB  00F1               	movwf	fputc@c
 10275  17EC  0853               	movf	??_vfpfcnvrt+3,w
 10276  17ED  00F2               	movwf	fputc@c+1
 10277  17EE  085D               	movf	vfpfcnvrt@fp,w
 10278  17EF  00D4               	movwf	??_vfpfcnvrt+4
 10279  17F0  0854               	movf	??_vfpfcnvrt+4,w
 10280  17F1  00F3               	movwf	fputc@fp
 10281  17F2  3192  22AB  3197   	fcall	_fputc
 10282  17F5                     l5499:
 10283                           
 10284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 10285  17F5  0020               	movlb	0	; select bank0
 10286  17F6  084E               	movf	vfpfcnvrt@fmt,w
 10287  17F7  0086               	movwf	6
 10288  17F8  0187               	clrf	7
 10289  17F9  3001               	movlw	1
 10290  17FA  0781               	addwf	1,f
 10291  17FB  3141               	addfsr 1,1
 10292  17FC  1803               	skipnc
 10293  17FD  0A81               	incf	1,f
 10294  17FE  2FCB               	goto	l5487
 10295  17FF                     l1647:
 10296  17FF  0008               	return
 10297  1800                     __end_of_vfpfcnvrt:
 10298                           
 10299                           	psect	text11
 10300  0A4A                     __ptext11:	
 10301 ;; *************** function _dtoa *****************
 10302 ;; Defined at:
 10303 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  fp              1    wreg     PTR struct _IO_FILE
 10306 ;;		 -> sprintf@f(5), 
 10307 ;;  d               8   16[BANK0 ] long long 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10310 ;;		 -> sprintf@f(5), 
 10311 ;;  n               8   36[BANK0 ] long long 
 10312 ;;  i               2   44[BANK0 ] int 
 10313 ;;  s               2   34[BANK0 ] int 
 10314 ;;  w               2   32[BANK0 ] int 
 10315 ;;  p               2   30[BANK0 ] int 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2   16[BANK0 ] int 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:       30 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    8
 10332 ;; This function calls:
 10333 ;;		___aodiv
 10334 ;;		___aomod
 10335 ;;		_abs
 10336 ;;		_pad
 10337 ;; This function is called by:
 10338 ;;		_vfpfcnvrt
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _dtoa
 10344  0A4A                     _dtoa:
 10345                           
 10346                           ;incstack = 0
 10347                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10348                           ;dtoa@fp stored from wreg
 10349  0A4A  0020               	movlb	0	; select bank0
 10350  0A4B  00BB               	movwf	dtoa@fp
 10351  0A4C                     l5321:
 10352                           
 10353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 10354  0A4C  0830               	movf	dtoa@d,w
 10355  0A4D  00C4               	movwf	dtoa@n
 10356  0A4E  0831               	movf	dtoa@d+1,w
 10357  0A4F  00C5               	movwf	dtoa@n+1
 10358  0A50  0832               	movf	dtoa@d+2,w
 10359  0A51  00C6               	movwf	dtoa@n+2
 10360  0A52  0833               	movf	dtoa@d+3,w
 10361  0A53  00C7               	movwf	dtoa@n+3
 10362  0A54  0834               	movf	dtoa@d+4,w
 10363  0A55  00C8               	movwf	dtoa@n+4
 10364  0A56  0835               	movf	dtoa@d+5,w
 10365  0A57  00C9               	movwf	dtoa@n+5
 10366  0A58  0836               	movf	dtoa@d+6,w
 10367  0A59  00CA               	movwf	dtoa@n+6
 10368  0A5A  0837               	movf	dtoa@d+7,w
 10369  0A5B  00CB               	movwf	dtoa@n+7
 10370  0A5C                     l5323:
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 10373  0A5C  3044               	movlw	low dtoa@n
 10374  0A5D  0086               	movwf	6
 10375  0A5E  3000               	movlw	high dtoa@n
 10376  0A5F  0087               	movwf	7
 10377  0A60  3F47               	moviw [7]fsr1
 10378  0A61  00B8               	movwf	??_dtoa
 10379  0A62  1BB8               	btfsc	??_dtoa,7
 10380  0A63  2A65               	goto	u5091
 10381  0A64  2A67               	goto	u5090
 10382  0A65                     u5091:
 10383  0A65  3001               	movlw	1
 10384  0A66  2A68               	goto	u5100
 10385  0A67                     u5090:
 10386  0A67  3000               	movlw	0
 10387  0A68                     u5100:
 10388  0A68  0020               	movlb	0	; select bank0
 10389  0A69  00B9               	movwf	??_dtoa+1
 10390  0A6A  01BA               	clrf	??_dtoa+2
 10391  0A6B  0839               	movf	??_dtoa+1,w
 10392  0A6C  00C2               	movwf	dtoa@s
 10393  0A6D  083A               	movf	??_dtoa+2,w
 10394  0A6E  00C3               	movwf	dtoa@s+1
 10395  0A6F                     l5325:
 10396                           
 10397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 10398  0A6F  0842               	movf	dtoa@s,w
 10399  0A70  0443               	iorwf	dtoa@s+1,w
 10400  0A71  1903               	btfsc	3,2
 10401  0A72  2A74               	goto	u5111
 10402  0A73  2A75               	goto	u5110
 10403  0A74                     u5111:
 10404  0A74  2A93               	goto	l1617
 10405  0A75                     u5110:
 10406  0A75                     l5327:
 10407                           
 10408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 10409  0A75  09C4               	comf	dtoa@n,f
 10410  0A76  09C5               	comf	dtoa@n+1,f
 10411  0A77  09C6               	comf	dtoa@n+2,f
 10412  0A78  09C7               	comf	dtoa@n+3,f
 10413  0A79  09C8               	comf	dtoa@n+4,f
 10414  0A7A  09C9               	comf	dtoa@n+5,f
 10415  0A7B  09CA               	comf	dtoa@n+6,f
 10416  0A7C  09CB               	comf	dtoa@n+7,f
 10417  0A7D  0AC4               	incf	dtoa@n,f
 10418  0A7E  1D03               	skipz
 10419  0A7F  2A93               	goto	u512lld
 10420  0A80  0AC5               	incf	dtoa@n+1,f
 10421  0A81  1D03               	skipz
 10422  0A82  2A93               	goto	u512lld
 10423  0A83  0AC6               	incf	dtoa@n+2,f
 10424  0A84  1D03               	skipz
 10425  0A85  2A93               	goto	u512lld
 10426  0A86  0AC7               	incf	dtoa@n+3,f
 10427  0A87  1D03               	skipz
 10428  0A88  2A93               	goto	u512lld
 10429  0A89  0AC8               	incf	dtoa@n+4,f
 10430  0A8A  1D03               	skipz
 10431  0A8B  2A93               	goto	u512lld
 10432  0A8C  0AC9               	incf	dtoa@n+5,f
 10433  0A8D  1D03               	skipz
 10434  0A8E  2A93               	goto	u512lld
 10435  0A8F  0ACA               	incf	dtoa@n+6,f
 10436  0A90  1D03               	skipz
 10437  0A91  2A93               	goto	u512lld
 10438  0A92  0ACB               	incf	dtoa@n+7,f
 10439  0A93                     u512lld:
 10440  0A93                     l1617:	
 10441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
 10442                           
 10443                           
 10444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 10445  0A93  0021               	movlb	1	; select bank1
 10446  0A94  1BC0               	btfsc	(_prec+1)^(0+128),7
 10447  0A95  2A97               	goto	u5131
 10448  0A96  2A98               	goto	u5130
 10449  0A97                     u5131:
 10450  0A97  2A9C               	goto	l1618
 10451  0A98                     u5130:
 10452  0A98                     l5329:
 10453                           
 10454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 10455  0A98  30FD               	movlw	253
 10456  0A99  05C1               	andwf	_flags^(0+128),f
 10457  0A9A  30FF               	movlw	255
 10458  0A9B  05C2               	andwf	(_flags+1)^(0+128),f
 10459  0A9C                     l1618:	
 10460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
 10461                           
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 10464  0A9C  0840               	movf	(_prec+1)^(0+128),w
 10465  0A9D  3A80               	xorlw	128
 10466  0A9E  0020               	movlb	0	; select bank0
 10467  0A9F  00B8               	movwf	??_dtoa
 10468  0AA0  3080               	movlw	128
 10469  0AA1  0238               	subwf	??_dtoa,w
 10470  0AA2  1D03               	skipz
 10471  0AA3  2AA7               	goto	u5145
 10472  0AA4  3001               	movlw	1
 10473  0AA5  0021               	movlb	1	; select bank1
 10474  0AA6  023F               	subwf	_prec^(0+128),w
 10475  0AA7                     u5145:
 10476  0AA7  1803               	skipnc
 10477  0AA8  2AAA               	goto	u5141
 10478  0AA9  2AAB               	goto	u5140
 10479  0AAA                     u5141:
 10480  0AAA  2AB1               	goto	l5333
 10481  0AAB                     u5140:
 10482  0AAB                     l5331:
 10483  0AAB  3001               	movlw	1
 10484  0AAC  0020               	movlb	0	; select bank0
 10485  0AAD  00BE               	movwf	dtoa@p
 10486  0AAE  3000               	movlw	0
 10487  0AAF  00BF               	movwf	dtoa@p+1
 10488  0AB0  2AB9               	goto	l1622
 10489  0AB1                     l5333:
 10490  0AB1  0021               	movlb	1	; select bank1
 10491  0AB2  0840               	movf	(_prec+1)^(0+128),w
 10492  0AB3  0020               	movlb	0	; select bank0
 10493  0AB4  00BF               	movwf	dtoa@p+1
 10494  0AB5  0021               	movlb	1	; select bank1
 10495  0AB6  083F               	movf	_prec^(0+128),w
 10496  0AB7  0020               	movlb	0	; select bank0
 10497  0AB8  00BE               	movwf	dtoa@p
 10498  0AB9                     l1622:
 10499                           
 10500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 10501  0AB9  0021               	movlb	1	; select bank1
 10502  0ABA  083E               	movf	(_width+1)^(0+128),w
 10503  0ABB  0020               	movlb	0	; select bank0
 10504  0ABC  00C1               	movwf	dtoa@w+1
 10505  0ABD  0021               	movlb	1	; select bank1
 10506  0ABE  083D               	movf	_width^(0+128),w
 10507  0ABF  0020               	movlb	0	; select bank0
 10508  0AC0  00C0               	movwf	dtoa@w
 10509  0AC1                     l5335:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 10512  0AC1  0842               	movf	dtoa@s,w
 10513  0AC2  0443               	iorwf	dtoa@s+1,w
 10514  0AC3  1D03               	btfss	3,2
 10515  0AC4  2AC6               	goto	u5151
 10516  0AC5  2AC7               	goto	u5150
 10517  0AC6                     u5151:
 10518  0AC6  2ACC               	goto	l5339
 10519  0AC7                     u5150:
 10520  0AC7                     l5337:
 10521  0AC7  0021               	movlb	1	; select bank1
 10522  0AC8  1D41               	btfss	_flags^(0+128),2
 10523  0AC9  2ACB               	goto	u5161
 10524  0ACA  2ACC               	goto	u5160
 10525  0ACB                     u5161:
 10526  0ACB  2AD1               	goto	l1623
 10527  0ACC                     u5160:
 10528  0ACC                     l5339:
 10529                           
 10530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
 10531  0ACC  30FF               	movlw	255
 10532  0ACD  0020               	movlb	0	; select bank0
 10533  0ACE  07C0               	addwf	dtoa@w,f
 10534  0ACF  30FF               	movlw	255
 10535  0AD0  3DC1               	addwfc	dtoa@w+1,f
 10536  0AD1                     l1623:	
 10537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
 10538                           
 10539                           
 10540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 10541  0AD1  301F               	movlw	31
 10542  0AD2  0020               	movlb	0	; select bank0
 10543  0AD3  00CC               	movwf	dtoa@i
 10544  0AD4  3000               	movlw	0
 10545  0AD5  00CD               	movwf	dtoa@i+1
 10546  0AD6                     l5341:
 10547                           
 10548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 10549  0AD6  0022               	movlb	2	; select bank2
 10550  0AD7  01BF               	clrf	(_dbuf^(0+256)+31)
 10551                           
 10552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10553  0AD8  2B42               	goto	l1626
 10554  0AD9                     l5343:
 10555                           
 10556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
 10557  0AD9  30FF               	movlw	255
 10558  0ADA  0020               	movlb	0	; select bank0
 10559  0ADB  07CC               	addwf	dtoa@i,f
 10560  0ADC  30FF               	movlw	255
 10561  0ADD  3DCD               	addwfc	dtoa@i+1,f
 10562  0ADE                     l5345:
 10563                           
 10564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 10565  0ADE  300A               	movlw	10
 10566  0ADF  00A0               	movwf	___aomod@divisor
 10567  0AE0  01A1               	clrf	___aomod@divisor+1
 10568  0AE1  01A2               	clrf	___aomod@divisor+2
 10569  0AE2  01A3               	clrf	___aomod@divisor+3
 10570  0AE3  01A4               	clrf	___aomod@divisor+4
 10571  0AE4  01A5               	clrf	___aomod@divisor+5
 10572  0AE5  01A6               	clrf	___aomod@divisor+6
 10573  0AE6  01A7               	clrf	___aomod@divisor+7
 10574  0AE7  0844               	movf	dtoa@n,w
 10575  0AE8  00A8               	movwf	___aomod@dividend
 10576  0AE9  0845               	movf	dtoa@n+1,w
 10577  0AEA  00A9               	movwf	___aomod@dividend+1
 10578  0AEB  0846               	movf	dtoa@n+2,w
 10579  0AEC  00AA               	movwf	___aomod@dividend+2
 10580  0AED  0847               	movf	dtoa@n+3,w
 10581  0AEE  00AB               	movwf	___aomod@dividend+3
 10582  0AEF  0848               	movf	dtoa@n+4,w
 10583  0AF0  00AC               	movwf	___aomod@dividend+4
 10584  0AF1  0849               	movf	dtoa@n+5,w
 10585  0AF2  00AD               	movwf	___aomod@dividend+5
 10586  0AF3  084A               	movf	dtoa@n+6,w
 10587  0AF4  00AE               	movwf	___aomod@dividend+6
 10588  0AF5  084B               	movf	dtoa@n+7,w
 10589  0AF6  00AF               	movwf	___aomod@dividend+7
 10590  0AF7  3188  205F  318A   	fcall	___aomod
 10591  0AFA  0020               	movlb	0	; select bank0
 10592  0AFB  0821               	movf	?___aomod+1,w
 10593  0AFC  00F5               	movwf	abs@a+1
 10594  0AFD  0820               	movf	?___aomod,w
 10595  0AFE  00F4               	movwf	abs@a
 10596  0AFF  3190  206B  318A   	fcall	_abs
 10597  0B02  0874               	movf	?_abs,w
 10598  0B03  3E30               	addlw	48
 10599  0B04  0020               	movlb	0	; select bank0
 10600  0B05  00B8               	movwf	??_dtoa
 10601  0B06  084C               	movf	dtoa@i,w
 10602  0B07  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10603  0B08  0086               	movwf	6
 10604  0B09  3001               	movlw	1	; select bank2/3
 10605  0B0A  0087               	movwf	7
 10606  0B0B  0838               	movf	??_dtoa,w
 10607  0B0C  0081               	movwf	1
 10608  0B0D                     l5347:
 10609                           
 10610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
 10611  0B0D  30FF               	movlw	255
 10612  0B0E  07BE               	addwf	dtoa@p,f
 10613  0B0F  30FF               	movlw	255
 10614  0B10  3DBF               	addwfc	dtoa@p+1,f
 10615  0B11                     l5349:
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
 10618  0B11  30FF               	movlw	255
 10619  0B12  07C0               	addwf	dtoa@w,f
 10620  0B13  30FF               	movlw	255
 10621  0B14  3DC1               	addwfc	dtoa@w+1,f
 10622  0B15                     l5351:
 10623                           
 10624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 10625  0B15  300A               	movlw	10
 10626  0B16  00A0               	movwf	___aodiv@divisor
 10627  0B17  01A1               	clrf	___aodiv@divisor+1
 10628  0B18  01A2               	clrf	___aodiv@divisor+2
 10629  0B19  01A3               	clrf	___aodiv@divisor+3
 10630  0B1A  01A4               	clrf	___aodiv@divisor+4
 10631  0B1B  01A5               	clrf	___aodiv@divisor+5
 10632  0B1C  01A6               	clrf	___aodiv@divisor+6
 10633  0B1D  01A7               	clrf	___aodiv@divisor+7
 10634  0B1E  0844               	movf	dtoa@n,w
 10635  0B1F  00A8               	movwf	___aodiv@dividend
 10636  0B20  0845               	movf	dtoa@n+1,w
 10637  0B21  00A9               	movwf	___aodiv@dividend+1
 10638  0B22  0846               	movf	dtoa@n+2,w
 10639  0B23  00AA               	movwf	___aodiv@dividend+2
 10640  0B24  0847               	movf	dtoa@n+3,w
 10641  0B25  00AB               	movwf	___aodiv@dividend+3
 10642  0B26  0848               	movf	dtoa@n+4,w
 10643  0B27  00AC               	movwf	___aodiv@dividend+4
 10644  0B28  0849               	movf	dtoa@n+5,w
 10645  0B29  00AD               	movwf	___aodiv@dividend+5
 10646  0B2A  084A               	movf	dtoa@n+6,w
 10647  0B2B  00AE               	movwf	___aodiv@dividend+6
 10648  0B2C  084B               	movf	dtoa@n+7,w
 10649  0B2D  00AF               	movwf	___aodiv@dividend+7
 10650  0B2E  3189  2149  318A   	fcall	___aodiv
 10651  0B31  0020               	movlb	0	; select bank0
 10652  0B32  0820               	movf	?___aodiv,w
 10653  0B33  00C4               	movwf	dtoa@n
 10654  0B34  0821               	movf	?___aodiv+1,w
 10655  0B35  00C5               	movwf	dtoa@n+1
 10656  0B36  0822               	movf	?___aodiv+2,w
 10657  0B37  00C6               	movwf	dtoa@n+2
 10658  0B38  0823               	movf	?___aodiv+3,w
 10659  0B39  00C7               	movwf	dtoa@n+3
 10660  0B3A  0824               	movf	?___aodiv+4,w
 10661  0B3B  00C8               	movwf	dtoa@n+4
 10662  0B3C  0825               	movf	?___aodiv+5,w
 10663  0B3D  00C9               	movwf	dtoa@n+5
 10664  0B3E  0826               	movf	?___aodiv+6,w
 10665  0B3F  00CA               	movwf	dtoa@n+6
 10666  0B40  0827               	movf	?___aodiv+7,w
 10667  0B41  00CB               	movwf	dtoa@n+7
 10668  0B42                     l1626:	
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
 10670                           
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10673  0B42  0020               	movlb	0	; select bank0
 10674  0B43  084D               	movf	dtoa@i+1,w
 10675  0B44  3A80               	xorlw	128
 10676  0B45  00B8               	movwf	??_dtoa
 10677  0B46  3080               	movlw	128
 10678  0B47  0238               	subwf	??_dtoa,w
 10679  0B48  1D03               	skipz
 10680  0B49  2B4C               	goto	u5175
 10681  0B4A  3001               	movlw	1
 10682  0B4B  024C               	subwf	dtoa@i,w
 10683  0B4C                     u5175:
 10684  0B4C  1C03               	skipc
 10685  0B4D  2B4F               	goto	u5171
 10686  0B4E  2B50               	goto	u5170
 10687  0B4F                     u5171:
 10688  0B4F  2B7D               	goto	l5361
 10689  0B50                     u5170:
 10690  0B50                     l5353:
 10691  0B50  0020               	movlb	0	; select bank0
 10692  0B51  0844               	movf	dtoa@n,w
 10693  0B52  0445               	iorwf	dtoa@n+1,w
 10694  0B53  0446               	iorwf	dtoa@n+2,w
 10695  0B54  0447               	iorwf	dtoa@n+3,w
 10696  0B55  0448               	iorwf	dtoa@n+4,w
 10697  0B56  0449               	iorwf	dtoa@n+5,w
 10698  0B57  044A               	iorwf	dtoa@n+6,w
 10699  0B58  044B               	iorwf	dtoa@n+7,w
 10700  0B59  1D03               	skipz
 10701  0B5A  2B5C               	goto	u5181
 10702  0B5B  2B5D               	goto	u5180
 10703  0B5C                     u5181:
 10704  0B5C  2AD9               	goto	l5343
 10705  0B5D                     u5180:
 10706  0B5D                     l5355:
 10707  0B5D  083F               	movf	dtoa@p+1,w
 10708  0B5E  3A80               	xorlw	128
 10709  0B5F  00B8               	movwf	??_dtoa
 10710  0B60  3080               	movlw	128
 10711  0B61  0238               	subwf	??_dtoa,w
 10712  0B62  1D03               	skipz
 10713  0B63  2B66               	goto	u5195
 10714  0B64  3001               	movlw	1
 10715  0B65  023E               	subwf	dtoa@p,w
 10716  0B66                     u5195:
 10717  0B66  1803               	skipnc
 10718  0B67  2B69               	goto	u5191
 10719  0B68  2B6A               	goto	u5190
 10720  0B69                     u5191:
 10721  0B69  2AD9               	goto	l5343
 10722  0B6A                     u5190:
 10723  0B6A                     l5357:
 10724  0B6A  0020               	movlb	0	; select bank0
 10725  0B6B  0841               	movf	dtoa@w+1,w
 10726  0B6C  3A80               	xorlw	128
 10727  0B6D  00B8               	movwf	??_dtoa
 10728  0B6E  3080               	movlw	128
 10729  0B6F  0238               	subwf	??_dtoa,w
 10730  0B70  1D03               	skipz
 10731  0B71  2B74               	goto	u5205
 10732  0B72  3001               	movlw	1
 10733  0B73  0240               	subwf	dtoa@w,w
 10734  0B74                     u5205:
 10735  0B74  1C03               	skipc
 10736  0B75  2B77               	goto	u5201
 10737  0B76  2B78               	goto	u5200
 10738  0B77                     u5201:
 10739  0B77  2B7D               	goto	l5361
 10740  0B78                     u5200:
 10741  0B78                     l5359:
 10742  0B78  0021               	movlb	1	; select bank1
 10743  0B79  18C1               	btfsc	_flags^(0+128),1
 10744  0B7A  2B7C               	goto	u5211
 10745  0B7B  2B7D               	goto	u5210
 10746  0B7C                     u5211:
 10747  0B7C  2AD9               	goto	l5343
 10748  0B7D                     u5210:
 10749  0B7D                     l5361:
 10750                           
 10751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 10752  0B7D  0020               	movlb	0	; select bank0
 10753  0B7E  0842               	movf	dtoa@s,w
 10754  0B7F  0443               	iorwf	dtoa@s+1,w
 10755  0B80  1D03               	btfss	3,2
 10756  0B81  2B83               	goto	u5221
 10757  0B82  2B84               	goto	u5220
 10758  0B83                     u5221:
 10759  0B83  2B89               	goto	l5365
 10760  0B84                     u5220:
 10761  0B84                     l5363:
 10762  0B84  0021               	movlb	1	; select bank1
 10763  0B85  1D41               	btfss	_flags^(0+128),2
 10764  0B86  2B88               	goto	u5231
 10765  0B87  2B89               	goto	u5230
 10766  0B88                     u5231:
 10767  0B88  2BA6               	goto	l5375
 10768  0B89                     u5230:
 10769  0B89                     l5365:
 10770                           
 10771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
 10772  0B89  30FF               	movlw	255
 10773  0B8A  0020               	movlb	0	; select bank0
 10774  0B8B  07CC               	addwf	dtoa@i,f
 10775  0B8C  30FF               	movlw	255
 10776  0B8D  3DCD               	addwfc	dtoa@i+1,f
 10777  0B8E                     l5367:
 10778                           
 10779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 10780  0B8E  0842               	movf	dtoa@s,w
 10781  0B8F  0443               	iorwf	dtoa@s+1,w
 10782  0B90  1D03               	btfss	3,2
 10783  0B91  2B93               	goto	u5241
 10784  0B92  2B94               	goto	u5240
 10785  0B93                     u5241:
 10786  0B93  2B99               	goto	l5371
 10787  0B94                     u5240:
 10788  0B94                     l5369:
 10789  0B94  302B               	movlw	43
 10790  0B95  00BC               	movwf	_dtoa$1971
 10791  0B96  3000               	movlw	0
 10792  0B97  00BD               	movwf	_dtoa$1971+1
 10793  0B98  2B9D               	goto	l5373
 10794  0B99                     l5371:
 10795  0B99  302D               	movlw	45
 10796  0B9A  00BC               	movwf	_dtoa$1971
 10797  0B9B  3000               	movlw	0
 10798  0B9C  00BD               	movwf	_dtoa$1971+1
 10799  0B9D                     l5373:
 10800  0B9D  083C               	movf	_dtoa$1971,w
 10801  0B9E  00B8               	movwf	??_dtoa
 10802  0B9F  084C               	movf	dtoa@i,w
 10803  0BA0  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10804  0BA1  0086               	movwf	6
 10805  0BA2  3001               	movlw	1	; select bank2/3
 10806  0BA3  0087               	movwf	7
 10807  0BA4  0838               	movf	??_dtoa,w
 10808  0BA5  0081               	movwf	1
 10809  0BA6                     l5375:
 10810                           
 10811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 10812  0BA6  0020               	movlb	0	; select bank0
 10813  0BA7  084C               	movf	dtoa@i,w
 10814  0BA8  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10815  0BA9  00B8               	movwf	??_dtoa
 10816  0BAA  0838               	movf	??_dtoa,w
 10817  0BAB  00A7               	movwf	pad@buf
 10818  0BAC  0841               	movf	dtoa@w+1,w
 10819  0BAD  00A9               	movwf	pad@p+1
 10820  0BAE  0840               	movf	dtoa@w,w
 10821  0BAF  00A8               	movwf	pad@p
 10822  0BB0  083B               	movf	dtoa@fp,w
 10823  0BB1  3188  2006  318A   	fcall	_pad
 10824  0BB4  0020               	movlb	0	; select bank0
 10825  0BB5  0828               	movf	?_pad+1,w
 10826  0BB6  00B1               	movwf	?_dtoa+1
 10827  0BB7  0827               	movf	?_pad,w
 10828  0BB8  00B0               	movwf	?_dtoa
 10829  0BB9                     l1640:
 10830  0BB9  0008               	return
 10831  0BBA                     __end_of_dtoa:
 10832                           
 10833                           	psect	text12
 10834  0806                     __ptext12:	
 10835 ;; *************** function _pad *****************
 10836 ;; Defined at:
 10837 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;  fp              1    wreg     PTR struct _IO_FILE
 10840 ;;		 -> sprintf@f(5), 
 10841 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 10842 ;;		 -> dbuf(32), 
 10843 ;;  p               2    8[BANK0 ] int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 10846 ;;		 -> sprintf@f(5), 
 10847 ;;  w               2   12[BANK0 ] int 
 10848 ;;  i               2   10[BANK0 ] int 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  2    7[BANK0 ] int 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10858 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;Total ram usage:        9 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    7
 10865 ;; This function calls:
 10866 ;;		_fputc
 10867 ;;		_fputs
 10868 ;;		_strlen
 10869 ;; This function is called by:
 10870 ;;		_dtoa
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           
 10875                           ;psect for function _pad
 10876  0806                     _pad:
 10877                           
 10878                           ;incstack = 0
 10879                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10880                           ;pad@fp stored from wreg
 10881  0806  0020               	movlb	0	; select bank0
 10882  0807  00AE               	movwf	pad@fp
 10883  0808                     l5259:
 10884                           
 10885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 10886  0808  0021               	movlb	1	; select bank1
 10887  0809  1C41               	btfss	_flags^(0+128),0
 10888  080A  280C               	goto	u5011
 10889  080B  280D               	goto	u5010
 10890  080C                     u5011:
 10891  080C  2816               	goto	l5263
 10892  080D                     u5010:
 10893  080D                     l5261:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 10896  080D  0020               	movlb	0	; select bank0
 10897  080E  082E               	movf	pad@fp,w
 10898  080F  00FA               	movwf	??_pad
 10899  0810  087A               	movf	??_pad,w
 10900  0811  00F9               	movwf	fputs@fp
 10901  0812  0827               	movf	pad@buf,w
 10902  0813  3191  2141  3188   	fcall	_fputs
 10903  0816                     l5263:
 10904                           
 10905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10906  0816  0020               	movlb	0	; select bank0
 10907  0817  1BA9               	btfsc	pad@p+1,7
 10908  0818  281A               	goto	u5021
 10909  0819  281B               	goto	u5020
 10910  081A                     u5021:
 10911  081A  2820               	goto	l5267
 10912  081B                     u5020:
 10913  081B                     l5265:
 10914  081B  0829               	movf	pad@p+1,w
 10915  081C  00AD               	movwf	pad@w+1
 10916  081D  0828               	movf	pad@p,w
 10917  081E  00AC               	movwf	pad@w
 10918  081F  2822               	goto	l1609
 10919  0820                     l5267:
 10920  0820  01AC               	clrf	pad@w
 10921  0821  01AD               	clrf	pad@w+1
 10922  0822                     l1609:
 10923                           
 10924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10925  0822  01AA               	clrf	pad@i
 10926  0823  01AB               	clrf	pad@i+1
 10927                           
 10928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10929  0824  2836               	goto	l5273
 10930  0825                     l5269:
 10931                           
 10932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10933  0825  3020               	movlw	32
 10934  0826  00F1               	movwf	fputc@c
 10935  0827  3000               	movlw	0
 10936  0828  00F2               	movwf	fputc@c+1
 10937  0829  0020               	movlb	0	; select bank0
 10938  082A  082E               	movf	pad@fp,w
 10939  082B  00FA               	movwf	??_pad
 10940  082C  087A               	movf	??_pad,w
 10941  082D  00F3               	movwf	fputc@fp
 10942  082E  3192  22AB  3188   	fcall	_fputc
 10943  0831                     l5271:
 10944                           
 10945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10946  0831  3001               	movlw	1
 10947  0832  0020               	movlb	0	; select bank0
 10948  0833  07AA               	addwf	pad@i,f
 10949  0834  3000               	movlw	0
 10950  0835  3DAB               	addwfc	pad@i+1,f
 10951  0836                     l5273:
 10952                           
 10953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10954  0836  082B               	movf	pad@i+1,w
 10955  0837  3A80               	xorlw	128
 10956  0838  00FA               	movwf	??_pad
 10957  0839  082D               	movf	pad@w+1,w
 10958  083A  3A80               	xorlw	128
 10959  083B  027A               	subwf	??_pad,w
 10960  083C  1D03               	skipz
 10961  083D  2840               	goto	u5035
 10962  083E  082C               	movf	pad@w,w
 10963  083F  022A               	subwf	pad@i,w
 10964  0840                     u5035:
 10965  0840  1C03               	skipc
 10966  0841  2843               	goto	u5031
 10967  0842  2844               	goto	u5030
 10968  0843                     u5031:
 10969  0843  2825               	goto	l5269
 10970  0844                     u5030:
 10971  0844                     l1612:
 10972                           
 10973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10974  0844  0021               	movlb	1	; select bank1
 10975  0845  1841               	btfsc	_flags^(0+128),0
 10976  0846  2848               	goto	u5041
 10977  0847  2849               	goto	u5040
 10978  0848                     u5041:
 10979  0848  2852               	goto	l5277
 10980  0849                     u5040:
 10981  0849                     l5275:
 10982                           
 10983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10984  0849  0020               	movlb	0	; select bank0
 10985  084A  082E               	movf	pad@fp,w
 10986  084B  00FA               	movwf	??_pad
 10987  084C  087A               	movf	??_pad,w
 10988  084D  00F9               	movwf	fputs@fp
 10989  084E  0827               	movf	pad@buf,w
 10990  084F  3191  2141  3188   	fcall	_fputs
 10991  0852                     l5277:
 10992                           
 10993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10994  0852  0020               	movlb	0	; select bank0
 10995  0853  0827               	movf	pad@buf,w
 10996  0854  3190  2085  3188   	fcall	_strlen
 10997  0857  0020               	movlb	0	; select bank0
 10998  0858  082C               	movf	pad@w,w
 10999  0859  0771               	addwf	?_strlen,w
 11000  085A  00A7               	movwf	?_pad
 11001  085B  082D               	movf	pad@w+1,w
 11002  085C  3D72               	addwfc	?_strlen+1,w
 11003  085D  00A8               	movwf	?_pad+1
 11004  085E                     l1614:
 11005  085E  0008               	return
 11006  085F                     __end_of_pad:
 11007                           
 11008                           	psect	text13
 11009  1085                     __ptext13:	
 11010 ;; *************** function _strlen *****************
 11011 ;; Defined at:
 11012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  s               1    wreg     PTR const unsigned char 
 11015 ;;		 -> dbuf(32), 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  s               1    5[COMMON] PTR const unsigned char 
 11018 ;;		 -> dbuf(32), 
 11019 ;;  a               1    4[COMMON] PTR const unsigned char 
 11020 ;;		 -> dbuf(32), 
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  2    1[COMMON] unsigned int 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;Total ram usage:        5 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    4
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_pad
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function _strlen
 11046  1085                     _strlen:
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11050                           ;strlen@s stored from wreg
 11051  1085  00F5               	movwf	strlen@s
 11052  1086                     l3463:
 11053  1086  0875               	movf	strlen@s,w
 11054  1087  00F3               	movwf	??_strlen
 11055  1088  0873               	movf	??_strlen,w
 11056  1089  00F4               	movwf	strlen@a
 11057  108A  288F               	goto	l3467
 11058  108B                     l3465:
 11059  108B  3001               	movlw	1
 11060  108C  00F3               	movwf	??_strlen
 11061  108D  0873               	movf	??_strlen,w
 11062  108E  07F5               	addwf	strlen@s,f
 11063  108F                     l3467:
 11064  108F  0875               	movf	strlen@s,w
 11065  1090  0086               	movwf	6
 11066  1091  3001               	movlw	1	; select bank2/3
 11067  1092  0087               	movwf	7
 11068  1093  0801               	movf	1,w
 11069  1094  1D03               	btfss	3,2
 11070  1095  2897               	goto	u2471
 11071  1096  2898               	goto	u2470
 11072  1097                     u2471:
 11073  1097  288B               	goto	l3465
 11074  1098                     u2470:
 11075  1098                     l3469:
 11076  1098  0874               	movf	strlen@a,w
 11077  1099  0275               	subwf	strlen@s,w
 11078  109A  00F1               	movwf	?_strlen
 11079  109B  01F2               	clrf	?_strlen+1
 11080  109C  1BF1               	btfsc	?_strlen,7
 11081  109D  03F2               	decf	?_strlen+1,f
 11082  109E                     l1683:
 11083  109E  0008               	return
 11084  109F                     __end_of_strlen:
 11085                           
 11086                           	psect	text14
 11087  1141                     __ptext14:	
 11088 ;; *************** function _fputs *****************
 11089 ;; Defined at:
 11090 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  s               1    wreg     PTR const unsigned char 
 11093 ;;		 -> dbuf(32), 
 11094 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
 11095 ;;		 -> sprintf@f(5), 
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 11098 ;;		 -> dbuf(32), 
 11099 ;;  i               2    4[BANK0 ] int 
 11100 ;;  c               1    3[BANK0 ] unsigned char 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  2    9[COMMON] int 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;Total ram usage:        8 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    6
 11117 ;; This function calls:
 11118 ;;		_fputc
 11119 ;; This function is called by:
 11120 ;;		_pad
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           
 11125                           ;psect for function _fputs
 11126  1141                     _fputs:
 11127                           
 11128                           ;incstack = 0
 11129                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11130                           ;fputs@s stored from wreg
 11131  1141  0020               	movlb	0	; select bank0
 11132  1142  00A6               	movwf	fputs@s
 11133  1143                     l5245:
 11134  1143  01A4               	clrf	fputs@i
 11135  1144  01A5               	clrf	fputs@i+1
 11136  1145  2959               	goto	l5251
 11137  1146                     l5247:
 11138  1146  0823               	movf	fputs@c,w
 11139  1147  00A0               	movwf	??_fputs
 11140  1148  01A1               	clrf	??_fputs+1
 11141  1149  0820               	movf	??_fputs,w
 11142  114A  00F1               	movwf	fputc@c
 11143  114B  0821               	movf	??_fputs+1,w
 11144  114C  00F2               	movwf	fputc@c+1
 11145  114D  0879               	movf	fputs@fp,w
 11146  114E  00A2               	movwf	??_fputs+2
 11147  114F  0822               	movf	??_fputs+2,w
 11148  1150  00F3               	movwf	fputc@fp
 11149  1151  3192  22AB  3191   	fcall	_fputc
 11150  1154                     l5249:
 11151  1154  3001               	movlw	1
 11152  1155  0020               	movlb	0	; select bank0
 11153  1156  07A4               	addwf	fputs@i,f
 11154  1157  3000               	movlw	0
 11155  1158  3DA5               	addwfc	fputs@i+1,f
 11156  1159                     l5251:
 11157  1159  0824               	movf	fputs@i,w
 11158  115A  0726               	addwf	fputs@s,w
 11159  115B  00A0               	movwf	??_fputs
 11160  115C  0820               	movf	??_fputs,w
 11161  115D  0086               	movwf	6
 11162  115E  3001               	movlw	1	; select bank2/3
 11163  115F  0087               	movwf	7
 11164  1160  0801               	movf	1,w
 11165  1161  00A1               	movwf	??_fputs+1
 11166  1162  0821               	movf	??_fputs+1,w
 11167  1163  00A3               	movwf	fputs@c
 11168  1164  0823               	movf	fputs@c,w
 11169  1165  1D03               	btfss	3,2
 11170  1166  2968               	goto	u5001
 11171  1167  2969               	goto	u5000
 11172  1168                     u5001:
 11173  1168  2946               	goto	l5247
 11174  1169                     u5000:
 11175  1169                     l1674:
 11176  1169  0008               	return
 11177  116A                     __end_of_fputs:
 11178                           
 11179                           	psect	text15
 11180  12AB                     __ptext15:	
 11181 ;; *************** function _fputc *****************
 11182 ;; Defined at:
 11183 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  c               2    1[COMMON] int 
 11186 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
 11187 ;;		 -> sprintf@f(5), 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  2    1[COMMON] int 
 11192 ;; Registers used:
 11193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;Total ram usage:        8 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    5
 11206 ;; This function calls:
 11207 ;;		_putch
 11208 ;; This function is called by:
 11209 ;;		_pad
 11210 ;;		_vfpfcnvrt
 11211 ;;		_fputs
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           
 11216                           ;psect for function _fputc
 11217  12AB                     _fputc:
 11218  12AB                     l3433:	
 11219                           ;incstack = 0
 11220                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11221                           
 11222  12AB  0873               	movf	fputc@fp,w
 11223  12AC  1903               	btfsc	3,2
 11224  12AD  2AAF               	goto	u2411
 11225  12AE  2AB0               	goto	u2410
 11226  12AF                     u2411:
 11227  12AF  2AB5               	goto	l3437
 11228  12B0                     u2410:
 11229  12B0                     l3435:
 11230  12B0  0873               	movf	fputc@fp,w
 11231  12B1  1D03               	btfss	3,2
 11232  12B2  2AB4               	goto	u2421
 11233  12B3  2AB5               	goto	u2420
 11234  12B4                     u2421:
 11235  12B4  2ABA               	goto	l3439
 11236  12B5                     u2420:
 11237  12B5                     l3437:
 11238  12B5  0871               	movf	fputc@c,w
 11239  12B6  3180  2002  3192   	fcall	_putch
 11240  12B9  2AF9               	goto	l1666
 11241  12BA                     l3439:
 11242  12BA  0873               	movf	fputc@fp,w
 11243  12BB  3E03               	addlw	3
 11244  12BC  0086               	movwf	6
 11245  12BD  0187               	clrf	7
 11246  12BE  0016               	moviw fsr1++
 11247  12BF  0401               	iorwf	1,w
 11248  12C0  1903               	btfsc	3,2
 11249  12C1  2AC3               	goto	u2431
 11250  12C2  2AC4               	goto	u2430
 11251  12C3                     u2431:
 11252  12C3  2AE1               	goto	l3443
 11253  12C4                     u2430:
 11254  12C4                     l3441:
 11255  12C4  0873               	movf	fputc@fp,w
 11256  12C5  3E03               	addlw	3
 11257  12C6  0086               	movwf	6
 11258  12C7  0187               	clrf	7
 11259  12C8  3F40               	moviw [0]fsr1
 11260  12C9  00F4               	movwf	??_fputc
 11261  12CA  3F41               	moviw [1]fsr1
 11262  12CB  00F5               	movwf	??_fputc+1
 11263  12CC  0A73               	incf	fputc@fp,w
 11264  12CD  0086               	movwf	6
 11265  12CE  0187               	clrf	7
 11266  12CF  3F40               	moviw [0]fsr1
 11267  12D0  00F6               	movwf	??_fputc+2
 11268  12D1  3F41               	moviw [1]fsr1
 11269  12D2  00F7               	movwf	??_fputc+3
 11270  12D3  0877               	movf	??_fputc+3,w
 11271  12D4  3A80               	xorlw	128
 11272  12D5  00F8               	movwf	??_fputc+4
 11273  12D6  0875               	movf	??_fputc+1,w
 11274  12D7  3A80               	xorlw	128
 11275  12D8  0278               	subwf	??_fputc+4,w
 11276  12D9  1D03               	skipz
 11277  12DA  2ADD               	goto	u2445
 11278  12DB  0874               	movf	??_fputc,w
 11279  12DC  0276               	subwf	??_fputc+2,w
 11280  12DD                     u2445:
 11281  12DD  1803               	skipnc
 11282  12DE  2AE0               	goto	u2441
 11283  12DF  2AE1               	goto	u2440
 11284  12E0                     u2441:
 11285  12E0  2AF9               	goto	l1666
 11286  12E1                     u2440:
 11287  12E1                     l3443:
 11288  12E1  0871               	movf	fputc@c,w
 11289  12E2  00F4               	movwf	??_fputc
 11290  12E3  0873               	movf	fputc@fp,w
 11291  12E4  0086               	movwf	6
 11292  12E5  0187               	clrf	7
 11293  12E6  0A73               	incf	fputc@fp,w
 11294  12E7  0084               	movwf	4
 11295  12E8  0185               	clrf	5
 11296  12E9  0800               	movf	0,w
 11297  12EA  0701               	addwf	1,w
 11298  12EB  00F5               	movwf	??_fputc+1
 11299  12EC  0875               	movf	??_fputc+1,w
 11300  12ED  0086               	movwf	6
 11301  12EE  0187               	clrf	7
 11302  12EF  0874               	movf	??_fputc,w
 11303  12F0  0081               	movwf	1
 11304  12F1                     l3445:
 11305  12F1  0A73               	incf	fputc@fp,w
 11306  12F2  0086               	movwf	6
 11307  12F3  0187               	clrf	7
 11308  12F4  3001               	movlw	1
 11309  12F5  0781               	addwf	1,f
 11310  12F6  3141               	addfsr 1,1
 11311  12F7  1803               	skipnc
 11312  12F8  0A81               	incf	1,f
 11313  12F9                     l1666:
 11314  12F9  0008               	return
 11315  12FA                     __end_of_fputc:
 11316                           
 11317                           	psect	text16
 11318  0002                     __ptext16:	
 11319 ;; *************** function _putch *****************
 11320 ;; Defined at:
 11321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  c               1    wreg     unsigned char 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  c               1    0[COMMON] unsigned char 
 11326 ;; Return value:  Size  Location     Type
 11327 ;;                  1    wreg      void 
 11328 ;; Registers used:
 11329 ;;		wreg
 11330 ;; Tracked objects:
 11331 ;;		On entry : 0/0
 11332 ;;		On exit  : 0/0
 11333 ;;		Unchanged: 0/0
 11334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;Total ram usage:        0 bytes
 11340 ;; Hardware stack levels used:    1
 11341 ;; Hardware stack levels required when called:    4
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_fputc
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           
 11350                           ;psect for function _putch
 11351  0002                     _putch:
 11352  0002                     l1677:	
 11353                           ;incstack = 0
 11354                           ; Regs used in _putch: [wreg]
 11355                           
 11356  0002  0008               	return
 11357  0003                     __end_of_putch:
 11358                           
 11359                           	psect	text17
 11360  106B                     __ptext17:	
 11361 ;; *************** function _abs *****************
 11362 ;; Defined at:
 11363 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  a               2    4[COMMON] int 
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;		None
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  2    4[COMMON] int 
 11370 ;; Registers used:
 11371 ;;		wreg, status,2, status,0
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 0/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;Total ram usage:        4 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:    4
 11384 ;; This function calls:
 11385 ;;		Nothing
 11386 ;; This function is called by:
 11387 ;;		_dtoa
 11388 ;;		_writeLine
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           
 11393                           ;psect for function _abs
 11394  106B                     _abs:
 11395  106B                     l3473:	
 11396                           ;incstack = 0
 11397                           ; Regs used in _abs: [wreg+status,2+status,0]
 11398                           
 11399  106B  0875               	movf	abs@a+1,w
 11400  106C  3A80               	xorlw	128
 11401  106D  00F6               	movwf	??_abs
 11402  106E  3080               	movlw	128
 11403  106F  0276               	subwf	??_abs,w
 11404  1070  1D03               	skipz
 11405  1071  2874               	goto	u2485
 11406  1072  3001               	movlw	1
 11407  1073  0274               	subwf	abs@a,w
 11408  1074                     u2485:
 11409  1074  1803               	skipnc
 11410  1075  2877               	goto	u2481
 11411  1076  2878               	goto	u2480
 11412  1077                     u2481:
 11413  1077  2884               	goto	l1572
 11414  1078                     u2480:
 11415  1078                     l3475:
 11416  1078  0974               	comf	abs@a,w
 11417  1079  00F6               	movwf	??_abs
 11418  107A  0975               	comf	abs@a+1,w
 11419  107B  00F7               	movwf	??_abs+1
 11420  107C  0AF6               	incf	??_abs,f
 11421  107D  1903               	skipnz
 11422  107E  0AF7               	incf	??_abs+1,f
 11423  107F  0876               	movf	??_abs,w
 11424  1080  00F4               	movwf	?_abs
 11425  1081  0877               	movf	??_abs+1,w
 11426  1082  00F5               	movwf	?_abs+1
 11427  1083  2884               	goto	l1575
 11428  1084                     l1572:
 11429  1084                     l1575:
 11430  1084  0008               	return
 11431  1085                     __end_of_abs:
 11432                           
 11433                           	psect	text18
 11434  085F                     __ptext18:	
 11435 ;; *************** function ___aomod *****************
 11436 ;; Defined at:
 11437 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  divisor         8    0[BANK0 ] long long 
 11440 ;;  dividend        8    8[BANK0 ] long long 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  sign            1    3[COMMON] unsigned char 
 11443 ;;  counter         1    2[COMMON] unsigned char 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  8    0[BANK0 ] long long 
 11446 ;; Registers used:
 11447 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11453 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;Total ram usage:       19 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:    4
 11460 ;; This function calls:
 11461 ;;		Nothing
 11462 ;; This function is called by:
 11463 ;;		_dtoa
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           
 11468                           ;psect for function ___aomod
 11469  085F                     ___aomod:
 11470  085F                     l3521:	
 11471                           ;incstack = 0
 11472                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 11473                           
 11474  085F  01F3               	clrf	___aomod@sign
 11475  0860                     l3523:
 11476  0860  3028               	movlw	low ___aomod@dividend
 11477  0861  0086               	movwf	6
 11478  0862  3000               	movlw	high ___aomod@dividend
 11479  0863  0087               	movwf	7
 11480  0864  3F47               	moviw [7]fsr1
 11481  0865  00F1               	movwf	??___aomod
 11482  0866  1FF1               	btfss	??___aomod,7
 11483  0867  2869               	goto	u2601
 11484  0868  286A               	goto	u2600
 11485  0869                     u2601:
 11486  0869  288B               	goto	l3527
 11487  086A                     u2600:
 11488  086A                     l3525:
 11489  086A  0020               	movlb	0	; select bank0
 11490  086B  09A8               	comf	___aomod@dividend,f
 11491  086C  09A9               	comf	___aomod@dividend+1,f
 11492  086D  09AA               	comf	___aomod@dividend+2,f
 11493  086E  09AB               	comf	___aomod@dividend+3,f
 11494  086F  09AC               	comf	___aomod@dividend+4,f
 11495  0870  09AD               	comf	___aomod@dividend+5,f
 11496  0871  09AE               	comf	___aomod@dividend+6,f
 11497  0872  09AF               	comf	___aomod@dividend+7,f
 11498  0873  0AA8               	incf	___aomod@dividend,f
 11499  0874  1D03               	skipz
 11500  0875  2889               	goto	u261lld
 11501  0876  0AA9               	incf	___aomod@dividend+1,f
 11502  0877  1D03               	skipz
 11503  0878  2889               	goto	u261lld
 11504  0879  0AAA               	incf	___aomod@dividend+2,f
 11505  087A  1D03               	skipz
 11506  087B  2889               	goto	u261lld
 11507  087C  0AAB               	incf	___aomod@dividend+3,f
 11508  087D  1D03               	skipz
 11509  087E  2889               	goto	u261lld
 11510  087F  0AAC               	incf	___aomod@dividend+4,f
 11511  0880  1D03               	skipz
 11512  0881  2889               	goto	u261lld
 11513  0882  0AAD               	incf	___aomod@dividend+5,f
 11514  0883  1D03               	skipz
 11515  0884  2889               	goto	u261lld
 11516  0885  0AAE               	incf	___aomod@dividend+6,f
 11517  0886  1D03               	skipz
 11518  0887  2889               	goto	u261lld
 11519  0888  0AAF               	incf	___aomod@dividend+7,f
 11520  0889                     u261lld:
 11521  0889  01F3               	clrf	___aomod@sign
 11522  088A  0AF3               	incf	___aomod@sign,f
 11523  088B                     l3527:
 11524  088B  3020               	movlw	low ___aomod@divisor
 11525  088C  0086               	movwf	6
 11526  088D  3000               	movlw	high ___aomod@divisor
 11527  088E  0087               	movwf	7
 11528  088F  3F47               	moviw [7]fsr1
 11529  0890  00F1               	movwf	??___aomod
 11530  0891  1FF1               	btfss	??___aomod,7
 11531  0892  2894               	goto	u2621
 11532  0893  2895               	goto	u2620
 11533  0894                     u2621:
 11534  0894  28B4               	goto	l3531
 11535  0895                     u2620:
 11536  0895                     l3529:
 11537  0895  0020               	movlb	0	; select bank0
 11538  0896  09A0               	comf	___aomod@divisor,f
 11539  0897  09A1               	comf	___aomod@divisor+1,f
 11540  0898  09A2               	comf	___aomod@divisor+2,f
 11541  0899  09A3               	comf	___aomod@divisor+3,f
 11542  089A  09A4               	comf	___aomod@divisor+4,f
 11543  089B  09A5               	comf	___aomod@divisor+5,f
 11544  089C  09A6               	comf	___aomod@divisor+6,f
 11545  089D  09A7               	comf	___aomod@divisor+7,f
 11546  089E  0AA0               	incf	___aomod@divisor,f
 11547  089F  1D03               	skipz
 11548  08A0  28B4               	goto	u263lld
 11549  08A1  0AA1               	incf	___aomod@divisor+1,f
 11550  08A2  1D03               	skipz
 11551  08A3  28B4               	goto	u263lld
 11552  08A4  0AA2               	incf	___aomod@divisor+2,f
 11553  08A5  1D03               	skipz
 11554  08A6  28B4               	goto	u263lld
 11555  08A7  0AA3               	incf	___aomod@divisor+3,f
 11556  08A8  1D03               	skipz
 11557  08A9  28B4               	goto	u263lld
 11558  08AA  0AA4               	incf	___aomod@divisor+4,f
 11559  08AB  1D03               	skipz
 11560  08AC  28B4               	goto	u263lld
 11561  08AD  0AA5               	incf	___aomod@divisor+5,f
 11562  08AE  1D03               	skipz
 11563  08AF  28B4               	goto	u263lld
 11564  08B0  0AA6               	incf	___aomod@divisor+6,f
 11565  08B1  1D03               	skipz
 11566  08B2  28B4               	goto	u263lld
 11567  08B3  0AA7               	incf	___aomod@divisor+7,f
 11568  08B4                     u263lld:
 11569  08B4                     l3531:
 11570  08B4  0020               	movlb	0	; select bank0
 11571  08B5  0820               	movf	___aomod@divisor,w
 11572  08B6  0421               	iorwf	___aomod@divisor+1,w
 11573  08B7  0422               	iorwf	___aomod@divisor+2,w
 11574  08B8  0423               	iorwf	___aomod@divisor+3,w
 11575  08B9  0424               	iorwf	___aomod@divisor+4,w
 11576  08BA  0425               	iorwf	___aomod@divisor+5,w
 11577  08BB  0426               	iorwf	___aomod@divisor+6,w
 11578  08BC  0427               	iorwf	___aomod@divisor+7,w
 11579  08BD  1903               	skipnz
 11580  08BE  28C0               	goto	u2641
 11581  08BF  28C1               	goto	u2640
 11582  08C0                     u2641:
 11583  08C0  2914               	goto	l3547
 11584  08C1                     u2640:
 11585  08C1                     l3533:
 11586  08C1  01F2               	clrf	___aomod@counter
 11587  08C2  0AF2               	incf	___aomod@counter,f
 11588  08C3  28D0               	goto	l3539
 11589  08C4                     l3535:
 11590  08C4  35A0               	lslf	___aomod@divisor,f
 11591  08C5  0DA1               	rlf	___aomod@divisor+1,f
 11592  08C6  0DA2               	rlf	___aomod@divisor+2,f
 11593  08C7  0DA3               	rlf	___aomod@divisor+3,f
 11594  08C8  0DA4               	rlf	___aomod@divisor+4,f
 11595  08C9  0DA5               	rlf	___aomod@divisor+5,f
 11596  08CA  0DA6               	rlf	___aomod@divisor+6,f
 11597  08CB  0DA7               	rlf	___aomod@divisor+7,f
 11598  08CC                     l3537:
 11599  08CC  3001               	movlw	1
 11600  08CD  00F1               	movwf	??___aomod
 11601  08CE  0871               	movf	??___aomod,w
 11602  08CF  07F2               	addwf	___aomod@counter,f
 11603  08D0                     l3539:
 11604  08D0  1FA7               	btfss	___aomod@divisor+7,7
 11605  08D1  28D3               	goto	u2651
 11606  08D2  28D4               	goto	u2650
 11607  08D3                     u2651:
 11608  08D3  28C4               	goto	l3535
 11609  08D4                     u2650:
 11610  08D4                     l3541:
 11611  08D4  0827               	movf	___aomod@divisor+7,w
 11612  08D5  022F               	subwf	___aomod@dividend+7,w
 11613  08D6  1D03               	skipz
 11614  08D7  28F2               	goto	u2665
 11615  08D8  0826               	movf	___aomod@divisor+6,w
 11616  08D9  022E               	subwf	___aomod@dividend+6,w
 11617  08DA  1D03               	skipz
 11618  08DB  28F2               	goto	u2665
 11619  08DC  0825               	movf	___aomod@divisor+5,w
 11620  08DD  022D               	subwf	___aomod@dividend+5,w
 11621  08DE  1D03               	skipz
 11622  08DF  28F2               	goto	u2665
 11623  08E0  0824               	movf	___aomod@divisor+4,w
 11624  08E1  022C               	subwf	___aomod@dividend+4,w
 11625  08E2  1D03               	skipz
 11626  08E3  28F2               	goto	u2665
 11627  08E4  0823               	movf	___aomod@divisor+3,w
 11628  08E5  022B               	subwf	___aomod@dividend+3,w
 11629  08E6  1D03               	skipz
 11630  08E7  28F2               	goto	u2665
 11631  08E8  0822               	movf	___aomod@divisor+2,w
 11632  08E9  022A               	subwf	___aomod@dividend+2,w
 11633  08EA  1D03               	skipz
 11634  08EB  28F2               	goto	u2665
 11635  08EC  0821               	movf	___aomod@divisor+1,w
 11636  08ED  0229               	subwf	___aomod@dividend+1,w
 11637  08EE  1D03               	skipz
 11638  08EF  28F2               	goto	u2665
 11639  08F0  0820               	movf	___aomod@divisor,w
 11640  08F1  0228               	subwf	___aomod@dividend,w
 11641  08F2                     u2665:
 11642  08F2  1C03               	skipc
 11643  08F3  28F5               	goto	u2661
 11644  08F4  28F6               	goto	u2660
 11645  08F5                     u2661:
 11646  08F5  2906               	goto	l3545
 11647  08F6                     u2660:
 11648  08F6                     l3543:
 11649  08F6  0820               	movf	___aomod@divisor,w
 11650  08F7  02A8               	subwf	___aomod@dividend,f
 11651  08F8  0821               	movf	___aomod@divisor+1,w
 11652  08F9  3BA9               	subwfb	___aomod@dividend+1,f
 11653  08FA  0822               	movf	___aomod@divisor+2,w
 11654  08FB  3BAA               	subwfb	___aomod@dividend+2,f
 11655  08FC  0823               	movf	___aomod@divisor+3,w
 11656  08FD  3BAB               	subwfb	___aomod@dividend+3,f
 11657  08FE  0824               	movf	___aomod@divisor+4,w
 11658  08FF  3BAC               	subwfb	___aomod@dividend+4,f
 11659  0900  0825               	movf	___aomod@divisor+5,w
 11660  0901  3BAD               	subwfb	___aomod@dividend+5,f
 11661  0902  0826               	movf	___aomod@divisor+6,w
 11662  0903  3BAE               	subwfb	___aomod@dividend+6,f
 11663  0904  0827               	movf	___aomod@divisor+7,w
 11664  0905  3BAF               	subwfb	___aomod@dividend+7,f
 11665  0906                     l3545:
 11666  0906  36A7               	lsrf	___aomod@divisor+7,f
 11667  0907  0CA6               	rrf	___aomod@divisor+6,f
 11668  0908  0CA5               	rrf	___aomod@divisor+5,f
 11669  0909  0CA4               	rrf	___aomod@divisor+4,f
 11670  090A  0CA3               	rrf	___aomod@divisor+3,f
 11671  090B  0CA2               	rrf	___aomod@divisor+2,f
 11672  090C  0CA1               	rrf	___aomod@divisor+1,f
 11673  090D  0CA0               	rrf	___aomod@divisor,f
 11674  090E  3001               	movlw	1
 11675  090F  02F2               	subwf	___aomod@counter,f
 11676  0910  1D03               	btfss	3,2
 11677  0911  2913               	goto	u2671
 11678  0912  2914               	goto	u2670
 11679  0913                     u2671:
 11680  0913  28D4               	goto	l3541
 11681  0914                     u2670:
 11682  0914                     l3547:
 11683  0914  0873               	movf	___aomod@sign,w
 11684  0915  1903               	btfsc	3,2
 11685  0916  2918               	goto	u2681
 11686  0917  2919               	goto	u2680
 11687  0918                     u2681:
 11688  0918  2937               	goto	l1225
 11689  0919                     u2680:
 11690  0919                     l3549:
 11691  0919  09A8               	comf	___aomod@dividend,f
 11692  091A  09A9               	comf	___aomod@dividend+1,f
 11693  091B  09AA               	comf	___aomod@dividend+2,f
 11694  091C  09AB               	comf	___aomod@dividend+3,f
 11695  091D  09AC               	comf	___aomod@dividend+4,f
 11696  091E  09AD               	comf	___aomod@dividend+5,f
 11697  091F  09AE               	comf	___aomod@dividend+6,f
 11698  0920  09AF               	comf	___aomod@dividend+7,f
 11699  0921  0AA8               	incf	___aomod@dividend,f
 11700  0922  1D03               	skipz
 11701  0923  2937               	goto	u269lld
 11702  0924  0AA9               	incf	___aomod@dividend+1,f
 11703  0925  1D03               	skipz
 11704  0926  2937               	goto	u269lld
 11705  0927  0AAA               	incf	___aomod@dividend+2,f
 11706  0928  1D03               	skipz
 11707  0929  2937               	goto	u269lld
 11708  092A  0AAB               	incf	___aomod@dividend+3,f
 11709  092B  1D03               	skipz
 11710  092C  2937               	goto	u269lld
 11711  092D  0AAC               	incf	___aomod@dividend+4,f
 11712  092E  1D03               	skipz
 11713  092F  2937               	goto	u269lld
 11714  0930  0AAD               	incf	___aomod@dividend+5,f
 11715  0931  1D03               	skipz
 11716  0932  2937               	goto	u269lld
 11717  0933  0AAE               	incf	___aomod@dividend+6,f
 11718  0934  1D03               	skipz
 11719  0935  2937               	goto	u269lld
 11720  0936  0AAF               	incf	___aomod@dividend+7,f
 11721  0937                     u269lld:
 11722  0937                     l1225:
 11723  0937  0020               	movlb	0	; select bank0
 11724  0938  0828               	movf	___aomod@dividend,w
 11725  0939  00A0               	movwf	?___aomod
 11726  093A  0829               	movf	___aomod@dividend+1,w
 11727  093B  00A1               	movwf	?___aomod+1
 11728  093C  082A               	movf	___aomod@dividend+2,w
 11729  093D  00A2               	movwf	?___aomod+2
 11730  093E  082B               	movf	___aomod@dividend+3,w
 11731  093F  00A3               	movwf	?___aomod+3
 11732  0940  082C               	movf	___aomod@dividend+4,w
 11733  0941  00A4               	movwf	?___aomod+4
 11734  0942  082D               	movf	___aomod@dividend+5,w
 11735  0943  00A5               	movwf	?___aomod+5
 11736  0944  082E               	movf	___aomod@dividend+6,w
 11737  0945  00A6               	movwf	?___aomod+6
 11738  0946  082F               	movf	___aomod@dividend+7,w
 11739  0947  00A7               	movwf	?___aomod+7
 11740  0948                     l1226:
 11741  0948  0008               	return
 11742  0949                     __end_of___aomod:
 11743                           
 11744                           	psect	text19
 11745  0949                     __ptext19:	
 11746 ;; *************** function ___aodiv *****************
 11747 ;; Defined at:
 11748 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  divisor         8    0[BANK0 ] long long 
 11751 ;;  dividend        8    8[BANK0 ] long long 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  quotient        8    4[COMMON] long long 
 11754 ;;  sign            1    3[COMMON] unsigned char 
 11755 ;;  counter         1    2[COMMON] unsigned char 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  8    0[BANK0 ] long long 
 11758 ;; Registers used:
 11759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11765 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;Total ram usage:       27 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    4
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		_dtoa
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function ___aodiv
 11781  0949                     ___aodiv:
 11782  0949                     l3483:	
 11783                           ;incstack = 0
 11784                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 11785                           
 11786  0949  01F3               	clrf	___aodiv@sign
 11787  094A                     l3485:
 11788  094A  3020               	movlw	low ___aodiv@divisor
 11789  094B  0086               	movwf	6
 11790  094C  3000               	movlw	high ___aodiv@divisor
 11791  094D  0087               	movwf	7
 11792  094E  3F47               	moviw [7]fsr1
 11793  094F  00F1               	movwf	??___aodiv
 11794  0950  1FF1               	btfss	??___aodiv,7
 11795  0951  2953               	goto	u2491
 11796  0952  2954               	goto	u2490
 11797  0953                     u2491:
 11798  0953  2975               	goto	l3489
 11799  0954                     u2490:
 11800  0954                     l3487:
 11801  0954  0020               	movlb	0	; select bank0
 11802  0955  09A0               	comf	___aodiv@divisor,f
 11803  0956  09A1               	comf	___aodiv@divisor+1,f
 11804  0957  09A2               	comf	___aodiv@divisor+2,f
 11805  0958  09A3               	comf	___aodiv@divisor+3,f
 11806  0959  09A4               	comf	___aodiv@divisor+4,f
 11807  095A  09A5               	comf	___aodiv@divisor+5,f
 11808  095B  09A6               	comf	___aodiv@divisor+6,f
 11809  095C  09A7               	comf	___aodiv@divisor+7,f
 11810  095D  0AA0               	incf	___aodiv@divisor,f
 11811  095E  1D03               	skipz
 11812  095F  2973               	goto	u250lld
 11813  0960  0AA1               	incf	___aodiv@divisor+1,f
 11814  0961  1D03               	skipz
 11815  0962  2973               	goto	u250lld
 11816  0963  0AA2               	incf	___aodiv@divisor+2,f
 11817  0964  1D03               	skipz
 11818  0965  2973               	goto	u250lld
 11819  0966  0AA3               	incf	___aodiv@divisor+3,f
 11820  0967  1D03               	skipz
 11821  0968  2973               	goto	u250lld
 11822  0969  0AA4               	incf	___aodiv@divisor+4,f
 11823  096A  1D03               	skipz
 11824  096B  2973               	goto	u250lld
 11825  096C  0AA5               	incf	___aodiv@divisor+5,f
 11826  096D  1D03               	skipz
 11827  096E  2973               	goto	u250lld
 11828  096F  0AA6               	incf	___aodiv@divisor+6,f
 11829  0970  1D03               	skipz
 11830  0971  2973               	goto	u250lld
 11831  0972  0AA7               	incf	___aodiv@divisor+7,f
 11832  0973                     u250lld:
 11833  0973  01F3               	clrf	___aodiv@sign
 11834  0974  0AF3               	incf	___aodiv@sign,f
 11835  0975                     l3489:
 11836  0975  3028               	movlw	low ___aodiv@dividend
 11837  0976  0086               	movwf	6
 11838  0977  3000               	movlw	high ___aodiv@dividend
 11839  0978  0087               	movwf	7
 11840  0979  3F47               	moviw [7]fsr1
 11841  097A  00F1               	movwf	??___aodiv
 11842  097B  1FF1               	btfss	??___aodiv,7
 11843  097C  297E               	goto	u2511
 11844  097D  297F               	goto	u2510
 11845  097E                     u2511:
 11846  097E  29A2               	goto	l3495
 11847  097F                     u2510:
 11848  097F                     l3491:
 11849  097F  0020               	movlb	0	; select bank0
 11850  0980  09A8               	comf	___aodiv@dividend,f
 11851  0981  09A9               	comf	___aodiv@dividend+1,f
 11852  0982  09AA               	comf	___aodiv@dividend+2,f
 11853  0983  09AB               	comf	___aodiv@dividend+3,f
 11854  0984  09AC               	comf	___aodiv@dividend+4,f
 11855  0985  09AD               	comf	___aodiv@dividend+5,f
 11856  0986  09AE               	comf	___aodiv@dividend+6,f
 11857  0987  09AF               	comf	___aodiv@dividend+7,f
 11858  0988  0AA8               	incf	___aodiv@dividend,f
 11859  0989  1D03               	skipz
 11860  098A  299E               	goto	u252lld
 11861  098B  0AA9               	incf	___aodiv@dividend+1,f
 11862  098C  1D03               	skipz
 11863  098D  299E               	goto	u252lld
 11864  098E  0AAA               	incf	___aodiv@dividend+2,f
 11865  098F  1D03               	skipz
 11866  0990  299E               	goto	u252lld
 11867  0991  0AAB               	incf	___aodiv@dividend+3,f
 11868  0992  1D03               	skipz
 11869  0993  299E               	goto	u252lld
 11870  0994  0AAC               	incf	___aodiv@dividend+4,f
 11871  0995  1D03               	skipz
 11872  0996  299E               	goto	u252lld
 11873  0997  0AAD               	incf	___aodiv@dividend+5,f
 11874  0998  1D03               	skipz
 11875  0999  299E               	goto	u252lld
 11876  099A  0AAE               	incf	___aodiv@dividend+6,f
 11877  099B  1D03               	skipz
 11878  099C  299E               	goto	u252lld
 11879  099D  0AAF               	incf	___aodiv@dividend+7,f
 11880  099E                     u252lld:
 11881  099E                     l3493:
 11882  099E  3001               	movlw	1
 11883  099F  00F1               	movwf	??___aodiv
 11884  09A0  0871               	movf	??___aodiv,w
 11885  09A1  06F3               	xorwf	___aodiv@sign,f
 11886  09A2                     l3495:
 11887  09A2  3074               	movlw	low ___aodiv@quotient
 11888  09A3  0086               	movwf	6
 11889  09A4  3000               	movlw	high ___aodiv@quotient
 11890  09A5  0087               	movwf	7
 11891  09A6  3008               	movlw	8
 11892  09A7  00F1               	movwf	??___aodiv
 11893  09A8  3000               	movlw	0
 11894  09A9                     u2530:
 11895  09A9  001E               	movwi fsr1++
 11896  09AA  0BF1               	decfsz	??___aodiv,f
 11897  09AB  29A9               	goto	u2530
 11898  09AC                     l3497:
 11899  09AC  0020               	movlb	0	; select bank0
 11900  09AD  0820               	movf	___aodiv@divisor,w
 11901  09AE  0421               	iorwf	___aodiv@divisor+1,w
 11902  09AF  0422               	iorwf	___aodiv@divisor+2,w
 11903  09B0  0423               	iorwf	___aodiv@divisor+3,w
 11904  09B1  0424               	iorwf	___aodiv@divisor+4,w
 11905  09B2  0425               	iorwf	___aodiv@divisor+5,w
 11906  09B3  0426               	iorwf	___aodiv@divisor+6,w
 11907  09B4  0427               	iorwf	___aodiv@divisor+7,w
 11908  09B5  1903               	skipnz
 11909  09B6  29B8               	goto	u2541
 11910  09B7  29B9               	goto	u2540
 11911  09B8                     u2541:
 11912  09B8  2A15               	goto	l3517
 11913  09B9                     u2540:
 11914  09B9                     l3499:
 11915  09B9  01F2               	clrf	___aodiv@counter
 11916  09BA  0AF2               	incf	___aodiv@counter,f
 11917  09BB  29C8               	goto	l3505
 11918  09BC                     l3501:
 11919  09BC  35A0               	lslf	___aodiv@divisor,f
 11920  09BD  0DA1               	rlf	___aodiv@divisor+1,f
 11921  09BE  0DA2               	rlf	___aodiv@divisor+2,f
 11922  09BF  0DA3               	rlf	___aodiv@divisor+3,f
 11923  09C0  0DA4               	rlf	___aodiv@divisor+4,f
 11924  09C1  0DA5               	rlf	___aodiv@divisor+5,f
 11925  09C2  0DA6               	rlf	___aodiv@divisor+6,f
 11926  09C3  0DA7               	rlf	___aodiv@divisor+7,f
 11927  09C4                     l3503:
 11928  09C4  3001               	movlw	1
 11929  09C5  00F1               	movwf	??___aodiv
 11930  09C6  0871               	movf	??___aodiv,w
 11931  09C7  07F2               	addwf	___aodiv@counter,f
 11932  09C8                     l3505:
 11933  09C8  1FA7               	btfss	___aodiv@divisor+7,7
 11934  09C9  29CB               	goto	u2551
 11935  09CA  29CC               	goto	u2550
 11936  09CB                     u2551:
 11937  09CB  29BC               	goto	l3501
 11938  09CC                     u2550:
 11939  09CC                     l3507:
 11940  09CC  35F4               	lslf	___aodiv@quotient,f
 11941  09CD  0DF5               	rlf	___aodiv@quotient+1,f
 11942  09CE  0DF6               	rlf	___aodiv@quotient+2,f
 11943  09CF  0DF7               	rlf	___aodiv@quotient+3,f
 11944  09D0  0DF8               	rlf	___aodiv@quotient+4,f
 11945  09D1  0DF9               	rlf	___aodiv@quotient+5,f
 11946  09D2  0DFA               	rlf	___aodiv@quotient+6,f
 11947  09D3  0DFB               	rlf	___aodiv@quotient+7,f
 11948  09D4                     l3509:
 11949  09D4  0827               	movf	___aodiv@divisor+7,w
 11950  09D5  022F               	subwf	___aodiv@dividend+7,w
 11951  09D6  1D03               	skipz
 11952  09D7  29F2               	goto	u2565
 11953  09D8  0826               	movf	___aodiv@divisor+6,w
 11954  09D9  022E               	subwf	___aodiv@dividend+6,w
 11955  09DA  1D03               	skipz
 11956  09DB  29F2               	goto	u2565
 11957  09DC  0825               	movf	___aodiv@divisor+5,w
 11958  09DD  022D               	subwf	___aodiv@dividend+5,w
 11959  09DE  1D03               	skipz
 11960  09DF  29F2               	goto	u2565
 11961  09E0  0824               	movf	___aodiv@divisor+4,w
 11962  09E1  022C               	subwf	___aodiv@dividend+4,w
 11963  09E2  1D03               	skipz
 11964  09E3  29F2               	goto	u2565
 11965  09E4  0823               	movf	___aodiv@divisor+3,w
 11966  09E5  022B               	subwf	___aodiv@dividend+3,w
 11967  09E6  1D03               	skipz
 11968  09E7  29F2               	goto	u2565
 11969  09E8  0822               	movf	___aodiv@divisor+2,w
 11970  09E9  022A               	subwf	___aodiv@dividend+2,w
 11971  09EA  1D03               	skipz
 11972  09EB  29F2               	goto	u2565
 11973  09EC  0821               	movf	___aodiv@divisor+1,w
 11974  09ED  0229               	subwf	___aodiv@dividend+1,w
 11975  09EE  1D03               	skipz
 11976  09EF  29F2               	goto	u2565
 11977  09F0  0820               	movf	___aodiv@divisor,w
 11978  09F1  0228               	subwf	___aodiv@dividend,w
 11979  09F2                     u2565:
 11980  09F2  1C03               	skipc
 11981  09F3  29F5               	goto	u2561
 11982  09F4  29F6               	goto	u2560
 11983  09F5                     u2561:
 11984  09F5  2A07               	goto	l3515
 11985  09F6                     u2560:
 11986  09F6                     l3511:
 11987  09F6  0820               	movf	___aodiv@divisor,w
 11988  09F7  02A8               	subwf	___aodiv@dividend,f
 11989  09F8  0821               	movf	___aodiv@divisor+1,w
 11990  09F9  3BA9               	subwfb	___aodiv@dividend+1,f
 11991  09FA  0822               	movf	___aodiv@divisor+2,w
 11992  09FB  3BAA               	subwfb	___aodiv@dividend+2,f
 11993  09FC  0823               	movf	___aodiv@divisor+3,w
 11994  09FD  3BAB               	subwfb	___aodiv@dividend+3,f
 11995  09FE  0824               	movf	___aodiv@divisor+4,w
 11996  09FF  3BAC               	subwfb	___aodiv@dividend+4,f
 11997  0A00  0825               	movf	___aodiv@divisor+5,w
 11998  0A01  3BAD               	subwfb	___aodiv@dividend+5,f
 11999  0A02  0826               	movf	___aodiv@divisor+6,w
 12000  0A03  3BAE               	subwfb	___aodiv@dividend+6,f
 12001  0A04  0827               	movf	___aodiv@divisor+7,w
 12002  0A05  3BAF               	subwfb	___aodiv@dividend+7,f
 12003  0A06                     l3513:
 12004  0A06  1474               	bsf	___aodiv@quotient,0
 12005  0A07                     l3515:
 12006  0A07  36A7               	lsrf	___aodiv@divisor+7,f
 12007  0A08  0CA6               	rrf	___aodiv@divisor+6,f
 12008  0A09  0CA5               	rrf	___aodiv@divisor+5,f
 12009  0A0A  0CA4               	rrf	___aodiv@divisor+4,f
 12010  0A0B  0CA3               	rrf	___aodiv@divisor+3,f
 12011  0A0C  0CA2               	rrf	___aodiv@divisor+2,f
 12012  0A0D  0CA1               	rrf	___aodiv@divisor+1,f
 12013  0A0E  0CA0               	rrf	___aodiv@divisor,f
 12014  0A0F  3001               	movlw	1
 12015  0A10  02F2               	subwf	___aodiv@counter,f
 12016  0A11  1D03               	btfss	3,2
 12017  0A12  2A14               	goto	u2571
 12018  0A13  2A15               	goto	u2570
 12019  0A14                     u2571:
 12020  0A14  29CC               	goto	l3507
 12021  0A15                     u2570:
 12022  0A15                     l3517:
 12023  0A15  0873               	movf	___aodiv@sign,w
 12024  0A16  1903               	btfsc	3,2
 12025  0A17  2A19               	goto	u2581
 12026  0A18  2A1A               	goto	u2580
 12027  0A19                     u2581:
 12028  0A19  2A38               	goto	l1212
 12029  0A1A                     u2580:
 12030  0A1A                     l3519:
 12031  0A1A  09F4               	comf	___aodiv@quotient,f
 12032  0A1B  09F5               	comf	___aodiv@quotient+1,f
 12033  0A1C  09F6               	comf	___aodiv@quotient+2,f
 12034  0A1D  09F7               	comf	___aodiv@quotient+3,f
 12035  0A1E  09F8               	comf	___aodiv@quotient+4,f
 12036  0A1F  09F9               	comf	___aodiv@quotient+5,f
 12037  0A20  09FA               	comf	___aodiv@quotient+6,f
 12038  0A21  09FB               	comf	___aodiv@quotient+7,f
 12039  0A22  0AF4               	incf	___aodiv@quotient,f
 12040  0A23  1D03               	skipz
 12041  0A24  2A38               	goto	u259lld
 12042  0A25  0AF5               	incf	___aodiv@quotient+1,f
 12043  0A26  1D03               	skipz
 12044  0A27  2A38               	goto	u259lld
 12045  0A28  0AF6               	incf	___aodiv@quotient+2,f
 12046  0A29  1D03               	skipz
 12047  0A2A  2A38               	goto	u259lld
 12048  0A2B  0AF7               	incf	___aodiv@quotient+3,f
 12049  0A2C  1D03               	skipz
 12050  0A2D  2A38               	goto	u259lld
 12051  0A2E  0AF8               	incf	___aodiv@quotient+4,f
 12052  0A2F  1D03               	skipz
 12053  0A30  2A38               	goto	u259lld
 12054  0A31  0AF9               	incf	___aodiv@quotient+5,f
 12055  0A32  1D03               	skipz
 12056  0A33  2A38               	goto	u259lld
 12057  0A34  0AFA               	incf	___aodiv@quotient+6,f
 12058  0A35  1D03               	skipz
 12059  0A36  2A38               	goto	u259lld
 12060  0A37  0AFB               	incf	___aodiv@quotient+7,f
 12061  0A38                     u259lld:
 12062  0A38                     l1212:
 12063  0A38  0874               	movf	___aodiv@quotient,w
 12064  0A39  0020               	movlb	0	; select bank0
 12065  0A3A  00A0               	movwf	?___aodiv
 12066  0A3B  0875               	movf	___aodiv@quotient+1,w
 12067  0A3C  00A1               	movwf	?___aodiv+1
 12068  0A3D  0876               	movf	___aodiv@quotient+2,w
 12069  0A3E  00A2               	movwf	?___aodiv+2
 12070  0A3F  0877               	movf	___aodiv@quotient+3,w
 12071  0A40  00A3               	movwf	?___aodiv+3
 12072  0A41  0878               	movf	___aodiv@quotient+4,w
 12073  0A42  00A4               	movwf	?___aodiv+4
 12074  0A43  0879               	movf	___aodiv@quotient+5,w
 12075  0A44  00A5               	movwf	?___aodiv+5
 12076  0A45  087A               	movf	___aodiv@quotient+6,w
 12077  0A46  00A6               	movwf	?___aodiv+6
 12078  0A47  087B               	movf	___aodiv@quotient+7,w
 12079  0A48  00A7               	movwf	?___aodiv+7
 12080  0A49                     l1213:
 12081  0A49  0008               	return
 12082  0A4A                     __end_of___aodiv:
 12083                           
 12084                           	psect	text20
 12085  12FA                     __ptext20:	
 12086 ;; *************** function _setRotation *****************
 12087 ;; Defined at:
 12088 ;;		line 171 in file "ILI9341.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  m               1    wreg     unsigned char 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  m               1    5[COMMON] unsigned char 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;Total ram usage:        3 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    6
 12109 ;; This function calls:
 12110 ;;		_SPI1_ExchangeByte
 12111 ;;		_endWrite
 12112 ;;		_startWrite
 12113 ;;		_writeCommand
 12114 ;; This function is called by:
 12115 ;;		_dibujarMarcador
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           
 12120                           ;psect for function _setRotation
 12121  12FA                     _setRotation:
 12122                           
 12123                           ;incstack = 0
 12124                           ; Regs used in _setRotation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12125                           ;setRotation@m stored from wreg
 12126  12FA  00F5               	movwf	setRotation@m
 12127  12FB                     l5677:
 12128                           
 12129                           ;ILI9341.c: 172:   rotation = m % 4;
 12130  12FB  0875               	movf	setRotation@m,w
 12131  12FC  3903               	andlw	3
 12132  12FD  00F3               	movwf	??_setRotation
 12133  12FE  0873               	movf	??_setRotation,w
 12134  12FF  0021               	movlb	1	; select bank1
 12135  1300  00CE               	movwf	_rotation^(0+128)
 12136                           
 12137                           ;ILI9341.c: 173:     switch (rotation) {
 12138  1301  2B36               	goto	l5689
 12139  1302                     l5679:
 12140                           
 12141                           ;ILI9341.c: 175:             m = (0x40 | 0x08);
 12142  1302  3048               	movlw	72
 12143  1303  00F3               	movwf	??_setRotation
 12144  1304  0873               	movf	??_setRotation,w
 12145  1305  00F5               	movwf	setRotation@m
 12146                           
 12147                           ;ILI9341.c: 176:             _width = 240;
 12148  1306  30F0               	movlw	240
 12149  1307  00C9               	movwf	__width^(0+128)
 12150  1308  3000               	movlw	0
 12151  1309  00CA               	movwf	(__width^(0+128)+1)
 12152                           
 12153                           ;ILI9341.c: 177:             _height = 320;
 12154  130A  3040               	movlw	64
 12155  130B  00C7               	movwf	__height^(0+128)
 12156  130C  3001               	movlw	1
 12157  130D  00C8               	movwf	(__height^(0+128)+1)
 12158                           
 12159                           ;ILI9341.c: 178:             break;
 12160  130E  2B4C               	goto	l5691
 12161  130F                     l5681:
 12162                           
 12163                           ;ILI9341.c: 180:             m = (0x20 | 0x08);
 12164  130F  3028               	movlw	40
 12165  1310  00F3               	movwf	??_setRotation
 12166  1311  0873               	movf	??_setRotation,w
 12167  1312  00F5               	movwf	setRotation@m
 12168                           
 12169                           ;ILI9341.c: 181:             _width = 320;
 12170  1313  3040               	movlw	64
 12171  1314  00C9               	movwf	__width^(0+128)
 12172  1315  3001               	movlw	1
 12173  1316  00CA               	movwf	(__width^(0+128)+1)
 12174                           
 12175                           ;ILI9341.c: 182:             _height = 240;
 12176  1317  30F0               	movlw	240
 12177  1318  00C7               	movwf	__height^(0+128)
 12178  1319  3000               	movlw	0
 12179  131A  00C8               	movwf	(__height^(0+128)+1)
 12180                           
 12181                           ;ILI9341.c: 183:             break;
 12182  131B  2B4C               	goto	l5691
 12183  131C                     l5683:
 12184                           
 12185                           ;ILI9341.c: 185:             m = (0x80 | 0x08);
 12186  131C  3088               	movlw	136
 12187  131D  00F3               	movwf	??_setRotation
 12188  131E  0873               	movf	??_setRotation,w
 12189  131F  00F5               	movwf	setRotation@m
 12190                           
 12191                           ;ILI9341.c: 186:             _width = 240;
 12192  1320  30F0               	movlw	240
 12193  1321  00C9               	movwf	__width^(0+128)
 12194  1322  3000               	movlw	0
 12195  1323  00CA               	movwf	(__width^(0+128)+1)
 12196                           
 12197                           ;ILI9341.c: 187:             _height = 320;
 12198  1324  3040               	movlw	64
 12199  1325  00C7               	movwf	__height^(0+128)
 12200  1326  3001               	movlw	1
 12201  1327  00C8               	movwf	(__height^(0+128)+1)
 12202                           
 12203                           ;ILI9341.c: 188:             break;
 12204  1328  2B4C               	goto	l5691
 12205  1329                     l5685:
 12206                           
 12207                           ;ILI9341.c: 190:             m = (0x40 | 0x80 | 0x20 | 0x08);
 12208  1329  30E8               	movlw	232
 12209  132A  00F3               	movwf	??_setRotation
 12210  132B  0873               	movf	??_setRotation,w
 12211  132C  00F5               	movwf	setRotation@m
 12212                           
 12213                           ;ILI9341.c: 191:             _width = 320;
 12214  132D  3040               	movlw	64
 12215  132E  00C9               	movwf	__width^(0+128)
 12216  132F  3001               	movlw	1
 12217  1330  00CA               	movwf	(__width^(0+128)+1)
 12218                           
 12219                           ;ILI9341.c: 192:             _height = 240;
 12220  1331  30F0               	movlw	240
 12221  1332  00C7               	movwf	__height^(0+128)
 12222  1333  3000               	movlw	0
 12223  1334  00C8               	movwf	(__height^(0+128)+1)
 12224                           
 12225                           ;ILI9341.c: 193:             break;
 12226  1335  2B4C               	goto	l5691
 12227  1336                     l5689:
 12228  1336  084E               	movf	_rotation^(0+128),w
 12229  1337  00F3               	movwf	??_setRotation
 12230  1338  01F4               	clrf	??_setRotation+1
 12231                           
 12232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12233                           ; Switch size 1, requested type "simple"
 12234                           ; Number of cases is 1, Range of values is 0 to 0
 12235                           ; switch strategies available:
 12236                           ; Name         Instructions Cycles
 12237                           ; simple_byte            4     3 (average)
 12238                           ; direct_byte            8     6 (fixed)
 12239                           ; jumptable            260     6 (fixed)
 12240                           ;	Chosen strategy is simple_byte
 12241  1339  0874               	movf	??_setRotation+1,w
 12242  133A  3A00               	xorlw	0	; case 0
 12243  133B  1903               	skipnz
 12244  133C  2B3E               	goto	l6663
 12245  133D  2B4C               	goto	l5691
 12246  133E                     l6663:
 12247                           
 12248                           ; Switch size 1, requested type "simple"
 12249                           ; Number of cases is 4, Range of values is 0 to 3
 12250                           ; switch strategies available:
 12251                           ; Name         Instructions Cycles
 12252                           ; simple_byte           13     7 (average)
 12253                           ; direct_byte           14     6 (fixed)
 12254                           ; jumptable            260     6 (fixed)
 12255                           ;	Chosen strategy is simple_byte
 12256  133E  0873               	movf	??_setRotation,w
 12257  133F  3A00               	xorlw	0	; case 0
 12258  1340  1903               	skipnz
 12259  1341  2B02               	goto	l5679
 12260  1342  3A01               	xorlw	1	; case 1
 12261  1343  1903               	skipnz
 12262  1344  2B0F               	goto	l5681
 12263  1345  3A03               	xorlw	3	; case 2
 12264  1346  1903               	skipnz
 12265  1347  2B1C               	goto	l5683
 12266  1348  3A01               	xorlw	1	; case 3
 12267  1349  1903               	skipnz
 12268  134A  2B29               	goto	l5685
 12269  134B  2B4C               	goto	l5691
 12270  134C                     l5691:
 12271                           
 12272                           ;ILI9341.c: 196:     startWrite();
 12273  134C  319F  2761  3192   	fcall	_startWrite
 12274  134F                     l5693:
 12275                           
 12276                           ;ILI9341.c: 197:     writeCommand(0x36);
 12277  134F  3036               	movlw	54
 12278  1350  319F  27A0  3192   	fcall	_writeCommand
 12279  1353                     l5695:
 12280                           
 12281                           ;ILI9341.c: 198:     SPI1_ExchangeByte(m);
 12282  1353  0875               	movf	setRotation@m,w
 12283  1354  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 12284                           
 12285                           ;ILI9341.c: 199:     endWrite();
 12286  1357  319F  2768  3192   	fcall	_endWrite
 12287  135A                     l925:
 12288  135A  0008               	return
 12289  135B                     __end_of_setRotation:
 12290                           
 12291                           	psect	text21
 12292  1053                     __ptext21:	
 12293 ;; *************** function _display_setTextSize *****************
 12294 ;; Defined at:
 12295 ;;		line 624 in file "GFX_Library.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  s               1    wreg     unsigned char 
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;  s               1    5[COMMON] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      void 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;Total ram usage:        5 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    4
 12316 ;; This function calls:
 12317 ;;		Nothing
 12318 ;; This function is called by:
 12319 ;;		_dibujarMarcador
 12320 ;;		_display_drawCustomChar
 12321 ;;		_testText
 12322 ;;		_display_drawChar
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           
 12327                           ;psect for function _display_setTextSize
 12328  1053                     _display_setTextSize:
 12329                           
 12330                           ;incstack = 0
 12331                           ; Regs used in _display_setTextSize: [wreg+status,2+status,0]
 12332                           ;display_setTextSize@s stored from wreg
 12333  1053  00F5               	movwf	display_setTextSize@s
 12334  1054                     l3815:
 12335                           
 12336                           ;GFX_Library.c: 625:     textsize = (s > 0) ? s : 1;
 12337  1054  0875               	movf	display_setTextSize@s,w
 12338  1055  1D03               	btfss	3,2
 12339  1056  2858               	goto	u3161
 12340  1057  2859               	goto	u3160
 12341  1058                     u3161:
 12342  1058  285E               	goto	l3819
 12343  1059                     u3160:
 12344  1059                     l3817:
 12345  1059  3001               	movlw	1
 12346  105A  00F3               	movwf	_display_setTextSize$1270
 12347  105B  3000               	movlw	0
 12348  105C  00F4               	movwf	_display_setTextSize$1270+1
 12349  105D  2865               	goto	l793
 12350  105E                     l3819:
 12351  105E  0875               	movf	display_setTextSize@s,w
 12352  105F  00F1               	movwf	??_display_setTextSize
 12353  1060  01F2               	clrf	??_display_setTextSize+1
 12354  1061  0871               	movf	??_display_setTextSize,w
 12355  1062  00F3               	movwf	_display_setTextSize$1270
 12356  1063  0872               	movf	??_display_setTextSize+1,w
 12357  1064  00F4               	movwf	_display_setTextSize$1270+1
 12358  1065                     l793:
 12359  1065  0873               	movf	_display_setTextSize$1270,w
 12360  1066  00F1               	movwf	??_display_setTextSize
 12361  1067  0871               	movf	??_display_setTextSize,w
 12362  1068  0020               	movlb	0	; select bank0
 12363  1069  00EF               	movwf	_textsize
 12364  106A                     l794:
 12365  106A  0008               	return
 12366  106B                     __end_of_display_setTextSize:
 12367                           
 12368                           	psect	text22
 12369  1FBE                     __ptext22:	
 12370 ;; *************** function _display_setTextColor2 *****************
 12371 ;; Defined at:
 12372 ;;		line 646 in file "GFX_Library.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  c               2    1[COMMON] unsigned short 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;Total ram usage:        2 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    4
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_dibujarMarcador
 12397 ;;		_testText
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           
 12402                           ;psect for function _display_setTextColor2
 12403  1FBE                     _display_setTextColor2:
 12404  1FBE                     l4129:	
 12405                           ;incstack = 0
 12406                           ; Regs used in _display_setTextColor2: [wreg]
 12407                           
 12408                           
 12409                           ;GFX_Library.c: 647:   textcolor = textbgcolor = c;
 12410  1FBE  0872               	movf	display_setTextColor2@c+1,w
 12411  1FBF  0021               	movlb	1	; select bank1
 12412  1FC0  00A1               	movwf	(_textbgcolor+1)^(0+128)
 12413  1FC1  0871               	movf	display_setTextColor2@c,w
 12414  1FC2  00A0               	movwf	_textbgcolor^(0+128)
 12415  1FC3  0821               	movf	(_textbgcolor+1)^(0+128),w
 12416  1FC4  00A3               	movwf	(_textcolor+1)^(0+128)
 12417  1FC5  0820               	movf	_textbgcolor^(0+128),w
 12418  1FC6  00A2               	movwf	_textcolor^(0+128)
 12419  1FC7                     l800:
 12420  1FC7  0008               	return
 12421  1FC8                     __end_of_display_setTextColor2:
 12422                           
 12423                           	psect	text23
 12424  1FB4                     __ptext23:	
 12425 ;; *************** function _display_setTextColor *****************
 12426 ;; Defined at:
 12427 ;;		line 635 in file "GFX_Library.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  c               2    1[COMMON] unsigned short 
 12430 ;;  bg              2    3[COMMON] unsigned short 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;Total ram usage:        4 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    4
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_dibujarMarcador
 12453 ;;		_display_drawCustomChar
 12454 ;;		_display_drawChar
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           
 12459                           ;psect for function _display_setTextColor
 12460  1FB4                     _display_setTextColor:
 12461  1FB4                     l3821:	
 12462                           ;incstack = 0
 12463                           ; Regs used in _display_setTextColor: [wreg]
 12464                           
 12465                           
 12466                           ;GFX_Library.c: 636:     textcolor = c;
 12467  1FB4  0872               	movf	display_setTextColor@c+1,w
 12468  1FB5  0021               	movlb	1	; select bank1
 12469  1FB6  00A3               	movwf	(_textcolor+1)^(0+128)
 12470  1FB7  0871               	movf	display_setTextColor@c,w
 12471  1FB8  00A2               	movwf	_textcolor^(0+128)
 12472                           
 12473                           ;GFX_Library.c: 637:     textbgcolor = bg;
 12474  1FB9  0874               	movf	display_setTextColor@bg+1,w
 12475  1FBA  00A1               	movwf	(_textbgcolor+1)^(0+128)
 12476  1FBB  0873               	movf	display_setTextColor@bg,w
 12477  1FBC  00A0               	movwf	_textbgcolor^(0+128)
 12478  1FBD                     l797:
 12479  1FBD  0008               	return
 12480  1FBE                     __end_of_display_setTextColor:
 12481                           
 12482                           	psect	text24
 12483  1FAA                     __ptext24:	
 12484 ;; *************** function _display_setCursor *****************
 12485 ;; Defined at:
 12486 ;;		line 593 in file "GFX_Library.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  x               2    1[COMMON] unsigned short 
 12489 ;;  y               2    3[COMMON] unsigned short 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;		None
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  1    wreg      void 
 12494 ;; Registers used:
 12495 ;;		wreg
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;Total ram usage:        4 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; Hardware stack levels required when called:    4
 12508 ;; This function calls:
 12509 ;;		Nothing
 12510 ;; This function is called by:
 12511 ;;		_dibujarMarcador
 12512 ;;		_display_drawCustomChar
 12513 ;;		_testText
 12514 ;;		_display_drawChar
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           
 12519                           ;psect for function _display_setCursor
 12520  1FAA                     _display_setCursor:
 12521  1FAA                     l3813:	
 12522                           ;incstack = 0
 12523                           ; Regs used in _display_setCursor: [wreg]
 12524                           
 12525                           
 12526                           ;GFX_Library.c: 594:     cursor_x = x;
 12527  1FAA  0872               	movf	display_setCursor@x+1,w
 12528  1FAB  0021               	movlb	1	; select bank1
 12529  1FAC  00C6               	movwf	(_cursor_x+1)^(0+128)
 12530  1FAD  0871               	movf	display_setCursor@x,w
 12531  1FAE  00C5               	movwf	_cursor_x^(0+128)
 12532                           
 12533                           ;GFX_Library.c: 595:     cursor_y = y;
 12534  1FAF  0874               	movf	display_setCursor@y+1,w
 12535  1FB0  00C4               	movwf	(_cursor_y+1)^(0+128)
 12536  1FB1  0873               	movf	display_setCursor@y,w
 12537  1FB2  00C3               	movwf	_cursor_y^(0+128)
 12538  1FB3                     l781:
 12539  1FB3  0008               	return
 12540  1FB4                     __end_of_display_setCursor:
 12541                           
 12542                           	psect	text25
 12543  1119                     __ptext25:	
 12544 ;; *************** function _disp_texto *****************
 12545 ;; Defined at:
 12546 ;;		line 238 in file "main.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  cadena          2   42[BANK0 ] PTR unsigned char 
 12549 ;;		 -> STR_14(18), STR_13(28), STR_12(21), STR_11(22), 
 12550 ;;		 -> STR_10(30), STR_9(29), STR_8(29), STR_7(18), 
 12551 ;;		 -> STR_6(8), STR_5(3), STR_4(11), STR_3(10), 
 12552 ;;		 -> STR_2(15), marcador(3), 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  i               1   11[COMMON] unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        6 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    9
 12571 ;; This function calls:
 12572 ;;		_display_print
 12573 ;; This function is called by:
 12574 ;;		_dibujarMarcador
 12575 ;;		_testText
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579                           
 12580                           ;psect for function _disp_texto
 12581  1119                     _disp_texto:
 12582  1119                     l5701:	
 12583                           ;incstack = 0
 12584                           ; Regs used in _disp_texto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12585                           
 12586                           
 12587                           ;main.c: 239:     uint8_t i = -1;
 12588  1119  30FF               	movlw	255
 12589  111A  0020               	movlb	0	; select bank0
 12590  111B  00CC               	movwf	??_disp_texto
 12591  111C  084C               	movf	??_disp_texto,w
 12592  111D  00FB               	movwf	disp_texto@i
 12593                           
 12594                           ;main.c: 240:     while (cadena[i++] != '\0') {
 12595  111E  292E               	goto	l5705
 12596  111F                     l5703:
 12597                           
 12598                           ;main.c: 241:         display_print(cadena[i]);
 12599  111F  084B               	movf	disp_texto@cadena+1,w
 12600  1120  00CD               	movwf	??_disp_texto+1
 12601  1121  084A               	movf	disp_texto@cadena,w
 12602  1122  00CC               	movwf	??_disp_texto
 12603  1123  087B               	movf	disp_texto@i,w
 12604  1124  074C               	addwf	??_disp_texto,w
 12605  1125  0084               	movwf	4
 12606  1126  084D               	movf	??_disp_texto+1,w
 12607  1127  1803               	skipnc
 12608  1128  0A4D               	incf	??_disp_texto+1,w
 12609  1129  0085               	movwf	5
 12610  112A  0800               	movf	0,w	;code access
 12611  112B  3185  2547  3191   	fcall	_display_print
 12612  112E                     l5705:
 12613                           
 12614                           ;main.c: 240:     while (cadena[i++] != '\0') {
 12615  112E  0020               	movlb	0	; select bank0
 12616  112F  084B               	movf	disp_texto@cadena+1,w
 12617  1130  00CD               	movwf	??_disp_texto+1
 12618  1131  084A               	movf	disp_texto@cadena,w
 12619  1132  00CC               	movwf	??_disp_texto
 12620  1133  087B               	movf	disp_texto@i,w
 12621  1134  0AFB               	incf	disp_texto@i,f
 12622  1135  074C               	addwf	??_disp_texto,w
 12623  1136  0084               	movwf	4
 12624  1137  084D               	movf	??_disp_texto+1,w
 12625  1138  1803               	skipnc
 12626  1139  0A4D               	incf	??_disp_texto+1,w
 12627  113A  0085               	movwf	5
 12628  113B  0012               	moviw fsr0++
 12629  113C  1D03               	btfss	3,2
 12630  113D  293F               	goto	u5771
 12631  113E  2940               	goto	u5770
 12632  113F                     u5771:
 12633  113F  291F               	goto	l5703
 12634  1140                     u5770:
 12635  1140                     l474:
 12636  1140  0008               	return
 12637  1141                     __end_of_disp_texto:
 12638                           
 12639                           	psect	text26
 12640  0547                     __ptext26:	
 12641 ;; *************** function _display_print *****************
 12642 ;; Defined at:
 12643 ;;		line 460 in file "GFX_Library.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  c               1    wreg     unsigned char 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;  c               1   39[BANK0 ] unsigned char 
 12648 ;;  j               1   40[BANK0 ] unsigned char 
 12649 ;;  line            1   38[BANK0 ] unsigned char 
 12650 ;;  i               1   41[BANK0 ] unsigned char 
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1    wreg      void 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;Total ram usage:       16 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    8
 12667 ;; This function calls:
 12668 ;;		___wmul
 12669 ;;		_drawPixel
 12670 ;;		_drawVLine
 12671 ;;		_fillRect
 12672 ;; This function is called by:
 12673 ;;		_disp_texto
 12674 ;;		_display_drawChar
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           
 12679                           ;psect for function _display_print
 12680  0547                     _display_print:
 12681                           
 12682                           ;incstack = 0
 12683                           ; Regs used in _display_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12684                           ;display_print@c stored from wreg
 12685  0547  0020               	movlb	0	; select bank0
 12686  0548  00C7               	movwf	display_print@c
 12687  0549                     l5505:
 12688                           
 12689                           ;GFX_Library.c: 462:   if (c == ' ' && cursor_x == 0 && wrap)
 12690  0549  3020               	movlw	32
 12691  054A  0647               	xorwf	display_print@c,w
 12692  054B  1D03               	btfss	3,2
 12693  054C  2D4E               	goto	u5471
 12694  054D  2D4F               	goto	u5470
 12695  054E                     u5471:
 12696  054E  2D5C               	goto	l5513
 12697  054F                     u5470:
 12698  054F                     l5507:
 12699  054F  0021               	movlb	1	; select bank1
 12700  0550  0845               	movf	_cursor_x^(0+128),w
 12701  0551  0446               	iorwf	(_cursor_x+1)^(0+128),w
 12702  0552  1D03               	btfss	3,2
 12703  0553  2D55               	goto	u5481
 12704  0554  2D56               	goto	u5480
 12705  0555                     u5481:
 12706  0555  2D5C               	goto	l5513
 12707  0556                     u5480:
 12708  0556                     l5509:
 12709  0556  0824               	movf	_wrap^(0+128),w
 12710  0557  1903               	btfsc	3,2
 12711  0558  2D5A               	goto	u5491
 12712  0559  2D5B               	goto	u5490
 12713  055A                     u5491:
 12714  055A  2D5C               	goto	l5513
 12715  055B                     u5490:
 12716  055B  2FD0               	goto	l736
 12717  055C                     l5513:
 12718                           
 12719                           ;GFX_Library.c: 464:   if(c == '\r') {
 12720  055C  300D               	movlw	13
 12721  055D  0020               	movlb	0	; select bank0
 12722  055E  0647               	xorwf	display_print@c,w
 12723  055F  1D03               	btfss	3,2
 12724  0560  2D62               	goto	u5501
 12725  0561  2D63               	goto	u5500
 12726  0562                     u5501:
 12727  0562  2D67               	goto	l5519
 12728  0563                     u5500:
 12729  0563                     l5515:
 12730                           
 12731                           ;GFX_Library.c: 465:     cursor_x = 0;
 12732  0563  0021               	movlb	1	; select bank1
 12733  0564  01C5               	clrf	_cursor_x^(0+128)
 12734  0565  01C6               	clrf	(_cursor_x+1)^(0+128)
 12735  0566  2FD0               	goto	l736
 12736  0567                     l5519:
 12737                           
 12738                           ;GFX_Library.c: 468:   if(c == '\n') {
 12739  0567  300A               	movlw	10
 12740  0568  0647               	xorwf	display_print@c,w
 12741  0569  1D03               	btfss	3,2
 12742  056A  2D6C               	goto	u5511
 12743  056B  2D6D               	goto	u5510
 12744  056C                     u5511:
 12745  056C  2D7E               	goto	l5525
 12746  056D                     u5510:
 12747  056D                     l5521:
 12748                           
 12749                           ;GFX_Library.c: 469:     cursor_y += textsize * 8;
 12750  056D  086F               	movf	_textsize,w
 12751  056E  00BA               	movwf	??_display_print
 12752  056F  01BB               	clrf	??_display_print+1
 12753  0570  35BA               	lslf	??_display_print,f
 12754  0571  0DBB               	rlf	??_display_print+1,f
 12755  0572  35BA               	lslf	??_display_print,f
 12756  0573  0DBB               	rlf	??_display_print+1,f
 12757  0574  35BA               	lslf	??_display_print,f
 12758  0575  0DBB               	rlf	??_display_print+1,f
 12759  0576  083A               	movf	??_display_print,w
 12760  0577  0021               	movlb	1	; select bank1
 12761  0578  07C3               	addwf	_cursor_y^(0+128),f
 12762  0579  0020               	movlb	0	; select bank0
 12763  057A  083B               	movf	??_display_print+1,w
 12764  057B  0021               	movlb	1	; select bank1
 12765  057C  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
 12766  057D  2FD0               	goto	l736
 12767  057E                     l5525:
 12768                           
 12769                           ;GFX_Library.c: 473:   for(uint8_t i = 0; i < 5; i++ ) {
 12770  057E  01C9               	clrf	display_print@i
 12771  057F                     l5531:
 12772                           
 12773                           ;GFX_Library.c: 474:       uint8_t line=font[c][i];
 12774  057F  0847               	movf	display_print@c,w
 12775  0580  00BA               	movwf	??_display_print
 12776  0581  01BB               	clrf	??_display_print+1
 12777  0582  083A               	movf	??_display_print,w
 12778  0583  00F1               	movwf	___wmul@multiplier
 12779  0584  083B               	movf	??_display_print+1,w
 12780  0585  00F2               	movwf	___wmul@multiplier+1
 12781  0586  3005               	movlw	5
 12782  0587  00F3               	movwf	___wmul@multiplicand
 12783  0588  3000               	movlw	0
 12784  0589  00F4               	movwf	___wmul@multiplicand+1
 12785  058A  3190  20BA  3185   	fcall	___wmul
 12786  058D  3047               	movlw	low (_font| (0+32768))
 12787  058E  0020               	movlb	0	; select bank0
 12788  058F  00BC               	movwf	??_display_print+2
 12789  0590  3080               	movlw	high (_font| (0+32768))
 12790  0591  00BD               	movwf	??_display_print+3
 12791  0592  0871               	movf	?___wmul,w
 12792  0593  073C               	addwf	??_display_print+2,w
 12793  0594  00BE               	movwf	??_display_print+4
 12794  0595  0872               	movf	?___wmul+1,w
 12795  0596  3D3D               	addwfc	??_display_print+3,w
 12796  0597  00BF               	movwf	??_display_print+5
 12797  0598  0849               	movf	display_print@i,w
 12798  0599  073E               	addwf	??_display_print+4,w
 12799  059A  0084               	movwf	4
 12800  059B  083F               	movf	??_display_print+5,w
 12801  059C  1803               	skipnc
 12802  059D  0A3F               	incf	??_display_print+5,w
 12803  059E  0085               	movwf	5
 12804  059F  0800               	movf	0,w	;code access
 12805  05A0  00C0               	movwf	??_display_print+6
 12806  05A1  0840               	movf	??_display_print+6,w
 12807  05A2  00C6               	movwf	display_print@line
 12808  05A3                     l5533:
 12809                           
 12810                           ;GFX_Library.c: 475:     for(uint8_t j = 0; j < 8; j++, line >>= 1) {
 12811  05A3  01C8               	clrf	display_print@j
 12812  05A4                     l741:
 12813                           
 12814                           ;GFX_Library.c: 476:       if(line & 1) {
 12815  05A4  1C46               	btfss	display_print@line,0
 12816  05A5  2DA7               	goto	u5521
 12817  05A6  2DA8               	goto	u5520
 12818  05A7                     u5521:
 12819  05A7  2E1F               	goto	l5545
 12820  05A8                     u5520:
 12821  05A8                     l5539:
 12822                           
 12823                           ;GFX_Library.c: 477:         if(textsize == 1)
 12824  05A8  036F               	decf	_textsize,w
 12825  05A9  1D03               	btfss	3,2
 12826  05AA  2DAC               	goto	u5531
 12827  05AB  2DAD               	goto	u5530
 12828  05AC                     u5531:
 12829  05AC  2DCF               	goto	l5543
 12830  05AD                     u5530:
 12831  05AD                     l5541:
 12832                           
 12833                           ;GFX_Library.c: 478:           drawPixel(cursor_x + i, cursor_y + j, textcolor);
 12834  05AD  0849               	movf	display_print@i,w
 12835  05AE  0021               	movlb	1	; select bank1
 12836  05AF  0745               	addwf	_cursor_x^(0+128),w
 12837  05B0  0020               	movlb	0	; select bank0
 12838  05B1  00A6               	movwf	drawPixel@x
 12839  05B2  0021               	movlb	1	; select bank1
 12840  05B3  0846               	movf	(_cursor_x+1)^(0+128),w
 12841  05B4  1803               	skipnc
 12842  05B5  0A46               	incf	(_cursor_x+1)^(0+128),w
 12843  05B6  0020               	movlb	0	; select bank0
 12844  05B7  00A7               	movwf	drawPixel@x+1
 12845  05B8  0848               	movf	display_print@j,w
 12846  05B9  0021               	movlb	1	; select bank1
 12847  05BA  0743               	addwf	_cursor_y^(0+128),w
 12848  05BB  0020               	movlb	0	; select bank0
 12849  05BC  00A8               	movwf	drawPixel@y
 12850  05BD  0021               	movlb	1	; select bank1
 12851  05BE  0844               	movf	(_cursor_y+1)^(0+128),w
 12852  05BF  1803               	skipnc
 12853  05C0  0A44               	incf	(_cursor_y+1)^(0+128),w
 12854  05C1  0020               	movlb	0	; select bank0
 12855  05C2  00A9               	movwf	drawPixel@y+1
 12856  05C3  0021               	movlb	1	; select bank1
 12857  05C4  0823               	movf	(_textcolor+1)^(0+128),w
 12858  05C5  0020               	movlb	0	; select bank0
 12859  05C6  00AB               	movwf	drawPixel@color+1
 12860  05C7  0021               	movlb	1	; select bank1
 12861  05C8  0822               	movf	_textcolor^(0+128),w
 12862  05C9  0020               	movlb	0	; select bank0
 12863  05CA  00AA               	movwf	drawPixel@color
 12864  05CB  3191  21D1  3185   	fcall	_drawPixel
 12865  05CE  2EA1               	goto	l5553
 12866  05CF                     l5543:
 12867                           
 12868                           ;GFX_Library.c: 480:           fillRect(cursor_x + i * textsize, cursor_y + j * textsize
      +                          , textsize, textsize, textcolor);
 12869  05CF  0849               	movf	display_print@i,w
 12870  05D0  00BA               	movwf	??_display_print
 12871  05D1  01BB               	clrf	??_display_print+1
 12872  05D2  083A               	movf	??_display_print,w
 12873  05D3  00F1               	movwf	___wmul@multiplier
 12874  05D4  083B               	movf	??_display_print+1,w
 12875  05D5  00F2               	movwf	___wmul@multiplier+1
 12876  05D6  086F               	movf	_textsize,w
 12877  05D7  00BC               	movwf	??_display_print+2
 12878  05D8  01BD               	clrf	??_display_print+3
 12879  05D9  083C               	movf	??_display_print+2,w
 12880  05DA  00F3               	movwf	___wmul@multiplicand
 12881  05DB  083D               	movf	??_display_print+3,w
 12882  05DC  00F4               	movwf	___wmul@multiplicand+1
 12883  05DD  3190  20BA  3185   	fcall	___wmul
 12884  05E0  0021               	movlb	1	; select bank1
 12885  05E1  0845               	movf	_cursor_x^(0+128),w
 12886  05E2  0771               	addwf	?___wmul,w
 12887  05E3  0020               	movlb	0	; select bank0
 12888  05E4  00A6               	movwf	fillRect@x
 12889  05E5  0021               	movlb	1	; select bank1
 12890  05E6  0846               	movf	(_cursor_x+1)^(0+128),w
 12891  05E7  3D72               	addwfc	?___wmul+1,w
 12892  05E8  0020               	movlb	0	; select bank0
 12893  05E9  00A7               	movwf	fillRect@x+1
 12894  05EA  0848               	movf	display_print@j,w
 12895  05EB  00BE               	movwf	??_display_print+4
 12896  05EC  01BF               	clrf	??_display_print+5
 12897  05ED  083E               	movf	??_display_print+4,w
 12898  05EE  00F1               	movwf	___wmul@multiplier
 12899  05EF  083F               	movf	??_display_print+5,w
 12900  05F0  00F2               	movwf	___wmul@multiplier+1
 12901  05F1  086F               	movf	_textsize,w
 12902  05F2  00C0               	movwf	??_display_print+6
 12903  05F3  01C1               	clrf	??_display_print+7
 12904  05F4  0840               	movf	??_display_print+6,w
 12905  05F5  00F3               	movwf	___wmul@multiplicand
 12906  05F6  0841               	movf	??_display_print+7,w
 12907  05F7  00F4               	movwf	___wmul@multiplicand+1
 12908  05F8  3190  20BA  3185   	fcall	___wmul
 12909  05FB  0021               	movlb	1	; select bank1
 12910  05FC  0843               	movf	_cursor_y^(0+128),w
 12911  05FD  0771               	addwf	?___wmul,w
 12912  05FE  0020               	movlb	0	; select bank0
 12913  05FF  00A8               	movwf	fillRect@y
 12914  0600  0021               	movlb	1	; select bank1
 12915  0601  0844               	movf	(_cursor_y+1)^(0+128),w
 12916  0602  3D72               	addwfc	?___wmul+1,w
 12917  0603  0020               	movlb	0	; select bank0
 12918  0604  00A9               	movwf	fillRect@y+1
 12919  0605  086F               	movf	_textsize,w
 12920  0606  00C2               	movwf	??_display_print+8
 12921  0607  01C3               	clrf	??_display_print+9
 12922  0608  0842               	movf	??_display_print+8,w
 12923  0609  00AA               	movwf	fillRect@w
 12924  060A  0843               	movf	??_display_print+9,w
 12925  060B  00AB               	movwf	fillRect@w+1
 12926  060C  086F               	movf	_textsize,w
 12927  060D  00C4               	movwf	??_display_print+10
 12928  060E  01C5               	clrf	??_display_print+11
 12929  060F  0844               	movf	??_display_print+10,w
 12930  0610  00AC               	movwf	fillRect@h
 12931  0611  0845               	movf	??_display_print+11,w
 12932  0612  00AD               	movwf	fillRect@h+1
 12933  0613  0021               	movlb	1	; select bank1
 12934  0614  0823               	movf	(_textcolor+1)^(0+128),w
 12935  0615  0020               	movlb	0	; select bank0
 12936  0616  00AF               	movwf	fillRect@color+1
 12937  0617  0021               	movlb	1	; select bank1
 12938  0618  0822               	movf	_textcolor^(0+128),w
 12939  0619  0020               	movlb	0	; select bank0
 12940  061A  00AE               	movwf	fillRect@color
 12941  061B  3196  264D  3185   	fcall	_fillRect
 12942  061E  2EA1               	goto	l5553
 12943  061F                     l5545:
 12944                           
 12945                           ;GFX_Library.c: 483:         if(textbgcolor != textcolor) {
 12946  061F  0021               	movlb	1	; select bank1
 12947  0620  0823               	movf	(_textcolor+1)^(0+128),w
 12948  0621  0621               	xorwf	(_textbgcolor+1)^(0+128),w
 12949  0622  1D03               	skipz
 12950  0623  2E26               	goto	u5545
 12951  0624  0822               	movf	_textcolor^(0+128),w
 12952  0625  0620               	xorwf	_textbgcolor^(0+128),w
 12953  0626                     u5545:
 12954  0626  1903               	skipnz
 12955  0627  2E29               	goto	u5541
 12956  0628  2E2A               	goto	u5540
 12957  0629                     u5541:
 12958  0629  2EA1               	goto	l5553
 12959  062A                     u5540:
 12960  062A                     l5547:
 12961                           
 12962                           ;GFX_Library.c: 484:           if(textsize == 1)
 12963  062A  0020               	movlb	0	; select bank0
 12964  062B  036F               	decf	_textsize,w
 12965  062C  1D03               	btfss	3,2
 12966  062D  2E2F               	goto	u5551
 12967  062E  2E30               	goto	u5550
 12968  062F                     u5551:
 12969  062F  2E52               	goto	l5551
 12970  0630                     u5550:
 12971  0630                     l5549:
 12972                           
 12973                           ;GFX_Library.c: 485:             drawPixel(cursor_x + i, cursor_y + j, textbgcolor);
 12974  0630  0849               	movf	display_print@i,w
 12975  0631  0021               	movlb	1	; select bank1
 12976  0632  0745               	addwf	_cursor_x^(0+128),w
 12977  0633  0020               	movlb	0	; select bank0
 12978  0634  00A6               	movwf	drawPixel@x
 12979  0635  0021               	movlb	1	; select bank1
 12980  0636  0846               	movf	(_cursor_x+1)^(0+128),w
 12981  0637  1803               	skipnc
 12982  0638  0A46               	incf	(_cursor_x+1)^(0+128),w
 12983  0639  0020               	movlb	0	; select bank0
 12984  063A  00A7               	movwf	drawPixel@x+1
 12985  063B  0848               	movf	display_print@j,w
 12986  063C  0021               	movlb	1	; select bank1
 12987  063D  0743               	addwf	_cursor_y^(0+128),w
 12988  063E  0020               	movlb	0	; select bank0
 12989  063F  00A8               	movwf	drawPixel@y
 12990  0640  0021               	movlb	1	; select bank1
 12991  0641  0844               	movf	(_cursor_y+1)^(0+128),w
 12992  0642  1803               	skipnc
 12993  0643  0A44               	incf	(_cursor_y+1)^(0+128),w
 12994  0644  0020               	movlb	0	; select bank0
 12995  0645  00A9               	movwf	drawPixel@y+1
 12996  0646  0021               	movlb	1	; select bank1
 12997  0647  0821               	movf	(_textbgcolor+1)^(0+128),w
 12998  0648  0020               	movlb	0	; select bank0
 12999  0649  00AB               	movwf	drawPixel@color+1
 13000  064A  0021               	movlb	1	; select bank1
 13001  064B  0820               	movf	_textbgcolor^(0+128),w
 13002  064C  0020               	movlb	0	; select bank0
 13003  064D  00AA               	movwf	drawPixel@color
 13004  064E  3191  21D1  3185   	fcall	_drawPixel
 13005  0651  2EA1               	goto	l5553
 13006  0652                     l5551:
 13007                           
 13008                           ;GFX_Library.c: 487:             fillRect(cursor_x + i * textsize, cursor_y + j * textsi
      +                          ze, textsize, textsize, textbgcolor);
 13009  0652  0849               	movf	display_print@i,w
 13010  0653  00BA               	movwf	??_display_print
 13011  0654  01BB               	clrf	??_display_print+1
 13012  0655  083A               	movf	??_display_print,w
 13013  0656  00F1               	movwf	___wmul@multiplier
 13014  0657  083B               	movf	??_display_print+1,w
 13015  0658  00F2               	movwf	___wmul@multiplier+1
 13016  0659  086F               	movf	_textsize,w
 13017  065A  00BC               	movwf	??_display_print+2
 13018  065B  01BD               	clrf	??_display_print+3
 13019  065C  083C               	movf	??_display_print+2,w
 13020  065D  00F3               	movwf	___wmul@multiplicand
 13021  065E  083D               	movf	??_display_print+3,w
 13022  065F  00F4               	movwf	___wmul@multiplicand+1
 13023  0660  3190  20BA  3185   	fcall	___wmul
 13024  0663  0021               	movlb	1	; select bank1
 13025  0664  0845               	movf	_cursor_x^(0+128),w
 13026  0665  0771               	addwf	?___wmul,w
 13027  0666  0020               	movlb	0	; select bank0
 13028  0667  00A6               	movwf	fillRect@x
 13029  0668  0021               	movlb	1	; select bank1
 13030  0669  0846               	movf	(_cursor_x+1)^(0+128),w
 13031  066A  3D72               	addwfc	?___wmul+1,w
 13032  066B  0020               	movlb	0	; select bank0
 13033  066C  00A7               	movwf	fillRect@x+1
 13034  066D  0848               	movf	display_print@j,w
 13035  066E  00BE               	movwf	??_display_print+4
 13036  066F  01BF               	clrf	??_display_print+5
 13037  0670  083E               	movf	??_display_print+4,w
 13038  0671  00F1               	movwf	___wmul@multiplier
 13039  0672  083F               	movf	??_display_print+5,w
 13040  0673  00F2               	movwf	___wmul@multiplier+1
 13041  0674  086F               	movf	_textsize,w
 13042  0675  00C0               	movwf	??_display_print+6
 13043  0676  01C1               	clrf	??_display_print+7
 13044  0677  0840               	movf	??_display_print+6,w
 13045  0678  00F3               	movwf	___wmul@multiplicand
 13046  0679  0841               	movf	??_display_print+7,w
 13047  067A  00F4               	movwf	___wmul@multiplicand+1
 13048  067B  3190  20BA  3185   	fcall	___wmul
 13049  067E  0021               	movlb	1	; select bank1
 13050  067F  0843               	movf	_cursor_y^(0+128),w
 13051  0680  0771               	addwf	?___wmul,w
 13052  0681  0020               	movlb	0	; select bank0
 13053  0682  00A8               	movwf	fillRect@y
 13054  0683  0021               	movlb	1	; select bank1
 13055  0684  0844               	movf	(_cursor_y+1)^(0+128),w
 13056  0685  3D72               	addwfc	?___wmul+1,w
 13057  0686  0020               	movlb	0	; select bank0
 13058  0687  00A9               	movwf	fillRect@y+1
 13059  0688  086F               	movf	_textsize,w
 13060  0689  00C2               	movwf	??_display_print+8
 13061  068A  01C3               	clrf	??_display_print+9
 13062  068B  0842               	movf	??_display_print+8,w
 13063  068C  00AA               	movwf	fillRect@w
 13064  068D  0843               	movf	??_display_print+9,w
 13065  068E  00AB               	movwf	fillRect@w+1
 13066  068F  086F               	movf	_textsize,w
 13067  0690  00C4               	movwf	??_display_print+10
 13068  0691  01C5               	clrf	??_display_print+11
 13069  0692  0844               	movf	??_display_print+10,w
 13070  0693  00AC               	movwf	fillRect@h
 13071  0694  0845               	movf	??_display_print+11,w
 13072  0695  00AD               	movwf	fillRect@h+1
 13073  0696  0021               	movlb	1	; select bank1
 13074  0697  0821               	movf	(_textbgcolor+1)^(0+128),w
 13075  0698  0020               	movlb	0	; select bank0
 13076  0699  00AF               	movwf	fillRect@color+1
 13077  069A  0021               	movlb	1	; select bank1
 13078  069B  0820               	movf	_textbgcolor^(0+128),w
 13079  069C  0020               	movlb	0	; select bank0
 13080  069D  00AE               	movwf	fillRect@color
 13081  069E  3196  264D  3185   	fcall	_fillRect
 13082  06A1                     l5553:
 13083                           
 13084                           ;GFX_Library.c: 489:     }
 13085  06A1  3001               	movlw	1
 13086  06A2  0020               	movlb	0	; select bank0
 13087  06A3  00BA               	movwf	??_display_print
 13088  06A4  083A               	movf	??_display_print,w
 13089  06A5  07C8               	addwf	display_print@j,f
 13090  06A6                     l5555:
 13091  06A6  1003               	clrc
 13092  06A7  0CC6               	rrf	display_print@line,f
 13093  06A8                     l5557:
 13094  06A8  3008               	movlw	8
 13095  06A9  0248               	subwf	display_print@j,w
 13096  06AA  1C03               	skipc
 13097  06AB  2EAD               	goto	u5561
 13098  06AC  2EAE               	goto	u5560
 13099  06AD                     u5561:
 13100  06AD  2DA4               	goto	l741
 13101  06AE                     u5560:
 13102  06AE                     l5559:
 13103                           
 13104                           ;GFX_Library.c: 490:   }
 13105  06AE  3001               	movlw	1
 13106  06AF  00BA               	movwf	??_display_print
 13107  06B0  083A               	movf	??_display_print,w
 13108  06B1  07C9               	addwf	display_print@i,f
 13109  06B2                     l5561:
 13110  06B2  3005               	movlw	5
 13111  06B3  0249               	subwf	display_print@i,w
 13112  06B4  1C03               	skipc
 13113  06B5  2EB7               	goto	u5571
 13114  06B6  2EB8               	goto	u5570
 13115  06B7                     u5571:
 13116  06B7  2D7F               	goto	l5531
 13117  06B8                     u5570:
 13118  06B8                     l5563:
 13119                           
 13120                           ;GFX_Library.c: 492:   if(textbgcolor != textcolor) {
 13121  06B8  0021               	movlb	1	; select bank1
 13122  06B9  0823               	movf	(_textcolor+1)^(0+128),w
 13123  06BA  0621               	xorwf	(_textbgcolor+1)^(0+128),w
 13124  06BB  1D03               	skipz
 13125  06BC  2EBF               	goto	u5585
 13126  06BD  0822               	movf	_textcolor^(0+128),w
 13127  06BE  0620               	xorwf	_textbgcolor^(0+128),w
 13128  06BF                     u5585:
 13129  06BF  1903               	skipnz
 13130  06C0  2EC2               	goto	u5581
 13131  06C1  2EC3               	goto	u5580
 13132  06C2                     u5581:
 13133  06C2  2F2A               	goto	l750
 13134  06C3                     u5580:
 13135  06C3                     l5565:
 13136                           
 13137                           ;GFX_Library.c: 493:     if(textsize == 1) drawVLine(cursor_x + 5, cursor_y, 8, textbgco
      +                          lor);
 13138  06C3  0020               	movlb	0	; select bank0
 13139  06C4  036F               	decf	_textsize,w
 13140  06C5  1D03               	btfss	3,2
 13141  06C6  2EC8               	goto	u5591
 13142  06C7  2EC9               	goto	u5590
 13143  06C8                     u5591:
 13144  06C8  2EEB               	goto	l5569
 13145  06C9                     u5590:
 13146  06C9                     l5567:
 13147  06C9  0021               	movlb	1	; select bank1
 13148  06CA  0845               	movf	_cursor_x^(0+128),w
 13149  06CB  3E05               	addlw	5
 13150  06CC  0020               	movlb	0	; select bank0
 13151  06CD  00A6               	movwf	drawVLine@x
 13152  06CE  3000               	movlw	0
 13153  06CF  0021               	movlb	1	; select bank1
 13154  06D0  3D46               	addwfc	(_cursor_x+1)^(0+128),w
 13155  06D1  0020               	movlb	0	; select bank0
 13156  06D2  00A7               	movwf	drawVLine@x+1
 13157  06D3  0021               	movlb	1	; select bank1
 13158  06D4  0844               	movf	(_cursor_y+1)^(0+128),w
 13159  06D5  0020               	movlb	0	; select bank0
 13160  06D6  00A9               	movwf	drawVLine@y+1
 13161  06D7  0021               	movlb	1	; select bank1
 13162  06D8  0843               	movf	_cursor_y^(0+128),w
 13163  06D9  0020               	movlb	0	; select bank0
 13164  06DA  00A8               	movwf	drawVLine@y
 13165  06DB  3008               	movlw	8
 13166  06DC  00AA               	movwf	drawVLine@h
 13167  06DD  3000               	movlw	0
 13168  06DE  00AB               	movwf	drawVLine@h+1
 13169  06DF  0021               	movlb	1	; select bank1
 13170  06E0  0821               	movf	(_textbgcolor+1)^(0+128),w
 13171  06E1  0020               	movlb	0	; select bank0
 13172  06E2  00AD               	movwf	drawVLine@color+1
 13173  06E3  0021               	movlb	1	; select bank1
 13174  06E4  0820               	movf	_textbgcolor^(0+128),w
 13175  06E5  0020               	movlb	0	; select bank0
 13176  06E6  00AC               	movwf	drawVLine@color
 13177  06E7  3194  24A5  3185   	fcall	_drawVLine
 13178  06EA  2F2A               	goto	l750
 13179  06EB                     l5569:
 13180  06EB  086F               	movf	_textsize,w
 13181  06EC  00BA               	movwf	??_display_print
 13182  06ED  01BB               	clrf	??_display_print+1
 13183  06EE  083A               	movf	??_display_print,w
 13184  06EF  00F1               	movwf	___wmul@multiplier
 13185  06F0  083B               	movf	??_display_print+1,w
 13186  06F1  00F2               	movwf	___wmul@multiplier+1
 13187  06F2  3005               	movlw	5
 13188  06F3  00F3               	movwf	___wmul@multiplicand
 13189  06F4  3000               	movlw	0
 13190  06F5  00F4               	movwf	___wmul@multiplicand+1
 13191  06F6  3190  20BA  3185   	fcall	___wmul
 13192  06F9  0021               	movlb	1	; select bank1
 13193  06FA  0845               	movf	_cursor_x^(0+128),w
 13194  06FB  0771               	addwf	?___wmul,w
 13195  06FC  0020               	movlb	0	; select bank0
 13196  06FD  00A6               	movwf	fillRect@x
 13197  06FE  0021               	movlb	1	; select bank1
 13198  06FF  0846               	movf	(_cursor_x+1)^(0+128),w
 13199  0700  3D72               	addwfc	?___wmul+1,w
 13200  0701  0020               	movlb	0	; select bank0
 13201  0702  00A7               	movwf	fillRect@x+1
 13202  0703  0021               	movlb	1	; select bank1
 13203  0704  0844               	movf	(_cursor_y+1)^(0+128),w
 13204  0705  0020               	movlb	0	; select bank0
 13205  0706  00A9               	movwf	fillRect@y+1
 13206  0707  0021               	movlb	1	; select bank1
 13207  0708  0843               	movf	_cursor_y^(0+128),w
 13208  0709  0020               	movlb	0	; select bank0
 13209  070A  00A8               	movwf	fillRect@y
 13210  070B  086F               	movf	_textsize,w
 13211  070C  00BC               	movwf	??_display_print+2
 13212  070D  01BD               	clrf	??_display_print+3
 13213  070E  083C               	movf	??_display_print+2,w
 13214  070F  00AA               	movwf	fillRect@w
 13215  0710  083D               	movf	??_display_print+3,w
 13216  0711  00AB               	movwf	fillRect@w+1
 13217  0712  086F               	movf	_textsize,w
 13218  0713  00BE               	movwf	??_display_print+4
 13219  0714  01BF               	clrf	??_display_print+5
 13220  0715  35BE               	lslf	??_display_print+4,f
 13221  0716  0DBF               	rlf	??_display_print+5,f
 13222  0717  35BE               	lslf	??_display_print+4,f
 13223  0718  0DBF               	rlf	??_display_print+5,f
 13224  0719  35BE               	lslf	??_display_print+4,f
 13225  071A  0DBF               	rlf	??_display_print+5,f
 13226  071B  083E               	movf	??_display_print+4,w
 13227  071C  00AC               	movwf	fillRect@h
 13228  071D  083F               	movf	??_display_print+5,w
 13229  071E  00AD               	movwf	fillRect@h+1
 13230  071F  0021               	movlb	1	; select bank1
 13231  0720  0821               	movf	(_textbgcolor+1)^(0+128),w
 13232  0721  0020               	movlb	0	; select bank0
 13233  0722  00AF               	movwf	fillRect@color+1
 13234  0723  0021               	movlb	1	; select bank1
 13235  0724  0820               	movf	_textbgcolor^(0+128),w
 13236  0725  0020               	movlb	0	; select bank0
 13237  0726  00AE               	movwf	fillRect@color
 13238  0727  3196  264D  3185   	fcall	_fillRect
 13239  072A                     l750:	
 13240                           ;GFX_Library.c: 495:   }
 13241                           
 13242                           
 13243                           ;GFX_Library.c: 497:   cursor_x += textsize * 6;
 13244  072A  0020               	movlb	0	; select bank0
 13245  072B  086F               	movf	_textsize,w
 13246  072C  00BA               	movwf	??_display_print
 13247  072D  01BB               	clrf	??_display_print+1
 13248  072E  083A               	movf	??_display_print,w
 13249  072F  00F1               	movwf	___wmul@multiplier
 13250  0730  083B               	movf	??_display_print+1,w
 13251  0731  00F2               	movwf	___wmul@multiplier+1
 13252  0732  3006               	movlw	6
 13253  0733  00F3               	movwf	___wmul@multiplicand
 13254  0734  3000               	movlw	0
 13255  0735  00F4               	movwf	___wmul@multiplicand+1
 13256  0736  3190  20BA  3185   	fcall	___wmul
 13257  0739  0871               	movf	?___wmul,w
 13258  073A  0021               	movlb	1	; select bank1
 13259  073B  07C5               	addwf	_cursor_x^(0+128),f
 13260  073C  0872               	movf	?___wmul+1,w
 13261  073D  3DC6               	addwfc	(_cursor_x+1)^(0+128),f
 13262                           
 13263                           ;GFX_Library.c: 499:   if(cursor_x > (_width + (textsize * 6))){
 13264  073E  0020               	movlb	0	; select bank0
 13265  073F  086F               	movf	_textsize,w
 13266  0740  00BA               	movwf	??_display_print
 13267  0741  01BB               	clrf	??_display_print+1
 13268  0742  083A               	movf	??_display_print,w
 13269  0743  00F1               	movwf	___wmul@multiplier
 13270  0744  083B               	movf	??_display_print+1,w
 13271  0745  00F2               	movwf	___wmul@multiplier+1
 13272  0746  3006               	movlw	6
 13273  0747  00F3               	movwf	___wmul@multiplicand
 13274  0748  3000               	movlw	0
 13275  0749  00F4               	movwf	___wmul@multiplicand+1
 13276  074A  3190  20BA  3185   	fcall	___wmul
 13277  074D  0021               	movlb	1	; select bank1
 13278  074E  0849               	movf	__width^(0+128),w
 13279  074F  0771               	addwf	?___wmul,w
 13280  0750  0020               	movlb	0	; select bank0
 13281  0751  00BC               	movwf	??_display_print+2
 13282  0752  0021               	movlb	1	; select bank1
 13283  0753  084A               	movf	(__width+1)^(0+128),w
 13284  0754  3D72               	addwfc	?___wmul+1,w
 13285  0755  0020               	movlb	0	; select bank0
 13286  0756  00BD               	movwf	??_display_print+3
 13287  0757  0021               	movlb	1	; select bank1
 13288  0758  0846               	movf	(_cursor_x+1)^(0+128),w
 13289  0759  0020               	movlb	0	; select bank0
 13290  075A  023D               	subwf	??_display_print+3,w
 13291  075B  1D03               	skipz
 13292  075C  2F61               	goto	u5605
 13293  075D  0021               	movlb	1	; select bank1
 13294  075E  0845               	movf	_cursor_x^(0+128),w
 13295  075F  0020               	movlb	0	; select bank0
 13296  0760  023C               	subwf	??_display_print+2,w
 13297  0761                     u5605:
 13298  0761  1803               	skipnc
 13299  0762  2F64               	goto	u5601
 13300  0763  2F65               	goto	u5600
 13301  0764                     u5601:
 13302  0764  2F6A               	goto	l5573
 13303  0765                     u5600:
 13304  0765                     l5571:
 13305                           
 13306                           ;GFX_Library.c: 500:     cursor_x = _width;
 13307  0765  0021               	movlb	1	; select bank1
 13308  0766  084A               	movf	(__width+1)^(0+128),w
 13309  0767  00C6               	movwf	(_cursor_x+1)^(0+128)
 13310  0768  0849               	movf	__width^(0+128),w
 13311  0769  00C5               	movwf	_cursor_x^(0+128)
 13312  076A                     l5573:
 13313                           
 13314                           ;GFX_Library.c: 503:   if (wrap && (cursor_x + (textsize * 5)) > _width)
 13315  076A  0021               	movlb	1	; select bank1
 13316  076B  0824               	movf	_wrap^(0+128),w
 13317  076C  1903               	btfsc	3,2
 13318  076D  2F6F               	goto	u5611
 13319  076E  2F70               	goto	u5610
 13320  076F                     u5611:
 13321  076F  2FD0               	goto	l736
 13322  0770                     u5610:
 13323  0770                     l5575:
 13324  0770  0020               	movlb	0	; select bank0
 13325  0771  086F               	movf	_textsize,w
 13326  0772  00BA               	movwf	??_display_print
 13327  0773  01BB               	clrf	??_display_print+1
 13328  0774  083A               	movf	??_display_print,w
 13329  0775  00F1               	movwf	___wmul@multiplier
 13330  0776  083B               	movf	??_display_print+1,w
 13331  0777  00F2               	movwf	___wmul@multiplier+1
 13332  0778  3005               	movlw	5
 13333  0779  00F3               	movwf	___wmul@multiplicand
 13334  077A  3000               	movlw	0
 13335  077B  00F4               	movwf	___wmul@multiplicand+1
 13336  077C  3190  20BA  3185   	fcall	___wmul
 13337  077F  0021               	movlb	1	; select bank1
 13338  0780  0845               	movf	_cursor_x^(0+128),w
 13339  0781  0771               	addwf	?___wmul,w
 13340  0782  0020               	movlb	0	; select bank0
 13341  0783  00BC               	movwf	??_display_print+2
 13342  0784  0021               	movlb	1	; select bank1
 13343  0785  0846               	movf	(_cursor_x+1)^(0+128),w
 13344  0786  3D72               	addwfc	?___wmul+1,w
 13345  0787  0020               	movlb	0	; select bank0
 13346  0788  00BD               	movwf	??_display_print+3
 13347  0789  083D               	movf	??_display_print+3,w
 13348  078A  0021               	movlb	1	; select bank1
 13349  078B  024A               	subwf	(__width+1)^(0+128),w
 13350  078C  1D03               	skipz
 13351  078D  2F92               	goto	u5625
 13352  078E  0020               	movlb	0	; select bank0
 13353  078F  083C               	movf	??_display_print+2,w
 13354  0790  0021               	movlb	1	; select bank1
 13355  0791  0249               	subwf	__width^(0+128),w
 13356  0792                     u5625:
 13357  0792  1803               	skipnc
 13358  0793  2F95               	goto	u5621
 13359  0794  2F96               	goto	u5620
 13360  0795                     u5621:
 13361  0795  2FD0               	goto	l736
 13362  0796                     u5620:
 13363  0796                     l5577:
 13364                           
 13365                           ;GFX_Library.c: 504:   {;GFX_Library.c: 505:     cursor_x = 0;
 13366  0796  01C5               	clrf	_cursor_x^(0+128)
 13367  0797  01C6               	clrf	(_cursor_x+1)^(0+128)
 13368  0798                     l5579:
 13369                           
 13370                           ;GFX_Library.c: 506:     cursor_y += textsize * 8;
 13371  0798  0020               	movlb	0	; select bank0
 13372  0799  086F               	movf	_textsize,w
 13373  079A  00BA               	movwf	??_display_print
 13374  079B  01BB               	clrf	??_display_print+1
 13375  079C  35BA               	lslf	??_display_print,f
 13376  079D  0DBB               	rlf	??_display_print+1,f
 13377  079E  35BA               	lslf	??_display_print,f
 13378  079F  0DBB               	rlf	??_display_print+1,f
 13379  07A0  35BA               	lslf	??_display_print,f
 13380  07A1  0DBB               	rlf	??_display_print+1,f
 13381  07A2  083A               	movf	??_display_print,w
 13382  07A3  0021               	movlb	1	; select bank1
 13383  07A4  07C3               	addwf	_cursor_y^(0+128),f
 13384  07A5  0020               	movlb	0	; select bank0
 13385  07A6  083B               	movf	??_display_print+1,w
 13386  07A7  0021               	movlb	1	; select bank1
 13387  07A8  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
 13388  07A9                     l5581:
 13389                           
 13390                           ;GFX_Library.c: 507:     if( cursor_y > ((uint16_t)_height + textsize * 8) ){
 13391  07A9  0020               	movlb	0	; select bank0
 13392  07AA  086F               	movf	_textsize,w
 13393  07AB  00BA               	movwf	??_display_print
 13394  07AC  01BB               	clrf	??_display_print+1
 13395  07AD  35BA               	lslf	??_display_print,f
 13396  07AE  0DBB               	rlf	??_display_print+1,f
 13397  07AF  35BA               	lslf	??_display_print,f
 13398  07B0  0DBB               	rlf	??_display_print+1,f
 13399  07B1  35BA               	lslf	??_display_print,f
 13400  07B2  0DBB               	rlf	??_display_print+1,f
 13401  07B3  0021               	movlb	1	; select bank1
 13402  07B4  0847               	movf	__height^(0+128),w
 13403  07B5  0020               	movlb	0	; select bank0
 13404  07B6  073A               	addwf	??_display_print,w
 13405  07B7  00BC               	movwf	??_display_print+2
 13406  07B8  0021               	movlb	1	; select bank1
 13407  07B9  0848               	movf	(__height+1)^(0+128),w
 13408  07BA  0020               	movlb	0	; select bank0
 13409  07BB  3D3B               	addwfc	??_display_print+1,w
 13410  07BC  00BD               	movwf	??_display_print+3
 13411  07BD  0021               	movlb	1	; select bank1
 13412  07BE  0844               	movf	(_cursor_y+1)^(0+128),w
 13413  07BF  0020               	movlb	0	; select bank0
 13414  07C0  023D               	subwf	??_display_print+3,w
 13415  07C1  1D03               	skipz
 13416  07C2  2FC7               	goto	u5635
 13417  07C3  0021               	movlb	1	; select bank1
 13418  07C4  0843               	movf	_cursor_y^(0+128),w
 13419  07C5  0020               	movlb	0	; select bank0
 13420  07C6  023C               	subwf	??_display_print+2,w
 13421  07C7                     u5635:
 13422  07C7  1803               	skipnc
 13423  07C8  2FCA               	goto	u5631
 13424  07C9  2FCB               	goto	u5630
 13425  07CA                     u5631:
 13426  07CA  2FD0               	goto	l736
 13427  07CB                     u5630:
 13428  07CB                     l5583:
 13429                           
 13430                           ;GFX_Library.c: 508:       cursor_y = _height;
 13431  07CB  0021               	movlb	1	; select bank1
 13432  07CC  0848               	movf	(__height+1)^(0+128),w
 13433  07CD  00C4               	movwf	(_cursor_y+1)^(0+128)
 13434  07CE  0847               	movf	__height^(0+128),w
 13435  07CF  00C3               	movwf	_cursor_y^(0+128)
 13436  07D0                     l736:
 13437  07D0  0008               	return
 13438  07D1                     __end_of_display_print:
 13439                           
 13440                           	psect	text27
 13441  164D                     __ptext27:	
 13442 ;; *************** function _fillRect *****************
 13443 ;; Defined at:
 13444 ;;		line 271 in file "ILI9341.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  x               2    6[BANK0 ] unsigned short 
 13447 ;;  y               2    8[BANK0 ] unsigned short 
 13448 ;;  w               2   10[BANK0 ] unsigned short 
 13449 ;;  h               2   12[BANK0 ] unsigned short 
 13450 ;;  color           2   14[BANK0 ] unsigned short 
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  px              4   20[BANK0 ] unsigned long 
 13453 ;;  lo              1   25[BANK0 ] unsigned char 
 13454 ;;  hi              1   24[BANK0 ] unsigned char 
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		wreg, status,2, status,0, pclath, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13464 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;Total ram usage:       20 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    7
 13471 ;; This function calls:
 13472 ;;		_SPI1_ExchangeByte
 13473 ;;		___lmul
 13474 ;;		_endWrite
 13475 ;;		_setAddrWindow
 13476 ;;		_startWrite
 13477 ;; This function is called by:
 13478 ;;		_display_print
 13479 ;;		_display_customChar
 13480 ;;		_fillScreen
 13481 ;;		_testFilledRects
 13482 ;;		_display_fillRoundRect
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           
 13487                           ;psect for function _fillRect
 13488  164D                     _fillRect:
 13489  164D                     l5403:	
 13490                           ;incstack = 0
 13491                           ; Regs used in _fillRect: [wreg+status,2+status,0+pclath+cstack]
 13492                           
 13493                           
 13494                           ;ILI9341.c: 272:   if(w && h) {
 13495  164D  0020               	movlb	0	; select bank0
 13496  164E  082A               	movf	fillRect@w,w
 13497  164F  042B               	iorwf	fillRect@w+1,w
 13498  1650  1903               	btfsc	3,2
 13499  1651  2E53               	goto	u5301
 13500  1652  2E54               	goto	u5300
 13501  1653                     u5301:
 13502  1653  2F24               	goto	l952
 13503  1654                     u5300:
 13504  1654                     l5405:
 13505  1654  082C               	movf	fillRect@h,w
 13506  1655  042D               	iorwf	fillRect@h+1,w
 13507  1656  1903               	btfsc	3,2
 13508  1657  2E59               	goto	u5311
 13509  1658  2E5A               	goto	u5310
 13510  1659                     u5311:
 13511  1659  2F24               	goto	l952
 13512  165A                     u5310:
 13513  165A                     l5407:
 13514                           
 13515                           ;ILI9341.c: 273:     uint8_t hi = color >> 8, lo = color;
 13516  165A  082F               	movf	fillRect@color+1,w
 13517  165B  00B0               	movwf	??_fillRect
 13518  165C  0830               	movf	??_fillRect,w
 13519  165D  00B8               	movwf	fillRect@hi
 13520  165E                     l5409:
 13521  165E  082E               	movf	fillRect@color,w
 13522  165F  00B0               	movwf	??_fillRect
 13523  1660  0830               	movf	??_fillRect,w
 13524  1661  00B9               	movwf	fillRect@lo
 13525  1662                     l5411:
 13526                           
 13527                           ;ILI9341.c: 274:     if((x >= _width) || (y >= _height))
 13528  1662  0021               	movlb	1	; select bank1
 13529  1663  084A               	movf	(__width+1)^(0+128),w
 13530  1664  0020               	movlb	0	; select bank0
 13531  1665  0227               	subwf	fillRect@x+1,w
 13532  1666  1D03               	skipz
 13533  1667  2E6C               	goto	u5325
 13534  1668  0021               	movlb	1	; select bank1
 13535  1669  0849               	movf	__width^(0+128),w
 13536  166A  0020               	movlb	0	; select bank0
 13537  166B  0226               	subwf	fillRect@x,w
 13538  166C                     u5325:
 13539  166C  1803               	skipnc
 13540  166D  2E6F               	goto	u5321
 13541  166E  2E70               	goto	u5320
 13542  166F                     u5321:
 13543  166F  2F24               	goto	l952
 13544  1670                     u5320:
 13545  1670                     l5413:
 13546  1670  0021               	movlb	1	; select bank1
 13547  1671  0848               	movf	(__height+1)^(0+128),w
 13548  1672  0020               	movlb	0	; select bank0
 13549  1673  0229               	subwf	fillRect@y+1,w
 13550  1674  1D03               	skipz
 13551  1675  2E7A               	goto	u5335
 13552  1676  0021               	movlb	1	; select bank1
 13553  1677  0847               	movf	__height^(0+128),w
 13554  1678  0020               	movlb	0	; select bank0
 13555  1679  0228               	subwf	fillRect@y,w
 13556  167A                     u5335:
 13557  167A  1C03               	skipc
 13558  167B  2E7D               	goto	u5331
 13559  167C  2E7E               	goto	u5330
 13560  167D                     u5331:
 13561  167D  2E7F               	goto	l5415
 13562  167E                     u5330:
 13563  167E  2F24               	goto	l952
 13564  167F                     l5415:
 13565                           
 13566                           ;ILI9341.c: 276:     if((x + w - 1) >= _width)
 13567  167F  082A               	movf	fillRect@w,w
 13568  1680  0726               	addwf	fillRect@x,w
 13569  1681  00B0               	movwf	??_fillRect
 13570  1682  082B               	movf	fillRect@w+1,w
 13571  1683  3D27               	addwfc	fillRect@x+1,w
 13572  1684  00B1               	movwf	??_fillRect+1
 13573  1685  0830               	movf	??_fillRect,w
 13574  1686  3EFF               	addlw	255
 13575  1687  00B2               	movwf	??_fillRect+2
 13576  1688  30FF               	movlw	255
 13577  1689  3D31               	addwfc	??_fillRect+1,w
 13578  168A  00B3               	movwf	??_fillRect+3
 13579  168B  0021               	movlb	1	; select bank1
 13580  168C  084A               	movf	(__width+1)^(0+128),w
 13581  168D  0020               	movlb	0	; select bank0
 13582  168E  0233               	subwf	??_fillRect+3,w
 13583  168F  1D03               	skipz
 13584  1690  2E95               	goto	u5345
 13585  1691  0021               	movlb	1	; select bank1
 13586  1692  0849               	movf	__width^(0+128),w
 13587  1693  0020               	movlb	0	; select bank0
 13588  1694  0232               	subwf	??_fillRect+2,w
 13589  1695                     u5345:
 13590  1695  1C03               	skipc
 13591  1696  2E98               	goto	u5341
 13592  1697  2E99               	goto	u5340
 13593  1698                     u5341:
 13594  1698  2EA3               	goto	l953
 13595  1699                     u5340:
 13596  1699                     l5417:
 13597                           
 13598                           ;ILI9341.c: 277:       w = _width - x;
 13599  1699  0826               	movf	fillRect@x,w
 13600  169A  0021               	movlb	1	; select bank1
 13601  169B  0249               	subwf	__width^(0+128),w
 13602  169C  0020               	movlb	0	; select bank0
 13603  169D  00AA               	movwf	fillRect@w
 13604  169E  0827               	movf	fillRect@x+1,w
 13605  169F  0021               	movlb	1	; select bank1
 13606  16A0  3B4A               	subwfb	(__width+1)^(0+128),w
 13607  16A1  0020               	movlb	0	; select bank0
 13608  16A2  00AB               	movwf	fillRect@w+1
 13609  16A3                     l953:
 13610                           
 13611                           ;ILI9341.c: 278:     if((y + h - 1) >= _height)
 13612  16A3  082C               	movf	fillRect@h,w
 13613  16A4  0728               	addwf	fillRect@y,w
 13614  16A5  00B0               	movwf	??_fillRect
 13615  16A6  082D               	movf	fillRect@h+1,w
 13616  16A7  3D29               	addwfc	fillRect@y+1,w
 13617  16A8  00B1               	movwf	??_fillRect+1
 13618  16A9  0830               	movf	??_fillRect,w
 13619  16AA  3EFF               	addlw	255
 13620  16AB  00B2               	movwf	??_fillRect+2
 13621  16AC  30FF               	movlw	255
 13622  16AD  3D31               	addwfc	??_fillRect+1,w
 13623  16AE  00B3               	movwf	??_fillRect+3
 13624  16AF  0021               	movlb	1	; select bank1
 13625  16B0  0848               	movf	(__height+1)^(0+128),w
 13626  16B1  0020               	movlb	0	; select bank0
 13627  16B2  0233               	subwf	??_fillRect+3,w
 13628  16B3  1D03               	skipz
 13629  16B4  2EB9               	goto	u5355
 13630  16B5  0021               	movlb	1	; select bank1
 13631  16B6  0847               	movf	__height^(0+128),w
 13632  16B7  0020               	movlb	0	; select bank0
 13633  16B8  0232               	subwf	??_fillRect+2,w
 13634  16B9                     u5355:
 13635  16B9  1C03               	skipc
 13636  16BA  2EBC               	goto	u5351
 13637  16BB  2EBD               	goto	u5350
 13638  16BC                     u5351:
 13639  16BC  2EC7               	goto	l5421
 13640  16BD                     u5350:
 13641  16BD                     l5419:
 13642                           
 13643                           ;ILI9341.c: 279:       h = _height - y;
 13644  16BD  0828               	movf	fillRect@y,w
 13645  16BE  0021               	movlb	1	; select bank1
 13646  16BF  0247               	subwf	__height^(0+128),w
 13647  16C0  0020               	movlb	0	; select bank0
 13648  16C1  00AC               	movwf	fillRect@h
 13649  16C2  0829               	movf	fillRect@y+1,w
 13650  16C3  0021               	movlb	1	; select bank1
 13651  16C4  3B48               	subwfb	(__height+1)^(0+128),w
 13652  16C5  0020               	movlb	0	; select bank0
 13653  16C6  00AD               	movwf	fillRect@h+1
 13654  16C7                     l5421:
 13655                           
 13656                           ;ILI9341.c: 280:     startWrite();
 13657  16C7  319F  2761  3196   	fcall	_startWrite
 13658  16CA                     l5423:
 13659                           
 13660                           ;ILI9341.c: 281:     setAddrWindow(x, y, w, h);
 13661  16CA  0020               	movlb	0	; select bank0
 13662  16CB  0827               	movf	fillRect@x+1,w
 13663  16CC  00F4               	movwf	setAddrWindow@x1+1
 13664  16CD  0826               	movf	fillRect@x,w
 13665  16CE  00F3               	movwf	setAddrWindow@x1
 13666  16CF  0829               	movf	fillRect@y+1,w
 13667  16D0  00F6               	movwf	setAddrWindow@y1+1
 13668  16D1  0828               	movf	fillRect@y,w
 13669  16D2  00F5               	movwf	setAddrWindow@y1
 13670  16D3  082B               	movf	fillRect@w+1,w
 13671  16D4  00F8               	movwf	setAddrWindow@w+1
 13672  16D5  082A               	movf	fillRect@w,w
 13673  16D6  00F7               	movwf	setAddrWindow@w
 13674  16D7  082D               	movf	fillRect@h+1,w
 13675  16D8  00FA               	movwf	setAddrWindow@h+1
 13676  16D9  082C               	movf	fillRect@h,w
 13677  16DA  00F9               	movwf	setAddrWindow@h
 13678  16DB  3192  2212  3196   	fcall	_setAddrWindow
 13679  16DE                     l5425:
 13680                           
 13681                           ;ILI9341.c: 282:     uint32_t px = (uint32_t)w * h;
 13682  16DE  0020               	movlb	0	; select bank0
 13683  16DF  082A               	movf	fillRect@w,w
 13684  16E0  00F1               	movwf	___lmul@multiplier
 13685  16E1  082B               	movf	fillRect@w+1,w
 13686  16E2  00F2               	movwf	___lmul@multiplier+1
 13687  16E3  01F3               	clrf	___lmul@multiplier+2
 13688  16E4  01F4               	clrf	___lmul@multiplier+3
 13689  16E5  082C               	movf	fillRect@h,w
 13690  16E6  00F5               	movwf	___lmul@multiplicand
 13691  16E7  082D               	movf	fillRect@h+1,w
 13692  16E8  00F6               	movwf	___lmul@multiplicand+1
 13693  16E9  01F7               	clrf	___lmul@multiplicand+2
 13694  16EA  01F8               	clrf	___lmul@multiplicand+3
 13695  16EB  3191  219B  3196   	fcall	___lmul
 13696  16EE  0874               	movf	?___lmul+3,w
 13697  16EF  0020               	movlb	0	; select bank0
 13698  16F0  00B7               	movwf	fillRect@px+3
 13699  16F1  0873               	movf	?___lmul+2,w
 13700  16F2  00B6               	movwf	fillRect@px+2
 13701  16F3  0872               	movf	?___lmul+1,w
 13702  16F4  00B5               	movwf	fillRect@px+1
 13703  16F5  0871               	movf	?___lmul,w
 13704  16F6  00B4               	movwf	fillRect@px
 13705                           
 13706                           ;ILI9341.c: 283:     while (px--) {
 13707  16F7  2F02               	goto	l5429
 13708  16F8                     l5427:
 13709                           
 13710                           ;ILI9341.c: 284:       SPI1_ExchangeByte(hi);
 13711  16F8  0020               	movlb	0	; select bank0
 13712  16F9  0838               	movf	fillRect@hi,w
 13713  16FA  319F  27D5  3196   	fcall	_SPI1_ExchangeByte
 13714                           
 13715                           ;ILI9341.c: 285:       SPI1_ExchangeByte(lo);
 13716  16FD  0020               	movlb	0	; select bank0
 13717  16FE  0839               	movf	fillRect@lo,w
 13718  16FF  319F  27D5  3196   	fcall	_SPI1_ExchangeByte
 13719  1702                     l5429:
 13720                           
 13721                           ;ILI9341.c: 283:     while (px--) {
 13722  1702  3001               	movlw	1
 13723  1703  0020               	movlb	0	; select bank0
 13724  1704  00B0               	movwf	??_fillRect
 13725  1705  3000               	movlw	0
 13726  1706  00B1               	movwf	??_fillRect+1
 13727  1707  3000               	movlw	0
 13728  1708  00B2               	movwf	??_fillRect+2
 13729  1709  3000               	movlw	0
 13730  170A  00B3               	movwf	??_fillRect+3
 13731  170B  0830               	movf	??_fillRect,w
 13732  170C  02B4               	subwf	fillRect@px,f
 13733  170D  0831               	movf	??_fillRect+1,w
 13734  170E  3BB5               	subwfb	fillRect@px+1,f
 13735  170F  0832               	movf	??_fillRect+2,w
 13736  1710  3BB6               	subwfb	fillRect@px+2,f
 13737  1711  0833               	movf	??_fillRect+3,w
 13738  1712  3BB7               	subwfb	fillRect@px+3,f
 13739  1713  0A34               	incf	fillRect@px,w
 13740  1714  1D03               	skipz
 13741  1715  2F20               	goto	u5361
 13742  1716  0A35               	incf	fillRect@px+1,w
 13743  1717  1D03               	skipz
 13744  1718  2F20               	goto	u5361
 13745  1719  0A36               	incf	fillRect@px+2,w
 13746  171A  1D03               	skipz
 13747  171B  2F20               	goto	u5361
 13748  171C  0A37               	incf	fillRect@px+3,w
 13749  171D  1D03               	btfss	3,2
 13750  171E  2F20               	goto	u5361
 13751  171F  2F21               	goto	u5360
 13752  1720                     u5361:
 13753  1720  2EF8               	goto	l5427
 13754  1721                     u5360:
 13755  1721                     l5431:
 13756                           
 13757                           ;ILI9341.c: 287:     endWrite();
 13758  1721  319F  2768  3196   	fcall	_endWrite
 13759  1724                     l952:
 13760  1724  0008               	return
 13761  1725                     __end_of_fillRect:
 13762                           
 13763                           	psect	text28
 13764  119B                     __ptext28:	
 13765 ;; *************** function ___lmul *****************
 13766 ;; Defined at:
 13767 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  multiplier      4    1[COMMON] unsigned long 
 13770 ;;  multiplicand    4    5[COMMON] unsigned long 
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;  product         4    0[BANK0 ] unsigned long 
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  4    1[COMMON] unsigned long 
 13775 ;; Registers used:
 13776 ;;		wreg, status,2, status,0
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13782 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;Total ram usage:       12 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:    4
 13789 ;; This function calls:
 13790 ;;		Nothing
 13791 ;; This function is called by:
 13792 ;;		_fillRect
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796                           
 13797                           ;psect for function ___lmul
 13798  119B                     ___lmul:
 13799  119B                     l5307:	
 13800                           ;incstack = 0
 13801                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13802                           
 13803  119B  3000               	movlw	0
 13804  119C  0020               	movlb	0	; select bank0
 13805  119D  00A3               	movwf	___lmul@product+3
 13806  119E  3000               	movlw	0
 13807  119F  00A2               	movwf	___lmul@product+2
 13808  11A0  3000               	movlw	0
 13809  11A1  00A1               	movwf	___lmul@product+1
 13810  11A2  3000               	movlw	0
 13811  11A3  00A0               	movwf	___lmul@product
 13812  11A4                     l5309:
 13813  11A4  1C71               	btfss	___lmul@multiplier,0
 13814  11A5  29A7               	goto	u5051
 13815  11A6  29A8               	goto	u5050
 13816  11A7                     u5051:
 13817  11A7  29B1               	goto	l5313
 13818  11A8                     u5050:
 13819  11A8                     l5311:
 13820  11A8  0875               	movf	___lmul@multiplicand,w
 13821  11A9  0020               	movlb	0	; select bank0
 13822  11AA  07A0               	addwf	___lmul@product,f
 13823  11AB  0876               	movf	___lmul@multiplicand+1,w
 13824  11AC  3DA1               	addwfc	___lmul@product+1,f
 13825  11AD  0877               	movf	___lmul@multiplicand+2,w
 13826  11AE  3DA2               	addwfc	___lmul@product+2,f
 13827  11AF  0878               	movf	___lmul@multiplicand+3,w
 13828  11B0  3DA3               	addwfc	___lmul@product+3,f
 13829  11B1                     l5313:
 13830  11B1  3001               	movlw	1
 13831  11B2                     u5065:
 13832  11B2  35F5               	lslf	___lmul@multiplicand,f
 13833  11B3  0DF6               	rlf	___lmul@multiplicand+1,f
 13834  11B4  0DF7               	rlf	___lmul@multiplicand+2,f
 13835  11B5  0DF8               	rlf	___lmul@multiplicand+3,f
 13836  11B6  0B89               	decfsz	9,f
 13837  11B7  29B2               	goto	u5065
 13838  11B8                     l5315:
 13839  11B8  3001               	movlw	1
 13840  11B9                     u5075:
 13841  11B9  36F4               	lsrf	___lmul@multiplier+3,f
 13842  11BA  0CF3               	rrf	___lmul@multiplier+2,f
 13843  11BB  0CF2               	rrf	___lmul@multiplier+1,f
 13844  11BC  0CF1               	rrf	___lmul@multiplier,f
 13845  11BD  0B89               	decfsz	9,f
 13846  11BE  29B9               	goto	u5075
 13847  11BF  0874               	movf	___lmul@multiplier+3,w
 13848  11C0  0473               	iorwf	___lmul@multiplier+2,w
 13849  11C1  0472               	iorwf	___lmul@multiplier+1,w
 13850  11C2  0471               	iorwf	___lmul@multiplier,w
 13851  11C3  1D03               	skipz
 13852  11C4  29C6               	goto	u5081
 13853  11C5  29C7               	goto	u5080
 13854  11C6                     u5081:
 13855  11C6  29A4               	goto	l5309
 13856  11C7                     u5080:
 13857  11C7                     l5317:
 13858  11C7  0020               	movlb	0	; select bank0
 13859  11C8  0823               	movf	___lmul@product+3,w
 13860  11C9  00F4               	movwf	?___lmul+3
 13861  11CA  0822               	movf	___lmul@product+2,w
 13862  11CB  00F3               	movwf	?___lmul+2
 13863  11CC  0821               	movf	___lmul@product+1,w
 13864  11CD  00F2               	movwf	?___lmul+1
 13865  11CE  0820               	movf	___lmul@product,w
 13866  11CF  00F1               	movwf	?___lmul
 13867  11D0                     l1126:
 13868  11D0  0008               	return
 13869  11D1                     __end_of___lmul:
 13870                           
 13871                           	psect	text29
 13872  14A5                     __ptext29:	
 13873 ;; *************** function _drawVLine *****************
 13874 ;; Defined at:
 13875 ;;		line 246 in file "ILI9341.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  x               2    6[BANK0 ] unsigned short 
 13878 ;;  y               2    8[BANK0 ] unsigned short 
 13879 ;;  h               2   10[BANK0 ] unsigned short 
 13880 ;;  color           2   12[BANK0 ] unsigned short 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;  lo              1   19[BANK0 ] unsigned char 
 13883 ;;  hi              1   18[BANK0 ] unsigned char 
 13884 ;; Return value:  Size  Location     Type
 13885 ;;                  1    wreg      void 
 13886 ;; Registers used:
 13887 ;;		wreg, status,2, status,0, pclath, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13893 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;Total ram usage:       14 bytes
 13898 ;; Hardware stack levels used:    1
 13899 ;; Hardware stack levels required when called:    7
 13900 ;; This function calls:
 13901 ;;		_SPI1_ExchangeByte
 13902 ;;		_endWrite
 13903 ;;		_setAddrWindow
 13904 ;;		_startWrite
 13905 ;; This function is called by:
 13906 ;;		_display_print
 13907 ;;		_display_customChar
 13908 ;;		_testFastLines
 13909 ;;		_display_drawLine
 13910 ;;		_display_fillCircle
 13911 ;;		_display_fillCircleHelper
 13912 ;;		_display_drawRect
 13913 ;;		_display_drawRoundRect
 13914 ;; This function uses a non-reentrant model
 13915 ;;
 13916                           
 13917                           
 13918                           ;psect for function _drawVLine
 13919  14A5                     _drawVLine:
 13920  14A5                     l5379:	
 13921                           ;incstack = 0
 13922                           ; Regs used in _drawVLine: [wreg+status,2+status,0+pclath+cstack]
 13923                           
 13924                           
 13925                           ;ILI9341.c: 247:   if( (x < _width) && (y < _height) && h) {
 13926  14A5  0021               	movlb	1	; select bank1
 13927  14A6  084A               	movf	(__width+1)^(0+128),w
 13928  14A7  0020               	movlb	0	; select bank0
 13929  14A8  0227               	subwf	drawVLine@x+1,w
 13930  14A9  1D03               	skipz
 13931  14AA  2CAF               	goto	u5255
 13932  14AB  0021               	movlb	1	; select bank1
 13933  14AC  0849               	movf	__width^(0+128),w
 13934  14AD  0020               	movlb	0	; select bank0
 13935  14AE  0226               	subwf	drawVLine@x,w
 13936  14AF                     u5255:
 13937  14AF  1803               	skipnc
 13938  14B0  2CB2               	goto	u5251
 13939  14B1  2CB3               	goto	u5250
 13940  14B2                     u5251:
 13941  14B2  2D24               	goto	l945
 13942  14B3                     u5250:
 13943  14B3                     l5381:
 13944  14B3  0021               	movlb	1	; select bank1
 13945  14B4  0848               	movf	(__height+1)^(0+128),w
 13946  14B5  0020               	movlb	0	; select bank0
 13947  14B6  0229               	subwf	drawVLine@y+1,w
 13948  14B7  1D03               	skipz
 13949  14B8  2CBD               	goto	u5265
 13950  14B9  0021               	movlb	1	; select bank1
 13951  14BA  0847               	movf	__height^(0+128),w
 13952  14BB  0020               	movlb	0	; select bank0
 13953  14BC  0228               	subwf	drawVLine@y,w
 13954  14BD                     u5265:
 13955  14BD  1803               	skipnc
 13956  14BE  2CC0               	goto	u5261
 13957  14BF  2CC1               	goto	u5260
 13958  14C0                     u5261:
 13959  14C0  2D24               	goto	l945
 13960  14C1                     u5260:
 13961  14C1                     l5383:
 13962  14C1  082A               	movf	drawVLine@h,w
 13963  14C2  042B               	iorwf	drawVLine@h+1,w
 13964  14C3  1903               	btfsc	3,2
 13965  14C4  2CC6               	goto	u5271
 13966  14C5  2CC7               	goto	u5270
 13967  14C6                     u5271:
 13968  14C6  2D24               	goto	l945
 13969  14C7                     u5270:
 13970  14C7                     l5385:
 13971                           
 13972                           ;ILI9341.c: 248:     uint8_t hi = color >> 8, lo = color;
 13973  14C7  082D               	movf	drawVLine@color+1,w
 13974  14C8  00AE               	movwf	??_drawVLine
 13975  14C9  082E               	movf	??_drawVLine,w
 13976  14CA  00B2               	movwf	drawVLine@hi
 13977  14CB                     l5387:
 13978  14CB  082C               	movf	drawVLine@color,w
 13979  14CC  00AE               	movwf	??_drawVLine
 13980  14CD  082E               	movf	??_drawVLine,w
 13981  14CE  00B3               	movwf	drawVLine@lo
 13982  14CF                     l5389:
 13983                           
 13984                           ;ILI9341.c: 249:     if((y + h - 1) >= _height)
 13985  14CF  082A               	movf	drawVLine@h,w
 13986  14D0  0728               	addwf	drawVLine@y,w
 13987  14D1  00AE               	movwf	??_drawVLine
 13988  14D2  082B               	movf	drawVLine@h+1,w
 13989  14D3  3D29               	addwfc	drawVLine@y+1,w
 13990  14D4  00AF               	movwf	??_drawVLine+1
 13991  14D5  082E               	movf	??_drawVLine,w
 13992  14D6  3EFF               	addlw	255
 13993  14D7  00B0               	movwf	??_drawVLine+2
 13994  14D8  30FF               	movlw	255
 13995  14D9  3D2F               	addwfc	??_drawVLine+1,w
 13996  14DA  00B1               	movwf	??_drawVLine+3
 13997  14DB  0021               	movlb	1	; select bank1
 13998  14DC  0848               	movf	(__height+1)^(0+128),w
 13999  14DD  0020               	movlb	0	; select bank0
 14000  14DE  0231               	subwf	??_drawVLine+3,w
 14001  14DF  1D03               	skipz
 14002  14E0  2CE5               	goto	u5285
 14003  14E1  0021               	movlb	1	; select bank1
 14004  14E2  0847               	movf	__height^(0+128),w
 14005  14E3  0020               	movlb	0	; select bank0
 14006  14E4  0230               	subwf	??_drawVLine+2,w
 14007  14E5                     u5285:
 14008  14E5  1C03               	skipc
 14009  14E6  2CE8               	goto	u5281
 14010  14E7  2CE9               	goto	u5280
 14011  14E8                     u5281:
 14012  14E8  2CF3               	goto	l5393
 14013  14E9                     u5280:
 14014  14E9                     l5391:
 14015                           
 14016                           ;ILI9341.c: 250:       h = _height - y;
 14017  14E9  0828               	movf	drawVLine@y,w
 14018  14EA  0021               	movlb	1	; select bank1
 14019  14EB  0247               	subwf	__height^(0+128),w
 14020  14EC  0020               	movlb	0	; select bank0
 14021  14ED  00AA               	movwf	drawVLine@h
 14022  14EE  0829               	movf	drawVLine@y+1,w
 14023  14EF  0021               	movlb	1	; select bank1
 14024  14F0  3B48               	subwfb	(__height+1)^(0+128),w
 14025  14F1  0020               	movlb	0	; select bank0
 14026  14F2  00AB               	movwf	drawVLine@h+1
 14027  14F3                     l5393:
 14028                           
 14029                           ;ILI9341.c: 251:     startWrite();
 14030  14F3  319F  2761  3194   	fcall	_startWrite
 14031  14F6                     l5395:
 14032                           
 14033                           ;ILI9341.c: 252:     setAddrWindow(x, y, 1, h);
 14034  14F6  0020               	movlb	0	; select bank0
 14035  14F7  0827               	movf	drawVLine@x+1,w
 14036  14F8  00F4               	movwf	setAddrWindow@x1+1
 14037  14F9  0826               	movf	drawVLine@x,w
 14038  14FA  00F3               	movwf	setAddrWindow@x1
 14039  14FB  0829               	movf	drawVLine@y+1,w
 14040  14FC  00F6               	movwf	setAddrWindow@y1+1
 14041  14FD  0828               	movf	drawVLine@y,w
 14042  14FE  00F5               	movwf	setAddrWindow@y1
 14043  14FF  3001               	movlw	1
 14044  1500  00F7               	movwf	setAddrWindow@w
 14045  1501  3000               	movlw	0
 14046  1502  00F8               	movwf	setAddrWindow@w+1
 14047  1503  082B               	movf	drawVLine@h+1,w
 14048  1504  00FA               	movwf	setAddrWindow@h+1
 14049  1505  082A               	movf	drawVLine@h,w
 14050  1506  00F9               	movwf	setAddrWindow@h
 14051  1507  3192  2212  3194   	fcall	_setAddrWindow
 14052                           
 14053                           ;ILI9341.c: 253:     while (h--) {
 14054  150A  2D14               	goto	l5399
 14055  150B                     l5397:
 14056                           
 14057                           ;ILI9341.c: 254:       SPI1_ExchangeByte(hi);
 14058  150B  0832               	movf	drawVLine@hi,w
 14059  150C  319F  27D5  3194   	fcall	_SPI1_ExchangeByte
 14060                           
 14061                           ;ILI9341.c: 255:       SPI1_ExchangeByte(lo);
 14062  150F  0020               	movlb	0	; select bank0
 14063  1510  0833               	movf	drawVLine@lo,w
 14064  1511  319F  27D5  3194   	fcall	_SPI1_ExchangeByte
 14065  1514                     l5399:
 14066                           
 14067                           ;ILI9341.c: 253:     while (h--) {
 14068  1514  3001               	movlw	1
 14069  1515  0020               	movlb	0	; select bank0
 14070  1516  02AA               	subwf	drawVLine@h,f
 14071  1517  3000               	movlw	0
 14072  1518  3BAB               	subwfb	drawVLine@h+1,f
 14073  1519  0A2A               	incf	drawVLine@h,w
 14074  151A  1D03               	skipz
 14075  151B  2D20               	goto	u5291
 14076  151C  0A2B               	incf	drawVLine@h+1,w
 14077  151D  1D03               	btfss	3,2
 14078  151E  2D20               	goto	u5291
 14079  151F  2D21               	goto	u5290
 14080  1520                     u5291:
 14081  1520  2D0B               	goto	l5397
 14082  1521                     u5290:
 14083  1521                     l5401:
 14084                           
 14085                           ;ILI9341.c: 257:     endWrite();
 14086  1521  319F  2768  3194   	fcall	_endWrite
 14087  1524                     l945:
 14088  1524  0008               	return
 14089  1525                     __end_of_drawVLine:
 14090                           
 14091                           	psect	text30
 14092  11D1                     __ptext30:	
 14093 ;; *************** function _drawPixel *****************
 14094 ;; Defined at:
 14095 ;;		line 202 in file "ILI9341.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  x               2    6[BANK0 ] unsigned short 
 14098 ;;  y               2    8[BANK0 ] unsigned short 
 14099 ;;  color           2   10[BANK0 ] unsigned short 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:        6 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    7
 14118 ;; This function calls:
 14119 ;;		_SPI1_ExchangeByte
 14120 ;;		_endWrite
 14121 ;;		_setAddrWindow
 14122 ;;		_startWrite
 14123 ;; This function is called by:
 14124 ;;		_display_print
 14125 ;;		_display_customChar
 14126 ;;		_writeLine
 14127 ;;		_display_drawCircle
 14128 ;;		_display_drawCircleHelper
 14129 ;;		_display_drawBitmapV1
 14130 ;;		_display_drawBitmapV1_bg
 14131 ;;		_display_drawBitmapV2
 14132 ;;		_display_drawBitmapV2_bg
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           
 14137                           ;psect for function _drawPixel
 14138  11D1                     _drawPixel:
 14139  11D1                     l5433:	
 14140                           ;incstack = 0
 14141                           ; Regs used in _drawPixel: [wreg+status,2+status,0+pclath+cstack]
 14142                           
 14143                           
 14144                           ;ILI9341.c: 203:   if((x < _width) && (y < _height)) {
 14145  11D1  0021               	movlb	1	; select bank1
 14146  11D2  084A               	movf	(__width+1)^(0+128),w
 14147  11D3  0020               	movlb	0	; select bank0
 14148  11D4  0227               	subwf	drawPixel@x+1,w
 14149  11D5  1D03               	skipz
 14150  11D6  29DB               	goto	u5375
 14151  11D7  0021               	movlb	1	; select bank1
 14152  11D8  0849               	movf	__width^(0+128),w
 14153  11D9  0020               	movlb	0	; select bank0
 14154  11DA  0226               	subwf	drawPixel@x,w
 14155  11DB                     u5375:
 14156  11DB  1803               	skipnc
 14157  11DC  29DE               	goto	u5371
 14158  11DD  29DF               	goto	u5370
 14159  11DE                     u5371:
 14160  11DE  2A11               	goto	l929
 14161  11DF                     u5370:
 14162  11DF                     l5435:
 14163  11DF  0021               	movlb	1	; select bank1
 14164  11E0  0848               	movf	(__height+1)^(0+128),w
 14165  11E1  0020               	movlb	0	; select bank0
 14166  11E2  0229               	subwf	drawPixel@y+1,w
 14167  11E3  1D03               	skipz
 14168  11E4  29E9               	goto	u5385
 14169  11E5  0021               	movlb	1	; select bank1
 14170  11E6  0847               	movf	__height^(0+128),w
 14171  11E7  0020               	movlb	0	; select bank0
 14172  11E8  0228               	subwf	drawPixel@y,w
 14173  11E9                     u5385:
 14174  11E9  1803               	skipnc
 14175  11EA  29EC               	goto	u5381
 14176  11EB  29ED               	goto	u5380
 14177  11EC                     u5381:
 14178  11EC  2A11               	goto	l929
 14179  11ED                     u5380:
 14180  11ED                     l5437:
 14181                           
 14182                           ;ILI9341.c: 204:     startWrite();
 14183  11ED  319F  2761  3191   	fcall	_startWrite
 14184  11F0                     l5439:
 14185                           
 14186                           ;ILI9341.c: 205:     setAddrWindow(x, y, 1, 1);
 14187  11F0  0020               	movlb	0	; select bank0
 14188  11F1  0827               	movf	drawPixel@x+1,w
 14189  11F2  00F4               	movwf	setAddrWindow@x1+1
 14190  11F3  0826               	movf	drawPixel@x,w
 14191  11F4  00F3               	movwf	setAddrWindow@x1
 14192  11F5  0829               	movf	drawPixel@y+1,w
 14193  11F6  00F6               	movwf	setAddrWindow@y1+1
 14194  11F7  0828               	movf	drawPixel@y,w
 14195  11F8  00F5               	movwf	setAddrWindow@y1
 14196  11F9  3001               	movlw	1
 14197  11FA  00F7               	movwf	setAddrWindow@w
 14198  11FB  3000               	movlw	0
 14199  11FC  00F8               	movwf	setAddrWindow@w+1
 14200  11FD  3001               	movlw	1
 14201  11FE  00F9               	movwf	setAddrWindow@h
 14202  11FF  3000               	movlw	0
 14203  1200  00FA               	movwf	setAddrWindow@h+1
 14204  1201  3192  2212  3191   	fcall	_setAddrWindow
 14205  1204                     l5441:
 14206                           
 14207                           ;ILI9341.c: 206:     SPI1_ExchangeByte(color >> 8);
 14208  1204  0020               	movlb	0	; select bank0
 14209  1205  082B               	movf	drawPixel@color+1,w
 14210  1206  319F  27D5  3191   	fcall	_SPI1_ExchangeByte
 14211  1209                     l5443:
 14212                           
 14213                           ;ILI9341.c: 207:     SPI1_ExchangeByte(color & 0xFF);
 14214  1209  0020               	movlb	0	; select bank0
 14215  120A  082A               	movf	drawPixel@color,w
 14216  120B  319F  27D5  3191   	fcall	_SPI1_ExchangeByte
 14217  120E                     l5445:
 14218                           
 14219                           ;ILI9341.c: 208:     endWrite();
 14220  120E  319F  2768  3191   	fcall	_endWrite
 14221  1211                     l929:
 14222  1211  0008               	return
 14223  1212                     __end_of_drawPixel:
 14224                           
 14225                           	psect	text31
 14226  1F61                     __ptext31:	
 14227 ;; *************** function _startWrite *****************
 14228 ;; Defined at:
 14229 ;;		line 54 in file "ILI9341.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;		None
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;		None
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  1    wreg      void 
 14236 ;; Registers used:
 14237 ;;		None
 14238 ;; Tracked objects:
 14239 ;;		On entry : 0/0
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14247 ;;Total ram usage:        0 bytes
 14248 ;; Hardware stack levels used:    1
 14249 ;; Hardware stack levels required when called:    4
 14250 ;; This function calls:
 14251 ;;		Nothing
 14252 ;; This function is called by:
 14253 ;;		_tft_begin
 14254 ;;		_setRotation
 14255 ;;		_drawPixel
 14256 ;;		_drawVLine
 14257 ;;		_fillRect
 14258 ;;		_drawHLine
 14259 ;; This function uses a non-reentrant model
 14260 ;;
 14261                           
 14262                           
 14263                           ;psect for function _startWrite
 14264  1F61                     _startWrite:
 14265  1F61                     l885:	
 14266                           ;incstack = 0
 14267                           ; Regs used in _startWrite: []
 14268                           ;ILI9341.c: 56:     do { LATCbits.LATC0 = 0; } while(0);
 14269                           
 14270  1F61  0020               	movlb	0	; select bank0
 14271  1F62  1018               	bcf	24,0	;volatile
 14272  1F63                     l887:
 14273  1F63  0008               	return
 14274  1F64                     __end_of_startWrite:
 14275                           
 14276                           	psect	text32
 14277  1212                     __ptext32:	
 14278 ;; *************** function _setAddrWindow *****************
 14279 ;; Defined at:
 14280 ;;		line 149 in file "ILI9341.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  x1              2    3[COMMON] unsigned short 
 14283 ;;  y1              2    5[COMMON] unsigned short 
 14284 ;;  w               2    7[COMMON] unsigned short 
 14285 ;;  h               2    9[COMMON] unsigned short 
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  y2              2    4[BANK0 ] unsigned short 
 14288 ;;  x2              2    2[BANK0 ] unsigned short 
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  1    wreg      void 
 14291 ;; Registers used:
 14292 ;;		wreg, status,2, status,0, pclath, cstack
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14299 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14301 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;Total ram usage:       14 bytes
 14303 ;; Hardware stack levels used:    1
 14304 ;; Hardware stack levels required when called:    6
 14305 ;; This function calls:
 14306 ;;		_SPI1_ExchangeByte
 14307 ;;		_writeCommand
 14308 ;; This function is called by:
 14309 ;;		_drawPixel
 14310 ;;		_drawVLine
 14311 ;;		_fillRect
 14312 ;;		_drawHLine
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           
 14317                           ;psect for function _setAddrWindow
 14318  1212                     _setAddrWindow:
 14319  1212                     l5283:	
 14320                           ;incstack = 0
 14321                           ; Regs used in _setAddrWindow: [wreg+status,2+status,0+pclath+cstack]
 14322                           
 14323                           
 14324                           ;ILI9341.c: 150:     uint16_t x2 = (x1 + w - 1),
 14325  1212  0877               	movf	setAddrWindow@w,w
 14326  1213  0773               	addwf	setAddrWindow@x1,w
 14327  1214  0020               	movlb	0	; select bank0
 14328  1215  00A0               	movwf	??_setAddrWindow
 14329  1216  0878               	movf	setAddrWindow@w+1,w
 14330  1217  3D74               	addwfc	setAddrWindow@x1+1,w
 14331  1218  00A1               	movwf	??_setAddrWindow+1
 14332  1219  0820               	movf	??_setAddrWindow,w
 14333  121A  3EFF               	addlw	255
 14334  121B  00A2               	movwf	setAddrWindow@x2
 14335  121C  30FF               	movlw	255
 14336  121D  3D21               	addwfc	??_setAddrWindow+1,w
 14337  121E  00A3               	movwf	setAddrWindow@x2+1
 14338                           
 14339                           ;ILI9341.c: 151:              y2 = (y1 + h - 1);
 14340  121F  0879               	movf	setAddrWindow@h,w
 14341  1220  0775               	addwf	setAddrWindow@y1,w
 14342  1221  00A0               	movwf	??_setAddrWindow
 14343  1222  087A               	movf	setAddrWindow@h+1,w
 14344  1223  3D76               	addwfc	setAddrWindow@y1+1,w
 14345  1224  00A1               	movwf	??_setAddrWindow+1
 14346  1225  0820               	movf	??_setAddrWindow,w
 14347  1226  3EFF               	addlw	255
 14348  1227  00A4               	movwf	setAddrWindow@y2
 14349  1228  30FF               	movlw	255
 14350  1229  3D21               	addwfc	??_setAddrWindow+1,w
 14351  122A  00A5               	movwf	setAddrWindow@y2+1
 14352  122B                     l5285:
 14353                           
 14354                           ;ILI9341.c: 152:     writeCommand(0x2A);
 14355  122B  302A               	movlw	42
 14356  122C  319F  27A0  3192   	fcall	_writeCommand
 14357  122F                     l5287:
 14358                           
 14359                           ;ILI9341.c: 153:     SPI1_ExchangeByte(x1 >> 8);
 14360  122F  0874               	movf	setAddrWindow@x1+1,w
 14361  1230  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14362  1233                     l5289:
 14363                           
 14364                           ;ILI9341.c: 154:     SPI1_ExchangeByte(x1);
 14365  1233  0873               	movf	setAddrWindow@x1,w
 14366  1234  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14367  1237                     l5291:
 14368                           
 14369                           ;ILI9341.c: 155:     SPI1_ExchangeByte(x2 >> 8);
 14370  1237  0020               	movlb	0	; select bank0
 14371  1238  0823               	movf	setAddrWindow@x2+1,w
 14372  1239  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14373  123C                     l5293:
 14374                           
 14375                           ;ILI9341.c: 156:     SPI1_ExchangeByte(x2);
 14376  123C  0020               	movlb	0	; select bank0
 14377  123D  0822               	movf	setAddrWindow@x2,w
 14378  123E  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14379  1241                     l5295:
 14380                           
 14381                           ;ILI9341.c: 157:     writeCommand(0x2B);
 14382  1241  302B               	movlw	43
 14383  1242  319F  27A0  3192   	fcall	_writeCommand
 14384  1245                     l5297:
 14385                           
 14386                           ;ILI9341.c: 158:     SPI1_ExchangeByte(y1 >> 8);
 14387  1245  0876               	movf	setAddrWindow@y1+1,w
 14388  1246  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14389  1249                     l5299:
 14390                           
 14391                           ;ILI9341.c: 159:     SPI1_ExchangeByte(y1);
 14392  1249  0875               	movf	setAddrWindow@y1,w
 14393  124A  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14394  124D                     l5301:
 14395                           
 14396                           ;ILI9341.c: 160:     SPI1_ExchangeByte(y2 >> 8);
 14397  124D  0020               	movlb	0	; select bank0
 14398  124E  0825               	movf	setAddrWindow@y2+1,w
 14399  124F  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14400  1252                     l5303:
 14401                           
 14402                           ;ILI9341.c: 161:     SPI1_ExchangeByte(y2);
 14403  1252  0020               	movlb	0	; select bank0
 14404  1253  0824               	movf	setAddrWindow@y2,w
 14405  1254  319F  27D5  3192   	fcall	_SPI1_ExchangeByte
 14406  1257                     l5305:
 14407                           
 14408                           ;ILI9341.c: 162:     writeCommand(0x2C);
 14409  1257  302C               	movlw	44
 14410  1258  319F  27A0  3192   	fcall	_writeCommand
 14411  125B                     l916:
 14412  125B  0008               	return
 14413  125C                     __end_of_setAddrWindow:
 14414                           
 14415                           	psect	text33
 14416  1FA0                     __ptext33:	
 14417 ;; *************** function _writeCommand *****************
 14418 ;; Defined at:
 14419 ;;		line 81 in file "ILI9341.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  cmd             1    wreg     unsigned char 
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;  cmd             1    2[COMMON] unsigned char 
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  1    wreg      void 
 14426 ;; Registers used:
 14427 ;;		wreg, status,2, status,0, pclath, cstack
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14437 ;;Total ram usage:        1 bytes
 14438 ;; Hardware stack levels used:    1
 14439 ;; Hardware stack levels required when called:    5
 14440 ;; This function calls:
 14441 ;;		_SPI1_ExchangeByte
 14442 ;; This function is called by:
 14443 ;;		_tft_begin
 14444 ;;		_setAddrWindow
 14445 ;;		_setRotation
 14446 ;; This function uses a non-reentrant model
 14447 ;;
 14448                           
 14449                           
 14450                           ;psect for function _writeCommand
 14451  1FA0                     _writeCommand:
 14452                           
 14453                           ;incstack = 0
 14454                           ; Regs used in _writeCommand: [wreg+status,2+status,0+pclath+cstack]
 14455                           ;writeCommand@cmd stored from wreg
 14456  1FA0  00F2               	movwf	writeCommand@cmd
 14457  1FA1                     l5253:
 14458                           
 14459                           ;ILI9341.c: 82:   PORTAbits.RA0=0;
 14460  1FA1  0020               	movlb	0	; select bank0
 14461  1FA2  100C               	bcf	12,0	;volatile
 14462  1FA3                     l5255:
 14463                           
 14464                           ;ILI9341.c: 83:   SPI1_ExchangeByte(cmd);
 14465  1FA3  0872               	movf	writeCommand@cmd,w
 14466  1FA4  319F  27D5  319F   	fcall	_SPI1_ExchangeByte
 14467  1FA7                     l5257:
 14468                           
 14469                           ;ILI9341.c: 84:   PORTAbits.RA0=1;
 14470  1FA7  0020               	movlb	0	; select bank0
 14471  1FA8  140C               	bsf	12,0	;volatile
 14472  1FA9                     l895:
 14473  1FA9  0008               	return
 14474  1FAA                     __end_of_writeCommand:
 14475                           
 14476                           	psect	text34
 14477  1FD5                     __ptext34:	
 14478 ;; *************** function _SPI1_ExchangeByte *****************
 14479 ;; Defined at:
 14480 ;;		line 97 in file "mcc_generated_files/spi1.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  data            1    wreg     unsigned char 
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;  data            1    1[COMMON] unsigned char 
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      unsigned char 
 14487 ;; Registers used:
 14488 ;;		wreg
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;Total ram usage:        1 bytes
 14499 ;; Hardware stack levels used:    1
 14500 ;; Hardware stack levels required when called:    4
 14501 ;; This function calls:
 14502 ;;		Nothing
 14503 ;; This function is called by:
 14504 ;;		_writeCommand
 14505 ;;		_tft_begin
 14506 ;;		_setAddrWindow
 14507 ;;		_setRotation
 14508 ;;		_drawPixel
 14509 ;;		_drawVLine
 14510 ;;		_fillRect
 14511 ;;		_SPI1_WriteBlock
 14512 ;;		_SPI1_ReadBlock
 14513 ;;		_drawHLine
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           
 14518                           ;psect for function _SPI1_ExchangeByte
 14519  1FD5                     _SPI1_ExchangeByte:
 14520                           
 14521                           ;incstack = 0
 14522                           ; Regs used in _SPI1_ExchangeByte: [wreg]
 14523                           ;SPI1_ExchangeByte@data stored from wreg
 14524  1FD5  00F1               	movwf	SPI1_ExchangeByte@data
 14525  1FD6                     l5239:
 14526                           
 14527                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
 14528  1FD6  0871               	movf	SPI1_ExchangeByte@data,w
 14529  1FD7  0023               	movlb	3	; select bank3
 14530  1FD8  008C               	movwf	12	;volatile
 14531  1FD9                     l258:	
 14532                           ;mcc_generated_files/spi1.c: 100:     while(!PIR3bits.SSP1IF);
 14533                           
 14534  1FD9  002E               	movlb	14	; select bank14
 14535  1FDA  1C0F               	btfss	15,0	;volatile
 14536  1FDB  2FDD               	goto	u4991
 14537  1FDC  2FDE               	goto	u4990
 14538  1FDD                     u4991:
 14539  1FDD  2FD9               	goto	l258
 14540  1FDE                     u4990:
 14541  1FDE                     l260:
 14542                           
 14543                           ;mcc_generated_files/spi1.c: 101:     PIR3bits.SSP1IF = 0;
 14544  1FDE  100F               	bcf	15,0	;volatile
 14545  1FDF                     l5241:
 14546                           
 14547                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
 14548  1FDF  0023               	movlb	3	; select bank3
 14549  1FE0  080C               	movf	12,w	;volatile
 14550  1FE1                     l261:
 14551  1FE1  0008               	return
 14552  1FE2                     __end_of_SPI1_ExchangeByte:
 14553                           
 14554                           	psect	text35
 14555  1F68                     __ptext35:	
 14556 ;; *************** function _endWrite *****************
 14557 ;; Defined at:
 14558 ;;		line 66 in file "ILI9341.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		None
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;Total ram usage:        0 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    4
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_tft_begin
 14583 ;;		_setRotation
 14584 ;;		_drawPixel
 14585 ;;		_drawVLine
 14586 ;;		_fillRect
 14587 ;;		_drawHLine
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           
 14592                           ;psect for function _endWrite
 14593  1F68                     _endWrite:
 14594  1F68                     l5281:	
 14595                           ;incstack = 0
 14596                           ; Regs used in _endWrite: []
 14597                           
 14598                           
 14599                           ;ILI9341.c: 67:     PORTAbits.RA0=1;
 14600  1F68  0020               	movlb	0	; select bank0
 14601  1F69  140C               	bsf	12,0	;volatile
 14602  1F6A                     l890:	
 14603                           ;ILI9341.c: 68:     do { LATCbits.LATC0 = 1; } while(0);
 14604                           
 14605  1F6A  1418               	bsf	24,0	;volatile
 14606  1F6B                     l892:
 14607  1F6B  0008               	return
 14608  1F6C                     __end_of_endWrite:
 14609                           
 14610                           	psect	text36
 14611  10BA                     __ptext36:	
 14612 ;; *************** function ___wmul *****************
 14613 ;; Defined at:
 14614 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;  multiplier      2    1[COMMON] unsigned int 
 14617 ;;  multiplicand    2    3[COMMON] unsigned int 
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;  product         2    5[COMMON] unsigned int 
 14620 ;; Return value:  Size  Location     Type
 14621 ;;                  2    1[COMMON] unsigned int 
 14622 ;; Registers used:
 14623 ;;		wreg, status,2, status,0
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;Total ram usage:        6 bytes
 14634 ;; Hardware stack levels used:    1
 14635 ;; Hardware stack levels required when called:    4
 14636 ;; This function calls:
 14637 ;;		Nothing
 14638 ;; This function is called by:
 14639 ;;		_display_print
 14640 ;;		_display_customChar
 14641 ;;		_display_fillTriangle
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           
 14646                           ;psect for function ___wmul
 14647  10BA                     ___wmul:
 14648  10BA                     l5447:	
 14649                           ;incstack = 0
 14650                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14651                           
 14652  10BA  01F5               	clrf	___wmul@product
 14653  10BB  01F6               	clrf	___wmul@product+1
 14654  10BC                     l5449:
 14655  10BC  1C71               	btfss	___wmul@multiplier,0
 14656  10BD  28BF               	goto	u5391
 14657  10BE  28C0               	goto	u5390
 14658  10BF                     u5391:
 14659  10BF  28C4               	goto	l1112
 14660  10C0                     u5390:
 14661  10C0                     l5451:
 14662  10C0  0873               	movf	___wmul@multiplicand,w
 14663  10C1  07F5               	addwf	___wmul@product,f
 14664  10C2  0874               	movf	___wmul@multiplicand+1,w
 14665  10C3  3DF6               	addwfc	___wmul@product+1,f
 14666  10C4                     l1112:
 14667  10C4  3001               	movlw	1
 14668  10C5                     u5405:
 14669  10C5  35F3               	lslf	___wmul@multiplicand,f
 14670  10C6  0DF4               	rlf	___wmul@multiplicand+1,f
 14671  10C7  0B89               	decfsz	9,f
 14672  10C8  28C5               	goto	u5405
 14673  10C9                     l5453:
 14674  10C9  3001               	movlw	1
 14675  10CA                     u5415:
 14676  10CA  36F2               	lsrf	___wmul@multiplier+1,f
 14677  10CB  0CF1               	rrf	___wmul@multiplier,f
 14678  10CC  0B89               	decfsz	9,f
 14679  10CD  28CA               	goto	u5415
 14680  10CE                     l5455:
 14681  10CE  0871               	movf	___wmul@multiplier,w
 14682  10CF  0472               	iorwf	___wmul@multiplier+1,w
 14683  10D0  1D03               	btfss	3,2
 14684  10D1  28D3               	goto	u5421
 14685  10D2  28D4               	goto	u5420
 14686  10D3                     u5421:
 14687  10D3  28BC               	goto	l5449
 14688  10D4                     u5420:
 14689  10D4                     l5457:
 14690  10D4  0876               	movf	___wmul@product+1,w
 14691  10D5  00F2               	movwf	?___wmul+1
 14692  10D6  0875               	movf	___wmul@product,w
 14693  10D7  00F1               	movwf	?___wmul
 14694  10D8                     l1114:
 14695  10D8  0008               	return
 14696  10D9                     __end_of___wmul:
 14697                           
 14698                           	psect	text37
 14699  1FC8                     __ptext37:	
 14700 ;; *************** function _SYSTEM_Initialize *****************
 14701 ;; Defined at:
 14702 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;		None
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;		None
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      void 
 14709 ;; Registers used:
 14710 ;;		wreg, status,2, status,0, pclath, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14720 ;;Total ram usage:        0 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:    6
 14723 ;; This function calls:
 14724 ;;		_OSCILLATOR_Initialize
 14725 ;;		_PIN_MANAGER_Initialize
 14726 ;;		_PMD_Initialize
 14727 ;;		_SPI1_Initialize
 14728 ;; This function is called by:
 14729 ;;		_main
 14730 ;; This function uses a non-reentrant model
 14731 ;;
 14732                           
 14733                           
 14734                           ;psect for function _SYSTEM_Initialize
 14735  1FC8                     _SYSTEM_Initialize:
 14736  1FC8                     l4189:	
 14737                           ;incstack = 0
 14738                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14739                           
 14740                           
 14741                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 14742  1FC8  319F  278F  319F   	fcall	_PMD_Initialize
 14743  1FCB                     l4191:
 14744                           
 14745                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
 14746  1FCB  3190  2029  319F   	fcall	_SPI1_Initialize
 14747  1FCE                     l4193:
 14748                           
 14749                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14750  1FCE  3194  2434  319F   	fcall	_PIN_MANAGER_Initialize
 14751  1FD1                     l4195:
 14752                           
 14753                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14754  1FD1  319F  2797  319F   	fcall	_OSCILLATOR_Initialize
 14755  1FD4                     l33:
 14756  1FD4  0008               	return
 14757  1FD5                     __end_of_SYSTEM_Initialize:
 14758                           
 14759                           	psect	text38
 14760  1029                     __ptext38:	
 14761 ;; *************** function _SPI1_Initialize *****************
 14762 ;; Defined at:
 14763 ;;		line 62 in file "mcc_generated_files/spi1.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;		None
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg, status,2
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;Total ram usage:        0 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; Hardware stack levels required when called:    4
 14784 ;; This function calls:
 14785 ;;		Nothing
 14786 ;; This function is called by:
 14787 ;;		_SYSTEM_Initialize
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           
 14792                           ;psect for function _SPI1_Initialize
 14793  1029                     _SPI1_Initialize:
 14794  1029                     l3977:	
 14795                           ;incstack = 0
 14796                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 14797                           
 14798                           
 14799                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 19;
 14800  1029  3013               	movlw	19
 14801  102A  003D               	movlb	29	; select bank29
 14802  102B  00C5               	movwf	69	;volatile
 14803                           
 14804                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 20;
 14805  102C  3014               	movlw	20
 14806  102D  00C6               	movwf	70	;volatile
 14807                           
 14808                           ;mcc_generated_files/spi1.c: 67:     RC3PPS = 20;
 14809  102E  3014               	movlw	20
 14810  102F  003E               	movlb	30	; select bank30
 14811  1030  00A3               	movwf	35	;volatile
 14812                           
 14813                           ;mcc_generated_files/spi1.c: 68:     RC6PPS = 21;
 14814  1031  3015               	movlw	21
 14815  1032  00A6               	movwf	38	;volatile
 14816                           
 14817                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0xC0;
 14818  1033  30C0               	movlw	192
 14819  1034  0023               	movlb	3	; select bank3
 14820  1035  008F               	movwf	15	;volatile
 14821  1036                     l3979:
 14822                           
 14823                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
 14824  1036  0190               	clrf	16	;volatile
 14825  1037                     l3981:
 14826                           
 14827                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x4F;
 14828  1037  304F               	movlw	79
 14829  1038  008D               	movwf	13	;volatile
 14830  1039                     l3983:
 14831                           
 14832                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC3 = 0;
 14833  1039  0020               	movlb	0	; select bank0
 14834  103A  1193               	bcf	19,3	;volatile
 14835  103B                     l3985:
 14836                           
 14837                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
 14838  103B  0023               	movlb	3	; select bank3
 14839  103C  1290               	bcf	16,5	;volatile
 14840  103D                     l248:
 14841  103D  0008               	return
 14842  103E                     __end_of_SPI1_Initialize:
 14843                           
 14844                           	psect	text39
 14845  1F8F                     __ptext39:	
 14846 ;; *************** function _PMD_Initialize *****************
 14847 ;; Defined at:
 14848 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;		None
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;		None
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      void 
 14855 ;; Registers used:
 14856 ;;		status,2
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;Total ram usage:        0 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; Hardware stack levels required when called:    4
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_SYSTEM_Initialize
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           
 14877                           ;psect for function _PMD_Initialize
 14878  1F8F                     _PMD_Initialize:
 14879  1F8F                     l3975:	
 14880                           ;incstack = 0
 14881                           ; Regs used in _PMD_Initialize: [status,2]
 14882                           
 14883                           
 14884                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 14885  1F8F  002F               	movlb	15	; select bank15
 14886  1F90  0196               	clrf	22	;volatile
 14887                           
 14888                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 14889  1F91  0197               	clrf	23	;volatile
 14890                           
 14891                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 14892  1F92  0198               	clrf	24	;volatile
 14893                           
 14894                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 14895  1F93  0199               	clrf	25	;volatile
 14896                           
 14897                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 14898  1F94  019A               	clrf	26	;volatile
 14899                           
 14900                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 14901  1F95  019B               	clrf	27	;volatile
 14902  1F96                     l39:
 14903  1F96  0008               	return
 14904  1F97                     __end_of_PMD_Initialize:
 14905                           
 14906                           	psect	text40
 14907  1434                     __ptext40:	
 14908 ;; *************** function _PIN_MANAGER_Initialize *****************
 14909 ;; Defined at:
 14910 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;		None
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;		None
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      void 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0, pclath, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;Total ram usage:        0 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    5
 14931 ;; This function calls:
 14932 ;;		_IOCAF1_SetInterruptHandler
 14933 ;;		_IOCAF2_SetInterruptHandler
 14934 ;;		_IOCBF4_SetInterruptHandler
 14935 ;;		_IOCCF5_SetInterruptHandler
 14936 ;; This function is called by:
 14937 ;;		_SYSTEM_Initialize
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941                           
 14942                           ;psect for function _PIN_MANAGER_Initialize
 14943  1434                     _PIN_MANAGER_Initialize:
 14944  1434                     l3987:	
 14945                           ;incstack = 0
 14946                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14947                           
 14948                           
 14949                           ;mcc_generated_files/pin_manager.c: 65:     LATE = 0x00;
 14950  1434  0020               	movlb	0	; select bank0
 14951  1435  019A               	clrf	26	;volatile
 14952                           
 14953                           ;mcc_generated_files/pin_manager.c: 66:     LATD = 0x00;
 14954  1436  0199               	clrf	25	;volatile
 14955  1437                     l3989:
 14956                           
 14957                           ;mcc_generated_files/pin_manager.c: 67:     LATA = 0x01;
 14958  1437  3001               	movlw	1
 14959  1438  0096               	movwf	22	;volatile
 14960  1439                     l3991:
 14961                           
 14962                           ;mcc_generated_files/pin_manager.c: 68:     LATB = 0x00;
 14963  1439  0197               	clrf	23	;volatile
 14964                           
 14965                           ;mcc_generated_files/pin_manager.c: 69:     LATC = 0x03;
 14966  143A  3003               	movlw	3
 14967  143B  0098               	movwf	24	;volatile
 14968                           
 14969                           ;mcc_generated_files/pin_manager.c: 74:     TRISE = 0x07;
 14970  143C  3007               	movlw	7
 14971  143D  0095               	movwf	21	;volatile
 14972                           
 14973                           ;mcc_generated_files/pin_manager.c: 75:     TRISA = 0xFE;
 14974  143E  30FE               	movlw	254
 14975  143F  0091               	movwf	17	;volatile
 14976                           
 14977                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
 14978  1440  30FF               	movlw	255
 14979  1441  0092               	movwf	18	;volatile
 14980                           
 14981                           ;mcc_generated_files/pin_manager.c: 77:     TRISC = 0xB4;
 14982  1442  30B4               	movlw	180
 14983  1443  0093               	movwf	19	;volatile
 14984                           
 14985                           ;mcc_generated_files/pin_manager.c: 78:     TRISD = 0xFF;
 14986  1444  30FF               	movlw	255
 14987  1445  0094               	movwf	20	;volatile
 14988                           
 14989                           ;mcc_generated_files/pin_manager.c: 83:     ANSELD = 0xFF;
 14990  1446  30FF               	movlw	255
 14991  1447  003E               	movlb	30	; select bank30
 14992  1448  00D9               	movwf	89	;volatile
 14993                           
 14994                           ;mcc_generated_files/pin_manager.c: 84:     ANSELC = 0x84;
 14995  1449  3084               	movlw	132
 14996  144A  00CE               	movwf	78	;volatile
 14997                           
 14998                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xEF;
 14999  144B  30EF               	movlw	239
 15000  144C  00C3               	movwf	67	;volatile
 15001                           
 15002                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0x07;
 15003  144D  3007               	movlw	7
 15004  144E  00E4               	movwf	100	;volatile
 15005                           
 15006                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xF8;
 15007  144F  30F8               	movlw	248
 15008  1450  00B8               	movwf	56	;volatile
 15009  1451                     l3993:
 15010                           
 15011                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 15012  1451  01DA               	clrf	90	;volatile
 15013  1452                     l3995:
 15014                           
 15015                           ;mcc_generated_files/pin_manager.c: 93:     WPUE = 0x00;
 15016  1452  01E5               	clrf	101	;volatile
 15017  1453                     l3997:
 15018                           
 15019                           ;mcc_generated_files/pin_manager.c: 94:     WPUB = 0x00;
 15020  1453  01C4               	clrf	68	;volatile
 15021  1454                     l3999:
 15022                           
 15023                           ;mcc_generated_files/pin_manager.c: 95:     WPUA = 0x00;
 15024  1454  01B9               	clrf	57	;volatile
 15025  1455                     l4001:
 15026                           
 15027                           ;mcc_generated_files/pin_manager.c: 96:     WPUC = 0x00;
 15028  1455  01CF               	clrf	79	;volatile
 15029  1456                     l4003:
 15030                           
 15031                           ;mcc_generated_files/pin_manager.c: 101:     ODCONE = 0x00;
 15032  1456  01E6               	clrf	102	;volatile
 15033  1457                     l4005:
 15034                           
 15035                           ;mcc_generated_files/pin_manager.c: 102:     ODCONA = 0x00;
 15036  1457  01BA               	clrf	58	;volatile
 15037  1458                     l4007:
 15038                           
 15039                           ;mcc_generated_files/pin_manager.c: 103:     ODCONB = 0x00;
 15040  1458  01C5               	clrf	69	;volatile
 15041  1459                     l4009:
 15042                           
 15043                           ;mcc_generated_files/pin_manager.c: 104:     ODCONC = 0x00;
 15044  1459  01D0               	clrf	80	;volatile
 15045  145A                     l4011:
 15046                           
 15047                           ;mcc_generated_files/pin_manager.c: 105:     ODCOND = 0x00;
 15048  145A  01DB               	clrf	91	;volatile
 15049                           
 15050                           ;mcc_generated_files/pin_manager.c: 110:     SLRCONA = 0xFF;
 15051  145B  30FF               	movlw	255
 15052  145C  00BB               	movwf	59	;volatile
 15053                           
 15054                           ;mcc_generated_files/pin_manager.c: 111:     SLRCONB = 0xFF;
 15055  145D  30FF               	movlw	255
 15056  145E  00C6               	movwf	70	;volatile
 15057                           
 15058                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONC = 0xFF;
 15059  145F  30FF               	movlw	255
 15060  1460  00D1               	movwf	81	;volatile
 15061                           
 15062                           ;mcc_generated_files/pin_manager.c: 113:     SLRCOND = 0xFF;
 15063  1461  30FF               	movlw	255
 15064  1462  00DC               	movwf	92	;volatile
 15065                           
 15066                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONE = 0x07;
 15067  1463  3007               	movlw	7
 15068  1464  00E7               	movwf	103	;volatile
 15069                           
 15070                           ;mcc_generated_files/pin_manager.c: 119:     INLVLA = 0xFF;
 15071  1465  30FF               	movlw	255
 15072  1466  00BC               	movwf	60	;volatile
 15073                           
 15074                           ;mcc_generated_files/pin_manager.c: 120:     INLVLB = 0xFF;
 15075  1467  30FF               	movlw	255
 15076  1468  00C7               	movwf	71	;volatile
 15077                           
 15078                           ;mcc_generated_files/pin_manager.c: 121:     INLVLC = 0xFF;
 15079  1469  30FF               	movlw	255
 15080  146A  00D2               	movwf	82	;volatile
 15081                           
 15082                           ;mcc_generated_files/pin_manager.c: 122:     INLVLD = 0xFF;
 15083  146B  30FF               	movlw	255
 15084  146C  00DD               	movwf	93	;volatile
 15085                           
 15086                           ;mcc_generated_files/pin_manager.c: 123:     INLVLE = 0x07;
 15087  146D  3007               	movlw	7
 15088  146E  00E8               	movwf	104	;volatile
 15089  146F                     l4013:
 15090                           
 15091                           ;mcc_generated_files/pin_manager.c: 130:     IOCAFbits.IOCAF1 = 0;
 15092  146F  10BF               	bcf	63,1	;volatile
 15093  1470                     l4015:
 15094                           
 15095                           ;mcc_generated_files/pin_manager.c: 132:     IOCAFbits.IOCAF2 = 0;
 15096  1470  113F               	bcf	63,2	;volatile
 15097  1471                     l4017:
 15098                           
 15099                           ;mcc_generated_files/pin_manager.c: 134:     IOCANbits.IOCAN1 = 1;
 15100  1471  14BE               	bsf	62,1	;volatile
 15101  1472                     l4019:
 15102                           
 15103                           ;mcc_generated_files/pin_manager.c: 136:     IOCANbits.IOCAN2 = 1;
 15104  1472  153E               	bsf	62,2	;volatile
 15105  1473                     l4021:
 15106                           
 15107                           ;mcc_generated_files/pin_manager.c: 138:     IOCAPbits.IOCAP1 = 0;
 15108  1473  10BD               	bcf	61,1	;volatile
 15109  1474                     l4023:
 15110                           
 15111                           ;mcc_generated_files/pin_manager.c: 140:     IOCAPbits.IOCAP2 = 0;
 15112  1474  113D               	bcf	61,2	;volatile
 15113  1475                     l4025:
 15114                           
 15115                           ;mcc_generated_files/pin_manager.c: 142:     IOCBFbits.IOCBF4 = 0;
 15116  1475  124A               	bcf	74,4	;volatile
 15117  1476                     l4027:
 15118                           
 15119                           ;mcc_generated_files/pin_manager.c: 144:     IOCBNbits.IOCBN4 = 1;
 15120  1476  1649               	bsf	73,4	;volatile
 15121  1477                     l4029:
 15122                           
 15123                           ;mcc_generated_files/pin_manager.c: 146:     IOCBPbits.IOCBP4 = 0;
 15124  1477  1248               	bcf	72,4	;volatile
 15125  1478                     l4031:
 15126                           
 15127                           ;mcc_generated_files/pin_manager.c: 148:     IOCCFbits.IOCCF5 = 0;
 15128  1478  12D5               	bcf	85,5	;volatile
 15129  1479                     l4033:
 15130                           
 15131                           ;mcc_generated_files/pin_manager.c: 150:     IOCCNbits.IOCCN5 = 1;
 15132  1479  16D4               	bsf	84,5	;volatile
 15133  147A                     l4035:
 15134                           
 15135                           ;mcc_generated_files/pin_manager.c: 152:     IOCCPbits.IOCCP5 = 0;
 15136  147A  12D3               	bcf	83,5	;volatile
 15137  147B                     l4037:
 15138                           
 15139                           ;mcc_generated_files/pin_manager.c: 157:     IOCAF1_SetInterruptHandler(IOCAF1_DefaultIn
      +                          terruptHandler);
 15140  147B  305B               	movlw	low _IOCAF1_DefaultInterruptHandler
 15141  147C  00F1               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler
 15142  147D  301F               	movlw	high _IOCAF1_DefaultInterruptHandler
 15143  147E  00F2               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler+1
 15144  147F  319F  2777  3194   	fcall	_IOCAF1_SetInterruptHandler
 15145  1482                     l4039:
 15146                           
 15147                           ;mcc_generated_files/pin_manager.c: 158:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
 15148  1482  305C               	movlw	low _IOCAF2_DefaultInterruptHandler
 15149  1483  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
 15150  1484  301F               	movlw	high _IOCAF2_DefaultInterruptHandler
 15151  1485  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
 15152  1486  319F  277D  3194   	fcall	_IOCAF2_SetInterruptHandler
 15153  1489                     l4041:
 15154                           
 15155                           ;mcc_generated_files/pin_manager.c: 159:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
 15156  1489  305D               	movlw	low _IOCBF4_DefaultInterruptHandler
 15157  148A  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
 15158  148B  301F               	movlw	high _IOCBF4_DefaultInterruptHandler
 15159  148C  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
 15160  148D  319F  2783  3194   	fcall	_IOCBF4_SetInterruptHandler
 15161  1490                     l4043:
 15162                           
 15163                           ;mcc_generated_files/pin_manager.c: 160:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
 15164  1490  3000               	movlw	low _IOCCF5_DefaultInterruptHandler
 15165  1491  00F1               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler
 15166  1492  3010               	movlw	high _IOCCF5_DefaultInterruptHandler
 15167  1493  00F2               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler+1
 15168  1494  319F  2789  3194   	fcall	_IOCCF5_SetInterruptHandler
 15169  1497                     l4045:
 15170                           
 15171                           ;mcc_generated_files/pin_manager.c: 163:     PIE0bits.IOCIE = 1;
 15172  1497  002E               	movlb	14	; select bank14
 15173  1498  1616               	bsf	22,4	;volatile
 15174                           
 15175                           ;mcc_generated_files/pin_manager.c: 166:     SSP1CLKPPS = 0x13;
 15176  1499  3013               	movlw	19
 15177  149A  003D               	movlb	29	; select bank29
 15178  149B  00C5               	movwf	69	;volatile
 15179                           
 15180                           ;mcc_generated_files/pin_manager.c: 167:     RC3PPS = 0x14;
 15181  149C  3014               	movlw	20
 15182  149D  003E               	movlb	30	; select bank30
 15183  149E  00A3               	movwf	35	;volatile
 15184                           
 15185                           ;mcc_generated_files/pin_manager.c: 168:     RC6PPS = 0x15;
 15186  149F  3015               	movlw	21
 15187  14A0  00A6               	movwf	38	;volatile
 15188                           
 15189                           ;mcc_generated_files/pin_manager.c: 169:     SSP1DATPPS = 0x14;
 15190  14A1  3014               	movlw	20
 15191  14A2  003D               	movlb	29	; select bank29
 15192  14A3  00C6               	movwf	70	;volatile
 15193  14A4                     l172:
 15194  14A4  0008               	return
 15195  14A5                     __end_of_PIN_MANAGER_Initialize:
 15196                           
 15197                           	psect	text41
 15198  1F89                     __ptext41:	
 15199 ;; *************** function _IOCCF5_SetInterruptHandler *****************
 15200 ;; Defined at:
 15201 ;;		line 304 in file "mcc_generated_files/pin_manager.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 15204 ;;		 -> ctrl_der(1), IOCCF5_DefaultInterruptHandler(1), 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;		None
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      void 
 15209 ;; Registers used:
 15210 ;;		wreg
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:    4
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_PIN_MANAGER_Initialize
 15227 ;;		_main
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           
 15232                           ;psect for function _IOCCF5_SetInterruptHandler
 15233  1F89                     _IOCCF5_SetInterruptHandler:
 15234  1F89                     l3803:	
 15235                           ;incstack = 0
 15236                           ; Regs used in _IOCCF5_SetInterruptHandler: [wreg]
 15237                           
 15238                           
 15239                           ;mcc_generated_files/pin_manager.c: 305:     IOCCF5_InterruptHandler = InterruptHandler;
 15240  1F89  0872               	movf	IOCCF5_SetInterruptHandler@InterruptHandler+1,w
 15241  1F8A  0021               	movlb	1	; select bank1
 15242  1F8B  00E5               	movwf	(_IOCCF5_InterruptHandler+1)^(0+128)
 15243  1F8C  0871               	movf	IOCCF5_SetInterruptHandler@InterruptHandler,w
 15244  1F8D  00E4               	movwf	_IOCCF5_InterruptHandler^(0+128)
 15245  1F8E                     l216:
 15246  1F8E  0008               	return
 15247  1F8F                     __end_of_IOCCF5_SetInterruptHandler:
 15248                           
 15249                           	psect	text42
 15250  1F83                     __ptext42:	
 15251 ;; *************** function _IOCBF4_SetInterruptHandler *****************
 15252 ;; Defined at:
 15253 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 15256 ;;		 -> ctrl_izq(1), IOCBF4_DefaultInterruptHandler(1), 
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;		None
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      void 
 15261 ;; Registers used:
 15262 ;;		wreg
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15272 ;;Total ram usage:        2 bytes
 15273 ;; Hardware stack levels used:    1
 15274 ;; Hardware stack levels required when called:    4
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		_PIN_MANAGER_Initialize
 15279 ;;		_main
 15280 ;; This function uses a non-reentrant model
 15281 ;;
 15282                           
 15283                           
 15284                           ;psect for function _IOCBF4_SetInterruptHandler
 15285  1F83                     _IOCBF4_SetInterruptHandler:
 15286  1F83                     l3801:	
 15287                           ;incstack = 0
 15288                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
 15289                           
 15290                           
 15291                           ;mcc_generated_files/pin_manager.c: 275:     IOCBF4_InterruptHandler = InterruptHandler;
 15292  1F83  0872               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
 15293  1F84  0021               	movlb	1	; select bank1
 15294  1F85  00E7               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
 15295  1F86  0871               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
 15296  1F87  00E6               	movwf	_IOCBF4_InterruptHandler^(0+128)
 15297  1F88                     l206:
 15298  1F88  0008               	return
 15299  1F89                     __end_of_IOCBF4_SetInterruptHandler:
 15300                           
 15301                           	psect	text43
 15302  1F7D                     __ptext43:	
 15303 ;; *************** function _IOCAF2_SetInterruptHandler *****************
 15304 ;; Defined at:
 15305 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 15308 ;;		 -> ctrl_der2(1), IOCAF2_DefaultInterruptHandler(1), 
 15309 ;; Auto vars:     Size  Location     Type
 15310 ;;		None
 15311 ;; Return value:  Size  Location     Type
 15312 ;;                  1    wreg      void 
 15313 ;; Registers used:
 15314 ;;		wreg
 15315 ;; Tracked objects:
 15316 ;;		On entry : 0/0
 15317 ;;		On exit  : 0/0
 15318 ;;		Unchanged: 0/0
 15319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;Total ram usage:        2 bytes
 15325 ;; Hardware stack levels used:    1
 15326 ;; Hardware stack levels required when called:    4
 15327 ;; This function calls:
 15328 ;;		Nothing
 15329 ;; This function is called by:
 15330 ;;		_PIN_MANAGER_Initialize
 15331 ;;		_main
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           
 15335                           
 15336                           ;psect for function _IOCAF2_SetInterruptHandler
 15337  1F7D                     _IOCAF2_SetInterruptHandler:
 15338  1F7D                     l3799:	
 15339                           ;incstack = 0
 15340                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
 15341                           
 15342                           
 15343                           ;mcc_generated_files/pin_manager.c: 245:     IOCAF2_InterruptHandler = InterruptHandler;
 15344  1F7D  0872               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
 15345  1F7E  0021               	movlb	1	; select bank1
 15346  1F7F  00E9               	movwf	(_IOCAF2_InterruptHandler+1)^(0+128)
 15347  1F80  0871               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
 15348  1F81  00E8               	movwf	_IOCAF2_InterruptHandler^(0+128)
 15349  1F82                     l196:
 15350  1F82  0008               	return
 15351  1F83                     __end_of_IOCAF2_SetInterruptHandler:
 15352                           
 15353                           	psect	text44
 15354  1F77                     __ptext44:	
 15355 ;; *************** function _IOCAF1_SetInterruptHandler *****************
 15356 ;; Defined at:
 15357 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 15360 ;;		 -> ctrl_izq2(1), IOCAF1_DefaultInterruptHandler(1), 
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;		None
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  1    wreg      void 
 15365 ;; Registers used:
 15366 ;;		wreg
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;Total ram usage:        2 bytes
 15377 ;; Hardware stack levels used:    1
 15378 ;; Hardware stack levels required when called:    4
 15379 ;; This function calls:
 15380 ;;		Nothing
 15381 ;; This function is called by:
 15382 ;;		_PIN_MANAGER_Initialize
 15383 ;;		_main
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           
 15388                           ;psect for function _IOCAF1_SetInterruptHandler
 15389  1F77                     _IOCAF1_SetInterruptHandler:
 15390  1F77                     l3797:	
 15391                           ;incstack = 0
 15392                           ; Regs used in _IOCAF1_SetInterruptHandler: [wreg]
 15393                           
 15394                           
 15395                           ;mcc_generated_files/pin_manager.c: 215:     IOCAF1_InterruptHandler = InterruptHandler;
 15396  1F77  0872               	movf	IOCAF1_SetInterruptHandler@InterruptHandler+1,w
 15397  1F78  0021               	movlb	1	; select bank1
 15398  1F79  00EB               	movwf	(_IOCAF1_InterruptHandler+1)^(0+128)
 15399  1F7A  0871               	movf	IOCAF1_SetInterruptHandler@InterruptHandler,w
 15400  1F7B  00EA               	movwf	_IOCAF1_InterruptHandler^(0+128)
 15401  1F7C                     l186:
 15402  1F7C  0008               	return
 15403  1F7D                     __end_of_IOCAF1_SetInterruptHandler:
 15404                           
 15405                           	psect	text45
 15406  1F97                     __ptext45:	
 15407 ;; *************** function _OSCILLATOR_Initialize *****************
 15408 ;; Defined at:
 15409 ;;		line 58 in file "mcc_generated_files/mcc.c"
 15410 ;; Parameters:    Size  Location     Type
 15411 ;;		None
 15412 ;; Auto vars:     Size  Location     Type
 15413 ;;		None
 15414 ;; Return value:  Size  Location     Type
 15415 ;;                  1    wreg      void 
 15416 ;; Registers used:
 15417 ;;		wreg, status,2
 15418 ;; Tracked objects:
 15419 ;;		On entry : 0/0
 15420 ;;		On exit  : 0/0
 15421 ;;		Unchanged: 0/0
 15422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;Total ram usage:        0 bytes
 15428 ;; Hardware stack levels used:    1
 15429 ;; Hardware stack levels required when called:    4
 15430 ;; This function calls:
 15431 ;;		Nothing
 15432 ;; This function is called by:
 15433 ;;		_SYSTEM_Initialize
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           
 15438                           ;psect for function _OSCILLATOR_Initialize
 15439  1F97                     _OSCILLATOR_Initialize:
 15440  1F97                     l4047:	
 15441                           ;incstack = 0
 15442                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15443                           
 15444                           
 15445                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
 15446  1F97  3060               	movlw	96
 15447  1F98  0031               	movlb	17	; select bank17
 15448  1F99  008D               	movwf	13	;volatile
 15449  1F9A                     l4049:
 15450                           
 15451                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 15452  1F9A  018F               	clrf	15	;volatile
 15453  1F9B                     l4051:
 15454                           
 15455                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 15456  1F9B  0191               	clrf	17	;volatile
 15457                           
 15458                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
 15459  1F9C  3006               	movlw	6
 15460  1F9D  0093               	movwf	19	;volatile
 15461  1F9E                     l4053:
 15462                           
 15463                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 15464  1F9E  0192               	clrf	18	;volatile
 15465  1F9F                     l36:
 15466  1F9F  0008               	return
 15467  1FA0                     __end_of_OSCILLATOR_Initialize:
 15468                           
 15469                           	psect	text46
 15470  125C                     __ptext46:	
 15471 ;; *************** function _SPI1_Open *****************
 15472 ;; Defined at:
 15473 ;;		line 77 in file "mcc_generated_files/spi1.c"
 15474 ;; Parameters:    Size  Location     Type
 15475 ;;  spi1UniqueCo    1    wreg     enum E355
 15476 ;; Auto vars:     Size  Location     Type
 15477 ;;  spi1UniqueCo    1    4[COMMON] enum E355
 15478 ;; Return value:  Size  Location     Type
 15479 ;;                  1    wreg      _Bool 
 15480 ;; Registers used:
 15481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 15482 ;; Tracked objects:
 15483 ;;		On entry : 0/0
 15484 ;;		On exit  : 0/0
 15485 ;;		Unchanged: 0/0
 15486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15491 ;;Total ram usage:        4 bytes
 15492 ;; Hardware stack levels used:    1
 15493 ;; Hardware stack levels required when called:    4
 15494 ;; This function calls:
 15495 ;;		Nothing
 15496 ;; This function is called by:
 15497 ;;		_main
 15498 ;; This function uses a non-reentrant model
 15499 ;;
 15500                           
 15501                           
 15502                           ;psect for function _SPI1_Open
 15503  125C                     _SPI1_Open:
 15504                           
 15505                           ;incstack = 0
 15506                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 15507                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 15508  125C  00F4               	movwf	SPI1_Open@spi1UniqueConfiguration
 15509  125D                     l4213:
 15510                           
 15511                           ;mcc_generated_files/spi1.c: 77: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 78: {;mcc_generated_files/spi1.c: 79:     if(!SSP1CON1bits.SS
      +                          PEN)
 15512  125D  0023               	movlb	3	; select bank3
 15513  125E  1A90               	btfsc	16,5	;volatile
 15514  125F  2A61               	goto	u3661
 15515  1260  2A62               	goto	u3660
 15516  1261                     u3661:
 15517  1261  2AAA               	goto	l252
 15518  1262                     u3660:
 15519  1262                     l4215:
 15520                           
 15521                           ;mcc_generated_files/spi1.c: 80:     {;mcc_generated_files/spi1.c: 81:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 15522  1262  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 15523  1263  00F1               	movwf	??_SPI1_Open
 15524  1264  01F2               	clrf	??_SPI1_Open+1
 15525  1265  35F1               	lslf	??_SPI1_Open,f
 15526  1266  0DF2               	rlf	??_SPI1_Open+1,f
 15527  1267  35F1               	lslf	??_SPI1_Open,f
 15528  1268  0DF2               	rlf	??_SPI1_Open+1,f
 15529  1269  3065               	movlw	low ((_spi1_configuration+1)| (0+32768))
 15530  126A  0771               	addwf	??_SPI1_Open,w
 15531  126B  0084               	movwf	4
 15532  126C  3099               	movlw	high ((_spi1_configuration+1)| (0+32768))
 15533  126D  3D72               	addwfc	??_SPI1_Open+1,w
 15534  126E  0085               	movwf	5
 15535  126F  0800               	movf	0,w	;code access
 15536  1270  008F               	movwf	15	;volatile
 15537                           
 15538                           ;mcc_generated_files/spi1.c: 82:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 15539  1271  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 15540  1272  00F1               	movwf	??_SPI1_Open
 15541  1273  01F2               	clrf	??_SPI1_Open+1
 15542  1274  35F1               	lslf	??_SPI1_Open,f
 15543  1275  0DF2               	rlf	??_SPI1_Open+1,f
 15544  1276  35F1               	lslf	??_SPI1_Open,f
 15545  1277  0DF2               	rlf	??_SPI1_Open+1,f
 15546  1278  3064               	movlw	low (_spi1_configuration| (0+32768))
 15547  1279  0771               	addwf	??_SPI1_Open,w
 15548  127A  0084               	movwf	4
 15549  127B  3099               	movlw	high (_spi1_configuration| (0+32768))
 15550  127C  3D72               	addwfc	??_SPI1_Open+1,w
 15551  127D  0085               	movwf	5
 15552  127E  0800               	movf	0,w	;code access
 15553  127F  0090               	movwf	16	;volatile
 15554  1280                     l4217:
 15555                           
 15556                           ;mcc_generated_files/spi1.c: 83:         SSP1CON2 = 0x00;
 15557  1280  0191               	clrf	17	;volatile
 15558  1281                     l4219:
 15559                           
 15560                           ;mcc_generated_files/spi1.c: 84:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 15561  1281  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 15562  1282  00F1               	movwf	??_SPI1_Open
 15563  1283  01F2               	clrf	??_SPI1_Open+1
 15564  1284  35F1               	lslf	??_SPI1_Open,f
 15565  1285  0DF2               	rlf	??_SPI1_Open+1,f
 15566  1286  35F1               	lslf	??_SPI1_Open,f
 15567  1287  0DF2               	rlf	??_SPI1_Open+1,f
 15568  1288  3066               	movlw	low ((_spi1_configuration+2)| (0+32768))
 15569  1289  0771               	addwf	??_SPI1_Open,w
 15570  128A  0084               	movwf	4
 15571  128B  3099               	movlw	high ((_spi1_configuration+2)| (0+32768))
 15572  128C  3D72               	addwfc	??_SPI1_Open+1,w
 15573  128D  0085               	movwf	5
 15574  128E  0800               	movf	0,w	;code access
 15575  128F  008D               	movwf	13	;volatile
 15576  1290                     l4221:
 15577                           
 15578                           ;mcc_generated_files/spi1.c: 85:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 15579  1290  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 15580  1291  00F1               	movwf	??_SPI1_Open
 15581  1292  01F2               	clrf	??_SPI1_Open+1
 15582  1293  35F1               	lslf	??_SPI1_Open,f
 15583  1294  0DF2               	rlf	??_SPI1_Open+1,f
 15584  1295  35F1               	lslf	??_SPI1_Open,f
 15585  1296  0DF2               	rlf	??_SPI1_Open+1,f
 15586  1297  3067               	movlw	low ((_spi1_configuration+3)| (0+32768))
 15587  1298  0771               	addwf	??_SPI1_Open,w
 15588  1299  0084               	movwf	4
 15589  129A  3099               	movlw	high ((_spi1_configuration+3)| (0+32768))
 15590  129B  3D72               	addwfc	??_SPI1_Open+1,w
 15591  129C  0085               	movwf	5
 15592  129D  0800               	movf	0,w	;code access
 15593  129E  00F3               	movwf	??_SPI1_Open+2
 15594  129F  0DF3               	rlf	??_SPI1_Open+2,f
 15595  12A0  0DF3               	rlf	??_SPI1_Open+2,f
 15596  12A1  0DF3               	rlf	??_SPI1_Open+2,f
 15597  12A2  0020               	movlb	0	; select bank0
 15598  12A3  0813               	movf	19,w	;volatile
 15599  12A4  0673               	xorwf	??_SPI1_Open+2,w
 15600  12A5  39F7               	andlw	-9
 15601  12A6  0673               	xorwf	??_SPI1_Open+2,w
 15602  12A7  0093               	movwf	19	;volatile
 15603  12A8                     l4223:
 15604                           
 15605                           ;mcc_generated_files/spi1.c: 86:         SSP1CON1bits.SSPEN = 1;
 15606  12A8  0023               	movlb	3	; select bank3
 15607  12A9  1690               	bsf	16,5	;volatile
 15608  12AA                     l252:
 15609  12AA  0008               	return
 15610  12AB                     __end_of_SPI1_Open:
 15611                           
 15612                           	psect	intentry
 15613  0004                     __pintentry:	
 15614 ;; *************** function _INTERRUPT_InterruptManager *****************
 15615 ;; Defined at:
 15616 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;		None
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;		None
 15621 ;; Return value:  Size  Location     Type
 15622 ;;                  1    wreg      void 
 15623 ;; Registers used:
 15624 ;;		wreg, status,2, status,0, pclath, cstack
 15625 ;; Tracked objects:
 15626 ;;		On entry : 0/0
 15627 ;;		On exit  : 0/0
 15628 ;;		Unchanged: 0/0
 15629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;Total ram usage:        0 bytes
 15635 ;; Hardware stack levels used:    1
 15636 ;; Hardware stack levels required when called:    3
 15637 ;; This function calls:
 15638 ;;		_PIN_MANAGER_IOC
 15639 ;; This function is called by:
 15640 ;;		Interrupt level 1
 15641 ;; This function uses a non-reentrant model
 15642 ;;
 15643                           
 15644  0004                     _INTERRUPT_InterruptManager:
 15645                           
 15646                           ;incstack = 0
 15647  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15648                           
 15649                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15650  0005  3180               	pagesel	$
 15651  0006                     i1l4415:
 15652                           
 15653                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 15654  0006  002E               	movlb	14	; select bank14
 15655  0007  1E16               	btfss	22,4	;volatile
 15656  0008  280A               	goto	u392_21
 15657  0009  280B               	goto	u392_20
 15658  000A                     u392_21:
 15659  000A  2812               	goto	i1l301
 15660  000B                     u392_20:
 15661  000B                     i1l4417:
 15662  000B  1E0C               	btfss	12,4	;volatile
 15663  000C  280E               	goto	u393_21
 15664  000D  280F               	goto	u393_20
 15665  000E                     u393_21:
 15666  000E  2812               	goto	i1l301
 15667  000F                     u393_20:
 15668  000F                     i1l4419:
 15669                           
 15670                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 15671  000F  3190  20F8  3180   	fcall	_PIN_MANAGER_IOC
 15672  0012                     i1l301:	
 15673                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15674                           
 15675  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15676  0013  0009               	retfie
 15677  0014                     __end_of_INTERRUPT_InterruptManager:
 15678                           
 15679                           	psect	text48
 15680  10F8                     __ptext48:	
 15681 ;; *************** function _PIN_MANAGER_IOC *****************
 15682 ;; Defined at:
 15683 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      void 
 15690 ;; Registers used:
 15691 ;;		wreg, status,2, status,0, pclath, cstack
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:    2
 15704 ;; This function calls:
 15705 ;;		_IOCAF1_ISR
 15706 ;;		_IOCAF2_ISR
 15707 ;;		_IOCBF4_ISR
 15708 ;;		_IOCCF5_ISR
 15709 ;; This function is called by:
 15710 ;;		_INTERRUPT_InterruptManager
 15711 ;; This function uses a non-reentrant model
 15712 ;;
 15713                           
 15714                           
 15715                           ;psect for function _PIN_MANAGER_IOC
 15716  10F8                     _PIN_MANAGER_IOC:
 15717  10F8                     i1l4197:	
 15718                           ;incstack = 0
 15719                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 15720                           
 15721                           
 15722                           ;mcc_generated_files/pin_manager.c: 175:     if(IOCAFbits.IOCAF1 == 1)
 15723  10F8  003E               	movlb	30	; select bank30
 15724  10F9  1CBF               	btfss	63,1	;volatile
 15725  10FA  28FC               	goto	u362_21
 15726  10FB  28FD               	goto	u362_20
 15727  10FC                     u362_21:
 15728  10FC  2900               	goto	i1l4201
 15729  10FD                     u362_20:
 15730  10FD                     i1l4199:
 15731                           
 15732                           ;mcc_generated_files/pin_manager.c: 176:     {;mcc_generated_files/pin_manager.c: 177:  
      +                                 IOCAF1_ISR();
 15733  10FD  319F  27E2  3190   	fcall	_IOCAF1_ISR
 15734  1100                     i1l4201:
 15735                           
 15736                           ;mcc_generated_files/pin_manager.c: 180:     if(IOCAFbits.IOCAF2 == 1)
 15737  1100  003E               	movlb	30	; select bank30
 15738  1101  1D3F               	btfss	63,2	;volatile
 15739  1102  2904               	goto	u363_21
 15740  1103  2905               	goto	u363_20
 15741  1104                     u363_21:
 15742  1104  2908               	goto	i1l4205
 15743  1105                     u363_20:
 15744  1105                     i1l4203:
 15745                           
 15746                           ;mcc_generated_files/pin_manager.c: 181:     {;mcc_generated_files/pin_manager.c: 182:  
      +                                 IOCAF2_ISR();
 15747  1105  319F  27F1  3190   	fcall	_IOCAF2_ISR
 15748  1108                     i1l4205:
 15749                           
 15750                           ;mcc_generated_files/pin_manager.c: 185:     if(IOCBFbits.IOCBF4 == 1)
 15751  1108  003E               	movlb	30	; select bank30
 15752  1109  1E4A               	btfss	74,4	;volatile
 15753  110A  290C               	goto	u364_21
 15754  110B  290D               	goto	u364_20
 15755  110C                     u364_21:
 15756  110C  2910               	goto	i1l4209
 15757  110D                     u364_20:
 15758  110D                     i1l4207:
 15759                           
 15760                           ;mcc_generated_files/pin_manager.c: 186:     {;mcc_generated_files/pin_manager.c: 187:  
      +                                 IOCBF4_ISR();
 15761  110D  3190  200B  3190   	fcall	_IOCBF4_ISR
 15762  1110                     i1l4209:
 15763                           
 15764                           ;mcc_generated_files/pin_manager.c: 190:     if(IOCCFbits.IOCCF5 == 1)
 15765  1110  003E               	movlb	30	; select bank30
 15766  1111  1ED5               	btfss	85,5	;volatile
 15767  1112  2914               	goto	u365_21
 15768  1113  2915               	goto	u365_20
 15769  1114                     u365_21:
 15770  1114  2918               	goto	i1l179
 15771  1115                     u365_20:
 15772  1115                     i1l4211:
 15773                           
 15774                           ;mcc_generated_files/pin_manager.c: 191:     {;mcc_generated_files/pin_manager.c: 192:  
      +                                 IOCCF5_ISR();
 15775  1115  3190  201A  3190   	fcall	_IOCCF5_ISR
 15776  1118                     i1l179:
 15777  1118  0008               	return
 15778  1119                     __end_of_PIN_MANAGER_IOC:
 15779                           
 15780                           	psect	text49
 15781  101A                     __ptext49:	
 15782 ;; *************** function _IOCCF5_ISR *****************
 15783 ;; Defined at:
 15784 ;;		line 289 in file "mcc_generated_files/pin_manager.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg, status,2, status,0, pclath, cstack
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:    1
 15805 ;; This function calls:
 15806 ;;		Absolute function
 15807 ;;		_IOCCF5_DefaultInterruptHandler
 15808 ;;		_ctrl_der
 15809 ;; This function is called by:
 15810 ;;		_PIN_MANAGER_IOC
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           
 15814                           
 15815                           ;psect for function _IOCCF5_ISR
 15816  101A                     _IOCCF5_ISR:
 15817  101A                     i1l4073:	
 15818                           ;incstack = 0
 15819                           ; Regs used in _IOCCF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 15820                           
 15821                           
 15822                           ;mcc_generated_files/pin_manager.c: 294:     if(IOCCF5_InterruptHandler)
 15823  101A  0021               	movlb	1	; select bank1
 15824  101B  0864               	movf	_IOCCF5_InterruptHandler^(0+128),w
 15825  101C  0465               	iorwf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 15826  101D  1903               	btfsc	3,2
 15827  101E  2820               	goto	u350_21
 15828  101F  2821               	goto	u350_20
 15829  1020                     u350_21:
 15830  1020  2826               	goto	i1l4077
 15831  1021                     u350_20:
 15832  1021                     i1l4075:
 15833                           
 15834                           ;mcc_generated_files/pin_manager.c: 295:     {;mcc_generated_files/pin_manager.c: 296:  
      +                                 IOCCF5_InterruptHandler();
 15835  1021  0865               	movf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 15836  1022  008A               	movwf	10
 15837  1023  0864               	movf	_IOCCF5_InterruptHandler^(0+128),w
 15838  1024  000A               	callw
 15839  1025  3190               	pagesel	$
 15840  1026                     i1l4077:
 15841                           
 15842                           ;mcc_generated_files/pin_manager.c: 298:     IOCCFbits.IOCCF5 = 0;
 15843  1026  003E               	movlb	30	; select bank30
 15844  1027  12D5               	bcf	85,5	;volatile
 15845  1028                     i1l213:
 15846  1028  0008               	return
 15847  1029                     __end_of_IOCCF5_ISR:
 15848                           
 15849                           	psect	text50
 15850  1000                     __ptext50:	
 15851 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
 15852 ;; Defined at:
 15853 ;;		line 311 in file "mcc_generated_files/pin_manager.c"
 15854 ;; Parameters:    Size  Location     Type
 15855 ;;		None
 15856 ;; Auto vars:     Size  Location     Type
 15857 ;;		None
 15858 ;; Return value:  Size  Location     Type
 15859 ;;                  1    wreg      void 
 15860 ;; Registers used:
 15861 ;;		None
 15862 ;; Tracked objects:
 15863 ;;		On entry : 0/0
 15864 ;;		On exit  : 0/0
 15865 ;;		Unchanged: 0/0
 15866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15871 ;;Total ram usage:        0 bytes
 15872 ;; Hardware stack levels used:    1
 15873 ;; This function calls:
 15874 ;;		Nothing
 15875 ;; This function is called by:
 15876 ;;		_PIN_MANAGER_Initialize
 15877 ;;		_IOCCF5_ISR
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           
 15882                           ;psect for function _IOCCF5_DefaultInterruptHandler
 15883  1000                     _IOCCF5_DefaultInterruptHandler:
 15884  1000                     i1l219:	
 15885                           ;incstack = 0
 15886                           ; Regs used in _IOCCF5_DefaultInterruptHandler: []
 15887                           
 15888  1000  0008               	return
 15889  1001                     __end_of_IOCCF5_DefaultInterruptHandler:
 15890                           
 15891                           	psect	text51
 15892  1F6C                     __ptext51:	
 15893 ;; *************** function _ctrl_der *****************
 15894 ;; Defined at:
 15895 ;;		line 195 in file "main.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;		None
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;		None
 15900 ;; Return value:  Size  Location     Type
 15901 ;;                  1    wreg      void 
 15902 ;; Registers used:
 15903 ;;		wreg
 15904 ;; Tracked objects:
 15905 ;;		On entry : 0/0
 15906 ;;		On exit  : 0/0
 15907 ;;		Unchanged: 0/0
 15908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;Total ram usage:        1 bytes
 15914 ;; Hardware stack levels used:    1
 15915 ;; This function calls:
 15916 ;;		Nothing
 15917 ;; This function is called by:
 15918 ;;		_main
 15919 ;;		_IOCCF5_ISR
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           
 15924                           ;psect for function _ctrl_der
 15925  1F6C                     _ctrl_der:
 15926  1F6C                     i1l3807:	
 15927                           ;incstack = 0
 15928                           ; Regs used in _ctrl_der: [wreg]
 15929                           
 15930                           
 15931                           ;main.c: 196:     movimiento_jugador1 = derecha;
 15932  1F6C  3002               	movlw	2
 15933  1F6D  00F0               	movwf	??_ctrl_der
 15934  1F6E  0870               	movf	??_ctrl_der,w
 15935  1F6F  00FC               	movwf	_movimiento_jugador1
 15936  1F70                     i1l453:
 15937  1F70  0008               	return
 15938  1F71                     __end_of_ctrl_der:
 15939                           
 15940                           	psect	text52
 15941  100B                     __ptext52:	
 15942 ;; *************** function _IOCBF4_ISR *****************
 15943 ;; Defined at:
 15944 ;;		line 259 in file "mcc_generated_files/pin_manager.c"
 15945 ;; Parameters:    Size  Location     Type
 15946 ;;		None
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;		None
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  1    wreg      void 
 15951 ;; Registers used:
 15952 ;;		wreg, status,2, status,0, pclath, cstack
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15962 ;;Total ram usage:        0 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:    1
 15965 ;; This function calls:
 15966 ;;		Absolute function
 15967 ;;		_IOCBF4_DefaultInterruptHandler
 15968 ;;		_ctrl_izq
 15969 ;; This function is called by:
 15970 ;;		_PIN_MANAGER_IOC
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           
 15975                           ;psect for function _IOCBF4_ISR
 15976  100B                     _IOCBF4_ISR:
 15977  100B                     i1l4067:	
 15978                           ;incstack = 0
 15979                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 15980                           
 15981                           
 15982                           ;mcc_generated_files/pin_manager.c: 264:     if(IOCBF4_InterruptHandler)
 15983  100B  0021               	movlb	1	; select bank1
 15984  100C  0866               	movf	_IOCBF4_InterruptHandler^(0+128),w
 15985  100D  0467               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 15986  100E  1903               	btfsc	3,2
 15987  100F  2811               	goto	u349_21
 15988  1010  2812               	goto	u349_20
 15989  1011                     u349_21:
 15990  1011  2817               	goto	i1l4071
 15991  1012                     u349_20:
 15992  1012                     i1l4069:
 15993                           
 15994                           ;mcc_generated_files/pin_manager.c: 265:     {;mcc_generated_files/pin_manager.c: 266:  
      +                                 IOCBF4_InterruptHandler();
 15995  1012  0867               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 15996  1013  008A               	movwf	10
 15997  1014  0866               	movf	_IOCBF4_InterruptHandler^(0+128),w
 15998  1015  000A               	callw
 15999  1016  3190               	pagesel	$
 16000  1017                     i1l4071:
 16001                           
 16002                           ;mcc_generated_files/pin_manager.c: 268:     IOCBFbits.IOCBF4 = 0;
 16003  1017  003E               	movlb	30	; select bank30
 16004  1018  124A               	bcf	74,4	;volatile
 16005  1019                     i1l203:
 16006  1019  0008               	return
 16007  101A                     __end_of_IOCBF4_ISR:
 16008                           
 16009                           	psect	text53
 16010  1F5D                     __ptext53:	
 16011 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 16012 ;; Defined at:
 16013 ;;		line 281 in file "mcc_generated_files/pin_manager.c"
 16014 ;; Parameters:    Size  Location     Type
 16015 ;;		None
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;		None
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      void 
 16020 ;; Registers used:
 16021 ;;		None
 16022 ;; Tracked objects:
 16023 ;;		On entry : 0/0
 16024 ;;		On exit  : 0/0
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16031 ;;Total ram usage:        0 bytes
 16032 ;; Hardware stack levels used:    1
 16033 ;; This function calls:
 16034 ;;		Nothing
 16035 ;; This function is called by:
 16036 ;;		_PIN_MANAGER_Initialize
 16037 ;;		_IOCBF4_ISR
 16038 ;; This function uses a non-reentrant model
 16039 ;;
 16040                           
 16041                           
 16042                           ;psect for function _IOCBF4_DefaultInterruptHandler
 16043  1F5D                     _IOCBF4_DefaultInterruptHandler:
 16044  1F5D                     i1l209:	
 16045                           ;incstack = 0
 16046                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 16047                           
 16048  1F5D  0008               	return
 16049  1F5E                     __end_of_IOCBF4_DefaultInterruptHandler:
 16050                           
 16051                           	psect	text54
 16052  1F5E                     __ptext54:	
 16053 ;; *************** function _ctrl_izq *****************
 16054 ;; Defined at:
 16055 ;;		line 191 in file "main.c"
 16056 ;; Parameters:    Size  Location     Type
 16057 ;;		None
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;		None
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  1    wreg      void 
 16062 ;; Registers used:
 16063 ;;		None
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;Total ram usage:        0 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; This function calls:
 16076 ;;		Nothing
 16077 ;; This function is called by:
 16078 ;;		_main
 16079 ;;		_IOCBF4_ISR
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           
 16084                           ;psect for function _ctrl_izq
 16085  1F5E                     _ctrl_izq:
 16086  1F5E                     i1l3805:	
 16087                           ;incstack = 0
 16088                           ; Regs used in _ctrl_izq: []
 16089                           
 16090                           
 16091                           ;main.c: 192:     movimiento_jugador1 = izquierda;
 16092  1F5E  01FC               	clrf	_movimiento_jugador1
 16093  1F5F  0AFC               	incf	_movimiento_jugador1,f
 16094  1F60                     i1l450:
 16095  1F60  0008               	return
 16096  1F61                     __end_of_ctrl_izq:
 16097                           
 16098                           	psect	text55
 16099  1FF1                     __ptext55:	
 16100 ;; *************** function _IOCAF2_ISR *****************
 16101 ;; Defined at:
 16102 ;;		line 229 in file "mcc_generated_files/pin_manager.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;		None
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;		None
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      void 
 16109 ;; Registers used:
 16110 ;;		wreg, status,2, status,0, pclath, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16120 ;;Total ram usage:        0 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:    1
 16123 ;; This function calls:
 16124 ;;		Absolute function
 16125 ;;		_IOCAF2_DefaultInterruptHandler
 16126 ;;		_ctrl_der2
 16127 ;; This function is called by:
 16128 ;;		_PIN_MANAGER_IOC
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           
 16133                           ;psect for function _IOCAF2_ISR
 16134  1FF1                     _IOCAF2_ISR:
 16135  1FF1                     i1l4061:	
 16136                           ;incstack = 0
 16137                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16138                           
 16139                           
 16140                           ;mcc_generated_files/pin_manager.c: 234:     if(IOCAF2_InterruptHandler)
 16141  1FF1  0021               	movlb	1	; select bank1
 16142  1FF2  0868               	movf	_IOCAF2_InterruptHandler^(0+128),w
 16143  1FF3  0469               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 16144  1FF4  1903               	btfsc	3,2
 16145  1FF5  2FF7               	goto	u348_21
 16146  1FF6  2FF8               	goto	u348_20
 16147  1FF7                     u348_21:
 16148  1FF7  2FFD               	goto	i1l4065
 16149  1FF8                     u348_20:
 16150  1FF8                     i1l4063:
 16151                           
 16152                           ;mcc_generated_files/pin_manager.c: 235:     {;mcc_generated_files/pin_manager.c: 236:  
      +                                 IOCAF2_InterruptHandler();
 16153  1FF8  0869               	movf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 16154  1FF9  008A               	movwf	10
 16155  1FFA  0868               	movf	_IOCAF2_InterruptHandler^(0+128),w
 16156  1FFB  000A               	callw
 16157  1FFC  319F               	pagesel	$
 16158  1FFD                     i1l4065:
 16159                           
 16160                           ;mcc_generated_files/pin_manager.c: 238:     IOCAFbits.IOCAF2 = 0;
 16161  1FFD  003E               	movlb	30	; select bank30
 16162  1FFE  113F               	bcf	63,2	;volatile
 16163  1FFF                     i1l193:
 16164  1FFF  0008               	return
 16165  2000                     __end_of_IOCAF2_ISR:
 16166                           
 16167                           	psect	text56
 16168  1F5C                     __ptext56:	
 16169 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 16170 ;; Defined at:
 16171 ;;		line 251 in file "mcc_generated_files/pin_manager.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;		None
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		None
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;Total ram usage:        0 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; This function calls:
 16192 ;;		Nothing
 16193 ;; This function is called by:
 16194 ;;		_PIN_MANAGER_Initialize
 16195 ;;		_IOCAF2_ISR
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           
 16200                           ;psect for function _IOCAF2_DefaultInterruptHandler
 16201  1F5C                     _IOCAF2_DefaultInterruptHandler:
 16202  1F5C                     i1l199:	
 16203                           ;incstack = 0
 16204                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 16205                           
 16206  1F5C  0008               	return
 16207  1F5D                     __end_of_IOCAF2_DefaultInterruptHandler:
 16208                           
 16209                           	psect	text57
 16210  1F71                     __ptext57:	
 16211 ;; *************** function _ctrl_der2 *****************
 16212 ;; Defined at:
 16213 ;;		line 204 in file "main.c"
 16214 ;; Parameters:    Size  Location     Type
 16215 ;;		None
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;		None
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      void 
 16220 ;; Registers used:
 16221 ;;		wreg
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;Total ram usage:        1 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_main
 16237 ;;		_IOCAF2_ISR
 16238 ;; This function uses a non-reentrant model
 16239 ;;
 16240                           
 16241                           
 16242                           ;psect for function _ctrl_der2
 16243  1F71                     _ctrl_der2:
 16244  1F71                     i1l3811:	
 16245                           ;incstack = 0
 16246                           ; Regs used in _ctrl_der2: [wreg]
 16247                           
 16248                           
 16249                           ;main.c: 205:     movimiento_jugador2 = derecha;
 16250  1F71  3002               	movlw	2
 16251  1F72  00F0               	movwf	??_ctrl_der2
 16252  1F73  0870               	movf	??_ctrl_der2,w
 16253  1F74  0021               	movlb	1	; select bank1
 16254  1F75  00CD               	movwf	_movimiento_jugador2^(0+128)
 16255  1F76                     i1l459:
 16256  1F76  0008               	return
 16257  1F77                     __end_of_ctrl_der2:
 16258                           
 16259                           	psect	text58
 16260  1FE2                     __ptext58:	
 16261 ;; *************** function _IOCAF1_ISR *****************
 16262 ;; Defined at:
 16263 ;;		line 199 in file "mcc_generated_files/pin_manager.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, status,2, status,0, pclath, cstack
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:    1
 16284 ;; This function calls:
 16285 ;;		Absolute function
 16286 ;;		_IOCAF1_DefaultInterruptHandler
 16287 ;;		_ctrl_izq2
 16288 ;; This function is called by:
 16289 ;;		_PIN_MANAGER_IOC
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           
 16294                           ;psect for function _IOCAF1_ISR
 16295  1FE2                     _IOCAF1_ISR:
 16296  1FE2                     i1l4055:	
 16297                           ;incstack = 0
 16298                           ; Regs used in _IOCAF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16299                           
 16300                           
 16301                           ;mcc_generated_files/pin_manager.c: 204:     if(IOCAF1_InterruptHandler)
 16302  1FE2  0021               	movlb	1	; select bank1
 16303  1FE3  086A               	movf	_IOCAF1_InterruptHandler^(0+128),w
 16304  1FE4  046B               	iorwf	(_IOCAF1_InterruptHandler+1)^(0+128),w
 16305  1FE5  1903               	btfsc	3,2
 16306  1FE6  2FE8               	goto	u347_21
 16307  1FE7  2FE9               	goto	u347_20
 16308  1FE8                     u347_21:
 16309  1FE8  2FEE               	goto	i1l4059
 16310  1FE9                     u347_20:
 16311  1FE9                     i1l4057:
 16312                           
 16313                           ;mcc_generated_files/pin_manager.c: 205:     {;mcc_generated_files/pin_manager.c: 206:  
      +                                 IOCAF1_InterruptHandler();
 16314  1FE9  086B               	movf	(_IOCAF1_InterruptHandler+1)^(0+128),w
 16315  1FEA  008A               	movwf	10
 16316  1FEB  086A               	movf	_IOCAF1_InterruptHandler^(0+128),w
 16317  1FEC  000A               	callw
 16318  1FED  319F               	pagesel	$
 16319  1FEE                     i1l4059:
 16320                           
 16321                           ;mcc_generated_files/pin_manager.c: 208:     IOCAFbits.IOCAF1 = 0;
 16322  1FEE  003E               	movlb	30	; select bank30
 16323  1FEF  10BF               	bcf	63,1	;volatile
 16324  1FF0                     i1l183:
 16325  1FF0  0008               	return
 16326  1FF1                     __end_of_IOCAF1_ISR:
 16327                           
 16328                           	psect	text59
 16329  1F5B                     __ptext59:	
 16330 ;; *************** function _IOCAF1_DefaultInterruptHandler *****************
 16331 ;; Defined at:
 16332 ;;		line 221 in file "mcc_generated_files/pin_manager.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;		None
 16335 ;; Auto vars:     Size  Location     Type
 16336 ;;		None
 16337 ;; Return value:  Size  Location     Type
 16338 ;;                  1    wreg      void 
 16339 ;; Registers used:
 16340 ;;		None
 16341 ;; Tracked objects:
 16342 ;;		On entry : 0/0
 16343 ;;		On exit  : 0/0
 16344 ;;		Unchanged: 0/0
 16345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;Total ram usage:        0 bytes
 16351 ;; Hardware stack levels used:    1
 16352 ;; This function calls:
 16353 ;;		Nothing
 16354 ;; This function is called by:
 16355 ;;		_PIN_MANAGER_Initialize
 16356 ;;		_IOCAF1_ISR
 16357 ;; This function uses a non-reentrant model
 16358 ;;
 16359                           
 16360                           
 16361                           ;psect for function _IOCAF1_DefaultInterruptHandler
 16362  1F5B                     _IOCAF1_DefaultInterruptHandler:
 16363  1F5B                     i1l189:	
 16364                           ;incstack = 0
 16365                           ; Regs used in _IOCAF1_DefaultInterruptHandler: []
 16366                           
 16367  1F5B  0008               	return
 16368  1F5C                     __end_of_IOCAF1_DefaultInterruptHandler:
 16369                           
 16370                           	psect	text60
 16371  1F64                     __ptext60:	
 16372 ;; *************** function _ctrl_izq2 *****************
 16373 ;; Defined at:
 16374 ;;		line 200 in file "main.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		None
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;Total ram usage:        0 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; This function calls:
 16395 ;;		Nothing
 16396 ;; This function is called by:
 16397 ;;		_main
 16398 ;;		_IOCAF1_ISR
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           
 16403                           ;psect for function _ctrl_izq2
 16404  1F64                     _ctrl_izq2:
 16405  1F64                     i1l3809:	
 16406                           ;incstack = 0
 16407                           ; Regs used in _ctrl_izq2: []
 16408                           
 16409                           
 16410                           ;main.c: 201:     movimiento_jugador2 = izquierda;
 16411  1F64  0021               	movlb	1	; select bank1
 16412  1F65  01CD               	clrf	_movimiento_jugador2^(0+128)
 16413  1F66  0ACD               	incf	_movimiento_jugador2^(0+128),f
 16414  1F67                     i1l456:
 16415  1F67  0008               	return
 16416  1F68                     __end_of_ctrl_izq2:
 16417  007E                     btemp	set	126	;btemp
 16418  007E                     int$flags	set	126
 16419  007E                     wtemp0	set	126
 16420                           
 16421                           	psect	config
 16422                           
 16423                           ;Config register CONFIG1 @ 0x8007
 16424                           ;	External Oscillator mode selection bits
 16425                           ;	FEXTOSC = OFF, Oscillator not enabled
 16426                           ;	Power-up default value for COSC bits
 16427                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16428                           ;	Clock Out Enable bit
 16429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16430                           ;	Clock Switch Enable bit
 16431                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16432                           ;	Fail-Safe Clock Monitor Enable bit
 16433                           ;	FCMEN = ON, FSCM timer enabled
 16434  8007                     	org	32775
 16435  8007  3FEC               	dw	16364
 16436                           
 16437                           ;Config register CONFIG2 @ 0x8008
 16438                           ;	Master Clear Enable bit
 16439                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16440                           ;	Power-up Timer Enable bit
 16441                           ;	PWRTE = OFF, PWRT disabled
 16442                           ;	Low-Power BOR enable bit
 16443                           ;	LPBOREN = OFF, ULPBOR disabled
 16444                           ;	Brown-out reset enable bits
 16445                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16446                           ;	Brown-out Reset Voltage Selection
 16447                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16448                           ;	Zero-cross detect disable
 16449                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16450                           ;	Peripheral Pin Select one-way control
 16451                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16452                           ;	Stack Overflow/Underflow Reset Enable bit
 16453                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16454                           ;	Background Debugger
 16455                           ;	DEBUG = OFF, Background Debugger disabled
 16456  8008                     	org	32776
 16457  8008  3FFF               	dw	16383
 16458                           
 16459                           ;Config register CONFIG3 @ 0x8009
 16460                           ;	WDT Period Select bits
 16461                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16462                           ;	WDT operating mode
 16463                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16464                           ;	WDT Window Select bits
 16465                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16466                           ;	WDT input clock selector
 16467                           ;	WDTCCS = SC, Software Control
 16468  8009                     	org	32777
 16469  8009  3F9F               	dw	16287
 16470                           
 16471                           ;Config register CONFIG4 @ 0x800A
 16472                           ;	UserNVM self-write protection bits
 16473                           ;	WRT = OFF, Write protection off
 16474                           ;	Scanner Enable bit
 16475                           ;	SCANE = available, Scanner module is available for use
 16476                           ;	Low Voltage Programming Enable bit
 16477                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16478  800A                     	org	32778
 16479  800A  3FFF               	dw	16383
 16480                           
 16481                           ;Config register CONFIG5 @ 0x800B
 16482                           ;	UserNVM Program memory code protection bit
 16483                           ;	CP = OFF, Program Memory code protection disabled
 16484                           ;	DataNVM code protection bit
 16485                           ;	CPD = OFF, Data EEPROM code protection disabled
 16486  800B                     	org	32779
 16487  800B  3FFF               	dw	16383

Data Sizes:
    Strings     245
    Constant    1395
    Data        38
    BSS         56
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      80
    BANK1            80     18      76
    BANK2            80      0      42
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1902_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    tft_begin@addr	PTR const unsigned char  size(2) Largest target is 111
		 -> initcmd(CODE[111]), 

    display_drawCustomChar@c	PTR unsigned char  size(2) Largest target is 12
		 -> bolita(BANK1[12]), jugador2(BANK1[10]), jugador1(BANK2[10]), 

    display_customChar@c	PTR const unsigned char  size(2) Largest target is 12
		 -> bolita(BANK1[12]), jugador2(BANK1[10]), jugador1(BANK2[10]), 

    disp_texto@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> STR_14(CODE[18]), STR_13(CODE[28]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[30]), STR_9(CODE[29]), STR_8(CODE[29]), STR_7(CODE[18]), 
		 -> STR_6(CODE[8]), STR_5(CODE[3]), STR_4(CODE[11]), STR_3(CODE[10]), 
		 -> STR_2(CODE[15]), marcador(BANK1[3]), 

    moverJugador@jugador	PTR struct . size(2) Largest target is 10
		 -> jugador2(BANK1[10]), jugador1(BANK2[10]), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der(), IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der(), Absolute function(), IOCCF5_DefaultInterruptHandler(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq(), Absolute function(), IOCBF4_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der2(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der2(), Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq2(), IOCAF1_DefaultInterruptHandler(), 

    IOCAF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq2(), Absolute function(), IOCAF1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_display_drawCustomChar
    _tft_begin->_writeCommand
    _moverJugador->_display_drawCustomChar
    _dibujarMarcador->_disp_texto
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setRotation->_writeCommand
    _fillRect->_setAddrWindow
    _drawVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_writeCommand
    _writeCommand->_SPI1_ExchangeByte
    _PIN_MANAGER_Initialize->_IOCAF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _IOCCF5_ISR->_ctrl_der
    _IOCAF2_ISR->_ctrl_der2

Critical Paths under _main in BANK0

    _main->_dibujarMarcador
    _moverJugador->_display_drawCustomChar
    _display_drawCustomChar->_display_customChar
    _display_customChar->_fillRect
    _fillScreen->_fillRect
    _dibujarMarcador->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _disp_texto->_display_print
    _display_print->_fillRect
    _fillRect->_setAddrWindow
    _drawVLine->_setAddrWindow
    _drawPixel->_setAddrWindow

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dibujarMarcador
    _dibujarMarcador->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  121576
                                             13 BANK1      5     5      0
         _IOCAF1_SetInterruptHandler
         _IOCAF2_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
                    _dibujarMarcador
             _display_drawCustomChar
                         _fillScreen
                       _moverJugador
                          _tft_begin
 ---------------------------------------------------------------------------------
 (1) _tft_begin                                            7     7      0     399
                                              3 COMMON     7     7      0
                  _SPI1_ExchangeByte
                           _endWrite
                         _startWrite
                       _writeCommand
 ---------------------------------------------------------------------------------
 (1) _moverJugador                                         8     6      2   35657
                                             63 BANK0      8     6      2
                             ___bmul
             _display_drawCustomChar
 ---------------------------------------------------------------------------------
 (2) _display_drawCustomChar                              21    10     11   34834
                                             11 COMMON     1     1      0
                                             43 BANK0     20     9     11
                 _display_customChar
                  _display_setCursor
               _display_setTextColor
                _display_setTextSize
 ---------------------------------------------------------------------------------
 (3) _display_customChar                                  17    15      2   29326
                                             26 BANK0     17    15      2
                             ___wmul
                          _drawPixel
                          _drawVLine
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     272
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _fillScreen                                           2     0      2    8715
                                             26 BANK0      2     0      2
                           _fillRect
 ---------------------------------------------------------------------------------
 (1) _dibujarMarcador                                      6     5      1   40491
                                             77 BANK0      2     1      1
                                              9 BANK1      4     4      0
                         _disp_texto
                  _display_setCursor
               _display_setTextColor
              _display_setTextColor2
                _display_setTextSize
                        _setRotation
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    7182
                                             70 BANK0      7     1      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    6750
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    6331
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4813
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2752
                                             10 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              9 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     370
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _setRotation                                          3     3      0     167
                                              3 COMMON     3     3      0
                  _SPI1_ExchangeByte
                           _endWrite
                         _startWrite
                       _writeCommand
 ---------------------------------------------------------------------------------
 (3) _display_setTextSize                                  5     5      0      68
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _display_setTextColor2                                2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _display_setTextColor                                 4     0      4     500
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _display_setCursor                                    4     0      4     804
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _disp_texto                                           6     4      2   30856
                                             11 COMMON     1     1      0
                                             42 BANK0      5     3      2
                      _display_print
 ---------------------------------------------------------------------------------
 (3) _display_print                                       16    16      0   29379
                                             26 BANK0     16    16      0
                             ___wmul
                          _drawPixel
                          _drawVLine
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            20    10     10    6974
                                              6 BANK0     20    10     10
                  _SPI1_ExchangeByte
                             ___lmul
                             ___wmul (ARG)
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _drawVLine                                           14     6      8    7065
                                              6 BANK0     14     6      8
                  _SPI1_ExchangeByte
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            6     0      6   10768
                                              6 BANK0      6     0      6
                  _SPI1_ExchangeByte
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (2) _startWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _setAddrWindow                                       14     6      8    1911
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
                  _SPI1_ExchangeByte
                       _writeCommand
 ---------------------------------------------------------------------------------
 (2) _writeCommand                                         1     1      0      62
                                              2 COMMON     1     1      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _endWrite                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3996
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     696
         _IOCAF1_SetInterruptHandler
         _IOCAF2_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF1_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0      88
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF1_ISR
                         _IOCAF2_ISR
                         _IOCBF4_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF5_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
                           _ctrl_der *
 ---------------------------------------------------------------------------------
 (13) _ctrl_der                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                           _ctrl_izq *
 ---------------------------------------------------------------------------------
 (13) _ctrl_izq                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
                          _ctrl_der2 *
 ---------------------------------------------------------------------------------
 (13) _ctrl_der2                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCAF1_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF1_DefaultInterruptHandler *
                          _ctrl_izq2 *
 ---------------------------------------------------------------------------------
 (13) _ctrl_izq2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCAF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF1_SetInterruptHandler
   _IOCAF2_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCCF5_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF1_SetInterruptHandler
       _IOCAF2_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _SPI1_Initialize
   _dibujarMarcador
     _disp_texto
       _display_print
         ___wmul
         _drawPixel
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _drawVLine
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _fillRect
           _SPI1_ExchangeByte
           ___lmul
           ___wmul (ARG)
           _endWrite (ARG)
           _setAddrWindow (ARG)
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite (ARG)
     _display_setCursor
     _display_setTextColor
     _display_setTextColor2
     _display_setTextSize
     _setRotation
       _SPI1_ExchangeByte
       _endWrite
       _startWrite
       _writeCommand
         _SPI1_ExchangeByte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _display_drawCustomChar
     _display_customChar
       ___wmul
       _drawPixel
         _SPI1_ExchangeByte
         _endWrite
         _setAddrWindow
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite
       _drawVLine
         _SPI1_ExchangeByte
         _endWrite
         _setAddrWindow
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite
       _fillRect
         _SPI1_ExchangeByte
         ___lmul
         ___wmul (ARG)
         _endWrite (ARG)
         _setAddrWindow (ARG)
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite (ARG)
     _display_setCursor
     _display_setTextColor
     _display_setTextSize
   _fillScreen
     _fillRect
       _SPI1_ExchangeByte
       ___lmul
       ___wmul (ARG)
       _endWrite (ARG)
       _setAddrWindow (ARG)
         _SPI1_ExchangeByte
         _writeCommand
           _SPI1_ExchangeByte
       _startWrite (ARG)
   _moverJugador
     ___bmul
     _display_drawCustomChar
       _display_customChar
         ___wmul
         _drawPixel
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _drawVLine
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _fillRect
           _SPI1_ExchangeByte
           ___lmul
           ___wmul (ARG)
           _endWrite (ARG)
           _setAddrWindow (ARG)
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite (ARG)
       _display_setCursor
       _display_setTextColor
       _display_setTextSize
   _tft_begin
     _SPI1_ExchangeByte
     _endWrite
     _startWrite
     _writeCommand
       _SPI1_ExchangeByte

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF1_ISR
       Absolute function(Fake) *
       _IOCAF1_DefaultInterruptHandler *
       _ctrl_izq2 *
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
       _ctrl_der2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _ctrl_izq *
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
       _ctrl_der *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     12      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2A       9       52.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 20 21:47:49 2021

                         _SPI1_ExchangeByte 1FD5                              ___bmul@product 0073  
                               drawVLine@hi 0032                                          l33 1FD4  
                                        l36 1F9F                                          l39 1F96  
                               drawVLine@lo 0033                          ?_SPI1_ExchangeByte 0070  
                       ___wmul@multiplicand 0073                                         l206 1F88  
                                       l216 1F8E                                         l252 12AA  
                                       l172 14A4                                         l260 1FDE  
                                       l261 1FE1                                         l248 103D  
                                       l186 1F7C                                         l258 1FD9  
                                       l442 0D86                                         l196 1F82  
                                       l462 13C5                                         l800 1FC7  
                                       l465 15D0                                         l474 1140  
                                       l468 164C                                         l741 05A4  
                                       l901 1535                                         l750 072A  
                                       l910 158E                                         l903 1543  
                                       l736 07D0                                         l760 0DD3  
                                       l913 15B1                                         l916 125B  
                                       l781 1FB3                                         l925 135A  
                                       l775 0FFF                                         l952 1724  
                                       l960 10F7                                         l864 1433  
                                       l929 1211                                         l945 1524  
                                       l953 16A3                                         l793 1065  
                                       l769 0F59                                         l890 1F6A  
                                       l794 106A                                         l892 1F6B  
                                       l885 1F61                                         l797 1FBD  
                                       l895 1FA9                                         l887 1F63  
                                       l898 1525                                         _abs 106B  
                                       _pad 0806                     __size_of_PMD_Initialize 0008  
                       ??_SPI1_ExchangeByte 0071                                         wreg 0009  
        __end_of_IOCAF2_SetInterruptHandler 1F83                  _IOCAF2_SetInterruptHandler 1F7D  
        __end_of_IOCBF4_SetInterruptHandler 1F89                  _IOCBF4_SetInterruptHandler 1F83  
                                      l1112 10C4                                        l1114 10D8  
                                      ?_abs 0074                                        l1212 0A38  
                                      l1213 0A49                                        l1126 11D0  
                                      l1225 0937                                        l1226 0948  
                                      l1138 1052                                        l4001 1455  
                                      l4011 145A                                        l4003 1456  
                                      l1612 0844                                        l4021 1473  
                                      l4013 146F                                        l4005 1457  
                                      l1614 085E                                        l1622 0AB9  
                                      l4031 1478                                        l4023 1474  
                                      l4015 1470                                        l4007 1458  
                                      l1623 0AD1                                        l1640 0BB9  
                                      l4041 1489                                        l4033 1479  
                                      l4025 1475                                        l4017 1471  
                                      l4009 1459                                        l1609 0822  
                                      l1617 0A93                                        l1626 0B42  
                                      l1618 0A9C                                        l4051 1F9B  
                                      l4043 1490                                        l4035 147A  
                                      l4027 1476                                        l4019 1472  
                                      l1572 1084                                        l4221 1290  
                                      l4213 125D                                        l4053 1F9E  
                                      l4045 1497                                        l4037 147B  
                                      l4029 1477                                        l3501 09BC  
                                      l1654 119A                                        l1582 07F9  
                                      l4223 12A8                                        l4215 1262  
                                      l4047 1F97                                        l4039 1482  
                                      l3511 09F6                                        l3503 09C4  
                                      l1575 1084                                        l1647 17FF  
                                      l4217 1280                                        l4049 1F9A  
                                      l4129 1FBE                                        l3513 0A06  
                                      l3505 09C8                                        l3521 085F  
                                      l3441 12C4                                        l3433 12AB  
                                      l6001 0CBF                                        l1666 12F9  
                                      l1674 1169                                        l4219 1281  
                                      l3515 0A07                                        l3507 09CC  
                                      l3531 08B4                                        l3523 0860  
                                      l3443 12E1                                        l3435 12B0  
                                      l1683 109E                                        l6011 0CFF  
                                      l6003 0CC9                                        l5301 124D  
                                      l3509 09D4                                        l3517 0A15  
                                      l3541 08D4                                        l3533 08C1  
                                      l3525 086A                                        l1677 0002  
                                      l3445 12F1                                        l3437 12B5  
                                      l4181 1048                                        l6021 0D27  
                                      l6013 0D00                                        l6005 0CEF  
                                      l4191 1FCB                                        l5303 1252  
                                      l5311 11A8                                        l3519 0A1A  
                                      l3543 08F6                                        l3535 08C4  
                                      l3527 088B                                        l3439 12BA  
                                      l3463 1086                                        l4183 104A  
                                      l4175 103F                                        l6031 0D49  
                                      l6023 0D2C                                        l6015 0D09  
                                      l6007 0CF6                                        l3801 1F83  
                                      l4193 1FCE                                        l5241 1FDF  
                                      l5305 1257                                        l5401 1521  
                                      l5313 11B1                                        l3545 0906  
                                      l3537 08CC                                        l3529 0895  
                                      l3473 106B                                        l3465 108B  
                                      l5321 0A4C                                        l4185 1051  
                                      l4177 1040                                        l6033 0D51  
                                      l6025 0D36                                        l6017 0D0F  
                                      l6009 0CF9                                        l3803 1F89  
                                      l4195 1FD1                                        l5315 11B8  
                                      l5307 119B                                        l5411 1662  
                                      l5403 164D                                        l3491 097F  
                                      l3483 0949                                        l3539 08D0  
                                      l3547 0914                                        l3475 1078  
                                      l5251 1159                                        l3467 108F  
                                      l5331 0AAB                                        l5323 0A5C  
                                      l4179 1044                                        l6051 0D8B  
                                      l6035 0D67                                        l6027 0D3B  
                                      l6019 0D23                                        l4189 1FC8  
                                      l5253 1FA1                                        l5317 11C7  
                                      l5309 11A4                                        l5421 16C7  
                                      l5413 1670                                        l5405 1654  
                                      l3813 1FAA                                        l3821 1FB4  
                                      l3493 099E                                        l3485 094A  
                                      l3549 0919                                        l5245 1143  
                                      l3469 1098                                        l5261 080D  
                                      l5341 0AD6                                        l5333 0AB1  
                                      l5325 0A6F                                        l6053 0D93  
                                      l6037 0D6A                                        l6045 0D7A  
                                      l6029 0D40                                        ?_pad 0027  
                                      l5239 1FD6                                        l5255 1FA3  
                                      l5431 1721                                        l5423 16CA  
                                      l5415 167F                                        l5407 165A  
                                      l3815 1054                                        l3495 09A2  
                                      l3487 0954                                        l5247 1146  
                                      l5271 0831                                        l5263 0816  
                                      l5351 0B15                                        l5343 0AD9  
                                      l5335 0AC1                                        l5327 0A75  
                                      l6055 0D9A                                        l6047 0D7F  
                                      l6039 0D6F                         display_customChar@c 003A  
                                      l5281 1F68                                        l5257 1FA7  
                                      l5441 1204                                        l5433 11D1  
                                      l5425 16DE                                        l5417 1699  
                                      l5409 165E                                        l5521 056D  
                                      l5513 055C                                        l5505 0549  
                                      l3817 1059                                        l3497 09AC  
                                      l3489 0975                                        l5249 1154  
                                      l5273 0836                                        l5265 081B  
                                      l5353 0B50                                        l5361 0B7D  
                                      l5345 0ADE                                        l5337 0AC7  
                                      l5329 0A98                                        l5601 0DDC  
                                      l6049 0D82                                        l5451 10C0  
                                      l5291 1237                                        l5283 1212  
                                      l5443 1209                                        l5435 11DF  
                                      l5427 16F8                                        l5419 16BD  
                                      l5531 057F                                        l5515 0563  
                                      l5507 054F                                        l3819 105E  
                                      l3499 09B9                                        l5275 0849  
                                      l5267 0820                                        l5259 0808  
                                      l5371 0B99                                        l5363 0B84  
                                      l5355 0B5D                                        l5347 0B0D  
                                      l5339 0ACC                                        l5611 0E81  
                                      l5603 0DFE                                        l5453 10C9  
                                      l5293 123C                                        l5285 122B  
                                      l5445 120E                                        l5437 11ED  
                                      l5381 14B3                                        l5429 1702  
                                      l5541 05AD                                        l5533 05A3  
                                      l5525 057E                                        l5509 0556  
                                      l5701 1119                                        l5277 0852  
                                      l5269 0825                                        l5373 0B9D  
                                      l5365 0B89                                        l5357 0B6A  
                                      l5349 0B11                                        l5461 1727  
                                      l5621 0EE1                                        l5613 0ED0  
                                      l5605 0E4E                         display_customChar@i 004A  
                                      l5455 10CE                                        l5447 10BA  
                                      l5295 1241                                        l5287 122F  
                                      l5439 11F0                                        l5391 14E9  
                                      l5383 14C1                                        l5551 0652  
                                      l5543 05CF                                        l5519 0567  
                                      l5703 111F                                        l5367 0B8E  
                                      l5375 0BA6                                        l5359 0B78  
                                      l5471 175B                                        l5463 1738  
                                      l5711 07E1                                        l5631 0F94  
                                      l5623 0EE7                                        l5615 0ED5  
                                      l5607 0E59                         display_customChar@j 0049  
                                      l5457 10D4                                        l5449 10BC  
                                      l5297 1245                                        l5289 1233  
                                      l5393 14F3                                        l5385 14C7  
                                      l5561 06B2                                        l5553 06A1  
                                      l5545 061F                                        l5705 112E  
                                      l5369 0B94                                        l5481 17A7  
                                      l5473 176C                                        l5465 1740  
                                      l5713 07E3                                        l5801 1361  
                                      l5641 0FD8                                        l5633 0F99  
                                      l5625 0EF2                                        l5617 0ED7  
                                      l5609 0E5F                                        l5299 1249  
                                      l5395 14F6                                        l5387 14CB  
                                      l5379 14A5                                        l5571 0765  
                                      l5563 06B8                                        l5555 06A6  
                                      l5547 062A                                        l5539 05A8  
                                      l5483 17B8                                        l5491 17D1  
                                      l5475 1774                                        l5467 1745  
                                      l5651 1188                                        l5715 07F0  
                                      l5707 07D3                                        l5811 1389  
                                      l5803 136A                                        l5643 0FFA  
                                      l5635 0F9F                                        l5627 0EF8  
                                      l5619 0EDD                                        l3797 1F77  
                                      l3981 1037                                        l5397 150B  
                                      l5389 14CF                                        l5581 07A9  
                                      l5573 076A                                        l5565 06C3  
                                      l5557 06A8                                        l5549 0630  
                                      l5493 17D9                                        l5485 17C0  
                                      l5477 178D                                        l5469 1749  
                                      l5653 1192                                        l5645 116C  
                                      l5709 07DF                                        l5813 1393  
                                      l5805 1374                                        l5637 0FC5  
                                      l5629 0F1A                                        l5661 13F5  
                                      l5821 15B2                                        l3799 1F7D  
                                      l3991 1439                                        l3975 1F8F  
                                      l3983 1039                                        l5399 1514  
                                      l5583 07CB                                        l5575 0770  
                                      l5567 06C9                                        l5559 06AE  
                                      l5487 17CB                                        l5647 1170  
                                      l5815 139A                                        l5807 1378  
                                      l5639 0FC7                                        l5591 0DC5  
                                      l5671 141E                                        l5663 13FA  
                                      l5831 1614                                        l5823 15B4  
                                      l5751 1527                                        l3993 1451  
                                      l3985 103B                                        l3977 1029  
                                      l5577 0796                                        l5569 06EB  
                                      l5681 130F                                        l5497 17DC  
                                      l5649 1174                                        l5817 13B9  
                                      l5809 1381                                        l5593 0DD2  
                                      l5585 0DC3                                        l5673 1426  
                                      l5665 1406                                        l5657 13C6  
                                      l5833 1620                                        l5825 15BE  
                                      l5761 1554                                        l5753 1533  
                                      l3995 1452                                        l3987 1434  
                                      l3979 1036                                        l5579 0798  
                                      l5683 131C                                        l5691 134C  
                                      l5499 17F5                                        l5819 13C1  
                                      l5675 142E                                        l5667 140E  
                                      l5659 13EA                                        l5827 15FB  
                                      l5771 1571                                        l5763 1558  
                                      l5755 1541                                        l3997 1453  
                                      l3989 1437                                        l5693 134F  
                                      l5685 1329                                        l5677 12FB  
                                      l5669 1416                                        l5829 1605  
                                      l5781 1592                                        l5773 1575  
                                      l5765 1560                                        l5757 154F  
                                      l5941 0BBC                                        l3999 1454  
                                      l5695 1353                                        l6663 133E  
                                      l5679 1302                                        l5599 0DD7  
                                      l5791 15A7                                        l5775 157B  
                                      l5767 1565                                        l5759 1551  
                                      l5951 0BCC                                        l5943 0BBF  
                                      l5689 1336                                        l5793 15AC  
                                      l5777 1583                                        l5769 1569  
                                      l5961 0C07                                        l5953 0BD3  
                                      l5945 0BC3                                        l5795 15B0  
                                      l5779 1587                                        l5787 159F  
                                      l5971 0C6B                                        l5963 0C36  
                                      l5955 0BDA                                        l5947 0BC4  
                                      l5939 0BBA                                        l5797 10D9  
                                      l5789 15A4                                        l5981 0C82  
                                      l5973 0C71                                        l5965 0C5D  
                                      l5957 0BE1                                        l5949 0BC5  
                                      l5799 135D                                        l5991 0CA0  
                                      l5983 0C84                                        l5975 0C74  
                                      l5967 0C63                                        l5959 0BEB  
                                      l5993 0CA8                                        l5985 0C89  
                                      l5977 0C7A                                        l5969 0C68  
                                      l5995 0CA9                                        l5987 0C8E  
                                      l5979 0C7C                                        l5997 0CB5  
                                      l5989 0C9B                                        l5999 0CBD  
                                      STR_1 195E                                        STR_2 1932  
                                      STR_3 194C                                        STR_4 1941  
                                      STR_6 1956                                        STR_7 1920  
                                      STR_8 188D                                        STR_9 18AA  
                                      _LATA 0016                                        _LATB 0017  
                                      _LATC 0018                                        _LATD 0019  
                                      _LATE 001A                                        u2410 12B0  
                                      u2411 12AF                                        u2420 12B5  
                                      u2421 12B4                                        u2510 097F  
                                      u2430 12C4                                        u2511 097E  
                                      u2431 12C3                                        u3160 1059  
                                      u2600 086A                                        u2440 12E1  
                                      u5000 1169                                        u3161 1058  
                                      u2601 0869                                        u2441 12E0  
                                      u5001 1168                                        u2530 09A9  
                                      u5010 080D                                        u5011 080C  
                                      u2540 09B9                                        u2620 0895  
                                      u5020 081B                                        u5100 0A68  
                                      u2541 09B8                                        u2621 0894  
                                      u2445 12DD                                        u5021 081A  
                                      u2550 09CC                                        u2470 1098  
                                      u5030 0844                                        u5110 0A75  
                                      u2551 09CB                                        u2471 1097  
                                      u5031 0843                                        u5111 0A74  
                                      u2560 09F6                                        u2640 08C1  
                                      u2480 1078                                        u5040 0849  
                                      u5200 0B78                                        u3600 1044  
                                      u2561 09F5                                        u2641 08C0  
                                      u2481 1077                                        u5041 0848  
                                      u5201 0B77                                        u3601 1043  
                                      u5050 11A8                                        u2570 0A15  
                                      u2490 0954                                        u2650 08D4  
                                      u5210 0B7D                                        u5130 0A98  
                                      u3610 1051                                        u5051 11A7  
                                      u2571 0A14                                        u2491 0953  
                                      u2651 08D3                                        u5035 0840  
                                      u5211 0B7C                                        u5131 0A97  
                                      u3611 1050                                        u5300 1654  
                                      u2580 0A1A                                        u2660 08F6  
                                      u5220 0B84                                        u5140 0AAB  
                                      u5301 1653                                        u2581 0A19  
                                      u2565 09F2                                        u2661 08F5  
                                      u2485 1074                                        u5221 0B83  
                                      u5205 0B74                                        u5141 0AAA  
                                      u5310 165A                                        u2670 0914  
                                      u5230 0B89                                        u5150 0AC7  
                                      u6110 0C68                                        u5311 1659  
                                      u2671 0913                                        u5231 0B88  
                                      u5151 0AC6                                        u6111 0C67  
                                      u5080 11C7                                        u5320 1670  
                                      u2680 0919                                        u5240 0B94  
                                      u5160 0ACC                                        u6200 0D09  
                                      u6120 0C71                                        u5081 11C6  
                                      u5065 11B2                                        u5321 166F  
                                      u2681 0918                                        u2665 08F2  
                                      u5241 0B93                                        u5161 0ACB  
                                      u5145 0AA7                                        u6201 0D08  
                                      u6121 0C70                                        u5250 14B3  
                                      u5330 167E                                        u5170 0B50  
                                      u5090 0A67                                        u6210 0D0F  
                                      u6130 0C7A                                        u5251 14B2  
                                      u5075 11B9                                        u5331 167D  
                                      u5171 0B4F                                        u5091 0A65  
                                      u6211 0D0E                                        u6131 0C79  
                                      u3660 1262                                        u5420 10D4  
                                      u5260 14C1                                        u5340 1699  
                                      u5500 0563                                        u5180 0B5D  
                                      u6220 0D23                                        u6140 0C82  
                                      _PMD0 0796                                        u3661 1261  
                                      u5421 10D3                                        u5405 10C5  
                                      u5261 14C0                                        u5341 1698  
                                      u5325 166C                                        u5501 0562  
                                      u5181 0B5C                                        u6221 0D22  
                                      u6141 0C81                                        _PMD1 0797  
                                      u5270 14C7                                        u5350 16BD  
                                      u5510 056D                                        u5190 0B6A  
                                      u5430 1738                                        u6230 0D49  
                                      u6150 0C89                                        _PMD2 0798  
                                      u5415 10CA                                        u5271 14C6  
                                      u5255 14AF                                        u5351 16BC  
                                      u5335 167A                                        u5511 056C  
                                      u5191 0B69                                        u5175 0B4C  
                                      u5431 1737                                        u7007 1365  
                                      u6231 0D48                                        u6151 0C88  
                                      _PMD3 0799                                        u5280 14E9  
                                      u5360 1721                                        u5600 0765  
                                      u5520 05A8                                        u5440 175B  
                                      u6240 0D51                                        u6160 0C8E  
                                      _PMD4 079A                                        u5281 14E8  
                                      u5265 14BD                                        u5361 1720  
                                      u5345 1695                                        u5601 0764  
                                      u5521 05A7                                        u5441 175A  
                                      u6241 0D50                                        u6225 0D1F  
                                      u6161 0C8D                                        _PMD5 079B  
                                      u5370 11DF                                        u5290 1521  
                                      u5610 0770                                        u5530 05AD  
                                      u5450 176C                                        u6250 0D67  
                                      u6170 0CA0                                        u5371 11DE  
                                      u5291 1520                                        u5355 16B9  
                                      u5611 076F                                        u5531 05AC  
                                      u5195 0B66                                        u5451 176B  
                                      u6251 0D66                                        u6171 0C9F  
                                      u5380 11ED                                        u5620 0796  
                                      u5540 062A                                        u5460 17B8  
                                      u5700 0EF2                                        u6260 0D7F  
                                      u6180 0CF6                                        u5381 11EC  
                                      u5285 14E5                                        u5621 0795  
                                      u5605 0761                                        u5541 0629  
                                      u5461 17B7                                        u5701 0EF1  
                                      u6261 0D7E                                        u6181 0CF5  
                                      u5390 10C0                                        u5630 07CB  
                                      u5550 0630                                        u5470 054F  
                                      u5710 0EF8                                        u6270 0D8B  
                                      u6190 0CFF                                        u5391 10BF  
                                      u5375 11DB                                        u5631 07CA  
                                      u5551 062F                                        u5471 054E  
                                      u5711 0EF7                                        u6271 0D8A  
                                      u6255 0D63                                        u6191 0CFE  
                                      u5560 06AE                                        u5480 0556  
                                      u5720 0F94                                        u5640 0DD7  
                                      u5385 11E9                                        u5625 0792  
                                      u5561 06AD                                        u5545 0626  
                                      u5481 0555                                        u5721 0F93  
                                      u5705 0EEE                                        u5641 0DD6  
                                      u5570 06B8                                        u5490 055B  
                                      u5730 0F9F                                        u5650 0DDC  
                                      u5635 07C7                                        u5571 06B7  
                                      u5491 055A                                        u5731 0F9E  
                                      u5651 0DDB                                        u5580 06C3  
                                      u5740 0FC5                                        u5660 0E59  
                                      u5900 1605                                        u5581 06C2  
                                      u5741 0FC4                                        u5725 0F90  
                                      u5661 0E58                                        u5901 1604  
                                      u5590 06C9                                        u5750 0FFA  
                                      u5670 0E5F                                        u5591 06C8  
                                      u5751 0FF9                                        u5671 0E5E  
                                      u5760 1192                                        u5680 0EDD  
                                      u5585 06BF                                        u5761 1191  
                                      u5745 0FC1                                        u5681 0EDC  
                                      u5665 0E55                                        u5770 1140  
                                      u5690 0EE7                                        u5771 113F  
                                      u5755 0FF6                                        u5691 0EE6  
                                      u5860 158E                                        u5861 158D  
                                      u4990 1FDE                                        u5870 1592  
                                      u4991 1FDD                                        u5871 1591  
                                      u5880 15A4                                        u5881 15A3  
                                      u5890 15BE                                        u5891 15BD  
                                      u6957 0C94                                        u6967 152C  
                                      u6977 153A                                        u6987 1548  
                                      u6997 1597                                 disp_texto@i 007B  
                                      _WPUA 0F39                                        _WPUB 0F44  
                                      _WPUC 0F4F                                        _WPUD 0F5A  
                                      _WPUE 0F65                              ?_display_print 0070  
                                      abs@a 0074                                        _dbuf 0120  
                                      _main 0BBA                                        _dtoa 0A4A  
                                      _font 0047                       ??_display_setTextSize 0071  
                                      _prec 00BF                                        _nout 00BB  
                                      pad@i 002A                                        pad@p 0028  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      pad@w 002C                                        btemp 007E  
                                      _wrap 00A4            ??_IOCCF5_DefaultInterruptHandler 0070  
           ?_IOCCF5_DefaultInterruptHandler 0070                                        start 0014  
                 __end_of_SPI1_ExchangeByte 1FE2                           ___bmul@multiplier 0074  
                                     ??_abs 0076                                       ??_pad 007A  
                       __size_of_IOCAF1_ISR 000F              __size_of_OSCILLATOR_Initialize 0009  
                       __size_of_IOCAF2_ISR 000F               __end_of_OSCILLATOR_Initialize 1FA0  
                       __size_of_IOCBF4_ISR 000F                         __size_of_IOCCF5_ISR 000F  
                           __end_of___aodiv 0A4A                                       ?_main 0070  
                                     ?_dtoa 0030                             __end_of___aomod 0949  
                                     STR_10 186F                                       STR_11 18E3  
                                     STR_12 18F9                                       STR_13 18C7  
                                     STR_14 190E            SPI1_Open@spi1UniqueConfiguration 0074  
                          ?_dibujarMarcador 006D                                       i1l203 1019  
                                     i1l213 1028                                       i1l301 0012  
                                     i1l209 1F5D                                       i1l219 1000  
                                     i1l183 1FF0                                       i1l193 1FFF  
                                     i1l450 1F60                                       i1l179 1118  
                                     i1l189 1F5B                                       i1l453 1F70  
                                     i1l199 1F5C                                       i1l456 1F67  
                                     i1l459 1F76                              drawVLine@color 002C  
           __size_of_display_drawCustomChar 006E                                       _OSCEN 0891  
                              vfpfcnvrt@fmt 004E                                       _TRISA 0011  
                                     _TRISB 0012                                       _TRISC 0013  
                                     _TRISD 0014                                       _TRISE 0015  
                        __size_of_SPI1_Open 004F                         ___lmul@multiplicand 0075  
                    ??_display_setTextColor 0075                     __end_of_PIN_MANAGER_IOC 1119  
                                     _flags 00C1                                       _fputc 12AB  
                           __end_of_initcmd 186F                                       _fputs 1141  
                                     pad@fp 002E                                       _width 00BD  
                                     _putch 0002                                       dtoa@d 0030  
                                     dtoa@i 004C                                       dtoa@n 0044  
                                     dtoa@p 003E                                       dtoa@s 0042  
                                     dtoa@w 0040                                       pclath 000A  
           display_drawCustomChar@prev_size 005E                                       status 0003  
                                     wtemp0 007E                             __end_of_sprintf 07FA  
                     __size_of_writeCommand 000A                    __size_of_SPI1_Initialize 0015  
                           __initialization 0016                                __end_of_main 0DC3  
                              __end_of_dtoa 0BBA                                __end_of_font 0547  
               ?_INTERRUPT_InterruptManager 0070                  __end_of_display_customChar 1000  
                                    ??_main 00DF                                      ??_dtoa 0038  
                              _writeCommand 1FA0                                      ?_fputc 0071  
                           ??_display_print 003A                                      ?_fputs 0079  
                                    _ANSELA 0F38                                      ?_putch 0070  
                                    _ANSELB 0F43                                      _ANSELC 0F4E  
                                    _ANSELD 0F59                                      _ANSELE 0F64  
                       moverJugador@jugador 005F                                      _RC3PPS 0F23  
                                    _ODCONA 0F3A                                      _ODCONB 0F45  
                                    _ODCONC 0F50                                      _RC6PPS 0F26  
                                    _ODCOND 0F5B                                      _ODCONE 0F66  
                                    i1l4201 1100                                      i1l4211 1115  
                                    i1l4203 1105                                      i1l4061 1FF1  
                                    i1l4205 1108                                      i1l4055 1FE2  
                                    i1l4063 1FF8                                      i1l4071 1017  
                                    i1l4207 110D                                      i1l4057 1FE9  
                                    i1l4065 1FFD                                      i1l4073 101A  
                                    i1l4209 1110                                      i1l4059 1FEE  
                                    i1l4067 100B                                      i1l4075 1021  
                                    i1l4069 1012                                      i1l4077 1026  
                                    i1l4415 0006                                      i1l4417 000B  
                                    i1l3811 1F71                                      i1l4419 000F  
                                    i1l3805 1F5E                                      i1l4197 10F8  
                                    i1l3807 1F6C                                      i1l4199 10FD  
                                    i1l3809 1F64                                      _INLVLA 0F3C  
                                    _INLVLB 0F47                                      _INLVLC 0F52  
                                    _INLVLD 0F5D                                      _INLVLE 0F68  
                                    u350_20 1021                                      u350_21 1020  
                              ?_setRotation 0070                                      u362_20 10FD  
                                    u362_21 10FC                                      u347_20 1FE9  
                                    u363_20 1105                                      u347_21 1FE8  
                                    u363_21 1104                                      u348_20 1FF8  
                                    u364_20 110D                                      u348_21 1FF7  
                                    u364_21 110C                                      u349_20 1012  
                                    u365_20 1115                                      u349_21 1011  
                                    u365_21 1114                                      u392_20 000B  
                                    u392_21 000A                                      u393_20 000F  
                                    u393_21 000E                                      _OSCFRQ 0893  
                                    u250lld 0973                                      u252lld 099E  
                                    u261lld 0889                                      u263lld 08B4  
                                    u512lld 0A93                                      u259lld 0A38  
                                    u269lld 0937                      _display_drawCustomChar 13C6  
                __size_of_SPI1_ExchangeByte 000D                            __end_of_endWrite 1F6C  
                         __end_of_SPI1_Open 12AB                            __end_of_fillRect 1725  
                              vfprintf@cfmt 0064                                      ___bmul 103E  
                                    ___lmul 119B                                   ??___aodiv 0071  
                   ??_display_setTextColor2 0073                                   ??___aomod 0071  
                                    ___wmul 10BA                            __end_of_ctrl_der 1F71  
                                    __width 00C9                                      _bolita 00A5  
                          __end_of_ctrl_izq 1F61                                      pad@buf 0027  
                                    dtoa@fp 003B                                      _strlen 1085  
          display_drawCustomChar@prev_color 005A                                      fputc@c 0071  
                            _PMD_Initialize 1F8F                                      fputs@c 0023  
                                    fputs@i 0024                                      fputs@s 0026  
                                    putch@c 0070                            __end_of_vfprintf 119B  
IOCCF5_SetInterruptHandler@InterruptHandler 0071  IOCBF4_SetInterruptHandler@InterruptHandler 0071  
IOCAF2_SetInterruptHandler@InterruptHandler 0071  IOCAF1_SetInterruptHandler@InterruptHandler 0071  
                          ?_PIN_MANAGER_IOC 0070                                   ??_sprintf 006C  
                              ??_IOCAF1_ISR 0070                                ??_IOCAF2_ISR 0071  
                              ??_IOCBF4_ISR 0070                                ??_IOCCF5_ISR 0071  
                         _SYSTEM_Initialize 1FC8                     __end_of__initialization 0043  
    __end_of_IOCAF1_DefaultInterruptHandler 1F5C     __size_of_IOCAF1_DefaultInterruptHandler 0001  
            _IOCAF1_DefaultInterruptHandler 1F5B                          ?_SYSTEM_Initialize 0070  
                       ___bmul@multiplicand 0071                              __pcstackCOMMON 0070  
                              __pidataBANK0 0003                                __pidataBANK1 109F  
                              __pidataBANK2 1001                         ??_SYSTEM_Initialize 0073  
                             __end_of_fputc 12FA                               __end_of_fputs 116A  
                         ??_SPI1_Initialize 0071                               __end_of_putch 0003  
                    __end_of_PMD_Initialize 1F97                          __end_of_IOCAF1_ISR 1FF1  
                        __end_of_IOCAF2_ISR 2000                       SPI1_ExchangeByte@data 0071  
                            drawPixel@color 002A                          __end_of_IOCBF4_ISR 101A  
                        __end_of_IOCCF5_ISR 1029                          _spi1_configuration 1964  
                display_drawCustomChar@size 0055                          __size_of_drawVLine 0080  
               ?_IOCAF2_SetInterruptHandler 0071            ??_IOCAF2_DefaultInterruptHandler 0070  
           ?_IOCAF2_DefaultInterruptHandler 0070                          __size_of_drawPixel 0041  
               ?_IOCBF4_SetInterruptHandler 0071                                     ??_fputc 0074  
                 __end_of_SYSTEM_Initialize 1FD5                                     ??_fputs 0020  
                            setAddrWindow@h 0079                              setAddrWindow@w 0077  
                                   ??_putch 0071                                  __pbssBANK1 00BB  
                                __pbssBANK2 0120                     display_drawCustomChar@c 004F  
                   display_drawCustomChar@x 004B                     display_drawCustomChar@y 004D  
                        __size_of_ctrl_der2 0006                          __size_of_ctrl_izq2 0004  
                                __pmaintext 0BBA                                     ?___bmul 0071  
                                   ?___lmul 0071                                     ?___wmul 0071  
                                __pintentry 0004                      __size_of_setAddrWindow 004A  
                    display_customChar@line 0048                              ___lmul@product 0020  
          ??_IOCBF4_DefaultInterruptHandler 0070             ?_IOCBF4_DefaultInterruptHandler 0070  
    __end_of_IOCCF5_DefaultInterruptHandler 1001     __size_of_IOCCF5_DefaultInterruptHandler 0001  
            _IOCCF5_DefaultInterruptHandler 1000                             ?_PMD_Initialize 0070  
                                   ?_strlen 0071                          __size_of_tft_begin 008D  
                                _fillScreen 10D9                                     _OSCCON1 088D  
                                   _OSCCON3 088F                          __size_of_vfpfcnvrt 00DB  
                                   _OSCTUNE 0892                                     _SSP1ADD 018D  
                                   _SLRCONA 0F3B                                     _SLRCONB 0F46  
                                   _SLRCONC 0F51                                     _SLRCOND 0F5C  
                                   _SLRCONE 0F67                                  _disp_texto 1119  
                                   _SSP1BUF 018C                                   ?_endWrite 0070  
               __end_of_display_setTextSize 106B                                   ?_fillRect 0026  
                                 ?_ctrl_der 0070                                   ?_ctrl_izq 0070  
                      __size_of_setRotation 0061                               ?_moverJugador 005F  
                      display_setTextSize@s 0075                           __end_of_drawVLine 1525  
                         __end_of_drawPixel 1212                             __size_of___bmul 0015  
                                   ___aodiv 0949                                     ___aomod 085F  
                           __size_of___lmul 0036                             __size_of___wmul 001F  
                                 ?_vfprintf 005E                                     __height 00C7  
                         __end_of_ctrl_der2 1F77                                     __ptext1 1525  
                                   __ptext2 15B2                                     __ptext3 13C6  
                                   __ptext4 0DC3                                     __ptext5 103E  
                                   __ptext6 10D9                                     __ptext7 135B  
                                   __ptext8 07D1                                     __ptext9 116A  
                         __end_of_ctrl_izq2 1F68                             __size_of_strlen 001A  
                     _OSCILLATOR_Initialize 1F97                                __size_of_abs 001A  
                              __size_of_pad 0059                                     _initcmd 1800  
                  ??_PIN_MANAGER_Initialize 0073                                   _IOCAFbits 0F3F  
                                 _IOCBFbits 0F4A                                   _IOCCFbits 0F55  
                                 _IOCANbits 0F3E                                   _IOCAPbits 0F3D  
                                 _IOCBNbits 0F49                                   _IOCBPbits 0F48  
                                 _IOCCNbits 0F54                                   _IOCCPbits 0F53  
                                ??_endWrite 0071                                  ??_fillRect 0030  
                        _display_customChar 0DC3                  __size_of_SYSTEM_Initialize 000D  
                                   _sprintf 07D1                                     clrloop0 0801  
                  __size_of_dibujarMarcador 006B                               _setAddrWindow 1212  
                      end_of_initialization 0043                     ?_display_drawCustomChar 004B  
             __size_of_display_setTextColor 000A                                  ??_ctrl_der 0070  
                                ??_ctrl_izq 0070                                     fputc@fp 0073  
                                   init_ram 07FA                                     fputs@fp 0079  
                                   initloop 07FB                         ?_display_customChar 003A  
                         __end_of_tft_begin 15B2                              ??_moverJugador 0061  
                         __end_of_vfpfcnvrt 1800                                  ??_vfprintf 0061  
                                 _SPI1_Open 125C                              display_print@c 0047  
                            display_print@i 0049                              display_print@j 0048  
            __size_of_display_setTextColor2 000A               __end_of_display_setTextColor2 1FC8  
                                   strlen@a 0074                                     strlen@s 0075  
                                 _PORTAbits 000C                        ??_display_customChar 003C  
                               ?_fillScreen 003A                                  fillRect@hi 0038  
                                fillRect@lo 0039                                  fillRect@px 0034  
                                 _TRISCbits 0013                ??_IOCAF1_SetInterruptHandler 0073  
                               ?_disp_texto 004A              __end_of_display_drawCustomChar 1434  
                            ?_setAddrWindow 0073                                  drawVLine@h 002A  
                                drawVLine@x 0026                                  drawVLine@y 0028  
              ??_IOCCF5_SetInterruptHandler 0073                            disp_texto@cadena 004A  
                                _startWrite 1F61                       __end_of_display_print 07D1  
                                drawPixel@x 0026                                  drawPixel@y 0028  
                           _SPI1_Initialize 1029               display_drawCustomChar@prev_bg 005C  
                            __end_of___bmul 1053                                  ?_SPI1_Open 0070  
                            __end_of___lmul 11D1                                 vfpfcnvrt@ap 004F  
                               vfpfcnvrt@fp 005D                                 vfpfcnvrt@ll 0055  
                            __end_of___wmul 10D9         __size_of_IOCAF1_SetInterruptHandler 0006  
                    ?_OSCILLATOR_Initialize 0070         __size_of_IOCCF5_SetInterruptHandler 0006  
                            __end_of_strlen 109F                         start_initialization 0016  
           __size_of_PIN_MANAGER_Initialize 0071                                 __end_of_abs 1085  
                               __end_of_pad 085F                      display_setTextColor2@c 0071  
                    display_setTextColor@bg 0073                          display_setCursor@x 0071  
                        display_setCursor@y 0073                 display_drawCustomChar@color 0051  
                         ??_dibujarMarcador 00DB                    __size_of_PIN_MANAGER_IOC 0021  
                       __size_of_fillScreen 001F      __end_of_IOCAF2_DefaultInterruptHandler 1F5D  
   __size_of_IOCAF2_DefaultInterruptHandler 0001              _IOCAF2_DefaultInterruptHandler 1F5C  
                               vfprintf@fmt 005E                                    ??___bmul 0072  
                          ??_PMD_Initialize 0071                                    ??___lmul 0079  
                                  ??___wmul 0075                         __size_of_disp_texto 0028  
                               __pdataBANK0 006F                                 __pdataBANK1 00A0  
                               __pdataBANK2 0140                     dibujarMarcador@puntaje1 006E  
                   dibujarMarcador@puntaje2 006D                             setAddrWindow@x1 0073  
                           setAddrWindow@x2 0022                             setAddrWindow@y1 0075  
                           setAddrWindow@y2 0024                    _display_setTextSize$1270 0073  
                                  ??_strlen 0073                        __end_of_moverJugador 164D  
                               __pbssCOMMON 007C                    display_drawCustomChar@bg 0053  
                                 ___latbits 0002                             ??_setAddrWindow 0020  
                             __pcstackBANK0 0020                               __pcstackBANK1 00D2  
                          ___aodiv@dividend 0028                     __end_of_SPI1_Initialize 103E  
    __end_of_IOCBF4_DefaultInterruptHandler 1F5E     __size_of_IOCBF4_DefaultInterruptHandler 0001  
            _IOCBF4_DefaultInterruptHandler 1F5D                                 ?_startWrite 0070  
                         __size_of_endWrite 0004                           __size_of_fillRect 00D8  
                                 __pnvBANK1 00E4                           __size_of_ctrl_der 0005  
                         __size_of_ctrl_izq 0003                     _IOCAF1_InterruptHandler 00EA  
                   _IOCCF5_InterruptHandler 00E4                      _PIN_MANAGER_Initialize 1434  
                                 _dtoa$1971 003C                                    ?___aodiv 0020  
                                  ?___aomod 0020                            ___aodiv@quotient 0074  
                               ??_SPI1_Open 0071                                   _drawVLine 14A5  
              ??_INTERRUPT_InterruptManager 0071                                   _drawPixel 11D1  
                         __size_of_vfprintf 0031          __end_of_IOCAF1_SetInterruptHandler 1F7D  
                _IOCAF1_SetInterruptHandler 1F77                                   _ctrl_der2 1F71  
                                 _ctrl_izq2 1F64                               ?_writeCommand 0070  
        __end_of_IOCCF5_SetInterruptHandler 1F8F                  _IOCCF5_SetInterruptHandler 1F89  
                                  ?_sprintf 0066                              __size_of_fputc 004F  
                            __size_of_fputs 0029                              __size_of_putch 0001  
                             ??_setRotation 0073                              ___wmul@product 0075  
                                  _LATAbits 0016                                    _LATCbits 0018  
                             moverJugador@y 0066                            tft_begin@numArgs 0075  
                                 clear_ram0 0800                __size_of_display_setTextSize 0018  
                                  _PIE0bits 0716                                  tft_begin@x 0076  
       __size_of_INTERRUPT_InterruptManager 0010                                    _PIR0bits 070C  
                                  _PIR3bits 070F                           _display_setCursor 1FAA  
                                 _tft_begin 1525                                    _SSP1CON1 0190  
                                  _SSP1CON2 0191                __end_of_display_setTextColor 1FBE  
                                  _SSP1STAT 018F                          ?_display_setCursor 0071  
                         ??_PIN_MANAGER_IOC 0071                                   fillRect@h 002C  
                                 fillRect@w 002A                                   fillRect@x 0026  
                                 fillRect@y 0028                                  ?_drawVLine 0026  
                                 _vfpfcnvrt 1725                         __size_of_startWrite 0003  
                                ?_drawPixel 0026                                   _textcolor 00A2  
                         ___wmul@multiplier 0071                                ??_fillScreen 007B  
                       ??_display_setCursor 0075                                  ?_ctrl_der2 0070  
              display_drawCustomChar@prev_x 0056                display_drawCustomChar@prev_y 0058  
                            ??_writeCommand 0072                                  ?_ctrl_izq2 0070  
                              ??_disp_texto 004C                            ?_SPI1_Initialize 0070  
                         ___lmul@multiplier 0071                       display_setTextColor@c 0071  
                 __end_of_display_setCursor 1FB4                                setRotation@m 0075  
                       __end_of_setRotation 135B                          __end_of_fillScreen 10F8  
                                vfprintf@ap 0060                                  vfprintf@fp 0063  
                                ?_tft_begin 0070                             writeCommand@cmd 0072  
                   ??_OSCILLATOR_Initialize 0071                            __size_of___aodiv 0101  
                          __size_of___aomod 00EA                          __end_of_disp_texto 1141  
                     __size_of_moverJugador 009B                                  ?_vfpfcnvrt 004E  
                           ___aodiv@divisor 0020                             ___aodiv@counter 0072  
                     _display_setTextColor2 1FBE                 __size_of_display_customChar 023D  
                                sprintf@fmt 0066                           display_print@line 0046  
                   _IOCAF2_InterruptHandler 00E8                     _IOCBF4_InterruptHandler 00E6  
                           _dibujarMarcador 135B                ??_IOCAF2_SetInterruptHandler 0073  
                                  _endWrite 1F68                                    __ptext10 1725  
                                  __ptext11 0A4A                                    __ptext20 12FA  
                                  __ptext12 0806                                    __ptext21 1053  
                                  __ptext13 1085                                    __ptext30 11D1  
                                  __ptext22 1FBE                                    __ptext14 1141  
                                  __ptext31 1F61                                    __ptext23 1FB4  
                                  __ptext15 12AB                                    __ptext40 1434  
                                  __ptext32 1212                                    __ptext24 1FAA  
                                  __ptext16 0002                                    __ptext41 1F89  
                                  __ptext33 1FA0                                    __ptext25 1119  
                                  __ptext17 106B                                    __ptext50 1000  
                                  __ptext42 1F83                                    __ptext34 1FD5  
                                  __ptext26 0547                                    __ptext18 085F  
                                  __ptext51 1F6C                                    __ptext43 1F7D  
                                  __ptext35 1F68                                    __ptext27 164D  
                                  __ptext19 0949                                    __ptext60 1F64  
                                  __ptext52 100B                                    __ptext44 1F77  
                                  __ptext36 10BA                                    __ptext28 119B  
                                  __ptext53 1F5D                                    __ptext45 1F97  
                                  __ptext37 1FC8                                    __ptext29 14A5  
                                  __ptext54 1F5E                                    __ptext46 125C  
                                  __ptext38 1029                                    __ptext55 1FF1  
                                  __ptext39 1F8F                                    __ptext56 1F5C  
                                  __ptext48 10F8                                    __ptext57 1F71  
                                  __ptext49 101A                                    __ptext58 1FE2  
                                  __ptext59 1F5B                               tft_begin@addr 0078  
                              _SSP1CON1bits 0190                                    _fillRect 164D  
              ??_IOCBF4_SetInterruptHandler 0073                                  _IOCAF1_ISR 1FE2  
                                _IOCAF2_ISR 1FF1                            __size_of_sprintf 0029  
                                _IOCBF4_ISR 100B                                  _IOCCF5_ISR 101A  
                                  _marcador 00CF                                    _ctrl_der 1F6C  
                                  _ctrl_izq 1F5E                               __size_of_main 0209  
                             __size_of_dtoa 0170                                    _cursor_x 00C5  
                                  _cursor_y 00C3                                    _jugador1 0140  
                                  _jugador2 00B1                                _moverJugador 15B2  
                                  int$flags 007E                                    _rotation 00CE  
                                  _puntaje1 00CC                                    _puntaje2 00CB  
                                  _vfprintf 116A                                    _textsize 006F  
        __end_of_INTERRUPT_InterruptManager 0014                  _INTERRUPT_InterruptManager 0004  
                               ??_drawVLine 002E                                 ??_drawPixel 007B  
       __size_of_IOCAF2_SetInterruptHandler 0006                      __size_of_display_print 028A  
       __size_of_IOCBF4_SetInterruptHandler 0006                            ___aomod@dividend 0028  
                                _INTCONbits 000B                                 ??_ctrl_der2 0070  
                               ??_ctrl_izq2 0070                              __pstringtext10 190E  
                            __pstringtext11 1920                              __pstringtext12 1932  
                            __pstringtext13 1941                              __pstringtext14 194C  
                            __pstringtext15 1956                              __pstringtext16 195E  
                            __pstringtext17 0000                                ??_startWrite 0071  
                      _display_setTextColor 1FB4                                    intlevel1 0000  
                                 sprintf@ap 00D4                                 _setRotation 12FA  
                              tft_begin@cmd 0077                     ?_PIN_MANAGER_Initialize 0070  
                           fillScreen@color 003A                  __size_of_display_setCursor 000A  
                      __end_of_writeCommand 1FAA                                 ??_tft_begin 0073  
                           ___aomod@divisor 0020                                 ??_vfpfcnvrt 0050  
                           ___aomod@counter 0072                               fillRect@color 002E  
                    ?_display_setTextColor2 0071                               __pstringtext1 0047  
                             __pstringtext2 1964                               __pstringtext3 1800  
                             __pstringtext4 186F                               __pstringtext5 188D  
                             __pstringtext6 18AA                               __pstringtext7 18C7  
                             __pstringtext8 18E3                               __pstringtext9 18F9  
                        __end_of_startWrite 1F64                     __end_of_dibujarMarcador 13C6  
                  ??_display_drawCustomChar 007B                                    sprintf@f 00D6  
                                  sprintf@s 00D5                         _display_setTextSize 1053  
                                _SSP1DATPPS 0EC6            ??_IOCAF1_DefaultInterruptHandler 0070  
           ?_IOCAF1_DefaultInterruptHandler 0070                                  _SSP1CLKPPS 0EC5  
               ?_IOCAF1_SetInterruptHandler 0071                       __end_of_setAddrWindow 125C  
               ?_IOCCF5_SetInterruptHandler 0071                       ?_display_setTextColor 0071  
                               ?_IOCAF1_ISR 0070                                 ?_IOCAF2_ISR 0070  
                              ___aodiv@sign 0073                                 ?_IOCBF4_ISR 0070  
                               ?_IOCCF5_ISR 0070              __end_of_PIN_MANAGER_Initialize 14A5  
                             _display_print 0547                             _PIN_MANAGER_IOC 10F8  
                       _movimiento_jugador1 007C                         _movimiento_jugador2 00CD  
                      ?_display_setTextSize 0070                                ___aomod@sign 0073  
                __end_of_spi1_configuration 1968                                 _textbgcolor 00A0  
