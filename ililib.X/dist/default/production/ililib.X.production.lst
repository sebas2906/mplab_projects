

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 16 21:57:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	intentry,global,class=CODE,delta=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.20
   102                           ; Generated 30/04/2020 GMT
   103                           ; 
   104                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F18875 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001C                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  008C                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0110                     	;# 
   195  0110                     	;# 
   196  0111                     	;# 
   197  0112                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0114                     	;# 
   202  0115                     	;# 
   203  0116                     	;# 
   204  0116                     	;# 
   205  0117                     	;# 
   206  0119                     	;# 
   207  0119                     	;# 
   208  0119                     	;# 
   209  011A                     	;# 
   210  011A                     	;# 
   211  011A                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011C                     	;# 
   218  011C                     	;# 
   219  011C                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  011D                     	;# 
   223  011E                     	;# 
   224  011E                     	;# 
   225  011E                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  018E                     	;# 
   234  018F                     	;# 
   235  0190                     	;# 
   236  0191                     	;# 
   237  0192                     	;# 
   238  0196                     	;# 
   239  0197                     	;# 
   240  0198                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  020C                     	;# 
   246  020C                     	;# 
   247  020D                     	;# 
   248  020E                     	;# 
   249  020F                     	;# 
   250  020F                     	;# 
   251  0210                     	;# 
   252  0210                     	;# 
   253  0211                     	;# 
   254  0211                     	;# 
   255  0212                     	;# 
   256  0212                     	;# 
   257  0213                     	;# 
   258  0214                     	;# 
   259  0215                     	;# 
   260  0215                     	;# 
   261  0216                     	;# 
   262  0216                     	;# 
   263  0217                     	;# 
   264  0217                     	;# 
   265  0218                     	;# 
   266  0218                     	;# 
   267  0219                     	;# 
   268  021A                     	;# 
   269  021B                     	;# 
   270  021B                     	;# 
   271  021C                     	;# 
   272  021C                     	;# 
   273  021D                     	;# 
   274  021D                     	;# 
   275  021E                     	;# 
   276  021F                     	;# 
   277  028C                     	;# 
   278  028C                     	;# 
   279  028D                     	;# 
   280  028D                     	;# 
   281  028E                     	;# 
   282  028F                     	;# 
   283  0290                     	;# 
   284  0290                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0293                     	;# 
   290  0294                     	;# 
   291  0295                     	;# 
   292  0296                     	;# 
   293  0296                     	;# 
   294  0297                     	;# 
   295  0298                     	;# 
   296  0298                     	;# 
   297  0299                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  029B                     	;# 
   301  029C                     	;# 
   302  029C                     	;# 
   303  029D                     	;# 
   304  030C                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  030F                     	;# 
   309  0310                     	;# 
   310  0310                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  0314                     	;# 
   315  0314                     	;# 
   316  0315                     	;# 
   317  0316                     	;# 
   318  0317                     	;# 
   319  0318                     	;# 
   320  0318                     	;# 
   321  0319                     	;# 
   322  031A                     	;# 
   323  031B                     	;# 
   324  031C                     	;# 
   325  031C                     	;# 
   326  031D                     	;# 
   327  031E                     	;# 
   328  031F                     	;# 
   329  038C                     	;# 
   330  038C                     	;# 
   331  038D                     	;# 
   332  038E                     	;# 
   333  0390                     	;# 
   334  0390                     	;# 
   335  0391                     	;# 
   336  0392                     	;# 
   337  040C                     	;# 
   338  040D                     	;# 
   339  040E                     	;# 
   340  040F                     	;# 
   341  0410                     	;# 
   342  0411                     	;# 
   343  0416                     	;# 
   344  0416                     	;# 
   345  0417                     	;# 
   346  0418                     	;# 
   347  0418                     	;# 
   348  0419                     	;# 
   349  041A                     	;# 
   350  041A                     	;# 
   351  041B                     	;# 
   352  041C                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  041F                     	;# 
   357  048C                     	;# 
   358  048C                     	;# 
   359  048D                     	;# 
   360  048E                     	;# 
   361  048F                     	;# 
   362  048F                     	;# 
   363  0490                     	;# 
   364  0491                     	;# 
   365  0492                     	;# 
   366  0492                     	;# 
   367  0493                     	;# 
   368  0494                     	;# 
   369  0495                     	;# 
   370  0495                     	;# 
   371  0496                     	;# 
   372  0497                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  050C                     	;# 
   380  050C                     	;# 
   381  050D                     	;# 
   382  050E                     	;# 
   383  050F                     	;# 
   384  050F                     	;# 
   385  0510                     	;# 
   386  0511                     	;# 
   387  0512                     	;# 
   388  0512                     	;# 
   389  0513                     	;# 
   390  0514                     	;# 
   391  0515                     	;# 
   392  0515                     	;# 
   393  0516                     	;# 
   394  0517                     	;# 
   395  0518                     	;# 
   396  0519                     	;# 
   397  051A                     	;# 
   398  051B                     	;# 
   399  051C                     	;# 
   400  051D                     	;# 
   401  058C                     	;# 
   402  058C                     	;# 
   403  058D                     	;# 
   404  058E                     	;# 
   405  058F                     	;# 
   406  058F                     	;# 
   407  0590                     	;# 
   408  0591                     	;# 
   409  0592                     	;# 
   410  0593                     	;# 
   411  060C                     	;# 
   412  060D                     	;# 
   413  060E                     	;# 
   414  060F                     	;# 
   415  0610                     	;# 
   416  0611                     	;# 
   417  0612                     	;# 
   418  0613                     	;# 
   419  0614                     	;# 
   420  0616                     	;# 
   421  0617                     	;# 
   422  0618                     	;# 
   423  0619                     	;# 
   424  061A                     	;# 
   425  061B                     	;# 
   426  061C                     	;# 
   427  061D                     	;# 
   428  061E                     	;# 
   429  068C                     	;# 
   430  068D                     	;# 
   431  068E                     	;# 
   432  068F                     	;# 
   433  0690                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  070C                     	;# 
   439  070D                     	;# 
   440  070E                     	;# 
   441  070F                     	;# 
   442  0710                     	;# 
   443  0711                     	;# 
   444  0712                     	;# 
   445  0713                     	;# 
   446  0714                     	;# 
   447  0716                     	;# 
   448  0717                     	;# 
   449  0718                     	;# 
   450  0719                     	;# 
   451  071A                     	;# 
   452  071B                     	;# 
   453  071C                     	;# 
   454  071D                     	;# 
   455  071E                     	;# 
   456  0796                     	;# 
   457  0797                     	;# 
   458  0798                     	;# 
   459  0799                     	;# 
   460  079A                     	;# 
   461  079B                     	;# 
   462  080C                     	;# 
   463  080D                     	;# 
   464  080E                     	;# 
   465  080F                     	;# 
   466  0810                     	;# 
   467  0811                     	;# 
   468  0812                     	;# 
   469  0813                     	;# 
   470  0814                     	;# 
   471  081A                     	;# 
   472  081B                     	;# 
   473  081C                     	;# 
   474  081D                     	;# 
   475  081E                     	;# 
   476  081F                     	;# 
   477  088C                     	;# 
   478  088D                     	;# 
   479  088E                     	;# 
   480  088F                     	;# 
   481  0890                     	;# 
   482  0891                     	;# 
   483  0892                     	;# 
   484  0893                     	;# 
   485  0895                     	;# 
   486  0896                     	;# 
   487  0897                     	;# 
   488  0898                     	;# 
   489  0899                     	;# 
   490  089A                     	;# 
   491  089B                     	;# 
   492  090C                     	;# 
   493  090E                     	;# 
   494  090F                     	;# 
   495  091F                     	;# 
   496  091F                     	;# 
   497  098F                     	;# 
   498  098F                     	;# 
   499  0990                     	;# 
   500  0991                     	;# 
   501  0992                     	;# 
   502  0993                     	;# 
   503  0994                     	;# 
   504  0995                     	;# 
   505  0996                     	;# 
   506  0997                     	;# 
   507  0E0F                     	;# 
   508  0E10                     	;# 
   509  0E11                     	;# 
   510  0E12                     	;# 
   511  0E13                     	;# 
   512  0E14                     	;# 
   513  0E15                     	;# 
   514  0E16                     	;# 
   515  0E17                     	;# 
   516  0E18                     	;# 
   517  0E19                     	;# 
   518  0E1A                     	;# 
   519  0E1B                     	;# 
   520  0E1C                     	;# 
   521  0E1D                     	;# 
   522  0E1E                     	;# 
   523  0E1F                     	;# 
   524  0E20                     	;# 
   525  0E21                     	;# 
   526  0E22                     	;# 
   527  0E23                     	;# 
   528  0E24                     	;# 
   529  0E25                     	;# 
   530  0E26                     	;# 
   531  0E27                     	;# 
   532  0E28                     	;# 
   533  0E29                     	;# 
   534  0E2A                     	;# 
   535  0E2B                     	;# 
   536  0E2C                     	;# 
   537  0E2D                     	;# 
   538  0E2E                     	;# 
   539  0E2F                     	;# 
   540  0E30                     	;# 
   541  0E31                     	;# 
   542  0E32                     	;# 
   543  0E33                     	;# 
   544  0E34                     	;# 
   545  0E35                     	;# 
   546  0E36                     	;# 
   547  0E37                     	;# 
   548  0E8F                     	;# 
   549  0E90                     	;# 
   550  0E91                     	;# 
   551  0E92                     	;# 
   552  0E93                     	;# 
   553  0E94                     	;# 
   554  0E95                     	;# 
   555  0E96                     	;# 
   556  0E97                     	;# 
   557  0E9C                     	;# 
   558  0E9D                     	;# 
   559  0E9E                     	;# 
   560  0EA1                     	;# 
   561  0EA2                     	;# 
   562  0EA3                     	;# 
   563  0EA4                     	;# 
   564  0EA5                     	;# 
   565  0EA9                     	;# 
   566  0EAA                     	;# 
   567  0EAB                     	;# 
   568  0EAC                     	;# 
   569  0EB1                     	;# 
   570  0EB2                     	;# 
   571  0EB3                     	;# 
   572  0EB8                     	;# 
   573  0EB9                     	;# 
   574  0EBA                     	;# 
   575  0EBB                     	;# 
   576  0EBC                     	;# 
   577  0EBD                     	;# 
   578  0EBE                     	;# 
   579  0EC3                     	;# 
   580  0EC5                     	;# 
   581  0EC6                     	;# 
   582  0EC7                     	;# 
   583  0EC8                     	;# 
   584  0EC9                     	;# 
   585  0ECA                     	;# 
   586  0ECB                     	;# 
   587  0ECC                     	;# 
   588  0F10                     	;# 
   589  0F11                     	;# 
   590  0F12                     	;# 
   591  0F13                     	;# 
   592  0F14                     	;# 
   593  0F15                     	;# 
   594  0F16                     	;# 
   595  0F17                     	;# 
   596  0F18                     	;# 
   597  0F19                     	;# 
   598  0F1A                     	;# 
   599  0F1B                     	;# 
   600  0F1C                     	;# 
   601  0F1D                     	;# 
   602  0F1E                     	;# 
   603  0F1F                     	;# 
   604  0F20                     	;# 
   605  0F21                     	;# 
   606  0F22                     	;# 
   607  0F23                     	;# 
   608  0F24                     	;# 
   609  0F25                     	;# 
   610  0F26                     	;# 
   611  0F27                     	;# 
   612  0F28                     	;# 
   613  0F29                     	;# 
   614  0F2A                     	;# 
   615  0F2B                     	;# 
   616  0F2C                     	;# 
   617  0F2D                     	;# 
   618  0F2E                     	;# 
   619  0F2F                     	;# 
   620  0F30                     	;# 
   621  0F31                     	;# 
   622  0F32                     	;# 
   623  0F38                     	;# 
   624  0F39                     	;# 
   625  0F3A                     	;# 
   626  0F3B                     	;# 
   627  0F3C                     	;# 
   628  0F3D                     	;# 
   629  0F3E                     	;# 
   630  0F3F                     	;# 
   631  0F40                     	;# 
   632  0F41                     	;# 
   633  0F43                     	;# 
   634  0F44                     	;# 
   635  0F45                     	;# 
   636  0F46                     	;# 
   637  0F47                     	;# 
   638  0F48                     	;# 
   639  0F49                     	;# 
   640  0F4A                     	;# 
   641  0F4B                     	;# 
   642  0F4C                     	;# 
   643  0F4E                     	;# 
   644  0F4F                     	;# 
   645  0F50                     	;# 
   646  0F51                     	;# 
   647  0F52                     	;# 
   648  0F53                     	;# 
   649  0F54                     	;# 
   650  0F55                     	;# 
   651  0F56                     	;# 
   652  0F57                     	;# 
   653  0F59                     	;# 
   654  0F5A                     	;# 
   655  0F5B                     	;# 
   656  0F5C                     	;# 
   657  0F5D                     	;# 
   658  0F61                     	;# 
   659  0F62                     	;# 
   660  0F64                     	;# 
   661  0F65                     	;# 
   662  0F66                     	;# 
   663  0F67                     	;# 
   664  0F68                     	;# 
   665  0F69                     	;# 
   666  0F6A                     	;# 
   667  0F6B                     	;# 
   668  0F6C                     	;# 
   669  0F6D                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000F                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0014                     	;# 
   702  0015                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001C                     	;# 
   709  001C                     	;# 
   710  001D                     	;# 
   711  001D                     	;# 
   712  001E                     	;# 
   713  001F                     	;# 
   714  008C                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  008E                     	;# 
   719  008F                     	;# 
   720  0090                     	;# 
   721  0090                     	;# 
   722  0091                     	;# 
   723  0093                     	;# 
   724  0094                     	;# 
   725  0095                     	;# 
   726  0096                     	;# 
   727  0097                     	;# 
   728  0098                     	;# 
   729  0099                     	;# 
   730  009A                     	;# 
   731  009B                     	;# 
   732  009C                     	;# 
   733  009D                     	;# 
   734  009E                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  010E                     	;# 
   739  010F                     	;# 
   740  0110                     	;# 
   741  0110                     	;# 
   742  0111                     	;# 
   743  0112                     	;# 
   744  0112                     	;# 
   745  0113                     	;# 
   746  0114                     	;# 
   747  0114                     	;# 
   748  0115                     	;# 
   749  0116                     	;# 
   750  0116                     	;# 
   751  0117                     	;# 
   752  0119                     	;# 
   753  0119                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011A                     	;# 
   757  011A                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011C                     	;# 
   764  011C                     	;# 
   765  011C                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  011E                     	;# 
   770  011E                     	;# 
   771  011E                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  018C                     	;# 
   778  018D                     	;# 
   779  018E                     	;# 
   780  018F                     	;# 
   781  0190                     	;# 
   782  0191                     	;# 
   783  0192                     	;# 
   784  0196                     	;# 
   785  0197                     	;# 
   786  0198                     	;# 
   787  0199                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  020C                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  020E                     	;# 
   795  020F                     	;# 
   796  020F                     	;# 
   797  0210                     	;# 
   798  0210                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0216                     	;# 
   808  0216                     	;# 
   809  0217                     	;# 
   810  0217                     	;# 
   811  0218                     	;# 
   812  0218                     	;# 
   813  0219                     	;# 
   814  021A                     	;# 
   815  021B                     	;# 
   816  021B                     	;# 
   817  021C                     	;# 
   818  021C                     	;# 
   819  021D                     	;# 
   820  021D                     	;# 
   821  021E                     	;# 
   822  021F                     	;# 
   823  028C                     	;# 
   824  028C                     	;# 
   825  028D                     	;# 
   826  028D                     	;# 
   827  028E                     	;# 
   828  028F                     	;# 
   829  0290                     	;# 
   830  0290                     	;# 
   831  0291                     	;# 
   832  0292                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0293                     	;# 
   836  0294                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0296                     	;# 
   840  0297                     	;# 
   841  0298                     	;# 
   842  0298                     	;# 
   843  0299                     	;# 
   844  0299                     	;# 
   845  029A                     	;# 
   846  029B                     	;# 
   847  029C                     	;# 
   848  029C                     	;# 
   849  029D                     	;# 
   850  030C                     	;# 
   851  030C                     	;# 
   852  030D                     	;# 
   853  030E                     	;# 
   854  030F                     	;# 
   855  0310                     	;# 
   856  0310                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0314                     	;# 
   861  0314                     	;# 
   862  0315                     	;# 
   863  0316                     	;# 
   864  0317                     	;# 
   865  0318                     	;# 
   866  0318                     	;# 
   867  0319                     	;# 
   868  031A                     	;# 
   869  031B                     	;# 
   870  031C                     	;# 
   871  031C                     	;# 
   872  031D                     	;# 
   873  031E                     	;# 
   874  031F                     	;# 
   875  038C                     	;# 
   876  038C                     	;# 
   877  038D                     	;# 
   878  038E                     	;# 
   879  0390                     	;# 
   880  0390                     	;# 
   881  0391                     	;# 
   882  0392                     	;# 
   883  040C                     	;# 
   884  040D                     	;# 
   885  040E                     	;# 
   886  040F                     	;# 
   887  0410                     	;# 
   888  0411                     	;# 
   889  0416                     	;# 
   890  0416                     	;# 
   891  0417                     	;# 
   892  0418                     	;# 
   893  0418                     	;# 
   894  0419                     	;# 
   895  041A                     	;# 
   896  041A                     	;# 
   897  041B                     	;# 
   898  041C                     	;# 
   899  041C                     	;# 
   900  041D                     	;# 
   901  041E                     	;# 
   902  041F                     	;# 
   903  048C                     	;# 
   904  048C                     	;# 
   905  048D                     	;# 
   906  048E                     	;# 
   907  048F                     	;# 
   908  048F                     	;# 
   909  0490                     	;# 
   910  0491                     	;# 
   911  0492                     	;# 
   912  0492                     	;# 
   913  0493                     	;# 
   914  0494                     	;# 
   915  0495                     	;# 
   916  0495                     	;# 
   917  0496                     	;# 
   918  0497                     	;# 
   919  0498                     	;# 
   920  0499                     	;# 
   921  049A                     	;# 
   922  049B                     	;# 
   923  049C                     	;# 
   924  049D                     	;# 
   925  050C                     	;# 
   926  050C                     	;# 
   927  050D                     	;# 
   928  050E                     	;# 
   929  050F                     	;# 
   930  050F                     	;# 
   931  0510                     	;# 
   932  0511                     	;# 
   933  0512                     	;# 
   934  0512                     	;# 
   935  0513                     	;# 
   936  0514                     	;# 
   937  0515                     	;# 
   938  0515                     	;# 
   939  0516                     	;# 
   940  0517                     	;# 
   941  0518                     	;# 
   942  0519                     	;# 
   943  051A                     	;# 
   944  051B                     	;# 
   945  051C                     	;# 
   946  051D                     	;# 
   947  058C                     	;# 
   948  058C                     	;# 
   949  058D                     	;# 
   950  058E                     	;# 
   951  058F                     	;# 
   952  058F                     	;# 
   953  0590                     	;# 
   954  0591                     	;# 
   955  0592                     	;# 
   956  0593                     	;# 
   957  060C                     	;# 
   958  060D                     	;# 
   959  060E                     	;# 
   960  060F                     	;# 
   961  0610                     	;# 
   962  0611                     	;# 
   963  0612                     	;# 
   964  0613                     	;# 
   965  0614                     	;# 
   966  0616                     	;# 
   967  0617                     	;# 
   968  0618                     	;# 
   969  0619                     	;# 
   970  061A                     	;# 
   971  061B                     	;# 
   972  061C                     	;# 
   973  061D                     	;# 
   974  061E                     	;# 
   975  068C                     	;# 
   976  068D                     	;# 
   977  068E                     	;# 
   978  068F                     	;# 
   979  0690                     	;# 
   980  0691                     	;# 
   981  0692                     	;# 
   982  0693                     	;# 
   983  0694                     	;# 
   984  070C                     	;# 
   985  070D                     	;# 
   986  070E                     	;# 
   987  070F                     	;# 
   988  0710                     	;# 
   989  0711                     	;# 
   990  0712                     	;# 
   991  0713                     	;# 
   992  0714                     	;# 
   993  0716                     	;# 
   994  0717                     	;# 
   995  0718                     	;# 
   996  0719                     	;# 
   997  071A                     	;# 
   998  071B                     	;# 
   999  071C                     	;# 
  1000  071D                     	;# 
  1001  071E                     	;# 
  1002  0796                     	;# 
  1003  0797                     	;# 
  1004  0798                     	;# 
  1005  0799                     	;# 
  1006  079A                     	;# 
  1007  079B                     	;# 
  1008  080C                     	;# 
  1009  080D                     	;# 
  1010  080E                     	;# 
  1011  080F                     	;# 
  1012  0810                     	;# 
  1013  0811                     	;# 
  1014  0812                     	;# 
  1015  0813                     	;# 
  1016  0814                     	;# 
  1017  081A                     	;# 
  1018  081B                     	;# 
  1019  081C                     	;# 
  1020  081D                     	;# 
  1021  081E                     	;# 
  1022  081F                     	;# 
  1023  088C                     	;# 
  1024  088D                     	;# 
  1025  088E                     	;# 
  1026  088F                     	;# 
  1027  0890                     	;# 
  1028  0891                     	;# 
  1029  0892                     	;# 
  1030  0893                     	;# 
  1031  0895                     	;# 
  1032  0896                     	;# 
  1033  0897                     	;# 
  1034  0898                     	;# 
  1035  0899                     	;# 
  1036  089A                     	;# 
  1037  089B                     	;# 
  1038  090C                     	;# 
  1039  090E                     	;# 
  1040  090F                     	;# 
  1041  091F                     	;# 
  1042  091F                     	;# 
  1043  098F                     	;# 
  1044  098F                     	;# 
  1045  0990                     	;# 
  1046  0991                     	;# 
  1047  0992                     	;# 
  1048  0993                     	;# 
  1049  0994                     	;# 
  1050  0995                     	;# 
  1051  0996                     	;# 
  1052  0997                     	;# 
  1053  0E0F                     	;# 
  1054  0E10                     	;# 
  1055  0E11                     	;# 
  1056  0E12                     	;# 
  1057  0E13                     	;# 
  1058  0E14                     	;# 
  1059  0E15                     	;# 
  1060  0E16                     	;# 
  1061  0E17                     	;# 
  1062  0E18                     	;# 
  1063  0E19                     	;# 
  1064  0E1A                     	;# 
  1065  0E1B                     	;# 
  1066  0E1C                     	;# 
  1067  0E1D                     	;# 
  1068  0E1E                     	;# 
  1069  0E1F                     	;# 
  1070  0E20                     	;# 
  1071  0E21                     	;# 
  1072  0E22                     	;# 
  1073  0E23                     	;# 
  1074  0E24                     	;# 
  1075  0E25                     	;# 
  1076  0E26                     	;# 
  1077  0E27                     	;# 
  1078  0E28                     	;# 
  1079  0E29                     	;# 
  1080  0E2A                     	;# 
  1081  0E2B                     	;# 
  1082  0E2C                     	;# 
  1083  0E2D                     	;# 
  1084  0E2E                     	;# 
  1085  0E2F                     	;# 
  1086  0E30                     	;# 
  1087  0E31                     	;# 
  1088  0E32                     	;# 
  1089  0E33                     	;# 
  1090  0E34                     	;# 
  1091  0E35                     	;# 
  1092  0E36                     	;# 
  1093  0E37                     	;# 
  1094  0E8F                     	;# 
  1095  0E90                     	;# 
  1096  0E91                     	;# 
  1097  0E92                     	;# 
  1098  0E93                     	;# 
  1099  0E94                     	;# 
  1100  0E95                     	;# 
  1101  0E96                     	;# 
  1102  0E97                     	;# 
  1103  0E9C                     	;# 
  1104  0E9D                     	;# 
  1105  0E9E                     	;# 
  1106  0EA1                     	;# 
  1107  0EA2                     	;# 
  1108  0EA3                     	;# 
  1109  0EA4                     	;# 
  1110  0EA5                     	;# 
  1111  0EA9                     	;# 
  1112  0EAA                     	;# 
  1113  0EAB                     	;# 
  1114  0EAC                     	;# 
  1115  0EB1                     	;# 
  1116  0EB2                     	;# 
  1117  0EB3                     	;# 
  1118  0EB8                     	;# 
  1119  0EB9                     	;# 
  1120  0EBA                     	;# 
  1121  0EBB                     	;# 
  1122  0EBC                     	;# 
  1123  0EBD                     	;# 
  1124  0EBE                     	;# 
  1125  0EC3                     	;# 
  1126  0EC5                     	;# 
  1127  0EC6                     	;# 
  1128  0EC7                     	;# 
  1129  0EC8                     	;# 
  1130  0EC9                     	;# 
  1131  0ECA                     	;# 
  1132  0ECB                     	;# 
  1133  0ECC                     	;# 
  1134  0F10                     	;# 
  1135  0F11                     	;# 
  1136  0F12                     	;# 
  1137  0F13                     	;# 
  1138  0F14                     	;# 
  1139  0F15                     	;# 
  1140  0F16                     	;# 
  1141  0F17                     	;# 
  1142  0F18                     	;# 
  1143  0F19                     	;# 
  1144  0F1A                     	;# 
  1145  0F1B                     	;# 
  1146  0F1C                     	;# 
  1147  0F1D                     	;# 
  1148  0F1E                     	;# 
  1149  0F1F                     	;# 
  1150  0F20                     	;# 
  1151  0F21                     	;# 
  1152  0F22                     	;# 
  1153  0F23                     	;# 
  1154  0F24                     	;# 
  1155  0F25                     	;# 
  1156  0F26                     	;# 
  1157  0F27                     	;# 
  1158  0F28                     	;# 
  1159  0F29                     	;# 
  1160  0F2A                     	;# 
  1161  0F2B                     	;# 
  1162  0F2C                     	;# 
  1163  0F2D                     	;# 
  1164  0F2E                     	;# 
  1165  0F2F                     	;# 
  1166  0F30                     	;# 
  1167  0F31                     	;# 
  1168  0F32                     	;# 
  1169  0F38                     	;# 
  1170  0F39                     	;# 
  1171  0F3A                     	;# 
  1172  0F3B                     	;# 
  1173  0F3C                     	;# 
  1174  0F3D                     	;# 
  1175  0F3E                     	;# 
  1176  0F3F                     	;# 
  1177  0F40                     	;# 
  1178  0F41                     	;# 
  1179  0F43                     	;# 
  1180  0F44                     	;# 
  1181  0F45                     	;# 
  1182  0F46                     	;# 
  1183  0F47                     	;# 
  1184  0F48                     	;# 
  1185  0F49                     	;# 
  1186  0F4A                     	;# 
  1187  0F4B                     	;# 
  1188  0F4C                     	;# 
  1189  0F4E                     	;# 
  1190  0F4F                     	;# 
  1191  0F50                     	;# 
  1192  0F51                     	;# 
  1193  0F52                     	;# 
  1194  0F53                     	;# 
  1195  0F54                     	;# 
  1196  0F55                     	;# 
  1197  0F56                     	;# 
  1198  0F57                     	;# 
  1199  0F59                     	;# 
  1200  0F5A                     	;# 
  1201  0F5B                     	;# 
  1202  0F5C                     	;# 
  1203  0F5D                     	;# 
  1204  0F61                     	;# 
  1205  0F62                     	;# 
  1206  0F64                     	;# 
  1207  0F65                     	;# 
  1208  0F66                     	;# 
  1209  0F67                     	;# 
  1210  0F68                     	;# 
  1211  0F69                     	;# 
  1212  0F6A                     	;# 
  1213  0F6B                     	;# 
  1214  0F6C                     	;# 
  1215  0F6D                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  000F                     	;# 
  1243  0010                     	;# 
  1244  0011                     	;# 
  1245  0012                     	;# 
  1246  0013                     	;# 
  1247  0014                     	;# 
  1248  0015                     	;# 
  1249  0016                     	;# 
  1250  0017                     	;# 
  1251  0018                     	;# 
  1252  0019                     	;# 
  1253  001A                     	;# 
  1254  001C                     	;# 
  1255  001C                     	;# 
  1256  001D                     	;# 
  1257  001D                     	;# 
  1258  001E                     	;# 
  1259  001F                     	;# 
  1260  008C                     	;# 
  1261  008C                     	;# 
  1262  008D                     	;# 
  1263  008E                     	;# 
  1264  008E                     	;# 
  1265  008F                     	;# 
  1266  0090                     	;# 
  1267  0090                     	;# 
  1268  0091                     	;# 
  1269  0093                     	;# 
  1270  0094                     	;# 
  1271  0095                     	;# 
  1272  0096                     	;# 
  1273  0097                     	;# 
  1274  0098                     	;# 
  1275  0099                     	;# 
  1276  009A                     	;# 
  1277  009B                     	;# 
  1278  009C                     	;# 
  1279  009D                     	;# 
  1280  009E                     	;# 
  1281  010C                     	;# 
  1282  010D                     	;# 
  1283  010E                     	;# 
  1284  010E                     	;# 
  1285  010F                     	;# 
  1286  0110                     	;# 
  1287  0110                     	;# 
  1288  0111                     	;# 
  1289  0112                     	;# 
  1290  0112                     	;# 
  1291  0113                     	;# 
  1292  0114                     	;# 
  1293  0114                     	;# 
  1294  0115                     	;# 
  1295  0116                     	;# 
  1296  0116                     	;# 
  1297  0117                     	;# 
  1298  0119                     	;# 
  1299  0119                     	;# 
  1300  0119                     	;# 
  1301  011A                     	;# 
  1302  011A                     	;# 
  1303  011A                     	;# 
  1304  011B                     	;# 
  1305  011B                     	;# 
  1306  011B                     	;# 
  1307  011B                     	;# 
  1308  011B                     	;# 
  1309  011C                     	;# 
  1310  011C                     	;# 
  1311  011C                     	;# 
  1312  011D                     	;# 
  1313  011D                     	;# 
  1314  011D                     	;# 
  1315  011E                     	;# 
  1316  011E                     	;# 
  1317  011E                     	;# 
  1318  011F                     	;# 
  1319  011F                     	;# 
  1320  011F                     	;# 
  1321  011F                     	;# 
  1322  011F                     	;# 
  1323  018C                     	;# 
  1324  018D                     	;# 
  1325  018E                     	;# 
  1326  018F                     	;# 
  1327  0190                     	;# 
  1328  0191                     	;# 
  1329  0192                     	;# 
  1330  0196                     	;# 
  1331  0197                     	;# 
  1332  0198                     	;# 
  1333  0199                     	;# 
  1334  019A                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  020C                     	;# 
  1338  020C                     	;# 
  1339  020D                     	;# 
  1340  020E                     	;# 
  1341  020F                     	;# 
  1342  020F                     	;# 
  1343  0210                     	;# 
  1344  0210                     	;# 
  1345  0211                     	;# 
  1346  0211                     	;# 
  1347  0212                     	;# 
  1348  0212                     	;# 
  1349  0213                     	;# 
  1350  0214                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0216                     	;# 
  1354  0216                     	;# 
  1355  0217                     	;# 
  1356  0217                     	;# 
  1357  0218                     	;# 
  1358  0218                     	;# 
  1359  0219                     	;# 
  1360  021A                     	;# 
  1361  021B                     	;# 
  1362  021B                     	;# 
  1363  021C                     	;# 
  1364  021C                     	;# 
  1365  021D                     	;# 
  1366  021D                     	;# 
  1367  021E                     	;# 
  1368  021F                     	;# 
  1369  028C                     	;# 
  1370  028C                     	;# 
  1371  028D                     	;# 
  1372  028D                     	;# 
  1373  028E                     	;# 
  1374  028F                     	;# 
  1375  0290                     	;# 
  1376  0290                     	;# 
  1377  0291                     	;# 
  1378  0292                     	;# 
  1379  0292                     	;# 
  1380  0293                     	;# 
  1381  0293                     	;# 
  1382  0294                     	;# 
  1383  0295                     	;# 
  1384  0296                     	;# 
  1385  0296                     	;# 
  1386  0297                     	;# 
  1387  0298                     	;# 
  1388  0298                     	;# 
  1389  0299                     	;# 
  1390  0299                     	;# 
  1391  029A                     	;# 
  1392  029B                     	;# 
  1393  029C                     	;# 
  1394  029C                     	;# 
  1395  029D                     	;# 
  1396  030C                     	;# 
  1397  030C                     	;# 
  1398  030D                     	;# 
  1399  030E                     	;# 
  1400  030F                     	;# 
  1401  0310                     	;# 
  1402  0310                     	;# 
  1403  0311                     	;# 
  1404  0312                     	;# 
  1405  0313                     	;# 
  1406  0314                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0316                     	;# 
  1410  0317                     	;# 
  1411  0318                     	;# 
  1412  0318                     	;# 
  1413  0319                     	;# 
  1414  031A                     	;# 
  1415  031B                     	;# 
  1416  031C                     	;# 
  1417  031C                     	;# 
  1418  031D                     	;# 
  1419  031E                     	;# 
  1420  031F                     	;# 
  1421  038C                     	;# 
  1422  038C                     	;# 
  1423  038D                     	;# 
  1424  038E                     	;# 
  1425  0390                     	;# 
  1426  0390                     	;# 
  1427  0391                     	;# 
  1428  0392                     	;# 
  1429  040C                     	;# 
  1430  040D                     	;# 
  1431  040E                     	;# 
  1432  040F                     	;# 
  1433  0410                     	;# 
  1434  0411                     	;# 
  1435  0416                     	;# 
  1436  0416                     	;# 
  1437  0417                     	;# 
  1438  0418                     	;# 
  1439  0418                     	;# 
  1440  0419                     	;# 
  1441  041A                     	;# 
  1442  041A                     	;# 
  1443  041B                     	;# 
  1444  041C                     	;# 
  1445  041C                     	;# 
  1446  041D                     	;# 
  1447  041E                     	;# 
  1448  041F                     	;# 
  1449  048C                     	;# 
  1450  048C                     	;# 
  1451  048D                     	;# 
  1452  048E                     	;# 
  1453  048F                     	;# 
  1454  048F                     	;# 
  1455  0490                     	;# 
  1456  0491                     	;# 
  1457  0492                     	;# 
  1458  0492                     	;# 
  1459  0493                     	;# 
  1460  0494                     	;# 
  1461  0495                     	;# 
  1462  0495                     	;# 
  1463  0496                     	;# 
  1464  0497                     	;# 
  1465  0498                     	;# 
  1466  0499                     	;# 
  1467  049A                     	;# 
  1468  049B                     	;# 
  1469  049C                     	;# 
  1470  049D                     	;# 
  1471  050C                     	;# 
  1472  050C                     	;# 
  1473  050D                     	;# 
  1474  050E                     	;# 
  1475  050F                     	;# 
  1476  050F                     	;# 
  1477  0510                     	;# 
  1478  0511                     	;# 
  1479  0512                     	;# 
  1480  0512                     	;# 
  1481  0513                     	;# 
  1482  0514                     	;# 
  1483  0515                     	;# 
  1484  0515                     	;# 
  1485  0516                     	;# 
  1486  0517                     	;# 
  1487  0518                     	;# 
  1488  0519                     	;# 
  1489  051A                     	;# 
  1490  051B                     	;# 
  1491  051C                     	;# 
  1492  051D                     	;# 
  1493  058C                     	;# 
  1494  058C                     	;# 
  1495  058D                     	;# 
  1496  058E                     	;# 
  1497  058F                     	;# 
  1498  058F                     	;# 
  1499  0590                     	;# 
  1500  0591                     	;# 
  1501  0592                     	;# 
  1502  0593                     	;# 
  1503  060C                     	;# 
  1504  060D                     	;# 
  1505  060E                     	;# 
  1506  060F                     	;# 
  1507  0610                     	;# 
  1508  0611                     	;# 
  1509  0612                     	;# 
  1510  0613                     	;# 
  1511  0614                     	;# 
  1512  0616                     	;# 
  1513  0617                     	;# 
  1514  0618                     	;# 
  1515  0619                     	;# 
  1516  061A                     	;# 
  1517  061B                     	;# 
  1518  061C                     	;# 
  1519  061D                     	;# 
  1520  061E                     	;# 
  1521  068C                     	;# 
  1522  068D                     	;# 
  1523  068E                     	;# 
  1524  068F                     	;# 
  1525  0690                     	;# 
  1526  0691                     	;# 
  1527  0692                     	;# 
  1528  0693                     	;# 
  1529  0694                     	;# 
  1530  070C                     	;# 
  1531  070D                     	;# 
  1532  070E                     	;# 
  1533  070F                     	;# 
  1534  0710                     	;# 
  1535  0711                     	;# 
  1536  0712                     	;# 
  1537  0713                     	;# 
  1538  0714                     	;# 
  1539  0716                     	;# 
  1540  0717                     	;# 
  1541  0718                     	;# 
  1542  0719                     	;# 
  1543  071A                     	;# 
  1544  071B                     	;# 
  1545  071C                     	;# 
  1546  071D                     	;# 
  1547  071E                     	;# 
  1548  0796                     	;# 
  1549  0797                     	;# 
  1550  0798                     	;# 
  1551  0799                     	;# 
  1552  079A                     	;# 
  1553  079B                     	;# 
  1554  080C                     	;# 
  1555  080D                     	;# 
  1556  080E                     	;# 
  1557  080F                     	;# 
  1558  0810                     	;# 
  1559  0811                     	;# 
  1560  0812                     	;# 
  1561  0813                     	;# 
  1562  0814                     	;# 
  1563  081A                     	;# 
  1564  081B                     	;# 
  1565  081C                     	;# 
  1566  081D                     	;# 
  1567  081E                     	;# 
  1568  081F                     	;# 
  1569  088C                     	;# 
  1570  088D                     	;# 
  1571  088E                     	;# 
  1572  088F                     	;# 
  1573  0890                     	;# 
  1574  0891                     	;# 
  1575  0892                     	;# 
  1576  0893                     	;# 
  1577  0895                     	;# 
  1578  0896                     	;# 
  1579  0897                     	;# 
  1580  0898                     	;# 
  1581  0899                     	;# 
  1582  089A                     	;# 
  1583  089B                     	;# 
  1584  090C                     	;# 
  1585  090E                     	;# 
  1586  090F                     	;# 
  1587  091F                     	;# 
  1588  091F                     	;# 
  1589  098F                     	;# 
  1590  098F                     	;# 
  1591  0990                     	;# 
  1592  0991                     	;# 
  1593  0992                     	;# 
  1594  0993                     	;# 
  1595  0994                     	;# 
  1596  0995                     	;# 
  1597  0996                     	;# 
  1598  0997                     	;# 
  1599  0E0F                     	;# 
  1600  0E10                     	;# 
  1601  0E11                     	;# 
  1602  0E12                     	;# 
  1603  0E13                     	;# 
  1604  0E14                     	;# 
  1605  0E15                     	;# 
  1606  0E16                     	;# 
  1607  0E17                     	;# 
  1608  0E18                     	;# 
  1609  0E19                     	;# 
  1610  0E1A                     	;# 
  1611  0E1B                     	;# 
  1612  0E1C                     	;# 
  1613  0E1D                     	;# 
  1614  0E1E                     	;# 
  1615  0E1F                     	;# 
  1616  0E20                     	;# 
  1617  0E21                     	;# 
  1618  0E22                     	;# 
  1619  0E23                     	;# 
  1620  0E24                     	;# 
  1621  0E25                     	;# 
  1622  0E26                     	;# 
  1623  0E27                     	;# 
  1624  0E28                     	;# 
  1625  0E29                     	;# 
  1626  0E2A                     	;# 
  1627  0E2B                     	;# 
  1628  0E2C                     	;# 
  1629  0E2D                     	;# 
  1630  0E2E                     	;# 
  1631  0E2F                     	;# 
  1632  0E30                     	;# 
  1633  0E31                     	;# 
  1634  0E32                     	;# 
  1635  0E33                     	;# 
  1636  0E34                     	;# 
  1637  0E35                     	;# 
  1638  0E36                     	;# 
  1639  0E37                     	;# 
  1640  0E8F                     	;# 
  1641  0E90                     	;# 
  1642  0E91                     	;# 
  1643  0E92                     	;# 
  1644  0E93                     	;# 
  1645  0E94                     	;# 
  1646  0E95                     	;# 
  1647  0E96                     	;# 
  1648  0E97                     	;# 
  1649  0E9C                     	;# 
  1650  0E9D                     	;# 
  1651  0E9E                     	;# 
  1652  0EA1                     	;# 
  1653  0EA2                     	;# 
  1654  0EA3                     	;# 
  1655  0EA4                     	;# 
  1656  0EA5                     	;# 
  1657  0EA9                     	;# 
  1658  0EAA                     	;# 
  1659  0EAB                     	;# 
  1660  0EAC                     	;# 
  1661  0EB1                     	;# 
  1662  0EB2                     	;# 
  1663  0EB3                     	;# 
  1664  0EB8                     	;# 
  1665  0EB9                     	;# 
  1666  0EBA                     	;# 
  1667  0EBB                     	;# 
  1668  0EBC                     	;# 
  1669  0EBD                     	;# 
  1670  0EBE                     	;# 
  1671  0EC3                     	;# 
  1672  0EC5                     	;# 
  1673  0EC6                     	;# 
  1674  0EC7                     	;# 
  1675  0EC8                     	;# 
  1676  0EC9                     	;# 
  1677  0ECA                     	;# 
  1678  0ECB                     	;# 
  1679  0ECC                     	;# 
  1680  0F10                     	;# 
  1681  0F11                     	;# 
  1682  0F12                     	;# 
  1683  0F13                     	;# 
  1684  0F14                     	;# 
  1685  0F15                     	;# 
  1686  0F16                     	;# 
  1687  0F17                     	;# 
  1688  0F18                     	;# 
  1689  0F19                     	;# 
  1690  0F1A                     	;# 
  1691  0F1B                     	;# 
  1692  0F1C                     	;# 
  1693  0F1D                     	;# 
  1694  0F1E                     	;# 
  1695  0F1F                     	;# 
  1696  0F20                     	;# 
  1697  0F21                     	;# 
  1698  0F22                     	;# 
  1699  0F23                     	;# 
  1700  0F24                     	;# 
  1701  0F25                     	;# 
  1702  0F26                     	;# 
  1703  0F27                     	;# 
  1704  0F28                     	;# 
  1705  0F29                     	;# 
  1706  0F2A                     	;# 
  1707  0F2B                     	;# 
  1708  0F2C                     	;# 
  1709  0F2D                     	;# 
  1710  0F2E                     	;# 
  1711  0F2F                     	;# 
  1712  0F30                     	;# 
  1713  0F31                     	;# 
  1714  0F32                     	;# 
  1715  0F38                     	;# 
  1716  0F39                     	;# 
  1717  0F3A                     	;# 
  1718  0F3B                     	;# 
  1719  0F3C                     	;# 
  1720  0F3D                     	;# 
  1721  0F3E                     	;# 
  1722  0F3F                     	;# 
  1723  0F40                     	;# 
  1724  0F41                     	;# 
  1725  0F43                     	;# 
  1726  0F44                     	;# 
  1727  0F45                     	;# 
  1728  0F46                     	;# 
  1729  0F47                     	;# 
  1730  0F48                     	;# 
  1731  0F49                     	;# 
  1732  0F4A                     	;# 
  1733  0F4B                     	;# 
  1734  0F4C                     	;# 
  1735  0F4E                     	;# 
  1736  0F4F                     	;# 
  1737  0F50                     	;# 
  1738  0F51                     	;# 
  1739  0F52                     	;# 
  1740  0F53                     	;# 
  1741  0F54                     	;# 
  1742  0F55                     	;# 
  1743  0F56                     	;# 
  1744  0F57                     	;# 
  1745  0F59                     	;# 
  1746  0F5A                     	;# 
  1747  0F5B                     	;# 
  1748  0F5C                     	;# 
  1749  0F5D                     	;# 
  1750  0F61                     	;# 
  1751  0F62                     	;# 
  1752  0F64                     	;# 
  1753  0F65                     	;# 
  1754  0F66                     	;# 
  1755  0F67                     	;# 
  1756  0F68                     	;# 
  1757  0F69                     	;# 
  1758  0F6A                     	;# 
  1759  0F6B                     	;# 
  1760  0F6C                     	;# 
  1761  0F6D                     	;# 
  1762  0FE4                     	;# 
  1763  0FE5                     	;# 
  1764  0FE6                     	;# 
  1765  0FE7                     	;# 
  1766  0FE8                     	;# 
  1767  0FE9                     	;# 
  1768  0FEA                     	;# 
  1769  0FEB                     	;# 
  1770  0FED                     	;# 
  1771  0FEE                     	;# 
  1772  0FEF                     	;# 
  1773  0000                     	;# 
  1774  0001                     	;# 
  1775  0002                     	;# 
  1776  0003                     	;# 
  1777  0004                     	;# 
  1778  0005                     	;# 
  1779  0006                     	;# 
  1780  0007                     	;# 
  1781  0008                     	;# 
  1782  0009                     	;# 
  1783  000A                     	;# 
  1784  000B                     	;# 
  1785  000C                     	;# 
  1786  000D                     	;# 
  1787  000E                     	;# 
  1788  000F                     	;# 
  1789  0010                     	;# 
  1790  0011                     	;# 
  1791  0012                     	;# 
  1792  0013                     	;# 
  1793  0014                     	;# 
  1794  0015                     	;# 
  1795  0016                     	;# 
  1796  0017                     	;# 
  1797  0018                     	;# 
  1798  0019                     	;# 
  1799  001A                     	;# 
  1800  001C                     	;# 
  1801  001C                     	;# 
  1802  001D                     	;# 
  1803  001D                     	;# 
  1804  001E                     	;# 
  1805  001F                     	;# 
  1806  008C                     	;# 
  1807  008C                     	;# 
  1808  008D                     	;# 
  1809  008E                     	;# 
  1810  008E                     	;# 
  1811  008F                     	;# 
  1812  0090                     	;# 
  1813  0090                     	;# 
  1814  0091                     	;# 
  1815  0093                     	;# 
  1816  0094                     	;# 
  1817  0095                     	;# 
  1818  0096                     	;# 
  1819  0097                     	;# 
  1820  0098                     	;# 
  1821  0099                     	;# 
  1822  009A                     	;# 
  1823  009B                     	;# 
  1824  009C                     	;# 
  1825  009D                     	;# 
  1826  009E                     	;# 
  1827  010C                     	;# 
  1828  010D                     	;# 
  1829  010E                     	;# 
  1830  010E                     	;# 
  1831  010F                     	;# 
  1832  0110                     	;# 
  1833  0110                     	;# 
  1834  0111                     	;# 
  1835  0112                     	;# 
  1836  0112                     	;# 
  1837  0113                     	;# 
  1838  0114                     	;# 
  1839  0114                     	;# 
  1840  0115                     	;# 
  1841  0116                     	;# 
  1842  0116                     	;# 
  1843  0117                     	;# 
  1844  0119                     	;# 
  1845  0119                     	;# 
  1846  0119                     	;# 
  1847  011A                     	;# 
  1848  011A                     	;# 
  1849  011A                     	;# 
  1850  011B                     	;# 
  1851  011B                     	;# 
  1852  011B                     	;# 
  1853  011B                     	;# 
  1854  011B                     	;# 
  1855  011C                     	;# 
  1856  011C                     	;# 
  1857  011C                     	;# 
  1858  011D                     	;# 
  1859  011D                     	;# 
  1860  011D                     	;# 
  1861  011E                     	;# 
  1862  011E                     	;# 
  1863  011E                     	;# 
  1864  011F                     	;# 
  1865  011F                     	;# 
  1866  011F                     	;# 
  1867  011F                     	;# 
  1868  011F                     	;# 
  1869  018C                     	;# 
  1870  018D                     	;# 
  1871  018E                     	;# 
  1872  018F                     	;# 
  1873  0190                     	;# 
  1874  0191                     	;# 
  1875  0192                     	;# 
  1876  0196                     	;# 
  1877  0197                     	;# 
  1878  0198                     	;# 
  1879  0199                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  020C                     	;# 
  1884  020C                     	;# 
  1885  020D                     	;# 
  1886  020E                     	;# 
  1887  020F                     	;# 
  1888  020F                     	;# 
  1889  0210                     	;# 
  1890  0210                     	;# 
  1891  0211                     	;# 
  1892  0211                     	;# 
  1893  0212                     	;# 
  1894  0212                     	;# 
  1895  0213                     	;# 
  1896  0214                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0216                     	;# 
  1900  0216                     	;# 
  1901  0217                     	;# 
  1902  0217                     	;# 
  1903  0218                     	;# 
  1904  0218                     	;# 
  1905  0219                     	;# 
  1906  021A                     	;# 
  1907  021B                     	;# 
  1908  021B                     	;# 
  1909  021C                     	;# 
  1910  021C                     	;# 
  1911  021D                     	;# 
  1912  021D                     	;# 
  1913  021E                     	;# 
  1914  021F                     	;# 
  1915  028C                     	;# 
  1916  028C                     	;# 
  1917  028D                     	;# 
  1918  028D                     	;# 
  1919  028E                     	;# 
  1920  028F                     	;# 
  1921  0290                     	;# 
  1922  0290                     	;# 
  1923  0291                     	;# 
  1924  0292                     	;# 
  1925  0292                     	;# 
  1926  0293                     	;# 
  1927  0293                     	;# 
  1928  0294                     	;# 
  1929  0295                     	;# 
  1930  0296                     	;# 
  1931  0296                     	;# 
  1932  0297                     	;# 
  1933  0298                     	;# 
  1934  0298                     	;# 
  1935  0299                     	;# 
  1936  0299                     	;# 
  1937  029A                     	;# 
  1938  029B                     	;# 
  1939  029C                     	;# 
  1940  029C                     	;# 
  1941  029D                     	;# 
  1942  030C                     	;# 
  1943  030C                     	;# 
  1944  030D                     	;# 
  1945  030E                     	;# 
  1946  030F                     	;# 
  1947  0310                     	;# 
  1948  0310                     	;# 
  1949  0311                     	;# 
  1950  0312                     	;# 
  1951  0313                     	;# 
  1952  0314                     	;# 
  1953  0314                     	;# 
  1954  0315                     	;# 
  1955  0316                     	;# 
  1956  0317                     	;# 
  1957  0318                     	;# 
  1958  0318                     	;# 
  1959  0319                     	;# 
  1960  031A                     	;# 
  1961  031B                     	;# 
  1962  031C                     	;# 
  1963  031C                     	;# 
  1964  031D                     	;# 
  1965  031E                     	;# 
  1966  031F                     	;# 
  1967  038C                     	;# 
  1968  038C                     	;# 
  1969  038D                     	;# 
  1970  038E                     	;# 
  1971  0390                     	;# 
  1972  0390                     	;# 
  1973  0391                     	;# 
  1974  0392                     	;# 
  1975  040C                     	;# 
  1976  040D                     	;# 
  1977  040E                     	;# 
  1978  040F                     	;# 
  1979  0410                     	;# 
  1980  0411                     	;# 
  1981  0416                     	;# 
  1982  0416                     	;# 
  1983  0417                     	;# 
  1984  0418                     	;# 
  1985  0418                     	;# 
  1986  0419                     	;# 
  1987  041A                     	;# 
  1988  041A                     	;# 
  1989  041B                     	;# 
  1990  041C                     	;# 
  1991  041C                     	;# 
  1992  041D                     	;# 
  1993  041E                     	;# 
  1994  041F                     	;# 
  1995  048C                     	;# 
  1996  048C                     	;# 
  1997  048D                     	;# 
  1998  048E                     	;# 
  1999  048F                     	;# 
  2000  048F                     	;# 
  2001  0490                     	;# 
  2002  0491                     	;# 
  2003  0492                     	;# 
  2004  0492                     	;# 
  2005  0493                     	;# 
  2006  0494                     	;# 
  2007  0495                     	;# 
  2008  0495                     	;# 
  2009  0496                     	;# 
  2010  0497                     	;# 
  2011  0498                     	;# 
  2012  0499                     	;# 
  2013  049A                     	;# 
  2014  049B                     	;# 
  2015  049C                     	;# 
  2016  049D                     	;# 
  2017  050C                     	;# 
  2018  050C                     	;# 
  2019  050D                     	;# 
  2020  050E                     	;# 
  2021  050F                     	;# 
  2022  050F                     	;# 
  2023  0510                     	;# 
  2024  0511                     	;# 
  2025  0512                     	;# 
  2026  0512                     	;# 
  2027  0513                     	;# 
  2028  0514                     	;# 
  2029  0515                     	;# 
  2030  0515                     	;# 
  2031  0516                     	;# 
  2032  0517                     	;# 
  2033  0518                     	;# 
  2034  0519                     	;# 
  2035  051A                     	;# 
  2036  051B                     	;# 
  2037  051C                     	;# 
  2038  051D                     	;# 
  2039  058C                     	;# 
  2040  058C                     	;# 
  2041  058D                     	;# 
  2042  058E                     	;# 
  2043  058F                     	;# 
  2044  058F                     	;# 
  2045  0590                     	;# 
  2046  0591                     	;# 
  2047  0592                     	;# 
  2048  0593                     	;# 
  2049  060C                     	;# 
  2050  060D                     	;# 
  2051  060E                     	;# 
  2052  060F                     	;# 
  2053  0610                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0616                     	;# 
  2059  0617                     	;# 
  2060  0618                     	;# 
  2061  0619                     	;# 
  2062  061A                     	;# 
  2063  061B                     	;# 
  2064  061C                     	;# 
  2065  061D                     	;# 
  2066  061E                     	;# 
  2067  068C                     	;# 
  2068  068D                     	;# 
  2069  068E                     	;# 
  2070  068F                     	;# 
  2071  0690                     	;# 
  2072  0691                     	;# 
  2073  0692                     	;# 
  2074  0693                     	;# 
  2075  0694                     	;# 
  2076  070C                     	;# 
  2077  070D                     	;# 
  2078  070E                     	;# 
  2079  070F                     	;# 
  2080  0710                     	;# 
  2081  0711                     	;# 
  2082  0712                     	;# 
  2083  0713                     	;# 
  2084  0714                     	;# 
  2085  0716                     	;# 
  2086  0717                     	;# 
  2087  0718                     	;# 
  2088  0719                     	;# 
  2089  071A                     	;# 
  2090  071B                     	;# 
  2091  071C                     	;# 
  2092  071D                     	;# 
  2093  071E                     	;# 
  2094  0796                     	;# 
  2095  0797                     	;# 
  2096  0798                     	;# 
  2097  0799                     	;# 
  2098  079A                     	;# 
  2099  079B                     	;# 
  2100  080C                     	;# 
  2101  080D                     	;# 
  2102  080E                     	;# 
  2103  080F                     	;# 
  2104  0810                     	;# 
  2105  0811                     	;# 
  2106  0812                     	;# 
  2107  0813                     	;# 
  2108  0814                     	;# 
  2109  081A                     	;# 
  2110  081B                     	;# 
  2111  081C                     	;# 
  2112  081D                     	;# 
  2113  081E                     	;# 
  2114  081F                     	;# 
  2115  088C                     	;# 
  2116  088D                     	;# 
  2117  088E                     	;# 
  2118  088F                     	;# 
  2119  0890                     	;# 
  2120  0891                     	;# 
  2121  0892                     	;# 
  2122  0893                     	;# 
  2123  0895                     	;# 
  2124  0896                     	;# 
  2125  0897                     	;# 
  2126  0898                     	;# 
  2127  0899                     	;# 
  2128  089A                     	;# 
  2129  089B                     	;# 
  2130  090C                     	;# 
  2131  090E                     	;# 
  2132  090F                     	;# 
  2133  091F                     	;# 
  2134  091F                     	;# 
  2135  098F                     	;# 
  2136  098F                     	;# 
  2137  0990                     	;# 
  2138  0991                     	;# 
  2139  0992                     	;# 
  2140  0993                     	;# 
  2141  0994                     	;# 
  2142  0995                     	;# 
  2143  0996                     	;# 
  2144  0997                     	;# 
  2145  0E0F                     	;# 
  2146  0E10                     	;# 
  2147  0E11                     	;# 
  2148  0E12                     	;# 
  2149  0E13                     	;# 
  2150  0E14                     	;# 
  2151  0E15                     	;# 
  2152  0E16                     	;# 
  2153  0E17                     	;# 
  2154  0E18                     	;# 
  2155  0E19                     	;# 
  2156  0E1A                     	;# 
  2157  0E1B                     	;# 
  2158  0E1C                     	;# 
  2159  0E1D                     	;# 
  2160  0E1E                     	;# 
  2161  0E1F                     	;# 
  2162  0E20                     	;# 
  2163  0E21                     	;# 
  2164  0E22                     	;# 
  2165  0E23                     	;# 
  2166  0E24                     	;# 
  2167  0E25                     	;# 
  2168  0E26                     	;# 
  2169  0E27                     	;# 
  2170  0E28                     	;# 
  2171  0E29                     	;# 
  2172  0E2A                     	;# 
  2173  0E2B                     	;# 
  2174  0E2C                     	;# 
  2175  0E2D                     	;# 
  2176  0E2E                     	;# 
  2177  0E2F                     	;# 
  2178  0E30                     	;# 
  2179  0E31                     	;# 
  2180  0E32                     	;# 
  2181  0E33                     	;# 
  2182  0E34                     	;# 
  2183  0E35                     	;# 
  2184  0E36                     	;# 
  2185  0E37                     	;# 
  2186  0E8F                     	;# 
  2187  0E90                     	;# 
  2188  0E91                     	;# 
  2189  0E92                     	;# 
  2190  0E93                     	;# 
  2191  0E94                     	;# 
  2192  0E95                     	;# 
  2193  0E96                     	;# 
  2194  0E97                     	;# 
  2195  0E9C                     	;# 
  2196  0E9D                     	;# 
  2197  0E9E                     	;# 
  2198  0EA1                     	;# 
  2199  0EA2                     	;# 
  2200  0EA3                     	;# 
  2201  0EA4                     	;# 
  2202  0EA5                     	;# 
  2203  0EA9                     	;# 
  2204  0EAA                     	;# 
  2205  0EAB                     	;# 
  2206  0EAC                     	;# 
  2207  0EB1                     	;# 
  2208  0EB2                     	;# 
  2209  0EB3                     	;# 
  2210  0EB8                     	;# 
  2211  0EB9                     	;# 
  2212  0EBA                     	;# 
  2213  0EBB                     	;# 
  2214  0EBC                     	;# 
  2215  0EBD                     	;# 
  2216  0EBE                     	;# 
  2217  0EC3                     	;# 
  2218  0EC5                     	;# 
  2219  0EC6                     	;# 
  2220  0EC7                     	;# 
  2221  0EC8                     	;# 
  2222  0EC9                     	;# 
  2223  0ECA                     	;# 
  2224  0ECB                     	;# 
  2225  0ECC                     	;# 
  2226  0F10                     	;# 
  2227  0F11                     	;# 
  2228  0F12                     	;# 
  2229  0F13                     	;# 
  2230  0F14                     	;# 
  2231  0F15                     	;# 
  2232  0F16                     	;# 
  2233  0F17                     	;# 
  2234  0F18                     	;# 
  2235  0F19                     	;# 
  2236  0F1A                     	;# 
  2237  0F1B                     	;# 
  2238  0F1C                     	;# 
  2239  0F1D                     	;# 
  2240  0F1E                     	;# 
  2241  0F1F                     	;# 
  2242  0F20                     	;# 
  2243  0F21                     	;# 
  2244  0F22                     	;# 
  2245  0F23                     	;# 
  2246  0F24                     	;# 
  2247  0F25                     	;# 
  2248  0F26                     	;# 
  2249  0F27                     	;# 
  2250  0F28                     	;# 
  2251  0F29                     	;# 
  2252  0F2A                     	;# 
  2253  0F2B                     	;# 
  2254  0F2C                     	;# 
  2255  0F2D                     	;# 
  2256  0F2E                     	;# 
  2257  0F2F                     	;# 
  2258  0F30                     	;# 
  2259  0F31                     	;# 
  2260  0F32                     	;# 
  2261  0F38                     	;# 
  2262  0F39                     	;# 
  2263  0F3A                     	;# 
  2264  0F3B                     	;# 
  2265  0F3C                     	;# 
  2266  0F3D                     	;# 
  2267  0F3E                     	;# 
  2268  0F3F                     	;# 
  2269  0F40                     	;# 
  2270  0F41                     	;# 
  2271  0F43                     	;# 
  2272  0F44                     	;# 
  2273  0F45                     	;# 
  2274  0F46                     	;# 
  2275  0F47                     	;# 
  2276  0F48                     	;# 
  2277  0F49                     	;# 
  2278  0F4A                     	;# 
  2279  0F4B                     	;# 
  2280  0F4C                     	;# 
  2281  0F4E                     	;# 
  2282  0F4F                     	;# 
  2283  0F50                     	;# 
  2284  0F51                     	;# 
  2285  0F52                     	;# 
  2286  0F53                     	;# 
  2287  0F54                     	;# 
  2288  0F55                     	;# 
  2289  0F56                     	;# 
  2290  0F57                     	;# 
  2291  0F59                     	;# 
  2292  0F5A                     	;# 
  2293  0F5B                     	;# 
  2294  0F5C                     	;# 
  2295  0F5D                     	;# 
  2296  0F61                     	;# 
  2297  0F62                     	;# 
  2298  0F64                     	;# 
  2299  0F65                     	;# 
  2300  0F66                     	;# 
  2301  0F67                     	;# 
  2302  0F68                     	;# 
  2303  0F69                     	;# 
  2304  0F6A                     	;# 
  2305  0F6B                     	;# 
  2306  0F6C                     	;# 
  2307  0F6D                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE9                     	;# 
  2314  0FEA                     	;# 
  2315  0FEB                     	;# 
  2316  0FED                     	;# 
  2317  0FEE                     	;# 
  2318  0FEF                     	;# 
  2319  0000                     	;# 
  2320  0001                     	;# 
  2321  0002                     	;# 
  2322  0003                     	;# 
  2323  0004                     	;# 
  2324  0005                     	;# 
  2325  0006                     	;# 
  2326  0007                     	;# 
  2327  0008                     	;# 
  2328  0009                     	;# 
  2329  000A                     	;# 
  2330  000B                     	;# 
  2331  000C                     	;# 
  2332  000D                     	;# 
  2333  000E                     	;# 
  2334  000F                     	;# 
  2335  0010                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001C                     	;# 
  2347  001C                     	;# 
  2348  001D                     	;# 
  2349  001D                     	;# 
  2350  001E                     	;# 
  2351  001F                     	;# 
  2352  008C                     	;# 
  2353  008C                     	;# 
  2354  008D                     	;# 
  2355  008E                     	;# 
  2356  008E                     	;# 
  2357  008F                     	;# 
  2358  0090                     	;# 
  2359  0090                     	;# 
  2360  0091                     	;# 
  2361  0093                     	;# 
  2362  0094                     	;# 
  2363  0095                     	;# 
  2364  0096                     	;# 
  2365  0097                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009C                     	;# 
  2371  009D                     	;# 
  2372  009E                     	;# 
  2373  010C                     	;# 
  2374  010D                     	;# 
  2375  010E                     	;# 
  2376  010E                     	;# 
  2377  010F                     	;# 
  2378  0110                     	;# 
  2379  0110                     	;# 
  2380  0111                     	;# 
  2381  0112                     	;# 
  2382  0112                     	;# 
  2383  0113                     	;# 
  2384  0114                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0116                     	;# 
  2389  0117                     	;# 
  2390  0119                     	;# 
  2391  0119                     	;# 
  2392  0119                     	;# 
  2393  011A                     	;# 
  2394  011A                     	;# 
  2395  011A                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011B                     	;# 
  2400  011B                     	;# 
  2401  011C                     	;# 
  2402  011C                     	;# 
  2403  011C                     	;# 
  2404  011D                     	;# 
  2405  011D                     	;# 
  2406  011D                     	;# 
  2407  011E                     	;# 
  2408  011E                     	;# 
  2409  011E                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  011F                     	;# 
  2414  011F                     	;# 
  2415  018C                     	;# 
  2416  018D                     	;# 
  2417  018E                     	;# 
  2418  018F                     	;# 
  2419  0190                     	;# 
  2420  0191                     	;# 
  2421  0192                     	;# 
  2422  0196                     	;# 
  2423  0197                     	;# 
  2424  0198                     	;# 
  2425  0199                     	;# 
  2426  019A                     	;# 
  2427  019B                     	;# 
  2428  019C                     	;# 
  2429  020C                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  020E                     	;# 
  2433  020F                     	;# 
  2434  020F                     	;# 
  2435  0210                     	;# 
  2436  0210                     	;# 
  2437  0211                     	;# 
  2438  0211                     	;# 
  2439  0212                     	;# 
  2440  0212                     	;# 
  2441  0213                     	;# 
  2442  0214                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0216                     	;# 
  2446  0216                     	;# 
  2447  0217                     	;# 
  2448  0217                     	;# 
  2449  0218                     	;# 
  2450  0218                     	;# 
  2451  0219                     	;# 
  2452  021A                     	;# 
  2453  021B                     	;# 
  2454  021B                     	;# 
  2455  021C                     	;# 
  2456  021C                     	;# 
  2457  021D                     	;# 
  2458  021D                     	;# 
  2459  021E                     	;# 
  2460  021F                     	;# 
  2461  028C                     	;# 
  2462  028C                     	;# 
  2463  028D                     	;# 
  2464  028D                     	;# 
  2465  028E                     	;# 
  2466  028F                     	;# 
  2467  0290                     	;# 
  2468  0290                     	;# 
  2469  0291                     	;# 
  2470  0292                     	;# 
  2471  0292                     	;# 
  2472  0293                     	;# 
  2473  0293                     	;# 
  2474  0294                     	;# 
  2475  0295                     	;# 
  2476  0296                     	;# 
  2477  0296                     	;# 
  2478  0297                     	;# 
  2479  0298                     	;# 
  2480  0298                     	;# 
  2481  0299                     	;# 
  2482  0299                     	;# 
  2483  029A                     	;# 
  2484  029B                     	;# 
  2485  029C                     	;# 
  2486  029C                     	;# 
  2487  029D                     	;# 
  2488  030C                     	;# 
  2489  030C                     	;# 
  2490  030D                     	;# 
  2491  030E                     	;# 
  2492  030F                     	;# 
  2493  0310                     	;# 
  2494  0310                     	;# 
  2495  0311                     	;# 
  2496  0312                     	;# 
  2497  0313                     	;# 
  2498  0314                     	;# 
  2499  0314                     	;# 
  2500  0315                     	;# 
  2501  0316                     	;# 
  2502  0317                     	;# 
  2503  0318                     	;# 
  2504  0318                     	;# 
  2505  0319                     	;# 
  2506  031A                     	;# 
  2507  031B                     	;# 
  2508  031C                     	;# 
  2509  031C                     	;# 
  2510  031D                     	;# 
  2511  031E                     	;# 
  2512  031F                     	;# 
  2513  038C                     	;# 
  2514  038C                     	;# 
  2515  038D                     	;# 
  2516  038E                     	;# 
  2517  0390                     	;# 
  2518  0390                     	;# 
  2519  0391                     	;# 
  2520  0392                     	;# 
  2521  040C                     	;# 
  2522  040D                     	;# 
  2523  040E                     	;# 
  2524  040F                     	;# 
  2525  0410                     	;# 
  2526  0411                     	;# 
  2527  0416                     	;# 
  2528  0416                     	;# 
  2529  0417                     	;# 
  2530  0418                     	;# 
  2531  0418                     	;# 
  2532  0419                     	;# 
  2533  041A                     	;# 
  2534  041A                     	;# 
  2535  041B                     	;# 
  2536  041C                     	;# 
  2537  041C                     	;# 
  2538  041D                     	;# 
  2539  041E                     	;# 
  2540  041F                     	;# 
  2541  048C                     	;# 
  2542  048C                     	;# 
  2543  048D                     	;# 
  2544  048E                     	;# 
  2545  048F                     	;# 
  2546  048F                     	;# 
  2547  0490                     	;# 
  2548  0491                     	;# 
  2549  0492                     	;# 
  2550  0492                     	;# 
  2551  0493                     	;# 
  2552  0494                     	;# 
  2553  0495                     	;# 
  2554  0495                     	;# 
  2555  0496                     	;# 
  2556  0497                     	;# 
  2557  0498                     	;# 
  2558  0499                     	;# 
  2559  049A                     	;# 
  2560  049B                     	;# 
  2561  049C                     	;# 
  2562  049D                     	;# 
  2563  050C                     	;# 
  2564  050C                     	;# 
  2565  050D                     	;# 
  2566  050E                     	;# 
  2567  050F                     	;# 
  2568  050F                     	;# 
  2569  0510                     	;# 
  2570  0511                     	;# 
  2571  0512                     	;# 
  2572  0512                     	;# 
  2573  0513                     	;# 
  2574  0514                     	;# 
  2575  0515                     	;# 
  2576  0515                     	;# 
  2577  0516                     	;# 
  2578  0517                     	;# 
  2579  0518                     	;# 
  2580  0519                     	;# 
  2581  051A                     	;# 
  2582  051B                     	;# 
  2583  051C                     	;# 
  2584  051D                     	;# 
  2585  058C                     	;# 
  2586  058C                     	;# 
  2587  058D                     	;# 
  2588  058E                     	;# 
  2589  058F                     	;# 
  2590  058F                     	;# 
  2591  0590                     	;# 
  2592  0591                     	;# 
  2593  0592                     	;# 
  2594  0593                     	;# 
  2595  060C                     	;# 
  2596  060D                     	;# 
  2597  060E                     	;# 
  2598  060F                     	;# 
  2599  0610                     	;# 
  2600  0611                     	;# 
  2601  0612                     	;# 
  2602  0613                     	;# 
  2603  0614                     	;# 
  2604  0616                     	;# 
  2605  0617                     	;# 
  2606  0618                     	;# 
  2607  0619                     	;# 
  2608  061A                     	;# 
  2609  061B                     	;# 
  2610  061C                     	;# 
  2611  061D                     	;# 
  2612  061E                     	;# 
  2613  068C                     	;# 
  2614  068D                     	;# 
  2615  068E                     	;# 
  2616  068F                     	;# 
  2617  0690                     	;# 
  2618  0691                     	;# 
  2619  0692                     	;# 
  2620  0693                     	;# 
  2621  0694                     	;# 
  2622  070C                     	;# 
  2623  070D                     	;# 
  2624  070E                     	;# 
  2625  070F                     	;# 
  2626  0710                     	;# 
  2627  0711                     	;# 
  2628  0712                     	;# 
  2629  0713                     	;# 
  2630  0714                     	;# 
  2631  0716                     	;# 
  2632  0717                     	;# 
  2633  0718                     	;# 
  2634  0719                     	;# 
  2635  071A                     	;# 
  2636  071B                     	;# 
  2637  071C                     	;# 
  2638  071D                     	;# 
  2639  071E                     	;# 
  2640  0796                     	;# 
  2641  0797                     	;# 
  2642  0798                     	;# 
  2643  0799                     	;# 
  2644  079A                     	;# 
  2645  079B                     	;# 
  2646  080C                     	;# 
  2647  080D                     	;# 
  2648  080E                     	;# 
  2649  080F                     	;# 
  2650  0810                     	;# 
  2651  0811                     	;# 
  2652  0812                     	;# 
  2653  0813                     	;# 
  2654  0814                     	;# 
  2655  081A                     	;# 
  2656  081B                     	;# 
  2657  081C                     	;# 
  2658  081D                     	;# 
  2659  081E                     	;# 
  2660  081F                     	;# 
  2661  088C                     	;# 
  2662  088D                     	;# 
  2663  088E                     	;# 
  2664  088F                     	;# 
  2665  0890                     	;# 
  2666  0891                     	;# 
  2667  0892                     	;# 
  2668  0893                     	;# 
  2669  0895                     	;# 
  2670  0896                     	;# 
  2671  0897                     	;# 
  2672  0898                     	;# 
  2673  0899                     	;# 
  2674  089A                     	;# 
  2675  089B                     	;# 
  2676  090C                     	;# 
  2677  090E                     	;# 
  2678  090F                     	;# 
  2679  091F                     	;# 
  2680  091F                     	;# 
  2681  098F                     	;# 
  2682  098F                     	;# 
  2683  0990                     	;# 
  2684  0991                     	;# 
  2685  0992                     	;# 
  2686  0993                     	;# 
  2687  0994                     	;# 
  2688  0995                     	;# 
  2689  0996                     	;# 
  2690  0997                     	;# 
  2691  0E0F                     	;# 
  2692  0E10                     	;# 
  2693  0E11                     	;# 
  2694  0E12                     	;# 
  2695  0E13                     	;# 
  2696  0E14                     	;# 
  2697  0E15                     	;# 
  2698  0E16                     	;# 
  2699  0E17                     	;# 
  2700  0E18                     	;# 
  2701  0E19                     	;# 
  2702  0E1A                     	;# 
  2703  0E1B                     	;# 
  2704  0E1C                     	;# 
  2705  0E1D                     	;# 
  2706  0E1E                     	;# 
  2707  0E1F                     	;# 
  2708  0E20                     	;# 
  2709  0E21                     	;# 
  2710  0E22                     	;# 
  2711  0E23                     	;# 
  2712  0E24                     	;# 
  2713  0E25                     	;# 
  2714  0E26                     	;# 
  2715  0E27                     	;# 
  2716  0E28                     	;# 
  2717  0E29                     	;# 
  2718  0E2A                     	;# 
  2719  0E2B                     	;# 
  2720  0E2C                     	;# 
  2721  0E2D                     	;# 
  2722  0E2E                     	;# 
  2723  0E2F                     	;# 
  2724  0E30                     	;# 
  2725  0E31                     	;# 
  2726  0E32                     	;# 
  2727  0E33                     	;# 
  2728  0E34                     	;# 
  2729  0E35                     	;# 
  2730  0E36                     	;# 
  2731  0E37                     	;# 
  2732  0E8F                     	;# 
  2733  0E90                     	;# 
  2734  0E91                     	;# 
  2735  0E92                     	;# 
  2736  0E93                     	;# 
  2737  0E94                     	;# 
  2738  0E95                     	;# 
  2739  0E96                     	;# 
  2740  0E97                     	;# 
  2741  0E9C                     	;# 
  2742  0E9D                     	;# 
  2743  0E9E                     	;# 
  2744  0EA1                     	;# 
  2745  0EA2                     	;# 
  2746  0EA3                     	;# 
  2747  0EA4                     	;# 
  2748  0EA5                     	;# 
  2749  0EA9                     	;# 
  2750  0EAA                     	;# 
  2751  0EAB                     	;# 
  2752  0EAC                     	;# 
  2753  0EB1                     	;# 
  2754  0EB2                     	;# 
  2755  0EB3                     	;# 
  2756  0EB8                     	;# 
  2757  0EB9                     	;# 
  2758  0EBA                     	;# 
  2759  0EBB                     	;# 
  2760  0EBC                     	;# 
  2761  0EBD                     	;# 
  2762  0EBE                     	;# 
  2763  0EC3                     	;# 
  2764  0EC5                     	;# 
  2765  0EC6                     	;# 
  2766  0EC7                     	;# 
  2767  0EC8                     	;# 
  2768  0EC9                     	;# 
  2769  0ECA                     	;# 
  2770  0ECB                     	;# 
  2771  0ECC                     	;# 
  2772  0F10                     	;# 
  2773  0F11                     	;# 
  2774  0F12                     	;# 
  2775  0F13                     	;# 
  2776  0F14                     	;# 
  2777  0F15                     	;# 
  2778  0F16                     	;# 
  2779  0F17                     	;# 
  2780  0F18                     	;# 
  2781  0F19                     	;# 
  2782  0F1A                     	;# 
  2783  0F1B                     	;# 
  2784  0F1C                     	;# 
  2785  0F1D                     	;# 
  2786  0F1E                     	;# 
  2787  0F1F                     	;# 
  2788  0F20                     	;# 
  2789  0F21                     	;# 
  2790  0F22                     	;# 
  2791  0F23                     	;# 
  2792  0F24                     	;# 
  2793  0F25                     	;# 
  2794  0F26                     	;# 
  2795  0F27                     	;# 
  2796  0F28                     	;# 
  2797  0F29                     	;# 
  2798  0F2A                     	;# 
  2799  0F2B                     	;# 
  2800  0F2C                     	;# 
  2801  0F2D                     	;# 
  2802  0F2E                     	;# 
  2803  0F2F                     	;# 
  2804  0F30                     	;# 
  2805  0F31                     	;# 
  2806  0F32                     	;# 
  2807  0F38                     	;# 
  2808  0F39                     	;# 
  2809  0F3A                     	;# 
  2810  0F3B                     	;# 
  2811  0F3C                     	;# 
  2812  0F3D                     	;# 
  2813  0F3E                     	;# 
  2814  0F3F                     	;# 
  2815  0F40                     	;# 
  2816  0F41                     	;# 
  2817  0F43                     	;# 
  2818  0F44                     	;# 
  2819  0F45                     	;# 
  2820  0F46                     	;# 
  2821  0F47                     	;# 
  2822  0F48                     	;# 
  2823  0F49                     	;# 
  2824  0F4A                     	;# 
  2825  0F4B                     	;# 
  2826  0F4C                     	;# 
  2827  0F4E                     	;# 
  2828  0F4F                     	;# 
  2829  0F50                     	;# 
  2830  0F51                     	;# 
  2831  0F52                     	;# 
  2832  0F53                     	;# 
  2833  0F54                     	;# 
  2834  0F55                     	;# 
  2835  0F56                     	;# 
  2836  0F57                     	;# 
  2837  0F59                     	;# 
  2838  0F5A                     	;# 
  2839  0F5B                     	;# 
  2840  0F5C                     	;# 
  2841  0F5D                     	;# 
  2842  0F61                     	;# 
  2843  0F62                     	;# 
  2844  0F64                     	;# 
  2845  0F65                     	;# 
  2846  0F66                     	;# 
  2847  0F67                     	;# 
  2848  0F68                     	;# 
  2849  0F69                     	;# 
  2850  0F6A                     	;# 
  2851  0F6B                     	;# 
  2852  0F6C                     	;# 
  2853  0F6D                     	;# 
  2854  0FE4                     	;# 
  2855  0FE5                     	;# 
  2856  0FE6                     	;# 
  2857  0FE7                     	;# 
  2858  0FE8                     	;# 
  2859  0FE9                     	;# 
  2860  0FEA                     	;# 
  2861  0FEB                     	;# 
  2862  0FED                     	;# 
  2863  0FEE                     	;# 
  2864  0FEF                     	;# 
  2865  0000                     	;# 
  2866  0001                     	;# 
  2867  0002                     	;# 
  2868  0003                     	;# 
  2869  0004                     	;# 
  2870  0005                     	;# 
  2871  0006                     	;# 
  2872  0007                     	;# 
  2873  0008                     	;# 
  2874  0009                     	;# 
  2875  000A                     	;# 
  2876  000B                     	;# 
  2877  000C                     	;# 
  2878  000D                     	;# 
  2879  000E                     	;# 
  2880  000F                     	;# 
  2881  0010                     	;# 
  2882  0011                     	;# 
  2883  0012                     	;# 
  2884  0013                     	;# 
  2885  0014                     	;# 
  2886  0015                     	;# 
  2887  0016                     	;# 
  2888  0017                     	;# 
  2889  0018                     	;# 
  2890  0019                     	;# 
  2891  001A                     	;# 
  2892  001C                     	;# 
  2893  001C                     	;# 
  2894  001D                     	;# 
  2895  001D                     	;# 
  2896  001E                     	;# 
  2897  001F                     	;# 
  2898  008C                     	;# 
  2899  008C                     	;# 
  2900  008D                     	;# 
  2901  008E                     	;# 
  2902  008E                     	;# 
  2903  008F                     	;# 
  2904  0090                     	;# 
  2905  0090                     	;# 
  2906  0091                     	;# 
  2907  0093                     	;# 
  2908  0094                     	;# 
  2909  0095                     	;# 
  2910  0096                     	;# 
  2911  0097                     	;# 
  2912  0098                     	;# 
  2913  0099                     	;# 
  2914  009A                     	;# 
  2915  009B                     	;# 
  2916  009C                     	;# 
  2917  009D                     	;# 
  2918  009E                     	;# 
  2919  010C                     	;# 
  2920  010D                     	;# 
  2921  010E                     	;# 
  2922  010E                     	;# 
  2923  010F                     	;# 
  2924  0110                     	;# 
  2925  0110                     	;# 
  2926  0111                     	;# 
  2927  0112                     	;# 
  2928  0112                     	;# 
  2929  0113                     	;# 
  2930  0114                     	;# 
  2931  0114                     	;# 
  2932  0115                     	;# 
  2933  0116                     	;# 
  2934  0116                     	;# 
  2935  0117                     	;# 
  2936  0119                     	;# 
  2937  0119                     	;# 
  2938  0119                     	;# 
  2939  011A                     	;# 
  2940  011A                     	;# 
  2941  011A                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011B                     	;# 
  2946  011B                     	;# 
  2947  011C                     	;# 
  2948  011C                     	;# 
  2949  011C                     	;# 
  2950  011D                     	;# 
  2951  011D                     	;# 
  2952  011D                     	;# 
  2953  011E                     	;# 
  2954  011E                     	;# 
  2955  011E                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  011F                     	;# 
  2960  011F                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  018F                     	;# 
  2965  0190                     	;# 
  2966  0191                     	;# 
  2967  0192                     	;# 
  2968  0196                     	;# 
  2969  0197                     	;# 
  2970  0198                     	;# 
  2971  0199                     	;# 
  2972  019A                     	;# 
  2973  019B                     	;# 
  2974  019C                     	;# 
  2975  020C                     	;# 
  2976  020C                     	;# 
  2977  020D                     	;# 
  2978  020E                     	;# 
  2979  020F                     	;# 
  2980  020F                     	;# 
  2981  0210                     	;# 
  2982  0210                     	;# 
  2983  0211                     	;# 
  2984  0211                     	;# 
  2985  0212                     	;# 
  2986  0212                     	;# 
  2987  0213                     	;# 
  2988  0214                     	;# 
  2989  0215                     	;# 
  2990  0215                     	;# 
  2991  0216                     	;# 
  2992  0216                     	;# 
  2993  0217                     	;# 
  2994  0217                     	;# 
  2995  0218                     	;# 
  2996  0218                     	;# 
  2997  0219                     	;# 
  2998  021A                     	;# 
  2999  021B                     	;# 
  3000  021B                     	;# 
  3001  021C                     	;# 
  3002  021C                     	;# 
  3003  021D                     	;# 
  3004  021D                     	;# 
  3005  021E                     	;# 
  3006  021F                     	;# 
  3007  028C                     	;# 
  3008  028C                     	;# 
  3009  028D                     	;# 
  3010  028D                     	;# 
  3011  028E                     	;# 
  3012  028F                     	;# 
  3013  0290                     	;# 
  3014  0290                     	;# 
  3015  0291                     	;# 
  3016  0292                     	;# 
  3017  0292                     	;# 
  3018  0293                     	;# 
  3019  0293                     	;# 
  3020  0294                     	;# 
  3021  0295                     	;# 
  3022  0296                     	;# 
  3023  0296                     	;# 
  3024  0297                     	;# 
  3025  0298                     	;# 
  3026  0298                     	;# 
  3027  0299                     	;# 
  3028  0299                     	;# 
  3029  029A                     	;# 
  3030  029B                     	;# 
  3031  029C                     	;# 
  3032  029C                     	;# 
  3033  029D                     	;# 
  3034  030C                     	;# 
  3035  030C                     	;# 
  3036  030D                     	;# 
  3037  030E                     	;# 
  3038  030F                     	;# 
  3039  0310                     	;# 
  3040  0310                     	;# 
  3041  0311                     	;# 
  3042  0312                     	;# 
  3043  0313                     	;# 
  3044  0314                     	;# 
  3045  0314                     	;# 
  3046  0315                     	;# 
  3047  0316                     	;# 
  3048  0317                     	;# 
  3049  0318                     	;# 
  3050  0318                     	;# 
  3051  0319                     	;# 
  3052  031A                     	;# 
  3053  031B                     	;# 
  3054  031C                     	;# 
  3055  031C                     	;# 
  3056  031D                     	;# 
  3057  031E                     	;# 
  3058  031F                     	;# 
  3059  038C                     	;# 
  3060  038C                     	;# 
  3061  038D                     	;# 
  3062  038E                     	;# 
  3063  0390                     	;# 
  3064  0390                     	;# 
  3065  0391                     	;# 
  3066  0392                     	;# 
  3067  040C                     	;# 
  3068  040D                     	;# 
  3069  040E                     	;# 
  3070  040F                     	;# 
  3071  0410                     	;# 
  3072  0411                     	;# 
  3073  0416                     	;# 
  3074  0416                     	;# 
  3075  0417                     	;# 
  3076  0418                     	;# 
  3077  0418                     	;# 
  3078  0419                     	;# 
  3079  041A                     	;# 
  3080  041A                     	;# 
  3081  041B                     	;# 
  3082  041C                     	;# 
  3083  041C                     	;# 
  3084  041D                     	;# 
  3085  041E                     	;# 
  3086  041F                     	;# 
  3087  048C                     	;# 
  3088  048C                     	;# 
  3089  048D                     	;# 
  3090  048E                     	;# 
  3091  048F                     	;# 
  3092  048F                     	;# 
  3093  0490                     	;# 
  3094  0491                     	;# 
  3095  0492                     	;# 
  3096  0492                     	;# 
  3097  0493                     	;# 
  3098  0494                     	;# 
  3099  0495                     	;# 
  3100  0495                     	;# 
  3101  0496                     	;# 
  3102  0497                     	;# 
  3103  0498                     	;# 
  3104  0499                     	;# 
  3105  049A                     	;# 
  3106  049B                     	;# 
  3107  049C                     	;# 
  3108  049D                     	;# 
  3109  050C                     	;# 
  3110  050C                     	;# 
  3111  050D                     	;# 
  3112  050E                     	;# 
  3113  050F                     	;# 
  3114  050F                     	;# 
  3115  0510                     	;# 
  3116  0511                     	;# 
  3117  0512                     	;# 
  3118  0512                     	;# 
  3119  0513                     	;# 
  3120  0514                     	;# 
  3121  0515                     	;# 
  3122  0515                     	;# 
  3123  0516                     	;# 
  3124  0517                     	;# 
  3125  0518                     	;# 
  3126  0519                     	;# 
  3127  051A                     	;# 
  3128  051B                     	;# 
  3129  051C                     	;# 
  3130  051D                     	;# 
  3131  058C                     	;# 
  3132  058C                     	;# 
  3133  058D                     	;# 
  3134  058E                     	;# 
  3135  058F                     	;# 
  3136  058F                     	;# 
  3137  0590                     	;# 
  3138  0591                     	;# 
  3139  0592                     	;# 
  3140  0593                     	;# 
  3141  060C                     	;# 
  3142  060D                     	;# 
  3143  060E                     	;# 
  3144  060F                     	;# 
  3145  0610                     	;# 
  3146  0611                     	;# 
  3147  0612                     	;# 
  3148  0613                     	;# 
  3149  0614                     	;# 
  3150  0616                     	;# 
  3151  0617                     	;# 
  3152  0618                     	;# 
  3153  0619                     	;# 
  3154  061A                     	;# 
  3155  061B                     	;# 
  3156  061C                     	;# 
  3157  061D                     	;# 
  3158  061E                     	;# 
  3159  068C                     	;# 
  3160  068D                     	;# 
  3161  068E                     	;# 
  3162  068F                     	;# 
  3163  0690                     	;# 
  3164  0691                     	;# 
  3165  0692                     	;# 
  3166  0693                     	;# 
  3167  0694                     	;# 
  3168  070C                     	;# 
  3169  070D                     	;# 
  3170  070E                     	;# 
  3171  070F                     	;# 
  3172  0710                     	;# 
  3173  0711                     	;# 
  3174  0712                     	;# 
  3175  0713                     	;# 
  3176  0714                     	;# 
  3177  0716                     	;# 
  3178  0717                     	;# 
  3179  0718                     	;# 
  3180  0719                     	;# 
  3181  071A                     	;# 
  3182  071B                     	;# 
  3183  071C                     	;# 
  3184  071D                     	;# 
  3185  071E                     	;# 
  3186  0796                     	;# 
  3187  0797                     	;# 
  3188  0798                     	;# 
  3189  0799                     	;# 
  3190  079A                     	;# 
  3191  079B                     	;# 
  3192  080C                     	;# 
  3193  080D                     	;# 
  3194  080E                     	;# 
  3195  080F                     	;# 
  3196  0810                     	;# 
  3197  0811                     	;# 
  3198  0812                     	;# 
  3199  0813                     	;# 
  3200  0814                     	;# 
  3201  081A                     	;# 
  3202  081B                     	;# 
  3203  081C                     	;# 
  3204  081D                     	;# 
  3205  081E                     	;# 
  3206  081F                     	;# 
  3207  088C                     	;# 
  3208  088D                     	;# 
  3209  088E                     	;# 
  3210  088F                     	;# 
  3211  0890                     	;# 
  3212  0891                     	;# 
  3213  0892                     	;# 
  3214  0893                     	;# 
  3215  0895                     	;# 
  3216  0896                     	;# 
  3217  0897                     	;# 
  3218  0898                     	;# 
  3219  0899                     	;# 
  3220  089A                     	;# 
  3221  089B                     	;# 
  3222  090C                     	;# 
  3223  090E                     	;# 
  3224  090F                     	;# 
  3225  091F                     	;# 
  3226  091F                     	;# 
  3227  098F                     	;# 
  3228  098F                     	;# 
  3229  0990                     	;# 
  3230  0991                     	;# 
  3231  0992                     	;# 
  3232  0993                     	;# 
  3233  0994                     	;# 
  3234  0995                     	;# 
  3235  0996                     	;# 
  3236  0997                     	;# 
  3237  0E0F                     	;# 
  3238  0E10                     	;# 
  3239  0E11                     	;# 
  3240  0E12                     	;# 
  3241  0E13                     	;# 
  3242  0E14                     	;# 
  3243  0E15                     	;# 
  3244  0E16                     	;# 
  3245  0E17                     	;# 
  3246  0E18                     	;# 
  3247  0E19                     	;# 
  3248  0E1A                     	;# 
  3249  0E1B                     	;# 
  3250  0E1C                     	;# 
  3251  0E1D                     	;# 
  3252  0E1E                     	;# 
  3253  0E1F                     	;# 
  3254  0E20                     	;# 
  3255  0E21                     	;# 
  3256  0E22                     	;# 
  3257  0E23                     	;# 
  3258  0E24                     	;# 
  3259  0E25                     	;# 
  3260  0E26                     	;# 
  3261  0E27                     	;# 
  3262  0E28                     	;# 
  3263  0E29                     	;# 
  3264  0E2A                     	;# 
  3265  0E2B                     	;# 
  3266  0E2C                     	;# 
  3267  0E2D                     	;# 
  3268  0E2E                     	;# 
  3269  0E2F                     	;# 
  3270  0E30                     	;# 
  3271  0E31                     	;# 
  3272  0E32                     	;# 
  3273  0E33                     	;# 
  3274  0E34                     	;# 
  3275  0E35                     	;# 
  3276  0E36                     	;# 
  3277  0E37                     	;# 
  3278  0E8F                     	;# 
  3279  0E90                     	;# 
  3280  0E91                     	;# 
  3281  0E92                     	;# 
  3282  0E93                     	;# 
  3283  0E94                     	;# 
  3284  0E95                     	;# 
  3285  0E96                     	;# 
  3286  0E97                     	;# 
  3287  0E9C                     	;# 
  3288  0E9D                     	;# 
  3289  0E9E                     	;# 
  3290  0EA1                     	;# 
  3291  0EA2                     	;# 
  3292  0EA3                     	;# 
  3293  0EA4                     	;# 
  3294  0EA5                     	;# 
  3295  0EA9                     	;# 
  3296  0EAA                     	;# 
  3297  0EAB                     	;# 
  3298  0EAC                     	;# 
  3299  0EB1                     	;# 
  3300  0EB2                     	;# 
  3301  0EB3                     	;# 
  3302  0EB8                     	;# 
  3303  0EB9                     	;# 
  3304  0EBA                     	;# 
  3305  0EBB                     	;# 
  3306  0EBC                     	;# 
  3307  0EBD                     	;# 
  3308  0EBE                     	;# 
  3309  0EC3                     	;# 
  3310  0EC5                     	;# 
  3311  0EC6                     	;# 
  3312  0EC7                     	;# 
  3313  0EC8                     	;# 
  3314  0EC9                     	;# 
  3315  0ECA                     	;# 
  3316  0ECB                     	;# 
  3317  0ECC                     	;# 
  3318  0F10                     	;# 
  3319  0F11                     	;# 
  3320  0F12                     	;# 
  3321  0F13                     	;# 
  3322  0F14                     	;# 
  3323  0F15                     	;# 
  3324  0F16                     	;# 
  3325  0F17                     	;# 
  3326  0F18                     	;# 
  3327  0F19                     	;# 
  3328  0F1A                     	;# 
  3329  0F1B                     	;# 
  3330  0F1C                     	;# 
  3331  0F1D                     	;# 
  3332  0F1E                     	;# 
  3333  0F1F                     	;# 
  3334  0F20                     	;# 
  3335  0F21                     	;# 
  3336  0F22                     	;# 
  3337  0F23                     	;# 
  3338  0F24                     	;# 
  3339  0F25                     	;# 
  3340  0F26                     	;# 
  3341  0F27                     	;# 
  3342  0F28                     	;# 
  3343  0F29                     	;# 
  3344  0F2A                     	;# 
  3345  0F2B                     	;# 
  3346  0F2C                     	;# 
  3347  0F2D                     	;# 
  3348  0F2E                     	;# 
  3349  0F2F                     	;# 
  3350  0F30                     	;# 
  3351  0F31                     	;# 
  3352  0F32                     	;# 
  3353  0F38                     	;# 
  3354  0F39                     	;# 
  3355  0F3A                     	;# 
  3356  0F3B                     	;# 
  3357  0F3C                     	;# 
  3358  0F3D                     	;# 
  3359  0F3E                     	;# 
  3360  0F3F                     	;# 
  3361  0F40                     	;# 
  3362  0F41                     	;# 
  3363  0F43                     	;# 
  3364  0F44                     	;# 
  3365  0F45                     	;# 
  3366  0F46                     	;# 
  3367  0F47                     	;# 
  3368  0F48                     	;# 
  3369  0F49                     	;# 
  3370  0F4A                     	;# 
  3371  0F4B                     	;# 
  3372  0F4C                     	;# 
  3373  0F4E                     	;# 
  3374  0F4F                     	;# 
  3375  0F50                     	;# 
  3376  0F51                     	;# 
  3377  0F52                     	;# 
  3378  0F53                     	;# 
  3379  0F54                     	;# 
  3380  0F55                     	;# 
  3381  0F56                     	;# 
  3382  0F57                     	;# 
  3383  0F59                     	;# 
  3384  0F5A                     	;# 
  3385  0F5B                     	;# 
  3386  0F5C                     	;# 
  3387  0F5D                     	;# 
  3388  0F61                     	;# 
  3389  0F62                     	;# 
  3390  0F64                     	;# 
  3391  0F65                     	;# 
  3392  0F66                     	;# 
  3393  0F67                     	;# 
  3394  0F68                     	;# 
  3395  0F69                     	;# 
  3396  0F6A                     	;# 
  3397  0F6B                     	;# 
  3398  0F6C                     	;# 
  3399  0F6D                     	;# 
  3400  0FE4                     	;# 
  3401  0FE5                     	;# 
  3402  0FE6                     	;# 
  3403  0FE7                     	;# 
  3404  0FE8                     	;# 
  3405  0FE9                     	;# 
  3406  0FEA                     	;# 
  3407  0FEB                     	;# 
  3408  0FED                     	;# 
  3409  0FEE                     	;# 
  3410  0FEF                     	;# 
  3411  0000                     	;# 
  3412  0001                     	;# 
  3413  0002                     	;# 
  3414  0003                     	;# 
  3415  0004                     	;# 
  3416  0005                     	;# 
  3417  0006                     	;# 
  3418  0007                     	;# 
  3419  0008                     	;# 
  3420  0009                     	;# 
  3421  000A                     	;# 
  3422  000B                     	;# 
  3423  000C                     	;# 
  3424  000D                     	;# 
  3425  000E                     	;# 
  3426  000F                     	;# 
  3427  0010                     	;# 
  3428  0011                     	;# 
  3429  0012                     	;# 
  3430  0013                     	;# 
  3431  0014                     	;# 
  3432  0015                     	;# 
  3433  0016                     	;# 
  3434  0017                     	;# 
  3435  0018                     	;# 
  3436  0019                     	;# 
  3437  001A                     	;# 
  3438  001C                     	;# 
  3439  001C                     	;# 
  3440  001D                     	;# 
  3441  001D                     	;# 
  3442  001E                     	;# 
  3443  001F                     	;# 
  3444  008C                     	;# 
  3445  008C                     	;# 
  3446  008D                     	;# 
  3447  008E                     	;# 
  3448  008E                     	;# 
  3449  008F                     	;# 
  3450  0090                     	;# 
  3451  0090                     	;# 
  3452  0091                     	;# 
  3453  0093                     	;# 
  3454  0094                     	;# 
  3455  0095                     	;# 
  3456  0096                     	;# 
  3457  0097                     	;# 
  3458  0098                     	;# 
  3459  0099                     	;# 
  3460  009A                     	;# 
  3461  009B                     	;# 
  3462  009C                     	;# 
  3463  009D                     	;# 
  3464  009E                     	;# 
  3465  010C                     	;# 
  3466  010D                     	;# 
  3467  010E                     	;# 
  3468  010E                     	;# 
  3469  010F                     	;# 
  3470  0110                     	;# 
  3471  0110                     	;# 
  3472  0111                     	;# 
  3473  0112                     	;# 
  3474  0112                     	;# 
  3475  0113                     	;# 
  3476  0114                     	;# 
  3477  0114                     	;# 
  3478  0115                     	;# 
  3479  0116                     	;# 
  3480  0116                     	;# 
  3481  0117                     	;# 
  3482  0119                     	;# 
  3483  0119                     	;# 
  3484  0119                     	;# 
  3485  011A                     	;# 
  3486  011A                     	;# 
  3487  011A                     	;# 
  3488  011B                     	;# 
  3489  011B                     	;# 
  3490  011B                     	;# 
  3491  011B                     	;# 
  3492  011B                     	;# 
  3493  011C                     	;# 
  3494  011C                     	;# 
  3495  011C                     	;# 
  3496  011D                     	;# 
  3497  011D                     	;# 
  3498  011D                     	;# 
  3499  011E                     	;# 
  3500  011E                     	;# 
  3501  011E                     	;# 
  3502  011F                     	;# 
  3503  011F                     	;# 
  3504  011F                     	;# 
  3505  011F                     	;# 
  3506  011F                     	;# 
  3507  018C                     	;# 
  3508  018D                     	;# 
  3509  018E                     	;# 
  3510  018F                     	;# 
  3511  0190                     	;# 
  3512  0191                     	;# 
  3513  0192                     	;# 
  3514  0196                     	;# 
  3515  0197                     	;# 
  3516  0198                     	;# 
  3517  0199                     	;# 
  3518  019A                     	;# 
  3519  019B                     	;# 
  3520  019C                     	;# 
  3521  020C                     	;# 
  3522  020C                     	;# 
  3523  020D                     	;# 
  3524  020E                     	;# 
  3525  020F                     	;# 
  3526  020F                     	;# 
  3527  0210                     	;# 
  3528  0210                     	;# 
  3529  0211                     	;# 
  3530  0211                     	;# 
  3531  0212                     	;# 
  3532  0212                     	;# 
  3533  0213                     	;# 
  3534  0214                     	;# 
  3535  0215                     	;# 
  3536  0215                     	;# 
  3537  0216                     	;# 
  3538  0216                     	;# 
  3539  0217                     	;# 
  3540  0217                     	;# 
  3541  0218                     	;# 
  3542  0218                     	;# 
  3543  0219                     	;# 
  3544  021A                     	;# 
  3545  021B                     	;# 
  3546  021B                     	;# 
  3547  021C                     	;# 
  3548  021C                     	;# 
  3549  021D                     	;# 
  3550  021D                     	;# 
  3551  021E                     	;# 
  3552  021F                     	;# 
  3553  028C                     	;# 
  3554  028C                     	;# 
  3555  028D                     	;# 
  3556  028D                     	;# 
  3557  028E                     	;# 
  3558  028F                     	;# 
  3559  0290                     	;# 
  3560  0290                     	;# 
  3561  0291                     	;# 
  3562  0292                     	;# 
  3563  0292                     	;# 
  3564  0293                     	;# 
  3565  0293                     	;# 
  3566  0294                     	;# 
  3567  0295                     	;# 
  3568  0296                     	;# 
  3569  0296                     	;# 
  3570  0297                     	;# 
  3571  0298                     	;# 
  3572  0298                     	;# 
  3573  0299                     	;# 
  3574  0299                     	;# 
  3575  029A                     	;# 
  3576  029B                     	;# 
  3577  029C                     	;# 
  3578  029C                     	;# 
  3579  029D                     	;# 
  3580  030C                     	;# 
  3581  030C                     	;# 
  3582  030D                     	;# 
  3583  030E                     	;# 
  3584  030F                     	;# 
  3585  0310                     	;# 
  3586  0310                     	;# 
  3587  0311                     	;# 
  3588  0312                     	;# 
  3589  0313                     	;# 
  3590  0314                     	;# 
  3591  0314                     	;# 
  3592  0315                     	;# 
  3593  0316                     	;# 
  3594  0317                     	;# 
  3595  0318                     	;# 
  3596  0318                     	;# 
  3597  0319                     	;# 
  3598  031A                     	;# 
  3599  031B                     	;# 
  3600  031C                     	;# 
  3601  031C                     	;# 
  3602  031D                     	;# 
  3603  031E                     	;# 
  3604  031F                     	;# 
  3605  038C                     	;# 
  3606  038C                     	;# 
  3607  038D                     	;# 
  3608  038E                     	;# 
  3609  0390                     	;# 
  3610  0390                     	;# 
  3611  0391                     	;# 
  3612  0392                     	;# 
  3613  040C                     	;# 
  3614  040D                     	;# 
  3615  040E                     	;# 
  3616  040F                     	;# 
  3617  0410                     	;# 
  3618  0411                     	;# 
  3619  0416                     	;# 
  3620  0416                     	;# 
  3621  0417                     	;# 
  3622  0418                     	;# 
  3623  0418                     	;# 
  3624  0419                     	;# 
  3625  041A                     	;# 
  3626  041A                     	;# 
  3627  041B                     	;# 
  3628  041C                     	;# 
  3629  041C                     	;# 
  3630  041D                     	;# 
  3631  041E                     	;# 
  3632  041F                     	;# 
  3633  048C                     	;# 
  3634  048C                     	;# 
  3635  048D                     	;# 
  3636  048E                     	;# 
  3637  048F                     	;# 
  3638  048F                     	;# 
  3639  0490                     	;# 
  3640  0491                     	;# 
  3641  0492                     	;# 
  3642  0492                     	;# 
  3643  0493                     	;# 
  3644  0494                     	;# 
  3645  0495                     	;# 
  3646  0495                     	;# 
  3647  0496                     	;# 
  3648  0497                     	;# 
  3649  0498                     	;# 
  3650  0499                     	;# 
  3651  049A                     	;# 
  3652  049B                     	;# 
  3653  049C                     	;# 
  3654  049D                     	;# 
  3655  050C                     	;# 
  3656  050C                     	;# 
  3657  050D                     	;# 
  3658  050E                     	;# 
  3659  050F                     	;# 
  3660  050F                     	;# 
  3661  0510                     	;# 
  3662  0511                     	;# 
  3663  0512                     	;# 
  3664  0512                     	;# 
  3665  0513                     	;# 
  3666  0514                     	;# 
  3667  0515                     	;# 
  3668  0515                     	;# 
  3669  0516                     	;# 
  3670  0517                     	;# 
  3671  0518                     	;# 
  3672  0519                     	;# 
  3673  051A                     	;# 
  3674  051B                     	;# 
  3675  051C                     	;# 
  3676  051D                     	;# 
  3677  058C                     	;# 
  3678  058C                     	;# 
  3679  058D                     	;# 
  3680  058E                     	;# 
  3681  058F                     	;# 
  3682  058F                     	;# 
  3683  0590                     	;# 
  3684  0591                     	;# 
  3685  0592                     	;# 
  3686  0593                     	;# 
  3687  060C                     	;# 
  3688  060D                     	;# 
  3689  060E                     	;# 
  3690  060F                     	;# 
  3691  0610                     	;# 
  3692  0611                     	;# 
  3693  0612                     	;# 
  3694  0613                     	;# 
  3695  0614                     	;# 
  3696  0616                     	;# 
  3697  0617                     	;# 
  3698  0618                     	;# 
  3699  0619                     	;# 
  3700  061A                     	;# 
  3701  061B                     	;# 
  3702  061C                     	;# 
  3703  061D                     	;# 
  3704  061E                     	;# 
  3705  068C                     	;# 
  3706  068D                     	;# 
  3707  068E                     	;# 
  3708  068F                     	;# 
  3709  0690                     	;# 
  3710  0691                     	;# 
  3711  0692                     	;# 
  3712  0693                     	;# 
  3713  0694                     	;# 
  3714  070C                     	;# 
  3715  070D                     	;# 
  3716  070E                     	;# 
  3717  070F                     	;# 
  3718  0710                     	;# 
  3719  0711                     	;# 
  3720  0712                     	;# 
  3721  0713                     	;# 
  3722  0714                     	;# 
  3723  0716                     	;# 
  3724  0717                     	;# 
  3725  0718                     	;# 
  3726  0719                     	;# 
  3727  071A                     	;# 
  3728  071B                     	;# 
  3729  071C                     	;# 
  3730  071D                     	;# 
  3731  071E                     	;# 
  3732  0796                     	;# 
  3733  0797                     	;# 
  3734  0798                     	;# 
  3735  0799                     	;# 
  3736  079A                     	;# 
  3737  079B                     	;# 
  3738  080C                     	;# 
  3739  080D                     	;# 
  3740  080E                     	;# 
  3741  080F                     	;# 
  3742  0810                     	;# 
  3743  0811                     	;# 
  3744  0812                     	;# 
  3745  0813                     	;# 
  3746  0814                     	;# 
  3747  081A                     	;# 
  3748  081B                     	;# 
  3749  081C                     	;# 
  3750  081D                     	;# 
  3751  081E                     	;# 
  3752  081F                     	;# 
  3753  088C                     	;# 
  3754  088D                     	;# 
  3755  088E                     	;# 
  3756  088F                     	;# 
  3757  0890                     	;# 
  3758  0891                     	;# 
  3759  0892                     	;# 
  3760  0893                     	;# 
  3761  0895                     	;# 
  3762  0896                     	;# 
  3763  0897                     	;# 
  3764  0898                     	;# 
  3765  0899                     	;# 
  3766  089A                     	;# 
  3767  089B                     	;# 
  3768  090C                     	;# 
  3769  090E                     	;# 
  3770  090F                     	;# 
  3771  091F                     	;# 
  3772  091F                     	;# 
  3773  098F                     	;# 
  3774  098F                     	;# 
  3775  0990                     	;# 
  3776  0991                     	;# 
  3777  0992                     	;# 
  3778  0993                     	;# 
  3779  0994                     	;# 
  3780  0995                     	;# 
  3781  0996                     	;# 
  3782  0997                     	;# 
  3783  0E0F                     	;# 
  3784  0E10                     	;# 
  3785  0E11                     	;# 
  3786  0E12                     	;# 
  3787  0E13                     	;# 
  3788  0E14                     	;# 
  3789  0E15                     	;# 
  3790  0E16                     	;# 
  3791  0E17                     	;# 
  3792  0E18                     	;# 
  3793  0E19                     	;# 
  3794  0E1A                     	;# 
  3795  0E1B                     	;# 
  3796  0E1C                     	;# 
  3797  0E1D                     	;# 
  3798  0E1E                     	;# 
  3799  0E1F                     	;# 
  3800  0E20                     	;# 
  3801  0E21                     	;# 
  3802  0E22                     	;# 
  3803  0E23                     	;# 
  3804  0E24                     	;# 
  3805  0E25                     	;# 
  3806  0E26                     	;# 
  3807  0E27                     	;# 
  3808  0E28                     	;# 
  3809  0E29                     	;# 
  3810  0E2A                     	;# 
  3811  0E2B                     	;# 
  3812  0E2C                     	;# 
  3813  0E2D                     	;# 
  3814  0E2E                     	;# 
  3815  0E2F                     	;# 
  3816  0E30                     	;# 
  3817  0E31                     	;# 
  3818  0E32                     	;# 
  3819  0E33                     	;# 
  3820  0E34                     	;# 
  3821  0E35                     	;# 
  3822  0E36                     	;# 
  3823  0E37                     	;# 
  3824  0E8F                     	;# 
  3825  0E90                     	;# 
  3826  0E91                     	;# 
  3827  0E92                     	;# 
  3828  0E93                     	;# 
  3829  0E94                     	;# 
  3830  0E95                     	;# 
  3831  0E96                     	;# 
  3832  0E97                     	;# 
  3833  0E9C                     	;# 
  3834  0E9D                     	;# 
  3835  0E9E                     	;# 
  3836  0EA1                     	;# 
  3837  0EA2                     	;# 
  3838  0EA3                     	;# 
  3839  0EA4                     	;# 
  3840  0EA5                     	;# 
  3841  0EA9                     	;# 
  3842  0EAA                     	;# 
  3843  0EAB                     	;# 
  3844  0EAC                     	;# 
  3845  0EB1                     	;# 
  3846  0EB2                     	;# 
  3847  0EB3                     	;# 
  3848  0EB8                     	;# 
  3849  0EB9                     	;# 
  3850  0EBA                     	;# 
  3851  0EBB                     	;# 
  3852  0EBC                     	;# 
  3853  0EBD                     	;# 
  3854  0EBE                     	;# 
  3855  0EC3                     	;# 
  3856  0EC5                     	;# 
  3857  0EC6                     	;# 
  3858  0EC7                     	;# 
  3859  0EC8                     	;# 
  3860  0EC9                     	;# 
  3861  0ECA                     	;# 
  3862  0ECB                     	;# 
  3863  0ECC                     	;# 
  3864  0F10                     	;# 
  3865  0F11                     	;# 
  3866  0F12                     	;# 
  3867  0F13                     	;# 
  3868  0F14                     	;# 
  3869  0F15                     	;# 
  3870  0F16                     	;# 
  3871  0F17                     	;# 
  3872  0F18                     	;# 
  3873  0F19                     	;# 
  3874  0F1A                     	;# 
  3875  0F1B                     	;# 
  3876  0F1C                     	;# 
  3877  0F1D                     	;# 
  3878  0F1E                     	;# 
  3879  0F1F                     	;# 
  3880  0F20                     	;# 
  3881  0F21                     	;# 
  3882  0F22                     	;# 
  3883  0F23                     	;# 
  3884  0F24                     	;# 
  3885  0F25                     	;# 
  3886  0F26                     	;# 
  3887  0F27                     	;# 
  3888  0F28                     	;# 
  3889  0F29                     	;# 
  3890  0F2A                     	;# 
  3891  0F2B                     	;# 
  3892  0F2C                     	;# 
  3893  0F2D                     	;# 
  3894  0F2E                     	;# 
  3895  0F2F                     	;# 
  3896  0F30                     	;# 
  3897  0F31                     	;# 
  3898  0F32                     	;# 
  3899  0F38                     	;# 
  3900  0F39                     	;# 
  3901  0F3A                     	;# 
  3902  0F3B                     	;# 
  3903  0F3C                     	;# 
  3904  0F3D                     	;# 
  3905  0F3E                     	;# 
  3906  0F3F                     	;# 
  3907  0F40                     	;# 
  3908  0F41                     	;# 
  3909  0F43                     	;# 
  3910  0F44                     	;# 
  3911  0F45                     	;# 
  3912  0F46                     	;# 
  3913  0F47                     	;# 
  3914  0F48                     	;# 
  3915  0F49                     	;# 
  3916  0F4A                     	;# 
  3917  0F4B                     	;# 
  3918  0F4C                     	;# 
  3919  0F4E                     	;# 
  3920  0F4F                     	;# 
  3921  0F50                     	;# 
  3922  0F51                     	;# 
  3923  0F52                     	;# 
  3924  0F53                     	;# 
  3925  0F54                     	;# 
  3926  0F55                     	;# 
  3927  0F56                     	;# 
  3928  0F57                     	;# 
  3929  0F59                     	;# 
  3930  0F5A                     	;# 
  3931  0F5B                     	;# 
  3932  0F5C                     	;# 
  3933  0F5D                     	;# 
  3934  0F61                     	;# 
  3935  0F62                     	;# 
  3936  0F64                     	;# 
  3937  0F65                     	;# 
  3938  0F66                     	;# 
  3939  0F67                     	;# 
  3940  0F68                     	;# 
  3941  0F69                     	;# 
  3942  0F6A                     	;# 
  3943  0F6B                     	;# 
  3944  0F6C                     	;# 
  3945  0F6D                     	;# 
  3946  0FE4                     	;# 
  3947  0FE5                     	;# 
  3948  0FE6                     	;# 
  3949  0FE7                     	;# 
  3950  0FE8                     	;# 
  3951  0FE9                     	;# 
  3952  0FEA                     	;# 
  3953  0FEB                     	;# 
  3954  0FED                     	;# 
  3955  0FEE                     	;# 
  3956  0FEF                     	;# 
  3957  0000                     	;# 
  3958  0001                     	;# 
  3959  0002                     	;# 
  3960  0003                     	;# 
  3961  0004                     	;# 
  3962  0005                     	;# 
  3963  0006                     	;# 
  3964  0007                     	;# 
  3965  0008                     	;# 
  3966  0009                     	;# 
  3967  000A                     	;# 
  3968  000B                     	;# 
  3969  000C                     	;# 
  3970  000D                     	;# 
  3971  000E                     	;# 
  3972  000F                     	;# 
  3973  0010                     	;# 
  3974  0011                     	;# 
  3975  0012                     	;# 
  3976  0013                     	;# 
  3977  0014                     	;# 
  3978  0015                     	;# 
  3979  0016                     	;# 
  3980  0017                     	;# 
  3981  0018                     	;# 
  3982  0019                     	;# 
  3983  001A                     	;# 
  3984  001C                     	;# 
  3985  001C                     	;# 
  3986  001D                     	;# 
  3987  001D                     	;# 
  3988  001E                     	;# 
  3989  001F                     	;# 
  3990  008C                     	;# 
  3991  008C                     	;# 
  3992  008D                     	;# 
  3993  008E                     	;# 
  3994  008E                     	;# 
  3995  008F                     	;# 
  3996  0090                     	;# 
  3997  0090                     	;# 
  3998  0091                     	;# 
  3999  0093                     	;# 
  4000  0094                     	;# 
  4001  0095                     	;# 
  4002  0096                     	;# 
  4003  0097                     	;# 
  4004  0098                     	;# 
  4005  0099                     	;# 
  4006  009A                     	;# 
  4007  009B                     	;# 
  4008  009C                     	;# 
  4009  009D                     	;# 
  4010  009E                     	;# 
  4011  010C                     	;# 
  4012  010D                     	;# 
  4013  010E                     	;# 
  4014  010E                     	;# 
  4015  010F                     	;# 
  4016  0110                     	;# 
  4017  0110                     	;# 
  4018  0111                     	;# 
  4019  0112                     	;# 
  4020  0112                     	;# 
  4021  0113                     	;# 
  4022  0114                     	;# 
  4023  0114                     	;# 
  4024  0115                     	;# 
  4025  0116                     	;# 
  4026  0116                     	;# 
  4027  0117                     	;# 
  4028  0119                     	;# 
  4029  0119                     	;# 
  4030  0119                     	;# 
  4031  011A                     	;# 
  4032  011A                     	;# 
  4033  011A                     	;# 
  4034  011B                     	;# 
  4035  011B                     	;# 
  4036  011B                     	;# 
  4037  011B                     	;# 
  4038  011B                     	;# 
  4039  011C                     	;# 
  4040  011C                     	;# 
  4041  011C                     	;# 
  4042  011D                     	;# 
  4043  011D                     	;# 
  4044  011D                     	;# 
  4045  011E                     	;# 
  4046  011E                     	;# 
  4047  011E                     	;# 
  4048  011F                     	;# 
  4049  011F                     	;# 
  4050  011F                     	;# 
  4051  011F                     	;# 
  4052  011F                     	;# 
  4053  018C                     	;# 
  4054  018D                     	;# 
  4055  018E                     	;# 
  4056  018F                     	;# 
  4057  0190                     	;# 
  4058  0191                     	;# 
  4059  0192                     	;# 
  4060  0196                     	;# 
  4061  0197                     	;# 
  4062  0198                     	;# 
  4063  0199                     	;# 
  4064  019A                     	;# 
  4065  019B                     	;# 
  4066  019C                     	;# 
  4067  020C                     	;# 
  4068  020C                     	;# 
  4069  020D                     	;# 
  4070  020E                     	;# 
  4071  020F                     	;# 
  4072  020F                     	;# 
  4073  0210                     	;# 
  4074  0210                     	;# 
  4075  0211                     	;# 
  4076  0211                     	;# 
  4077  0212                     	;# 
  4078  0212                     	;# 
  4079  0213                     	;# 
  4080  0214                     	;# 
  4081  0215                     	;# 
  4082  0215                     	;# 
  4083  0216                     	;# 
  4084  0216                     	;# 
  4085  0217                     	;# 
  4086  0217                     	;# 
  4087  0218                     	;# 
  4088  0218                     	;# 
  4089  0219                     	;# 
  4090  021A                     	;# 
  4091  021B                     	;# 
  4092  021B                     	;# 
  4093  021C                     	;# 
  4094  021C                     	;# 
  4095  021D                     	;# 
  4096  021D                     	;# 
  4097  021E                     	;# 
  4098  021F                     	;# 
  4099  028C                     	;# 
  4100  028C                     	;# 
  4101  028D                     	;# 
  4102  028D                     	;# 
  4103  028E                     	;# 
  4104  028F                     	;# 
  4105  0290                     	;# 
  4106  0290                     	;# 
  4107  0291                     	;# 
  4108  0292                     	;# 
  4109  0292                     	;# 
  4110  0293                     	;# 
  4111  0293                     	;# 
  4112  0294                     	;# 
  4113  0295                     	;# 
  4114  0296                     	;# 
  4115  0296                     	;# 
  4116  0297                     	;# 
  4117  0298                     	;# 
  4118  0298                     	;# 
  4119  0299                     	;# 
  4120  0299                     	;# 
  4121  029A                     	;# 
  4122  029B                     	;# 
  4123  029C                     	;# 
  4124  029C                     	;# 
  4125  029D                     	;# 
  4126  030C                     	;# 
  4127  030C                     	;# 
  4128  030D                     	;# 
  4129  030E                     	;# 
  4130  030F                     	;# 
  4131  0310                     	;# 
  4132  0310                     	;# 
  4133  0311                     	;# 
  4134  0312                     	;# 
  4135  0313                     	;# 
  4136  0314                     	;# 
  4137  0314                     	;# 
  4138  0315                     	;# 
  4139  0316                     	;# 
  4140  0317                     	;# 
  4141  0318                     	;# 
  4142  0318                     	;# 
  4143  0319                     	;# 
  4144  031A                     	;# 
  4145  031B                     	;# 
  4146  031C                     	;# 
  4147  031C                     	;# 
  4148  031D                     	;# 
  4149  031E                     	;# 
  4150  031F                     	;# 
  4151  038C                     	;# 
  4152  038C                     	;# 
  4153  038D                     	;# 
  4154  038E                     	;# 
  4155  0390                     	;# 
  4156  0390                     	;# 
  4157  0391                     	;# 
  4158  0392                     	;# 
  4159  040C                     	;# 
  4160  040D                     	;# 
  4161  040E                     	;# 
  4162  040F                     	;# 
  4163  0410                     	;# 
  4164  0411                     	;# 
  4165  0416                     	;# 
  4166  0416                     	;# 
  4167  0417                     	;# 
  4168  0418                     	;# 
  4169  0418                     	;# 
  4170  0419                     	;# 
  4171  041A                     	;# 
  4172  041A                     	;# 
  4173  041B                     	;# 
  4174  041C                     	;# 
  4175  041C                     	;# 
  4176  041D                     	;# 
  4177  041E                     	;# 
  4178  041F                     	;# 
  4179  048C                     	;# 
  4180  048C                     	;# 
  4181  048D                     	;# 
  4182  048E                     	;# 
  4183  048F                     	;# 
  4184  048F                     	;# 
  4185  0490                     	;# 
  4186  0491                     	;# 
  4187  0492                     	;# 
  4188  0492                     	;# 
  4189  0493                     	;# 
  4190  0494                     	;# 
  4191  0495                     	;# 
  4192  0495                     	;# 
  4193  0496                     	;# 
  4194  0497                     	;# 
  4195  0498                     	;# 
  4196  0499                     	;# 
  4197  049A                     	;# 
  4198  049B                     	;# 
  4199  049C                     	;# 
  4200  049D                     	;# 
  4201  050C                     	;# 
  4202  050C                     	;# 
  4203  050D                     	;# 
  4204  050E                     	;# 
  4205  050F                     	;# 
  4206  050F                     	;# 
  4207  0510                     	;# 
  4208  0511                     	;# 
  4209  0512                     	;# 
  4210  0512                     	;# 
  4211  0513                     	;# 
  4212  0514                     	;# 
  4213  0515                     	;# 
  4214  0515                     	;# 
  4215  0516                     	;# 
  4216  0517                     	;# 
  4217  0518                     	;# 
  4218  0519                     	;# 
  4219  051A                     	;# 
  4220  051B                     	;# 
  4221  051C                     	;# 
  4222  051D                     	;# 
  4223  058C                     	;# 
  4224  058C                     	;# 
  4225  058D                     	;# 
  4226  058E                     	;# 
  4227  058F                     	;# 
  4228  058F                     	;# 
  4229  0590                     	;# 
  4230  0591                     	;# 
  4231  0592                     	;# 
  4232  0593                     	;# 
  4233  060C                     	;# 
  4234  060D                     	;# 
  4235  060E                     	;# 
  4236  060F                     	;# 
  4237  0610                     	;# 
  4238  0611                     	;# 
  4239  0612                     	;# 
  4240  0613                     	;# 
  4241  0614                     	;# 
  4242  0616                     	;# 
  4243  0617                     	;# 
  4244  0618                     	;# 
  4245  0619                     	;# 
  4246  061A                     	;# 
  4247  061B                     	;# 
  4248  061C                     	;# 
  4249  061D                     	;# 
  4250  061E                     	;# 
  4251  068C                     	;# 
  4252  068D                     	;# 
  4253  068E                     	;# 
  4254  068F                     	;# 
  4255  0690                     	;# 
  4256  0691                     	;# 
  4257  0692                     	;# 
  4258  0693                     	;# 
  4259  0694                     	;# 
  4260  070C                     	;# 
  4261  070D                     	;# 
  4262  070E                     	;# 
  4263  070F                     	;# 
  4264  0710                     	;# 
  4265  0711                     	;# 
  4266  0712                     	;# 
  4267  0713                     	;# 
  4268  0714                     	;# 
  4269  0716                     	;# 
  4270  0717                     	;# 
  4271  0718                     	;# 
  4272  0719                     	;# 
  4273  071A                     	;# 
  4274  071B                     	;# 
  4275  071C                     	;# 
  4276  071D                     	;# 
  4277  071E                     	;# 
  4278  0796                     	;# 
  4279  0797                     	;# 
  4280  0798                     	;# 
  4281  0799                     	;# 
  4282  079A                     	;# 
  4283  079B                     	;# 
  4284  080C                     	;# 
  4285  080D                     	;# 
  4286  080E                     	;# 
  4287  080F                     	;# 
  4288  0810                     	;# 
  4289  0811                     	;# 
  4290  0812                     	;# 
  4291  0813                     	;# 
  4292  0814                     	;# 
  4293  081A                     	;# 
  4294  081B                     	;# 
  4295  081C                     	;# 
  4296  081D                     	;# 
  4297  081E                     	;# 
  4298  081F                     	;# 
  4299  088C                     	;# 
  4300  088D                     	;# 
  4301  088E                     	;# 
  4302  088F                     	;# 
  4303  0890                     	;# 
  4304  0891                     	;# 
  4305  0892                     	;# 
  4306  0893                     	;# 
  4307  0895                     	;# 
  4308  0896                     	;# 
  4309  0897                     	;# 
  4310  0898                     	;# 
  4311  0899                     	;# 
  4312  089A                     	;# 
  4313  089B                     	;# 
  4314  090C                     	;# 
  4315  090E                     	;# 
  4316  090F                     	;# 
  4317  091F                     	;# 
  4318  091F                     	;# 
  4319  098F                     	;# 
  4320  098F                     	;# 
  4321  0990                     	;# 
  4322  0991                     	;# 
  4323  0992                     	;# 
  4324  0993                     	;# 
  4325  0994                     	;# 
  4326  0995                     	;# 
  4327  0996                     	;# 
  4328  0997                     	;# 
  4329  0E0F                     	;# 
  4330  0E10                     	;# 
  4331  0E11                     	;# 
  4332  0E12                     	;# 
  4333  0E13                     	;# 
  4334  0E14                     	;# 
  4335  0E15                     	;# 
  4336  0E16                     	;# 
  4337  0E17                     	;# 
  4338  0E18                     	;# 
  4339  0E19                     	;# 
  4340  0E1A                     	;# 
  4341  0E1B                     	;# 
  4342  0E1C                     	;# 
  4343  0E1D                     	;# 
  4344  0E1E                     	;# 
  4345  0E1F                     	;# 
  4346  0E20                     	;# 
  4347  0E21                     	;# 
  4348  0E22                     	;# 
  4349  0E23                     	;# 
  4350  0E24                     	;# 
  4351  0E25                     	;# 
  4352  0E26                     	;# 
  4353  0E27                     	;# 
  4354  0E28                     	;# 
  4355  0E29                     	;# 
  4356  0E2A                     	;# 
  4357  0E2B                     	;# 
  4358  0E2C                     	;# 
  4359  0E2D                     	;# 
  4360  0E2E                     	;# 
  4361  0E2F                     	;# 
  4362  0E30                     	;# 
  4363  0E31                     	;# 
  4364  0E32                     	;# 
  4365  0E33                     	;# 
  4366  0E34                     	;# 
  4367  0E35                     	;# 
  4368  0E36                     	;# 
  4369  0E37                     	;# 
  4370  0E8F                     	;# 
  4371  0E90                     	;# 
  4372  0E91                     	;# 
  4373  0E92                     	;# 
  4374  0E93                     	;# 
  4375  0E94                     	;# 
  4376  0E95                     	;# 
  4377  0E96                     	;# 
  4378  0E97                     	;# 
  4379  0E9C                     	;# 
  4380  0E9D                     	;# 
  4381  0E9E                     	;# 
  4382  0EA1                     	;# 
  4383  0EA2                     	;# 
  4384  0EA3                     	;# 
  4385  0EA4                     	;# 
  4386  0EA5                     	;# 
  4387  0EA9                     	;# 
  4388  0EAA                     	;# 
  4389  0EAB                     	;# 
  4390  0EAC                     	;# 
  4391  0EB1                     	;# 
  4392  0EB2                     	;# 
  4393  0EB3                     	;# 
  4394  0EB8                     	;# 
  4395  0EB9                     	;# 
  4396  0EBA                     	;# 
  4397  0EBB                     	;# 
  4398  0EBC                     	;# 
  4399  0EBD                     	;# 
  4400  0EBE                     	;# 
  4401  0EC3                     	;# 
  4402  0EC5                     	;# 
  4403  0EC6                     	;# 
  4404  0EC7                     	;# 
  4405  0EC8                     	;# 
  4406  0EC9                     	;# 
  4407  0ECA                     	;# 
  4408  0ECB                     	;# 
  4409  0ECC                     	;# 
  4410  0F10                     	;# 
  4411  0F11                     	;# 
  4412  0F12                     	;# 
  4413  0F13                     	;# 
  4414  0F14                     	;# 
  4415  0F15                     	;# 
  4416  0F16                     	;# 
  4417  0F17                     	;# 
  4418  0F18                     	;# 
  4419  0F19                     	;# 
  4420  0F1A                     	;# 
  4421  0F1B                     	;# 
  4422  0F1C                     	;# 
  4423  0F1D                     	;# 
  4424  0F1E                     	;# 
  4425  0F1F                     	;# 
  4426  0F20                     	;# 
  4427  0F21                     	;# 
  4428  0F22                     	;# 
  4429  0F23                     	;# 
  4430  0F24                     	;# 
  4431  0F25                     	;# 
  4432  0F26                     	;# 
  4433  0F27                     	;# 
  4434  0F28                     	;# 
  4435  0F29                     	;# 
  4436  0F2A                     	;# 
  4437  0F2B                     	;# 
  4438  0F2C                     	;# 
  4439  0F2D                     	;# 
  4440  0F2E                     	;# 
  4441  0F2F                     	;# 
  4442  0F30                     	;# 
  4443  0F31                     	;# 
  4444  0F32                     	;# 
  4445  0F38                     	;# 
  4446  0F39                     	;# 
  4447  0F3A                     	;# 
  4448  0F3B                     	;# 
  4449  0F3C                     	;# 
  4450  0F3D                     	;# 
  4451  0F3E                     	;# 
  4452  0F3F                     	;# 
  4453  0F40                     	;# 
  4454  0F41                     	;# 
  4455  0F43                     	;# 
  4456  0F44                     	;# 
  4457  0F45                     	;# 
  4458  0F46                     	;# 
  4459  0F47                     	;# 
  4460  0F48                     	;# 
  4461  0F49                     	;# 
  4462  0F4A                     	;# 
  4463  0F4B                     	;# 
  4464  0F4C                     	;# 
  4465  0F4E                     	;# 
  4466  0F4F                     	;# 
  4467  0F50                     	;# 
  4468  0F51                     	;# 
  4469  0F52                     	;# 
  4470  0F53                     	;# 
  4471  0F54                     	;# 
  4472  0F55                     	;# 
  4473  0F56                     	;# 
  4474  0F57                     	;# 
  4475  0F59                     	;# 
  4476  0F5A                     	;# 
  4477  0F5B                     	;# 
  4478  0F5C                     	;# 
  4479  0F5D                     	;# 
  4480  0F61                     	;# 
  4481  0F62                     	;# 
  4482  0F64                     	;# 
  4483  0F65                     	;# 
  4484  0F66                     	;# 
  4485  0F67                     	;# 
  4486  0F68                     	;# 
  4487  0F69                     	;# 
  4488  0F6A                     	;# 
  4489  0F6B                     	;# 
  4490  0F6C                     	;# 
  4491  0F6D                     	;# 
  4492  0FE4                     	;# 
  4493  0FE5                     	;# 
  4494  0FE6                     	;# 
  4495  0FE7                     	;# 
  4496  0FE8                     	;# 
  4497  0FE9                     	;# 
  4498  0FEA                     	;# 
  4499  0FEB                     	;# 
  4500  0FED                     	;# 
  4501  0FEE                     	;# 
  4502  0FEF                     	;# 
  4503                           
  4504                           	psect	idataBANK0
  4505  07FF                     __pidataBANK0:
  4506                           
  4507                           ;initializer for _textsize
  4508  07FF  3401               	retlw	1
  4509                           
  4510                           	psect	idataBANK1
  4511  1255                     __pidataBANK1:
  4512                           
  4513                           ;initializer for _textbgcolor
  4514  1255  34FF               	retlw	255
  4515  1256  34FF               	retlw	255
  4516                           
  4517                           ;initializer for _textcolor
  4518  1257  34FF               	retlw	255
  4519  1258  34FF               	retlw	255
  4520                           
  4521                           ;initializer for _wrap
  4522  1259  3401               	retlw	1
  4523                           
  4524                           ;initializer for _bolita
  4525  125A  3400               	retlw	0
  4526  125B  3400               	retlw	0
  4527  125C  3406               	retlw	6
  4528  125D  3402               	retlw	2
  4529  125E  343C               	retlw	60
  4530  125F  347E               	retlw	126
  4531  1260  347E               	retlw	126
  4532  1261  347E               	retlw	126
  4533  1262  343C               	retlw	60
  4534  1263  3473               	retlw	115
  4535  1264  3498               	retlw	152
  4536  1265  3400               	retlw	0
  4537                           
  4538                           ;initializer for _jugador2
  4539  1266  3400               	retlw	0
  4540  1267  341E               	retlw	30
  4541  1268  340D               	retlw	13
  4542  1269  3401               	retlw	1
  4543  126A  3480               	retlw	128
  4544  126B  3480               	retlw	128
  4545  126C  3480               	retlw	128
  4546  126D  3480               	retlw	128
  4547  126E  3480               	retlw	128
  4548  126F  3400               	retlw	0
  4549                           
  4550                           	psect	idataBANK2
  4551  1166                     __pidataBANK2:
  4552                           
  4553                           ;initializer for _jugador1
  4554  1166  3400               	retlw	0
  4555  1167  341E               	retlw	30
  4556  1168  340D               	retlw	13
  4557  1169  3400               	retlw	0
  4558  116A  3401               	retlw	1
  4559  116B  3401               	retlw	1
  4560  116C  3401               	retlw	1
  4561  116D  3401               	retlw	1
  4562  116E  3401               	retlw	1
  4563  116F  3400               	retlw	0
  4564                           
  4565                           	psect	stringtext1
  4566  0040                     __pstringtext1:
  4567  0040                     _font:
  4568  0040  3400               	retlw	0
  4569  0041  3400               	retlw	0
  4570  0042  3400               	retlw	0
  4571  0043  3400               	retlw	0
  4572  0044  3400               	retlw	0
  4573  0045  343E               	retlw	62
  4574  0046  345B               	retlw	91
  4575  0047  344F               	retlw	79
  4576  0048  345B               	retlw	91
  4577  0049  343E               	retlw	62
  4578  004A  343E               	retlw	62
  4579  004B  346B               	retlw	107
  4580  004C  344F               	retlw	79
  4581  004D  346B               	retlw	107
  4582  004E  343E               	retlw	62
  4583  004F  341C               	retlw	28
  4584  0050  343E               	retlw	62
  4585  0051  347C               	retlw	124
  4586  0052  343E               	retlw	62
  4587  0053  341C               	retlw	28
  4588  0054  3418               	retlw	24
  4589  0055  343C               	retlw	60
  4590  0056  347E               	retlw	126
  4591  0057  343C               	retlw	60
  4592  0058  3418               	retlw	24
  4593  0059  341C               	retlw	28
  4594  005A  3457               	retlw	87
  4595  005B  347D               	retlw	125
  4596  005C  3457               	retlw	87
  4597  005D  341C               	retlw	28
  4598  005E  341C               	retlw	28
  4599  005F  345E               	retlw	94
  4600  0060  347F               	retlw	127
  4601  0061  345E               	retlw	94
  4602  0062  341C               	retlw	28
  4603  0063  3400               	retlw	0
  4604  0064  3418               	retlw	24
  4605  0065  343C               	retlw	60
  4606  0066  3418               	retlw	24
  4607  0067  3400               	retlw	0
  4608  0068  34FF               	retlw	255
  4609  0069  34E7               	retlw	231
  4610  006A  34C3               	retlw	195
  4611  006B  34E7               	retlw	231
  4612  006C  34FF               	retlw	255
  4613  006D  3400               	retlw	0
  4614  006E  3418               	retlw	24
  4615  006F  3424               	retlw	36
  4616  0070  3418               	retlw	24
  4617  0071  3400               	retlw	0
  4618  0072  34FF               	retlw	255
  4619  0073  34E7               	retlw	231
  4620  0074  34DB               	retlw	219
  4621  0075  34E7               	retlw	231
  4622  0076  34FF               	retlw	255
  4623  0077  3430               	retlw	48
  4624  0078  3448               	retlw	72
  4625  0079  343A               	retlw	58
  4626  007A  3406               	retlw	6
  4627  007B  340E               	retlw	14
  4628  007C  3426               	retlw	38
  4629  007D  3429               	retlw	41
  4630  007E  3479               	retlw	121
  4631  007F  3429               	retlw	41
  4632  0080  3426               	retlw	38
  4633  0081  3440               	retlw	64
  4634  0082  347F               	retlw	127
  4635  0083  3405               	retlw	5
  4636  0084  3405               	retlw	5
  4637  0085  3407               	retlw	7
  4638  0086  3440               	retlw	64
  4639  0087  347F               	retlw	127
  4640  0088  3405               	retlw	5
  4641  0089  3425               	retlw	37
  4642  008A  343F               	retlw	63
  4643  008B  345A               	retlw	90
  4644  008C  343C               	retlw	60
  4645  008D  34E7               	retlw	231
  4646  008E  343C               	retlw	60
  4647  008F  345A               	retlw	90
  4648  0090  347F               	retlw	127
  4649  0091  343E               	retlw	62
  4650  0092  341C               	retlw	28
  4651  0093  341C               	retlw	28
  4652  0094  3408               	retlw	8
  4653  0095  3408               	retlw	8
  4654  0096  341C               	retlw	28
  4655  0097  341C               	retlw	28
  4656  0098  343E               	retlw	62
  4657  0099  347F               	retlw	127
  4658  009A  3414               	retlw	20
  4659  009B  3422               	retlw	34
  4660  009C  347F               	retlw	127
  4661  009D  3422               	retlw	34
  4662  009E  3414               	retlw	20
  4663  009F  345F               	retlw	95
  4664  00A0  345F               	retlw	95
  4665  00A1  3400               	retlw	0
  4666  00A2  345F               	retlw	95
  4667  00A3  345F               	retlw	95
  4668  00A4  3406               	retlw	6
  4669  00A5  3409               	retlw	9
  4670  00A6  347F               	retlw	127
  4671  00A7  3401               	retlw	1
  4672  00A8  347F               	retlw	127
  4673  00A9  3400               	retlw	0
  4674  00AA  3466               	retlw	102
  4675  00AB  3489               	retlw	137
  4676  00AC  3495               	retlw	149
  4677  00AD  346A               	retlw	106
  4678  00AE  3460               	retlw	96
  4679  00AF  3460               	retlw	96
  4680  00B0  3460               	retlw	96
  4681  00B1  3460               	retlw	96
  4682  00B2  3460               	retlw	96
  4683  00B3  3494               	retlw	148
  4684  00B4  34A2               	retlw	162
  4685  00B5  34FF               	retlw	255
  4686  00B6  34A2               	retlw	162
  4687  00B7  3494               	retlw	148
  4688  00B8  3408               	retlw	8
  4689  00B9  3404               	retlw	4
  4690  00BA  347E               	retlw	126
  4691  00BB  3404               	retlw	4
  4692  00BC  3408               	retlw	8
  4693  00BD  3410               	retlw	16
  4694  00BE  3420               	retlw	32
  4695  00BF  347E               	retlw	126
  4696  00C0  3420               	retlw	32
  4697  00C1  3410               	retlw	16
  4698  00C2  3408               	retlw	8
  4699  00C3  3408               	retlw	8
  4700  00C4  342A               	retlw	42
  4701  00C5  341C               	retlw	28
  4702  00C6  3408               	retlw	8
  4703  00C7  3408               	retlw	8
  4704  00C8  341C               	retlw	28
  4705  00C9  342A               	retlw	42
  4706  00CA  3408               	retlw	8
  4707  00CB  3408               	retlw	8
  4708  00CC  341E               	retlw	30
  4709  00CD  3410               	retlw	16
  4710  00CE  3410               	retlw	16
  4711  00CF  3410               	retlw	16
  4712  00D0  3410               	retlw	16
  4713  00D1  340C               	retlw	12
  4714  00D2  341E               	retlw	30
  4715  00D3  340C               	retlw	12
  4716  00D4  341E               	retlw	30
  4717  00D5  340C               	retlw	12
  4718  00D6  3430               	retlw	48
  4719  00D7  3438               	retlw	56
  4720  00D8  343E               	retlw	62
  4721  00D9  3438               	retlw	56
  4722  00DA  3430               	retlw	48
  4723  00DB  3406               	retlw	6
  4724  00DC  340E               	retlw	14
  4725  00DD  343E               	retlw	62
  4726  00DE  340E               	retlw	14
  4727  00DF  3406               	retlw	6
  4728  00E0  3400               	retlw	0
  4729  00E1  3400               	retlw	0
  4730  00E2  3400               	retlw	0
  4731  00E3  3400               	retlw	0
  4732  00E4  3400               	retlw	0
  4733  00E5  3400               	retlw	0
  4734  00E6  3400               	retlw	0
  4735  00E7  345F               	retlw	95
  4736  00E8  3400               	retlw	0
  4737  00E9  3400               	retlw	0
  4738  00EA  3400               	retlw	0
  4739  00EB  3407               	retlw	7
  4740  00EC  3400               	retlw	0
  4741  00ED  3407               	retlw	7
  4742  00EE  3400               	retlw	0
  4743  00EF  3414               	retlw	20
  4744  00F0  347F               	retlw	127
  4745  00F1  3414               	retlw	20
  4746  00F2  347F               	retlw	127
  4747  00F3  3414               	retlw	20
  4748  00F4  3424               	retlw	36
  4749  00F5  342A               	retlw	42
  4750  00F6  347F               	retlw	127
  4751  00F7  342A               	retlw	42
  4752  00F8  3412               	retlw	18
  4753  00F9  3423               	retlw	35
  4754  00FA  3413               	retlw	19
  4755  00FB  3408               	retlw	8
  4756  00FC  3464               	retlw	100
  4757  00FD  3462               	retlw	98
  4758  00FE  3436               	retlw	54
  4759  00FF  3449               	retlw	73
  4760  0100  3456               	retlw	86
  4761  0101  3420               	retlw	32
  4762  0102  3450               	retlw	80
  4763  0103  3400               	retlw	0
  4764  0104  3408               	retlw	8
  4765  0105  3407               	retlw	7
  4766  0106  3403               	retlw	3
  4767  0107  3400               	retlw	0
  4768  0108  3400               	retlw	0
  4769  0109  341C               	retlw	28
  4770  010A  3422               	retlw	34
  4771  010B  3441               	retlw	65
  4772  010C  3400               	retlw	0
  4773  010D  3400               	retlw	0
  4774  010E  3441               	retlw	65
  4775  010F  3422               	retlw	34
  4776  0110  341C               	retlw	28
  4777  0111  3400               	retlw	0
  4778  0112  342A               	retlw	42
  4779  0113  341C               	retlw	28
  4780  0114  347F               	retlw	127
  4781  0115  341C               	retlw	28
  4782  0116  342A               	retlw	42
  4783  0117  3408               	retlw	8
  4784  0118  3408               	retlw	8
  4785  0119  343E               	retlw	62
  4786  011A  3408               	retlw	8
  4787  011B  3408               	retlw	8
  4788  011C  3400               	retlw	0
  4789  011D  3480               	retlw	128
  4790  011E  3470               	retlw	112
  4791  011F  3430               	retlw	48
  4792  0120  3400               	retlw	0
  4793  0121  3408               	retlw	8
  4794  0122  3408               	retlw	8
  4795  0123  3408               	retlw	8
  4796  0124  3408               	retlw	8
  4797  0125  3408               	retlw	8
  4798  0126  3400               	retlw	0
  4799  0127  3400               	retlw	0
  4800  0128  3460               	retlw	96
  4801  0129  3460               	retlw	96
  4802  012A  3400               	retlw	0
  4803  012B  3420               	retlw	32
  4804  012C  3410               	retlw	16
  4805  012D  3408               	retlw	8
  4806  012E  3404               	retlw	4
  4807  012F  3402               	retlw	2
  4808  0130  343E               	retlw	62
  4809  0131  3451               	retlw	81
  4810  0132  3449               	retlw	73
  4811  0133  3445               	retlw	69
  4812  0134  343E               	retlw	62
  4813  0135  3400               	retlw	0
  4814  0136  3442               	retlw	66
  4815  0137  347F               	retlw	127
  4816  0138  3440               	retlw	64
  4817  0139  3400               	retlw	0
  4818  013A  3472               	retlw	114
  4819  013B  3449               	retlw	73
  4820  013C  3449               	retlw	73
  4821  013D  3449               	retlw	73
  4822  013E  3446               	retlw	70
  4823  013F  3421               	retlw	33
  4824  0140  3441               	retlw	65
  4825  0141  3449               	retlw	73
  4826  0142  344D               	retlw	77
  4827  0143  3433               	retlw	51
  4828  0144  3418               	retlw	24
  4829  0145  3414               	retlw	20
  4830  0146  3412               	retlw	18
  4831  0147  347F               	retlw	127
  4832  0148  3410               	retlw	16
  4833  0149  3427               	retlw	39
  4834  014A  3445               	retlw	69
  4835  014B  3445               	retlw	69
  4836  014C  3445               	retlw	69
  4837  014D  3439               	retlw	57
  4838  014E  343C               	retlw	60
  4839  014F  344A               	retlw	74
  4840  0150  3449               	retlw	73
  4841  0151  3449               	retlw	73
  4842  0152  3431               	retlw	49
  4843  0153  3441               	retlw	65
  4844  0154  3421               	retlw	33
  4845  0155  3411               	retlw	17
  4846  0156  3409               	retlw	9
  4847  0157  3407               	retlw	7
  4848  0158  3436               	retlw	54
  4849  0159  3449               	retlw	73
  4850  015A  3449               	retlw	73
  4851  015B  3449               	retlw	73
  4852  015C  3436               	retlw	54
  4853  015D  3446               	retlw	70
  4854  015E  3449               	retlw	73
  4855  015F  3449               	retlw	73
  4856  0160  3429               	retlw	41
  4857  0161  341E               	retlw	30
  4858  0162  3400               	retlw	0
  4859  0163  3400               	retlw	0
  4860  0164  3414               	retlw	20
  4861  0165  3400               	retlw	0
  4862  0166  3400               	retlw	0
  4863  0167  3400               	retlw	0
  4864  0168  3440               	retlw	64
  4865  0169  3434               	retlw	52
  4866  016A  3400               	retlw	0
  4867  016B  3400               	retlw	0
  4868  016C  3400               	retlw	0
  4869  016D  3408               	retlw	8
  4870  016E  3414               	retlw	20
  4871  016F  3422               	retlw	34
  4872  0170  3441               	retlw	65
  4873  0171  3414               	retlw	20
  4874  0172  3414               	retlw	20
  4875  0173  3414               	retlw	20
  4876  0174  3414               	retlw	20
  4877  0175  3414               	retlw	20
  4878  0176  3400               	retlw	0
  4879  0177  3441               	retlw	65
  4880  0178  3422               	retlw	34
  4881  0179  3414               	retlw	20
  4882  017A  3408               	retlw	8
  4883  017B  3402               	retlw	2
  4884  017C  3401               	retlw	1
  4885  017D  3459               	retlw	89
  4886  017E  3409               	retlw	9
  4887  017F  3406               	retlw	6
  4888  0180  343E               	retlw	62
  4889  0181  3441               	retlw	65
  4890  0182  345D               	retlw	93
  4891  0183  3459               	retlw	89
  4892  0184  344E               	retlw	78
  4893  0185  347C               	retlw	124
  4894  0186  3412               	retlw	18
  4895  0187  3411               	retlw	17
  4896  0188  3412               	retlw	18
  4897  0189  347C               	retlw	124
  4898  018A  347F               	retlw	127
  4899  018B  3449               	retlw	73
  4900  018C  3449               	retlw	73
  4901  018D  3449               	retlw	73
  4902  018E  3436               	retlw	54
  4903  018F  343E               	retlw	62
  4904  0190  3441               	retlw	65
  4905  0191  3441               	retlw	65
  4906  0192  3441               	retlw	65
  4907  0193  3422               	retlw	34
  4908  0194  347F               	retlw	127
  4909  0195  3441               	retlw	65
  4910  0196  3441               	retlw	65
  4911  0197  3441               	retlw	65
  4912  0198  343E               	retlw	62
  4913  0199  347F               	retlw	127
  4914  019A  3449               	retlw	73
  4915  019B  3449               	retlw	73
  4916  019C  3449               	retlw	73
  4917  019D  3441               	retlw	65
  4918  019E  347F               	retlw	127
  4919  019F  3409               	retlw	9
  4920  01A0  3409               	retlw	9
  4921  01A1  3409               	retlw	9
  4922  01A2  3401               	retlw	1
  4923  01A3  343E               	retlw	62
  4924  01A4  3441               	retlw	65
  4925  01A5  3441               	retlw	65
  4926  01A6  3451               	retlw	81
  4927  01A7  3473               	retlw	115
  4928  01A8  347F               	retlw	127
  4929  01A9  3408               	retlw	8
  4930  01AA  3408               	retlw	8
  4931  01AB  3408               	retlw	8
  4932  01AC  347F               	retlw	127
  4933  01AD  3400               	retlw	0
  4934  01AE  3441               	retlw	65
  4935  01AF  347F               	retlw	127
  4936  01B0  3441               	retlw	65
  4937  01B1  3400               	retlw	0
  4938  01B2  3420               	retlw	32
  4939  01B3  3440               	retlw	64
  4940  01B4  3441               	retlw	65
  4941  01B5  343F               	retlw	63
  4942  01B6  3401               	retlw	1
  4943  01B7  347F               	retlw	127
  4944  01B8  3408               	retlw	8
  4945  01B9  3414               	retlw	20
  4946  01BA  3422               	retlw	34
  4947  01BB  3441               	retlw	65
  4948  01BC  347F               	retlw	127
  4949  01BD  3440               	retlw	64
  4950  01BE  3440               	retlw	64
  4951  01BF  3440               	retlw	64
  4952  01C0  3440               	retlw	64
  4953  01C1  347F               	retlw	127
  4954  01C2  3402               	retlw	2
  4955  01C3  341C               	retlw	28
  4956  01C4  3402               	retlw	2
  4957  01C5  347F               	retlw	127
  4958  01C6  347F               	retlw	127
  4959  01C7  3404               	retlw	4
  4960  01C8  3408               	retlw	8
  4961  01C9  3410               	retlw	16
  4962  01CA  347F               	retlw	127
  4963  01CB  343E               	retlw	62
  4964  01CC  3441               	retlw	65
  4965  01CD  3441               	retlw	65
  4966  01CE  3441               	retlw	65
  4967  01CF  343E               	retlw	62
  4968  01D0  347F               	retlw	127
  4969  01D1  3409               	retlw	9
  4970  01D2  3409               	retlw	9
  4971  01D3  3409               	retlw	9
  4972  01D4  3406               	retlw	6
  4973  01D5  343E               	retlw	62
  4974  01D6  3441               	retlw	65
  4975  01D7  3451               	retlw	81
  4976  01D8  3421               	retlw	33
  4977  01D9  345E               	retlw	94
  4978  01DA  347F               	retlw	127
  4979  01DB  3409               	retlw	9
  4980  01DC  3419               	retlw	25
  4981  01DD  3429               	retlw	41
  4982  01DE  3446               	retlw	70
  4983  01DF  3426               	retlw	38
  4984  01E0  3449               	retlw	73
  4985  01E1  3449               	retlw	73
  4986  01E2  3449               	retlw	73
  4987  01E3  3432               	retlw	50
  4988  01E4  3403               	retlw	3
  4989  01E5  3401               	retlw	1
  4990  01E6  347F               	retlw	127
  4991  01E7  3401               	retlw	1
  4992  01E8  3403               	retlw	3
  4993  01E9  343F               	retlw	63
  4994  01EA  3440               	retlw	64
  4995  01EB  3440               	retlw	64
  4996  01EC  3440               	retlw	64
  4997  01ED  343F               	retlw	63
  4998  01EE  341F               	retlw	31
  4999  01EF  3420               	retlw	32
  5000  01F0  3440               	retlw	64
  5001  01F1  3420               	retlw	32
  5002  01F2  341F               	retlw	31
  5003  01F3  343F               	retlw	63
  5004  01F4  3440               	retlw	64
  5005  01F5  3438               	retlw	56
  5006  01F6  3440               	retlw	64
  5007  01F7  343F               	retlw	63
  5008  01F8  3463               	retlw	99
  5009  01F9  3414               	retlw	20
  5010  01FA  3408               	retlw	8
  5011  01FB  3414               	retlw	20
  5012  01FC  3463               	retlw	99
  5013  01FD  3403               	retlw	3
  5014  01FE  3404               	retlw	4
  5015  01FF  3478               	retlw	120
  5016  0200  3404               	retlw	4
  5017  0201  3403               	retlw	3
  5018  0202  3461               	retlw	97
  5019  0203  3459               	retlw	89
  5020  0204  3449               	retlw	73
  5021  0205  344D               	retlw	77
  5022  0206  3443               	retlw	67
  5023  0207  3400               	retlw	0
  5024  0208  347F               	retlw	127
  5025  0209  3441               	retlw	65
  5026  020A  3441               	retlw	65
  5027  020B  3441               	retlw	65
  5028  020C  3402               	retlw	2
  5029  020D  3404               	retlw	4
  5030  020E  3408               	retlw	8
  5031  020F  3410               	retlw	16
  5032  0210  3420               	retlw	32
  5033  0211  3400               	retlw	0
  5034  0212  3441               	retlw	65
  5035  0213  3441               	retlw	65
  5036  0214  3441               	retlw	65
  5037  0215  347F               	retlw	127
  5038  0216  3404               	retlw	4
  5039  0217  3402               	retlw	2
  5040  0218  3401               	retlw	1
  5041  0219  3402               	retlw	2
  5042  021A  3404               	retlw	4
  5043  021B  3440               	retlw	64
  5044  021C  3440               	retlw	64
  5045  021D  3440               	retlw	64
  5046  021E  3440               	retlw	64
  5047  021F  3440               	retlw	64
  5048  0220  3400               	retlw	0
  5049  0221  3403               	retlw	3
  5050  0222  3407               	retlw	7
  5051  0223  3408               	retlw	8
  5052  0224  3400               	retlw	0
  5053  0225  3420               	retlw	32
  5054  0226  3454               	retlw	84
  5055  0227  3454               	retlw	84
  5056  0228  3478               	retlw	120
  5057  0229  3440               	retlw	64
  5058  022A  347F               	retlw	127
  5059  022B  3428               	retlw	40
  5060  022C  3444               	retlw	68
  5061  022D  3444               	retlw	68
  5062  022E  3438               	retlw	56
  5063  022F  3438               	retlw	56
  5064  0230  3444               	retlw	68
  5065  0231  3444               	retlw	68
  5066  0232  3444               	retlw	68
  5067  0233  3428               	retlw	40
  5068  0234  3438               	retlw	56
  5069  0235  3444               	retlw	68
  5070  0236  3444               	retlw	68
  5071  0237  3428               	retlw	40
  5072  0238  347F               	retlw	127
  5073  0239  3438               	retlw	56
  5074  023A  3454               	retlw	84
  5075  023B  3454               	retlw	84
  5076  023C  3454               	retlw	84
  5077  023D  3418               	retlw	24
  5078  023E  3400               	retlw	0
  5079  023F  3408               	retlw	8
  5080  0240  347E               	retlw	126
  5081  0241  3409               	retlw	9
  5082  0242  3402               	retlw	2
  5083  0243  3418               	retlw	24
  5084  0244  34A4               	retlw	164
  5085  0245  34A4               	retlw	164
  5086  0246  349C               	retlw	156
  5087  0247  3478               	retlw	120
  5088  0248  347F               	retlw	127
  5089  0249  3408               	retlw	8
  5090  024A  3404               	retlw	4
  5091  024B  3404               	retlw	4
  5092  024C  3478               	retlw	120
  5093  024D  3400               	retlw	0
  5094  024E  3444               	retlw	68
  5095  024F  347D               	retlw	125
  5096  0250  3440               	retlw	64
  5097  0251  3400               	retlw	0
  5098  0252  3420               	retlw	32
  5099  0253  3440               	retlw	64
  5100  0254  3440               	retlw	64
  5101  0255  343D               	retlw	61
  5102  0256  3400               	retlw	0
  5103  0257  347F               	retlw	127
  5104  0258  3410               	retlw	16
  5105  0259  3428               	retlw	40
  5106  025A  3444               	retlw	68
  5107  025B  3400               	retlw	0
  5108  025C  3400               	retlw	0
  5109  025D  3441               	retlw	65
  5110  025E  347F               	retlw	127
  5111  025F  3440               	retlw	64
  5112  0260  3400               	retlw	0
  5113  0261  347C               	retlw	124
  5114  0262  3404               	retlw	4
  5115  0263  3478               	retlw	120
  5116  0264  3404               	retlw	4
  5117  0265  3478               	retlw	120
  5118  0266  347C               	retlw	124
  5119  0267  3408               	retlw	8
  5120  0268  3404               	retlw	4
  5121  0269  3404               	retlw	4
  5122  026A  3478               	retlw	120
  5123  026B  3438               	retlw	56
  5124  026C  3444               	retlw	68
  5125  026D  3444               	retlw	68
  5126  026E  3444               	retlw	68
  5127  026F  3438               	retlw	56
  5128  0270  34FC               	retlw	252
  5129  0271  3418               	retlw	24
  5130  0272  3424               	retlw	36
  5131  0273  3424               	retlw	36
  5132  0274  3418               	retlw	24
  5133  0275  3418               	retlw	24
  5134  0276  3424               	retlw	36
  5135  0277  3424               	retlw	36
  5136  0278  3418               	retlw	24
  5137  0279  34FC               	retlw	252
  5138  027A  347C               	retlw	124
  5139  027B  3408               	retlw	8
  5140  027C  3404               	retlw	4
  5141  027D  3404               	retlw	4
  5142  027E  3408               	retlw	8
  5143  027F  3448               	retlw	72
  5144  0280  3454               	retlw	84
  5145  0281  3454               	retlw	84
  5146  0282  3454               	retlw	84
  5147  0283  3424               	retlw	36
  5148  0284  3404               	retlw	4
  5149  0285  3404               	retlw	4
  5150  0286  343F               	retlw	63
  5151  0287  3444               	retlw	68
  5152  0288  3424               	retlw	36
  5153  0289  343C               	retlw	60
  5154  028A  3440               	retlw	64
  5155  028B  3440               	retlw	64
  5156  028C  3420               	retlw	32
  5157  028D  347C               	retlw	124
  5158  028E  341C               	retlw	28
  5159  028F  3420               	retlw	32
  5160  0290  3440               	retlw	64
  5161  0291  3420               	retlw	32
  5162  0292  341C               	retlw	28
  5163  0293  343C               	retlw	60
  5164  0294  3440               	retlw	64
  5165  0295  3430               	retlw	48
  5166  0296  3440               	retlw	64
  5167  0297  343C               	retlw	60
  5168  0298  3444               	retlw	68
  5169  0299  3428               	retlw	40
  5170  029A  3410               	retlw	16
  5171  029B  3428               	retlw	40
  5172  029C  3444               	retlw	68
  5173  029D  344C               	retlw	76
  5174  029E  3490               	retlw	144
  5175  029F  3490               	retlw	144
  5176  02A0  3490               	retlw	144
  5177  02A1  347C               	retlw	124
  5178  02A2  3444               	retlw	68
  5179  02A3  3464               	retlw	100
  5180  02A4  3454               	retlw	84
  5181  02A5  344C               	retlw	76
  5182  02A6  3444               	retlw	68
  5183  02A7  3400               	retlw	0
  5184  02A8  3408               	retlw	8
  5185  02A9  3436               	retlw	54
  5186  02AA  3441               	retlw	65
  5187  02AB  3400               	retlw	0
  5188  02AC  3400               	retlw	0
  5189  02AD  3400               	retlw	0
  5190  02AE  3477               	retlw	119
  5191  02AF  3400               	retlw	0
  5192  02B0  3400               	retlw	0
  5193  02B1  3400               	retlw	0
  5194  02B2  3441               	retlw	65
  5195  02B3  3436               	retlw	54
  5196  02B4  3408               	retlw	8
  5197  02B5  3400               	retlw	0
  5198  02B6  3402               	retlw	2
  5199  02B7  3401               	retlw	1
  5200  02B8  3402               	retlw	2
  5201  02B9  3404               	retlw	4
  5202  02BA  3402               	retlw	2
  5203  02BB  343C               	retlw	60
  5204  02BC  3426               	retlw	38
  5205  02BD  3423               	retlw	35
  5206  02BE  3426               	retlw	38
  5207  02BF  343C               	retlw	60
  5208  02C0  341E               	retlw	30
  5209  02C1  34A1               	retlw	161
  5210  02C2  34A1               	retlw	161
  5211  02C3  3461               	retlw	97
  5212  02C4  3412               	retlw	18
  5213  02C5  343A               	retlw	58
  5214  02C6  3440               	retlw	64
  5215  02C7  3440               	retlw	64
  5216  02C8  3420               	retlw	32
  5217  02C9  347A               	retlw	122
  5218  02CA  3438               	retlw	56
  5219  02CB  3454               	retlw	84
  5220  02CC  3454               	retlw	84
  5221  02CD  3455               	retlw	85
  5222  02CE  3459               	retlw	89
  5223  02CF  3421               	retlw	33
  5224  02D0  3455               	retlw	85
  5225  02D1  3455               	retlw	85
  5226  02D2  3479               	retlw	121
  5227  02D3  3441               	retlw	65
  5228  02D4  3422               	retlw	34
  5229  02D5  3454               	retlw	84
  5230  02D6  3454               	retlw	84
  5231  02D7  3478               	retlw	120
  5232  02D8  3442               	retlw	66
  5233  02D9  3421               	retlw	33
  5234  02DA  3455               	retlw	85
  5235  02DB  3454               	retlw	84
  5236  02DC  3478               	retlw	120
  5237  02DD  3440               	retlw	64
  5238  02DE  3420               	retlw	32
  5239  02DF  3454               	retlw	84
  5240  02E0  3455               	retlw	85
  5241  02E1  3479               	retlw	121
  5242  02E2  3440               	retlw	64
  5243  02E3  340C               	retlw	12
  5244  02E4  341E               	retlw	30
  5245  02E5  3452               	retlw	82
  5246  02E6  3472               	retlw	114
  5247  02E7  3412               	retlw	18
  5248  02E8  3439               	retlw	57
  5249  02E9  3455               	retlw	85
  5250  02EA  3455               	retlw	85
  5251  02EB  3455               	retlw	85
  5252  02EC  3459               	retlw	89
  5253  02ED  3439               	retlw	57
  5254  02EE  3454               	retlw	84
  5255  02EF  3454               	retlw	84
  5256  02F0  3454               	retlw	84
  5257  02F1  3459               	retlw	89
  5258  02F2  3439               	retlw	57
  5259  02F3  3455               	retlw	85
  5260  02F4  3454               	retlw	84
  5261  02F5  3454               	retlw	84
  5262  02F6  3458               	retlw	88
  5263  02F7  3400               	retlw	0
  5264  02F8  3400               	retlw	0
  5265  02F9  3445               	retlw	69
  5266  02FA  347C               	retlw	124
  5267  02FB  3441               	retlw	65
  5268  02FC  3400               	retlw	0
  5269  02FD  3402               	retlw	2
  5270  02FE  3445               	retlw	69
  5271  02FF  347D               	retlw	125
  5272  0300  3442               	retlw	66
  5273  0301  3400               	retlw	0
  5274  0302  3401               	retlw	1
  5275  0303  3445               	retlw	69
  5276  0304  347C               	retlw	124
  5277  0305  3440               	retlw	64
  5278  0306  347D               	retlw	125
  5279  0307  3412               	retlw	18
  5280  0308  3411               	retlw	17
  5281  0309  3412               	retlw	18
  5282  030A  347D               	retlw	125
  5283  030B  34F0               	retlw	240
  5284  030C  3428               	retlw	40
  5285  030D  3425               	retlw	37
  5286  030E  3428               	retlw	40
  5287  030F  34F0               	retlw	240
  5288  0310  347C               	retlw	124
  5289  0311  3454               	retlw	84
  5290  0312  3455               	retlw	85
  5291  0313  3445               	retlw	69
  5292  0314  3400               	retlw	0
  5293  0315  3420               	retlw	32
  5294  0316  3454               	retlw	84
  5295  0317  3454               	retlw	84
  5296  0318  347C               	retlw	124
  5297  0319  3454               	retlw	84
  5298  031A  347C               	retlw	124
  5299  031B  340A               	retlw	10
  5300  031C  3409               	retlw	9
  5301  031D  347F               	retlw	127
  5302  031E  3449               	retlw	73
  5303  031F  3432               	retlw	50
  5304  0320  3449               	retlw	73
  5305  0321  3449               	retlw	73
  5306  0322  3449               	retlw	73
  5307  0323  3432               	retlw	50
  5308  0324  343A               	retlw	58
  5309  0325  3444               	retlw	68
  5310  0326  3444               	retlw	68
  5311  0327  3444               	retlw	68
  5312  0328  343A               	retlw	58
  5313  0329  3432               	retlw	50
  5314  032A  344A               	retlw	74
  5315  032B  3448               	retlw	72
  5316  032C  3448               	retlw	72
  5317  032D  3430               	retlw	48
  5318  032E  343A               	retlw	58
  5319  032F  3441               	retlw	65
  5320  0330  3441               	retlw	65
  5321  0331  3421               	retlw	33
  5322  0332  347A               	retlw	122
  5323  0333  343A               	retlw	58
  5324  0334  3442               	retlw	66
  5325  0335  3440               	retlw	64
  5326  0336  3420               	retlw	32
  5327  0337  3478               	retlw	120
  5328  0338  3400               	retlw	0
  5329  0339  349D               	retlw	157
  5330  033A  34A0               	retlw	160
  5331  033B  34A0               	retlw	160
  5332  033C  347D               	retlw	125
  5333  033D  343D               	retlw	61
  5334  033E  3442               	retlw	66
  5335  033F  3442               	retlw	66
  5336  0340  3442               	retlw	66
  5337  0341  343D               	retlw	61
  5338  0342  343D               	retlw	61
  5339  0343  3440               	retlw	64
  5340  0344  3440               	retlw	64
  5341  0345  3440               	retlw	64
  5342  0346  343D               	retlw	61
  5343  0347  343C               	retlw	60
  5344  0348  3424               	retlw	36
  5345  0349  34FF               	retlw	255
  5346  034A  3424               	retlw	36
  5347  034B  3424               	retlw	36
  5348  034C  3448               	retlw	72
  5349  034D  347E               	retlw	126
  5350  034E  3449               	retlw	73
  5351  034F  3443               	retlw	67
  5352  0350  3466               	retlw	102
  5353  0351  342B               	retlw	43
  5354  0352  342F               	retlw	47
  5355  0353  34FC               	retlw	252
  5356  0354  342F               	retlw	47
  5357  0355  342B               	retlw	43
  5358  0356  34FF               	retlw	255
  5359  0357  3409               	retlw	9
  5360  0358  3429               	retlw	41
  5361  0359  34F6               	retlw	246
  5362  035A  3420               	retlw	32
  5363  035B  34C0               	retlw	192
  5364  035C  3488               	retlw	136
  5365  035D  347E               	retlw	126
  5366  035E  3409               	retlw	9
  5367  035F  3403               	retlw	3
  5368  0360  3420               	retlw	32
  5369  0361  3454               	retlw	84
  5370  0362  3454               	retlw	84
  5371  0363  3479               	retlw	121
  5372  0364  3441               	retlw	65
  5373  0365  3400               	retlw	0
  5374  0366  3400               	retlw	0
  5375  0367  3444               	retlw	68
  5376  0368  347D               	retlw	125
  5377  0369  3441               	retlw	65
  5378  036A  3430               	retlw	48
  5379  036B  3448               	retlw	72
  5380  036C  3448               	retlw	72
  5381  036D  344A               	retlw	74
  5382  036E  3432               	retlw	50
  5383  036F  3438               	retlw	56
  5384  0370  3440               	retlw	64
  5385  0371  3440               	retlw	64
  5386  0372  3422               	retlw	34
  5387  0373  347A               	retlw	122
  5388  0374  3400               	retlw	0
  5389  0375  347A               	retlw	122
  5390  0376  340A               	retlw	10
  5391  0377  340A               	retlw	10
  5392  0378  3472               	retlw	114
  5393  0379  347D               	retlw	125
  5394  037A  340D               	retlw	13
  5395  037B  3419               	retlw	25
  5396  037C  3431               	retlw	49
  5397  037D  347D               	retlw	125
  5398  037E  3426               	retlw	38
  5399  037F  3429               	retlw	41
  5400  0380  3429               	retlw	41
  5401  0381  342F               	retlw	47
  5402  0382  3428               	retlw	40
  5403  0383  3426               	retlw	38
  5404  0384  3429               	retlw	41
  5405  0385  3429               	retlw	41
  5406  0386  3429               	retlw	41
  5407  0387  3426               	retlw	38
  5408  0388  3430               	retlw	48
  5409  0389  3448               	retlw	72
  5410  038A  344D               	retlw	77
  5411  038B  3440               	retlw	64
  5412  038C  3420               	retlw	32
  5413  038D  3438               	retlw	56
  5414  038E  3408               	retlw	8
  5415  038F  3408               	retlw	8
  5416  0390  3408               	retlw	8
  5417  0391  3408               	retlw	8
  5418  0392  3408               	retlw	8
  5419  0393  3408               	retlw	8
  5420  0394  3408               	retlw	8
  5421  0395  3408               	retlw	8
  5422  0396  3438               	retlw	56
  5423  0397  342F               	retlw	47
  5424  0398  3410               	retlw	16
  5425  0399  34C8               	retlw	200
  5426  039A  34AC               	retlw	172
  5427  039B  34BA               	retlw	186
  5428  039C  342F               	retlw	47
  5429  039D  3410               	retlw	16
  5430  039E  3428               	retlw	40
  5431  039F  3434               	retlw	52
  5432  03A0  34FA               	retlw	250
  5433  03A1  3400               	retlw	0
  5434  03A2  3400               	retlw	0
  5435  03A3  347B               	retlw	123
  5436  03A4  3400               	retlw	0
  5437  03A5  3400               	retlw	0
  5438  03A6  3408               	retlw	8
  5439  03A7  3414               	retlw	20
  5440  03A8  342A               	retlw	42
  5441  03A9  3414               	retlw	20
  5442  03AA  3422               	retlw	34
  5443  03AB  3422               	retlw	34
  5444  03AC  3414               	retlw	20
  5445  03AD  342A               	retlw	42
  5446  03AE  3414               	retlw	20
  5447  03AF  3408               	retlw	8
  5448  03B0  3455               	retlw	85
  5449  03B1  3400               	retlw	0
  5450  03B2  3455               	retlw	85
  5451  03B3  3400               	retlw	0
  5452  03B4  3455               	retlw	85
  5453  03B5  34AA               	retlw	170
  5454  03B6  3455               	retlw	85
  5455  03B7  34AA               	retlw	170
  5456  03B8  3455               	retlw	85
  5457  03B9  34AA               	retlw	170
  5458  03BA  34FF               	retlw	255
  5459  03BB  3455               	retlw	85
  5460  03BC  34FF               	retlw	255
  5461  03BD  3455               	retlw	85
  5462  03BE  34FF               	retlw	255
  5463  03BF  3400               	retlw	0
  5464  03C0  3400               	retlw	0
  5465  03C1  3400               	retlw	0
  5466  03C2  34FF               	retlw	255
  5467  03C3  3400               	retlw	0
  5468  03C4  3410               	retlw	16
  5469  03C5  3410               	retlw	16
  5470  03C6  3410               	retlw	16
  5471  03C7  34FF               	retlw	255
  5472  03C8  3400               	retlw	0
  5473  03C9  3414               	retlw	20
  5474  03CA  3414               	retlw	20
  5475  03CB  3414               	retlw	20
  5476  03CC  34FF               	retlw	255
  5477  03CD  3400               	retlw	0
  5478  03CE  3410               	retlw	16
  5479  03CF  3410               	retlw	16
  5480  03D0  34FF               	retlw	255
  5481  03D1  3400               	retlw	0
  5482  03D2  34FF               	retlw	255
  5483  03D3  3410               	retlw	16
  5484  03D4  3410               	retlw	16
  5485  03D5  34F0               	retlw	240
  5486  03D6  3410               	retlw	16
  5487  03D7  34F0               	retlw	240
  5488  03D8  3414               	retlw	20
  5489  03D9  3414               	retlw	20
  5490  03DA  3414               	retlw	20
  5491  03DB  34FC               	retlw	252
  5492  03DC  3400               	retlw	0
  5493  03DD  3414               	retlw	20
  5494  03DE  3414               	retlw	20
  5495  03DF  34F7               	retlw	247
  5496  03E0  3400               	retlw	0
  5497  03E1  34FF               	retlw	255
  5498  03E2  3400               	retlw	0
  5499  03E3  3400               	retlw	0
  5500  03E4  34FF               	retlw	255
  5501  03E5  3400               	retlw	0
  5502  03E6  34FF               	retlw	255
  5503  03E7  3414               	retlw	20
  5504  03E8  3414               	retlw	20
  5505  03E9  34F4               	retlw	244
  5506  03EA  3404               	retlw	4
  5507  03EB  34FC               	retlw	252
  5508  03EC  3414               	retlw	20
  5509  03ED  3414               	retlw	20
  5510  03EE  3417               	retlw	23
  5511  03EF  3410               	retlw	16
  5512  03F0  341F               	retlw	31
  5513  03F1  3410               	retlw	16
  5514  03F2  3410               	retlw	16
  5515  03F3  341F               	retlw	31
  5516  03F4  3410               	retlw	16
  5517  03F5  341F               	retlw	31
  5518  03F6  3414               	retlw	20
  5519  03F7  3414               	retlw	20
  5520  03F8  3414               	retlw	20
  5521  03F9  341F               	retlw	31
  5522  03FA  3400               	retlw	0
  5523  03FB  3410               	retlw	16
  5524  03FC  3410               	retlw	16
  5525  03FD  3410               	retlw	16
  5526  03FE  34F0               	retlw	240
  5527  03FF  3400               	retlw	0
  5528  0400  3400               	retlw	0
  5529  0401  3400               	retlw	0
  5530  0402  3400               	retlw	0
  5531  0403  341F               	retlw	31
  5532  0404  3410               	retlw	16
  5533  0405  3410               	retlw	16
  5534  0406  3410               	retlw	16
  5535  0407  3410               	retlw	16
  5536  0408  341F               	retlw	31
  5537  0409  3410               	retlw	16
  5538  040A  3410               	retlw	16
  5539  040B  3410               	retlw	16
  5540  040C  3410               	retlw	16
  5541  040D  34F0               	retlw	240
  5542  040E  3410               	retlw	16
  5543  040F  3400               	retlw	0
  5544  0410  3400               	retlw	0
  5545  0411  3400               	retlw	0
  5546  0412  34FF               	retlw	255
  5547  0413  3410               	retlw	16
  5548  0414  3410               	retlw	16
  5549  0415  3410               	retlw	16
  5550  0416  3410               	retlw	16
  5551  0417  3410               	retlw	16
  5552  0418  3410               	retlw	16
  5553  0419  3410               	retlw	16
  5554  041A  3410               	retlw	16
  5555  041B  3410               	retlw	16
  5556  041C  34FF               	retlw	255
  5557  041D  3410               	retlw	16
  5558  041E  3400               	retlw	0
  5559  041F  3400               	retlw	0
  5560  0420  3400               	retlw	0
  5561  0421  34FF               	retlw	255
  5562  0422  3414               	retlw	20
  5563  0423  3400               	retlw	0
  5564  0424  3400               	retlw	0
  5565  0425  34FF               	retlw	255
  5566  0426  3400               	retlw	0
  5567  0427  34FF               	retlw	255
  5568  0428  3400               	retlw	0
  5569  0429  3400               	retlw	0
  5570  042A  341F               	retlw	31
  5571  042B  3410               	retlw	16
  5572  042C  3417               	retlw	23
  5573  042D  3400               	retlw	0
  5574  042E  3400               	retlw	0
  5575  042F  34FC               	retlw	252
  5576  0430  3404               	retlw	4
  5577  0431  34F4               	retlw	244
  5578  0432  3414               	retlw	20
  5579  0433  3414               	retlw	20
  5580  0434  3417               	retlw	23
  5581  0435  3410               	retlw	16
  5582  0436  3417               	retlw	23
  5583  0437  3414               	retlw	20
  5584  0438  3414               	retlw	20
  5585  0439  34F4               	retlw	244
  5586  043A  3404               	retlw	4
  5587  043B  34F4               	retlw	244
  5588  043C  3400               	retlw	0
  5589  043D  3400               	retlw	0
  5590  043E  34FF               	retlw	255
  5591  043F  3400               	retlw	0
  5592  0440  34F7               	retlw	247
  5593  0441  3414               	retlw	20
  5594  0442  3414               	retlw	20
  5595  0443  3414               	retlw	20
  5596  0444  3414               	retlw	20
  5597  0445  3414               	retlw	20
  5598  0446  3414               	retlw	20
  5599  0447  3414               	retlw	20
  5600  0448  34F7               	retlw	247
  5601  0449  3400               	retlw	0
  5602  044A  34F7               	retlw	247
  5603  044B  3414               	retlw	20
  5604  044C  3414               	retlw	20
  5605  044D  3414               	retlw	20
  5606  044E  3417               	retlw	23
  5607  044F  3414               	retlw	20
  5608  0450  3410               	retlw	16
  5609  0451  3410               	retlw	16
  5610  0452  341F               	retlw	31
  5611  0453  3410               	retlw	16
  5612  0454  341F               	retlw	31
  5613  0455  3414               	retlw	20
  5614  0456  3414               	retlw	20
  5615  0457  3414               	retlw	20
  5616  0458  34F4               	retlw	244
  5617  0459  3414               	retlw	20
  5618  045A  3410               	retlw	16
  5619  045B  3410               	retlw	16
  5620  045C  34F0               	retlw	240
  5621  045D  3410               	retlw	16
  5622  045E  34F0               	retlw	240
  5623  045F  3400               	retlw	0
  5624  0460  3400               	retlw	0
  5625  0461  341F               	retlw	31
  5626  0462  3410               	retlw	16
  5627  0463  341F               	retlw	31
  5628  0464  3400               	retlw	0
  5629  0465  3400               	retlw	0
  5630  0466  3400               	retlw	0
  5631  0467  341F               	retlw	31
  5632  0468  3414               	retlw	20
  5633  0469  3400               	retlw	0
  5634  046A  3400               	retlw	0
  5635  046B  3400               	retlw	0
  5636  046C  34FC               	retlw	252
  5637  046D  3414               	retlw	20
  5638  046E  3400               	retlw	0
  5639  046F  3400               	retlw	0
  5640  0470  34F0               	retlw	240
  5641  0471  3410               	retlw	16
  5642  0472  34F0               	retlw	240
  5643  0473  3410               	retlw	16
  5644  0474  3410               	retlw	16
  5645  0475  34FF               	retlw	255
  5646  0476  3410               	retlw	16
  5647  0477  34FF               	retlw	255
  5648  0478  3414               	retlw	20
  5649  0479  3414               	retlw	20
  5650  047A  3414               	retlw	20
  5651  047B  34FF               	retlw	255
  5652  047C  3414               	retlw	20
  5653  047D  3410               	retlw	16
  5654  047E  3410               	retlw	16
  5655  047F  3410               	retlw	16
  5656  0480  341F               	retlw	31
  5657  0481  3400               	retlw	0
  5658  0482  3400               	retlw	0
  5659  0483  3400               	retlw	0
  5660  0484  3400               	retlw	0
  5661  0485  34F0               	retlw	240
  5662  0486  3410               	retlw	16
  5663  0487  34FF               	retlw	255
  5664  0488  34FF               	retlw	255
  5665  0489  34FF               	retlw	255
  5666  048A  34FF               	retlw	255
  5667  048B  34FF               	retlw	255
  5668  048C  34F0               	retlw	240
  5669  048D  34F0               	retlw	240
  5670  048E  34F0               	retlw	240
  5671  048F  34F0               	retlw	240
  5672  0490  34F0               	retlw	240
  5673  0491  34FF               	retlw	255
  5674  0492  34FF               	retlw	255
  5675  0493  34FF               	retlw	255
  5676  0494  3400               	retlw	0
  5677  0495  3400               	retlw	0
  5678  0496  3400               	retlw	0
  5679  0497  3400               	retlw	0
  5680  0498  3400               	retlw	0
  5681  0499  34FF               	retlw	255
  5682  049A  34FF               	retlw	255
  5683  049B  340F               	retlw	15
  5684  049C  340F               	retlw	15
  5685  049D  340F               	retlw	15
  5686  049E  340F               	retlw	15
  5687  049F  340F               	retlw	15
  5688  04A0  3438               	retlw	56
  5689  04A1  3444               	retlw	68
  5690  04A2  3444               	retlw	68
  5691  04A3  3438               	retlw	56
  5692  04A4  3444               	retlw	68
  5693  04A5  34FC               	retlw	252
  5694  04A6  344A               	retlw	74
  5695  04A7  344A               	retlw	74
  5696  04A8  344A               	retlw	74
  5697  04A9  3434               	retlw	52
  5698  04AA  347E               	retlw	126
  5699  04AB  3402               	retlw	2
  5700  04AC  3402               	retlw	2
  5701  04AD  3406               	retlw	6
  5702  04AE  3406               	retlw	6
  5703  04AF  3402               	retlw	2
  5704  04B0  347E               	retlw	126
  5705  04B1  3402               	retlw	2
  5706  04B2  347E               	retlw	126
  5707  04B3  3402               	retlw	2
  5708  04B4  3463               	retlw	99
  5709  04B5  3455               	retlw	85
  5710  04B6  3449               	retlw	73
  5711  04B7  3441               	retlw	65
  5712  04B8  3463               	retlw	99
  5713  04B9  3438               	retlw	56
  5714  04BA  3444               	retlw	68
  5715  04BB  3444               	retlw	68
  5716  04BC  343C               	retlw	60
  5717  04BD  3404               	retlw	4
  5718  04BE  3440               	retlw	64
  5719  04BF  347E               	retlw	126
  5720  04C0  3420               	retlw	32
  5721  04C1  341E               	retlw	30
  5722  04C2  3420               	retlw	32
  5723  04C3  3406               	retlw	6
  5724  04C4  3402               	retlw	2
  5725  04C5  347E               	retlw	126
  5726  04C6  3402               	retlw	2
  5727  04C7  3402               	retlw	2
  5728  04C8  3499               	retlw	153
  5729  04C9  34A5               	retlw	165
  5730  04CA  34E7               	retlw	231
  5731  04CB  34A5               	retlw	165
  5732  04CC  3499               	retlw	153
  5733  04CD  341C               	retlw	28
  5734  04CE  342A               	retlw	42
  5735  04CF  3449               	retlw	73
  5736  04D0  342A               	retlw	42
  5737  04D1  341C               	retlw	28
  5738  04D2  344C               	retlw	76
  5739  04D3  3472               	retlw	114
  5740  04D4  3401               	retlw	1
  5741  04D5  3472               	retlw	114
  5742  04D6  344C               	retlw	76
  5743  04D7  3430               	retlw	48
  5744  04D8  344A               	retlw	74
  5745  04D9  344D               	retlw	77
  5746  04DA  344D               	retlw	77
  5747  04DB  3430               	retlw	48
  5748  04DC  3430               	retlw	48
  5749  04DD  3448               	retlw	72
  5750  04DE  3478               	retlw	120
  5751  04DF  3448               	retlw	72
  5752  04E0  3430               	retlw	48
  5753  04E1  34BC               	retlw	188
  5754  04E2  3462               	retlw	98
  5755  04E3  345A               	retlw	90
  5756  04E4  3446               	retlw	70
  5757  04E5  343D               	retlw	61
  5758  04E6  343E               	retlw	62
  5759  04E7  3449               	retlw	73
  5760  04E8  3449               	retlw	73
  5761  04E9  3449               	retlw	73
  5762  04EA  3400               	retlw	0
  5763  04EB  347E               	retlw	126
  5764  04EC  3401               	retlw	1
  5765  04ED  3401               	retlw	1
  5766  04EE  3401               	retlw	1
  5767  04EF  347E               	retlw	126
  5768  04F0  342A               	retlw	42
  5769  04F1  342A               	retlw	42
  5770  04F2  342A               	retlw	42
  5771  04F3  342A               	retlw	42
  5772  04F4  342A               	retlw	42
  5773  04F5  3444               	retlw	68
  5774  04F6  3444               	retlw	68
  5775  04F7  345F               	retlw	95
  5776  04F8  3444               	retlw	68
  5777  04F9  3444               	retlw	68
  5778  04FA  3440               	retlw	64
  5779  04FB  3451               	retlw	81
  5780  04FC  344A               	retlw	74
  5781  04FD  3444               	retlw	68
  5782  04FE  3440               	retlw	64
  5783  04FF  3440               	retlw	64
  5784  0500  3444               	retlw	68
  5785  0501  344A               	retlw	74
  5786  0502  3451               	retlw	81
  5787  0503  3440               	retlw	64
  5788  0504  3400               	retlw	0
  5789  0505  3400               	retlw	0
  5790  0506  34FF               	retlw	255
  5791  0507  3401               	retlw	1
  5792  0508  3403               	retlw	3
  5793  0509  34E0               	retlw	224
  5794  050A  3480               	retlw	128
  5795  050B  34FF               	retlw	255
  5796  050C  3400               	retlw	0
  5797  050D  3400               	retlw	0
  5798  050E  3408               	retlw	8
  5799  050F  3408               	retlw	8
  5800  0510  346B               	retlw	107
  5801  0511  346B               	retlw	107
  5802  0512  3408               	retlw	8
  5803  0513  3436               	retlw	54
  5804  0514  3412               	retlw	18
  5805  0515  3436               	retlw	54
  5806  0516  3424               	retlw	36
  5807  0517  3436               	retlw	54
  5808  0518  3406               	retlw	6
  5809  0519  340F               	retlw	15
  5810  051A  3409               	retlw	9
  5811  051B  340F               	retlw	15
  5812  051C  3406               	retlw	6
  5813  051D  3400               	retlw	0
  5814  051E  3400               	retlw	0
  5815  051F  3418               	retlw	24
  5816  0520  3418               	retlw	24
  5817  0521  3400               	retlw	0
  5818  0522  3400               	retlw	0
  5819  0523  3400               	retlw	0
  5820  0524  3410               	retlw	16
  5821  0525  3410               	retlw	16
  5822  0526  3400               	retlw	0
  5823  0527  3430               	retlw	48
  5824  0528  3440               	retlw	64
  5825  0529  34FF               	retlw	255
  5826  052A  3401               	retlw	1
  5827  052B  3401               	retlw	1
  5828  052C  3400               	retlw	0
  5829  052D  341F               	retlw	31
  5830  052E  3401               	retlw	1
  5831  052F  3401               	retlw	1
  5832  0530  341E               	retlw	30
  5833  0531  3400               	retlw	0
  5834  0532  3419               	retlw	25
  5835  0533  341D               	retlw	29
  5836  0534  3417               	retlw	23
  5837  0535  3412               	retlw	18
  5838  0536  3400               	retlw	0
  5839  0537  343C               	retlw	60
  5840  0538  343C               	retlw	60
  5841  0539  343C               	retlw	60
  5842  053A  343C               	retlw	60
  5843  053B  3400               	retlw	0
  5844  053C  3400               	retlw	0
  5845  053D  3400               	retlw	0
  5846  053E  3400               	retlw	0
  5847  053F  3400               	retlw	0
  5848  0540                     __end_of_font:
  5849                           
  5850                           	psect	stringtext2
  5851  1964                     __pstringtext2:
  5852  1964                     _spi1_configuration:
  5853  1964  3400               	retlw	0
  5854  1965  34C0               	retlw	192
  5855  1966  344F               	retlw	79
  5856  1967  3400               	retlw	0
  5857  1968                     __end_of_spi1_configuration:
  5858                           
  5859                           	psect	stringtext3
  5860  1800                     __pstringtext3:
  5861  1800                     _initcmd:
  5862  1800  34EF               	retlw	239
  5863  1801  3403               	retlw	3
  5864  1802  3403               	retlw	3
  5865  1803  3480               	retlw	128
  5866  1804  3402               	retlw	2
  5867  1805  34CF               	retlw	207
  5868  1806  3403               	retlw	3
  5869  1807  3400               	retlw	0
  5870  1808  34C1               	retlw	193
  5871  1809  3430               	retlw	48
  5872  180A  34ED               	retlw	237
  5873  180B  3404               	retlw	4
  5874  180C  3464               	retlw	100
  5875  180D  3403               	retlw	3
  5876  180E  3412               	retlw	18
  5877  180F  3481               	retlw	129
  5878  1810  34E8               	retlw	232
  5879  1811  3403               	retlw	3
  5880  1812  3485               	retlw	133
  5881  1813  3400               	retlw	0
  5882  1814  3478               	retlw	120
  5883  1815  34CB               	retlw	203
  5884  1816  3405               	retlw	5
  5885  1817  3439               	retlw	57
  5886  1818  342C               	retlw	44
  5887  1819  3400               	retlw	0
  5888  181A  3434               	retlw	52
  5889  181B  3402               	retlw	2
  5890  181C  34F7               	retlw	247
  5891  181D  3401               	retlw	1
  5892  181E  3420               	retlw	32
  5893  181F  34EA               	retlw	234
  5894  1820  3402               	retlw	2
  5895  1821  3400               	retlw	0
  5896  1822  3400               	retlw	0
  5897  1823  34C0               	retlw	192
  5898  1824  3401               	retlw	1
  5899  1825  3423               	retlw	35
  5900  1826  34C1               	retlw	193
  5901  1827  3401               	retlw	1
  5902  1828  3410               	retlw	16
  5903  1829  34C5               	retlw	197
  5904  182A  3402               	retlw	2
  5905  182B  343E               	retlw	62
  5906  182C  3428               	retlw	40
  5907  182D  34C7               	retlw	199
  5908  182E  3401               	retlw	1
  5909  182F  3486               	retlw	134
  5910  1830  3436               	retlw	54
  5911  1831  3401               	retlw	1
  5912  1832  3448               	retlw	72
  5913  1833  3437               	retlw	55
  5914  1834  3401               	retlw	1
  5915  1835  3400               	retlw	0
  5916  1836  343A               	retlw	58
  5917  1837  3401               	retlw	1
  5918  1838  3455               	retlw	85
  5919  1839  34B1               	retlw	177
  5920  183A  3402               	retlw	2
  5921  183B  3400               	retlw	0
  5922  183C  3418               	retlw	24
  5923  183D  34B6               	retlw	182
  5924  183E  3403               	retlw	3
  5925  183F  3408               	retlw	8
  5926  1840  3482               	retlw	130
  5927  1841  3427               	retlw	39
  5928  1842  34F2               	retlw	242
  5929  1843  3401               	retlw	1
  5930  1844  3400               	retlw	0
  5931  1845  3426               	retlw	38
  5932  1846  3401               	retlw	1
  5933  1847  3401               	retlw	1
  5934  1848  34E0               	retlw	224
  5935  1849  340F               	retlw	15
  5936  184A  340F               	retlw	15
  5937  184B  3431               	retlw	49
  5938  184C  342B               	retlw	43
  5939  184D  340C               	retlw	12
  5940  184E  340E               	retlw	14
  5941  184F  3408               	retlw	8
  5942  1850  344E               	retlw	78
  5943  1851  34F1               	retlw	241
  5944  1852  3437               	retlw	55
  5945  1853  3407               	retlw	7
  5946  1854  3410               	retlw	16
  5947  1855  3403               	retlw	3
  5948  1856  340E               	retlw	14
  5949  1857  3409               	retlw	9
  5950  1858  3400               	retlw	0
  5951  1859  34E1               	retlw	225
  5952  185A  340F               	retlw	15
  5953  185B  3400               	retlw	0
  5954  185C  340E               	retlw	14
  5955  185D  3414               	retlw	20
  5956  185E  3403               	retlw	3
  5957  185F  3411               	retlw	17
  5958  1860  3407               	retlw	7
  5959  1861  3431               	retlw	49
  5960  1862  34C1               	retlw	193
  5961  1863  3448               	retlw	72
  5962  1864  3408               	retlw	8
  5963  1865  340F               	retlw	15
  5964  1866  340C               	retlw	12
  5965  1867  3431               	retlw	49
  5966  1868  3436               	retlw	54
  5967  1869  340F               	retlw	15
  5968  186A  3411               	retlw	17
  5969  186B  3480               	retlw	128
  5970  186C  3429               	retlw	41
  5971  186D  3480               	retlw	128
  5972  186E  3400               	retlw	0
  5973  186F                     __end_of_initcmd:
  5974                           
  5975                           	psect	nvBANK1
  5976  00E4                     __pnvBANK1:
  5977  00E4                     _IOCCF5_InterruptHandler:
  5978  00E4                     	ds	2
  5979  00E6                     _IOCBF4_InterruptHandler:
  5980  00E6                     	ds	2
  5981  00E8                     _IOCAF2_InterruptHandler:
  5982  00E8                     	ds	2
  5983  00EA                     _IOCAF1_InterruptHandler:
  5984  00EA                     	ds	2
  5985  0016                     _LATAbits	set	22
  5986  0018                     _LATCbits	set	24
  5987  000B                     _INTCONbits	set	11
  5988  000C                     _PORTAbits	set	12
  5989  0013                     _TRISCbits	set	19
  5990  0014                     _TRISD	set	20
  5991  0013                     _TRISC	set	19
  5992  0012                     _TRISB	set	18
  5993  0011                     _TRISA	set	17
  5994  0015                     _TRISE	set	21
  5995  0018                     _LATC	set	24
  5996  0017                     _LATB	set	23
  5997  0016                     _LATA	set	22
  5998  0019                     _LATD	set	25
  5999  001A                     _LATE	set	26
  6000  018C                     _SSP1BUF	set	396
  6001  0191                     _SSP1CON2	set	401
  6002  0190                     _SSP1CON1bits	set	400
  6003  018D                     _SSP1ADD	set	397
  6004  0190                     _SSP1CON1	set	400
  6005  018F                     _SSP1STAT	set	399
  6006  070C                     _PIR0bits	set	1804
  6007  070F                     _PIR3bits	set	1807
  6008  0716                     _PIE0bits	set	1814
  6009  079B                     _PMD5	set	1947
  6010  079A                     _PMD4	set	1946
  6011  0799                     _PMD3	set	1945
  6012  0798                     _PMD2	set	1944
  6013  0797                     _PMD1	set	1943
  6014  0796                     _PMD0	set	1942
  6015  0892                     _OSCTUNE	set	2194
  6016  0893                     _OSCFRQ	set	2195
  6017  0891                     _OSCEN	set	2193
  6018  088F                     _OSCCON3	set	2191
  6019  088D                     _OSCCON1	set	2189
  6020  0EC6                     _SSP1DATPPS	set	3782
  6021  0EC5                     _SSP1CLKPPS	set	3781
  6022  0F26                     _RC6PPS	set	3878
  6023  0F23                     _RC3PPS	set	3875
  6024  0F53                     _IOCCPbits	set	3923
  6025  0F54                     _IOCCNbits	set	3924
  6026  0F55                     _IOCCFbits	set	3925
  6027  0F48                     _IOCBPbits	set	3912
  6028  0F49                     _IOCBNbits	set	3913
  6029  0F4A                     _IOCBFbits	set	3914
  6030  0F3D                     _IOCAPbits	set	3901
  6031  0F3E                     _IOCANbits	set	3902
  6032  0F3F                     _IOCAFbits	set	3903
  6033  0F68                     _INLVLE	set	3944
  6034  0F5D                     _INLVLD	set	3933
  6035  0F52                     _INLVLC	set	3922
  6036  0F47                     _INLVLB	set	3911
  6037  0F3C                     _INLVLA	set	3900
  6038  0F67                     _SLRCONE	set	3943
  6039  0F5C                     _SLRCOND	set	3932
  6040  0F51                     _SLRCONC	set	3921
  6041  0F46                     _SLRCONB	set	3910
  6042  0F3B                     _SLRCONA	set	3899
  6043  0F5B                     _ODCOND	set	3931
  6044  0F50                     _ODCONC	set	3920
  6045  0F45                     _ODCONB	set	3909
  6046  0F3A                     _ODCONA	set	3898
  6047  0F66                     _ODCONE	set	3942
  6048  0F4F                     _WPUC	set	3919
  6049  0F39                     _WPUA	set	3897
  6050  0F44                     _WPUB	set	3908
  6051  0F65                     _WPUE	set	3941
  6052  0F5A                     _WPUD	set	3930
  6053  0F38                     _ANSELA	set	3896
  6054  0F64                     _ANSELE	set	3940
  6055  0F43                     _ANSELB	set	3907
  6056  0F4E                     _ANSELC	set	3918
  6057  0F59                     _ANSELD	set	3929
  6058                           
  6059                           	psect	stringtext4
  6060  186F                     __pstringtext4:
  6061  186F                     STR_10:
  6062  186F  3477               	retlw	119	;'w'
  6063  1870  3469               	retlw	105	;'i'
  6064  1871  3474               	retlw	116	;'t'
  6065  1872  3468               	retlw	104	;'h'
  6066  1873  3420               	retlw	32	;' '
  6067  1874  3463               	retlw	99	;'c'
  6068  1875  3472               	retlw	114	;'r'
  6069  1876  3469               	retlw	105	;'i'
  6070  1877  346E               	retlw	110	;'n'
  6071  1878  346B               	retlw	107	;'k'
  6072  1879  346C               	retlw	108	;'l'
  6073  187A  3479               	retlw	121	;'y'
  6074  187B  3420               	retlw	32	;' '
  6075  187C  3462               	retlw	98	;'b'
  6076  187D  3469               	retlw	105	;'i'
  6077  187E  346E               	retlw	110	;'n'
  6078  187F  3464               	retlw	100	;'d'
  6079  1880  346C               	retlw	108	;'l'
  6080  1881  3465               	retlw	101	;'e'
  6081  1882  3477               	retlw	119	;'w'
  6082  1883  3475               	retlw	117	;'u'
  6083  1884  3472               	retlw	114	;'r'
  6084  1885  3464               	retlw	100	;'d'
  6085  1886  346C               	retlw	108	;'l'
  6086  1887  3465               	retlw	101	;'e'
  6087  1888  3473               	retlw	115	;'s'
  6088  1889  342C               	retlw	44	;','
  6089  188A  340D               	retlw	13
  6090  188B  340A               	retlw	10
  6091  188C  3400               	retlw	0
  6092                           
  6093                           	psect	stringtext5
  6094  188D                     __pstringtext5:
  6095  188D                     STR_8:
  6096  188D  346D               	retlw	109	;'m'
  6097  188E  3479               	retlw	121	;'y'
  6098  188F  3420               	retlw	32	;' '
  6099  1890  3466               	retlw	102	;'f'
  6100  1891  346F               	retlw	111	;'o'
  6101  1892  346F               	retlw	111	;'o'
  6102  1893  346E               	retlw	110	;'n'
  6103  1894  3474               	retlw	116	;'t'
  6104  1895  3469               	retlw	105	;'i'
  6105  1896  346E               	retlw	110	;'n'
  6106  1897  3467               	retlw	103	;'g'
  6107  1898  3420               	retlw	32	;' '
  6108  1899  3474               	retlw	116	;'t'
  6109  189A  3475               	retlw	117	;'u'
  6110  189B  3472               	retlw	114	;'r'
  6111  189C  346C               	retlw	108	;'l'
  6112  189D  3469               	retlw	105	;'i'
  6113  189E  346E               	retlw	110	;'n'
  6114  189F  3467               	retlw	103	;'g'
  6115  18A0  3464               	retlw	100	;'d'
  6116  18A1  3472               	retlw	114	;'r'
  6117  18A2  346F               	retlw	111	;'o'
  6118  18A3  346D               	retlw	109	;'m'
  6119  18A4  3465               	retlw	101	;'e'
  6120  18A5  3473               	retlw	115	;'s'
  6121  18A6  342E               	retlw	46	;'.'
  6122  18A7  340D               	retlw	13
  6123  18A8  340A               	retlw	10
  6124  18A9  3400               	retlw	0
  6125                           
  6126                           	psect	stringtext6
  6127  18AA                     __pstringtext6:
  6128  18AA                     STR_9:
  6129  18AA  3441               	retlw	65	;'A'
  6130  18AB  346E               	retlw	110	;'n'
  6131  18AC  3464               	retlw	100	;'d'
  6132  18AD  3420               	retlw	32	;' '
  6133  18AE  3468               	retlw	104	;'h'
  6134  18AF  346F               	retlw	111	;'o'
  6135  18B0  346F               	retlw	111	;'o'
  6136  18B1  3470               	retlw	112	;'p'
  6137  18B2  3474               	retlw	116	;'t'
  6138  18B3  3469               	retlw	105	;'i'
  6139  18B4  346F               	retlw	111	;'o'
  6140  18B5  3475               	retlw	117	;'u'
  6141  18B6  3473               	retlw	115	;'s'
  6142  18B7  346C               	retlw	108	;'l'
  6143  18B8  3479               	retlw	121	;'y'
  6144  18B9  3420               	retlw	32	;' '
  6145  18BA  3464               	retlw	100	;'d'
  6146  18BB  3472               	retlw	114	;'r'
  6147  18BC  3461               	retlw	97	;'a'
  6148  18BD  346E               	retlw	110	;'n'
  6149  18BE  3467               	retlw	103	;'g'
  6150  18BF  346C               	retlw	108	;'l'
  6151  18C0  3465               	retlw	101	;'e'
  6152  18C1  3420               	retlw	32	;' '
  6153  18C2  346D               	retlw	109	;'m'
  6154  18C3  3465               	retlw	101	;'e'
  6155  18C4  340D               	retlw	13
  6156  18C5  340A               	retlw	10
  6157  18C6  3400               	retlw	0
  6158                           
  6159                           	psect	stringtext7
  6160  18C7                     __pstringtext7:
  6161  18C7                     STR_13:
  6162  18C7  3477               	retlw	119	;'w'
  6163  18C8  3469               	retlw	105	;'i'
  6164  18C9  3474               	retlw	116	;'t'
  6165  18CA  3468               	retlw	104	;'h'
  6166  18CB  3420               	retlw	32	;' '
  6167  18CC  346D               	retlw	109	;'m'
  6168  18CD  3479               	retlw	121	;'y'
  6169  18CE  3420               	retlw	32	;' '
  6170  18CF  3462               	retlw	98	;'b'
  6171  18D0  346C               	retlw	108	;'l'
  6172  18D1  3475               	retlw	117	;'u'
  6173  18D2  3472               	retlw	114	;'r'
  6174  18D3  3467               	retlw	103	;'g'
  6175  18D4  346C               	retlw	108	;'l'
  6176  18D5  3465               	retlw	101	;'e'
  6177  18D6  3463               	retlw	99	;'c'
  6178  18D7  3472               	retlw	114	;'r'
  6179  18D8  3475               	retlw	117	;'u'
  6180  18D9  346E               	retlw	110	;'n'
  6181  18DA  3463               	retlw	99	;'c'
  6182  18DB  3468               	retlw	104	;'h'
  6183  18DC  3465               	retlw	101	;'e'
  6184  18DD  346F               	retlw	111	;'o'
  6185  18DE  346E               	retlw	110	;'n'
  6186  18DF  342C               	retlw	44	;','
  6187  18E0  340D               	retlw	13
  6188  18E1  340A               	retlw	10
  6189  18E2  3400               	retlw	0
  6190                           
  6191                           	psect	stringtext8
  6192  18E3                     __pstringtext8:
  6193  18E3                     STR_11:
  6194  18E3  344F               	retlw	79	;'O'
  6195  18E4  3472               	retlw	114	;'r'
  6196  18E5  3420               	retlw	32	;' '
  6197  18E6  3449               	retlw	73	;'I'
  6198  18E7  3420               	retlw	32	;' '
  6199  18E8  3477               	retlw	119	;'w'
  6200  18E9  3469               	retlw	105	;'i'
  6201  18EA  346C               	retlw	108	;'l'
  6202  18EB  346C               	retlw	108	;'l'
  6203  18EC  3420               	retlw	32	;' '
  6204  18ED  3472               	retlw	114	;'r'
  6205  18EE  3465               	retlw	101	;'e'
  6206  18EF  346E               	retlw	110	;'n'
  6207  18F0  3464               	retlw	100	;'d'
  6208  18F1  3420               	retlw	32	;' '
  6209  18F2  3474               	retlw	116	;'t'
  6210  18F3  3468               	retlw	104	;'h'
  6211  18F4  3465               	retlw	101	;'e'
  6212  18F5  3465               	retlw	101	;'e'
  6213  18F6  340D               	retlw	13
  6214  18F7  340A               	retlw	10
  6215  18F8  3400               	retlw	0
  6216                           
  6217                           	psect	stringtext9
  6218  18F9                     __pstringtext9:
  6219  18F9                     STR_12:
  6220  18F9  3469               	retlw	105	;'i'
  6221  18FA  346E               	retlw	110	;'n'
  6222  18FB  3420               	retlw	32	;' '
  6223  18FC  3474               	retlw	116	;'t'
  6224  18FD  3468               	retlw	104	;'h'
  6225  18FE  3465               	retlw	101	;'e'
  6226  18FF  3420               	retlw	32	;' '
  6227  1900  3467               	retlw	103	;'g'
  6228  1901  346F               	retlw	111	;'o'
  6229  1902  3462               	retlw	98	;'b'
  6230  1903  3462               	retlw	98	;'b'
  6231  1904  3465               	retlw	101	;'e'
  6232  1905  3472               	retlw	114	;'r'
  6233  1906  3477               	retlw	119	;'w'
  6234  1907  3461               	retlw	97	;'a'
  6235  1908  3472               	retlw	114	;'r'
  6236  1909  3474               	retlw	116	;'t'
  6237  190A  3473               	retlw	115	;'s'
  6238  190B  340D               	retlw	13
  6239  190C  340A               	retlw	10
  6240  190D  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext10
  6243  190E                     __pstringtext10:
  6244  190E                     STR_14:
  6245  190E  3473               	retlw	115	;'s'
  6246  190F  3465               	retlw	101	;'e'
  6247  1910  3465               	retlw	101	;'e'
  6248  1911  3420               	retlw	32	;' '
  6249  1912  3469               	retlw	105	;'i'
  6250  1913  3466               	retlw	102	;'f'
  6251  1914  3420               	retlw	32	;' '
  6252  1915  3449               	retlw	73	;'I'
  6253  1916  3420               	retlw	32	;' '
  6254  1917  3464               	retlw	100	;'d'
  6255  1918  346F               	retlw	111	;'o'
  6256  1919  346E               	retlw	110	;'n'
  6257  191A  3427               	retlw	39	;'''
  6258  191B  3474               	retlw	116	;'t'
  6259  191C  3421               	retlw	33	;'!'
  6260  191D  340D               	retlw	13
  6261  191E  340A               	retlw	10
  6262  191F  3400               	retlw	0
  6263                           
  6264                           	psect	stringtext11
  6265  1920                     __pstringtext11:
  6266  1920                     STR_7:
  6267  1920  3449               	retlw	73	;'I'
  6268  1921  3420               	retlw	32	;' '
  6269  1922  3469               	retlw	105	;'i'
  6270  1923  346D               	retlw	109	;'m'
  6271  1924  3470               	retlw	112	;'p'
  6272  1925  346C               	retlw	108	;'l'
  6273  1926  346F               	retlw	111	;'o'
  6274  1927  3472               	retlw	114	;'r'
  6275  1928  3465               	retlw	101	;'e'
  6276  1929  3420               	retlw	32	;' '
  6277  192A  3474               	retlw	116	;'t'
  6278  192B  3468               	retlw	104	;'h'
  6279  192C  3465               	retlw	101	;'e'
  6280  192D  3465               	retlw	101	;'e'
  6281  192E  342C               	retlw	44	;','
  6282  192F  340D               	retlw	13
  6283  1930  340A               	retlw	10
  6284  1931  3400               	retlw	0
  6285                           
  6286                           	psect	stringtext12
  6287  1932                     __pstringtext12:
  6288  1932                     STR_2:
  6289  1932  3448               	retlw	72	;'H'
  6290  1933  3465               	retlw	101	;'e'
  6291  1934  346C               	retlw	108	;'l'
  6292  1935  346C               	retlw	108	;'l'
  6293  1936  346F               	retlw	111	;'o'
  6294  1937  3420               	retlw	32	;' '
  6295  1938  3457               	retlw	87	;'W'
  6296  1939  346F               	retlw	111	;'o'
  6297  193A  3472               	retlw	114	;'r'
  6298  193B  346C               	retlw	108	;'l'
  6299  193C  3464               	retlw	100	;'d'
  6300  193D  3421               	retlw	33	;'!'
  6301  193E  340D               	retlw	13
  6302  193F  340A               	retlw	10
  6303  1940  3400               	retlw	0
  6304                           
  6305                           	psect	stringtext13
  6306  1941                     __pstringtext13:
  6307  1941                     STR_4:
  6308  1941  3444               	retlw	68	;'D'
  6309  1942  3445               	retlw	69	;'E'
  6310  1943  3441               	retlw	65	;'A'
  6311  1944  3444               	retlw	68	;'D'
  6312  1945  3442               	retlw	66	;'B'
  6313  1946  3445               	retlw	69	;'E'
  6314  1947  3445               	retlw	69	;'E'
  6315  1948  3446               	retlw	70	;'F'
  6316  1949  340D               	retlw	13
  6317  194A  340A               	retlw	10
  6318  194B  3400               	retlw	0
  6319                           
  6320                           	psect	stringtext14
  6321  194C                     __pstringtext14:
  6322  194C                     STR_3:
  6323  194C  3431               	retlw	49	;'1'
  6324  194D  3432               	retlw	50	;'2'
  6325  194E  3433               	retlw	51	;'3'
  6326  194F  3434               	retlw	52	;'4'
  6327  1950  342E               	retlw	46	;'.'
  6328  1951  3435               	retlw	53	;'5'
  6329  1952  3436               	retlw	54	;'6'
  6330  1953  340D               	retlw	13
  6331  1954  340A               	retlw	10
  6332  1955  3400               	retlw	0
  6333                           
  6334                           	psect	stringtext15
  6335  1956                     __pstringtext15:
  6336  1956                     STR_6:
  6337  1956  3447               	retlw	71	;'G'
  6338  1957  3472               	retlw	114	;'r'
  6339  1958  346F               	retlw	111	;'o'
  6340  1959  346F               	retlw	111	;'o'
  6341  195A  3470               	retlw	112	;'p'
  6342  195B  340D               	retlw	13
  6343  195C  340A               	retlw	10
  6344  195D  3400               	retlw	0
  6345                           
  6346                           	psect	stringtext16
  6347  195E                     __pstringtext16:
  6348  195E                     STR_1:
  6349  195E  3425               	retlw	37	;'%'
  6350  195F  3469               	retlw	105	;'i'
  6351  1960  343A               	retlw	58	;':'
  6352  1961  3425               	retlw	37	;'%'
  6353  1962  3469               	retlw	105	;'i'
  6354  1963  3400               	retlw	0
  6355                           
  6356                           	psect	stringtext17
  6357  0000                     __pstringtext17:
  6358  193E                     
  6359                           	psect	cinit
  6360  0010                     start_initialization:	
  6361                           ; #config settings
  6362                           
  6363  0010                     __initialization:
  6364                           
  6365                           ; Initialize objects allocated to BANK0
  6366  0010  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  6367  0013  00EF               	movwf	__pdataBANK0& (0+127)
  6368                           
  6369                           ; Initialize objects allocated to BANK1
  6370  0014  3055               	movlw	low __pidataBANK1
  6371  0015  0084               	movwf	4
  6372  0016  3092               	movlw	(high __pidataBANK1)| (0+128)
  6373  0017  0085               	movwf	5
  6374  0018  30A0               	movlw	low __pdataBANK1
  6375  0019  0086               	movwf	6
  6376  001A  3000               	movlw	high __pdataBANK1
  6377  001B  0087               	movwf	7
  6378  001C  301B               	movlw	27
  6379  001D  3187  27F9  3180   	fcall	init_ram
  6380                           
  6381                           ; Initialize objects allocated to BANK2
  6382  0020  3066               	movlw	low __pidataBANK2
  6383  0021  0084               	movwf	4
  6384  0022  3091               	movlw	(high __pidataBANK2)| (0+128)
  6385  0023  0085               	movwf	5
  6386  0024  3040               	movlw	low __pdataBANK2
  6387  0025  0086               	movwf	6
  6388  0026  3001               	movlw	high __pdataBANK2
  6389  0027  0087               	movwf	7
  6390  0028  300A               	movlw	10
  6391  0029  3187  27F9  3180   	fcall	init_ram
  6392                           
  6393                           ; Clear objects allocated to COMMON
  6394  002C  01FC               	clrf	__pbssCOMMON& (0+127)
  6395                           
  6396                           ; Clear objects allocated to BANK1
  6397  002D  30BB               	movlw	low __pbssBANK1
  6398  002E  0084               	movwf	4
  6399  002F  3000               	movlw	high __pbssBANK1
  6400  0030  0085               	movwf	5
  6401  0031  3017               	movlw	23
  6402  0032  3191  2129  3180   	fcall	clear_ram0
  6403                           
  6404                           ; Clear objects allocated to BANK2
  6405  0035  3020               	movlw	low __pbssBANK2
  6406  0036  0084               	movwf	4
  6407  0037  3001               	movlw	high __pbssBANK2
  6408  0038  0085               	movwf	5
  6409  0039  3020               	movlw	32
  6410  003A  3191  2129         	fcall	clear_ram0
  6411  003C                     end_of_initialization:	
  6412                           ;End of C runtime variable initialization code
  6413                           
  6414  003C                     __end_of__initialization:
  6415  003C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6416  003D  0020               	movlb	0
  6417  003E  318C  2C1A         	ljmp	_main	;jump to C main() function
  6418                           
  6419                           	psect	bssCOMMON
  6420  007C                     __pbssCOMMON:
  6421  007C                     _movimiento_jugador1:
  6422  007C                     	ds	1
  6423                           
  6424                           	psect	dataBANK0
  6425  006F                     __pdataBANK0:
  6426  006F                     _textsize:
  6427  006F                     	ds	1
  6428                           
  6429                           	psect	bssBANK1
  6430  00BB                     __pbssBANK1:
  6431  00BB                     _nout:
  6432  00BB                     	ds	2
  6433  00BD                     _width:
  6434  00BD                     	ds	2
  6435  00BF                     _prec:
  6436  00BF                     	ds	2
  6437  00C1                     _flags:
  6438  00C1                     	ds	2
  6439  00C3                     _cursor_y:
  6440  00C3                     	ds	2
  6441  00C5                     _cursor_x:
  6442  00C5                     	ds	2
  6443  00C7                     __height:
  6444  00C7                     	ds	2
  6445  00C9                     __width:
  6446  00C9                     	ds	2
  6447  00CB                     _puntaje2:
  6448  00CB                     	ds	1
  6449  00CC                     _puntaje1:
  6450  00CC                     	ds	1
  6451  00CD                     _movimiento_jugador2:
  6452  00CD                     	ds	1
  6453  00CE                     _rotation:
  6454  00CE                     	ds	1
  6455  00CF                     _marcador:
  6456  00CF                     	ds	3
  6457                           
  6458                           	psect	dataBANK1
  6459  00A0                     __pdataBANK1:
  6460  00A0                     _textbgcolor:
  6461  00A0                     	ds	2
  6462  00A2                     _textcolor:
  6463  00A2                     	ds	2
  6464  00A4                     _wrap:
  6465  00A4                     	ds	1
  6466  00A5                     _bolita:
  6467  00A5                     	ds	12
  6468  00B1                     _jugador2:
  6469  00B1                     	ds	10
  6470                           
  6471                           	psect	bssBANK2
  6472  0120                     __pbssBANK2:
  6473  0120                     _dbuf:
  6474  0120                     	ds	32
  6475                           
  6476                           	psect	dataBANK2
  6477  0140                     __pdataBANK2:
  6478  0140                     _jugador1:
  6479  0140                     	ds	10
  6480                           
  6481                           	psect	inittext
  6482  07F9                     init_ram:
  6483  07F9  00FE               	movwf	126
  6484  07FA                     initloop:
  6485  07FA  0012               	moviw fsr0++
  6486  07FB  001E               	movwi fsr1++
  6487  07FC  0BFE               	decfsz	126,f
  6488  07FD  2FFA               	goto	initloop
  6489  07FE  3400               	retlw	0
  6490                           
  6491                           	psect	clrtext
  6492  1129                     clear_ram0:	
  6493                           ;	Called with FSR0 containing the base address, and
  6494                           ;	WREG with the size to clear
  6495                           
  6496  1129  0064               	clrwdt	;clear the watchdog before getting into this loop
  6497  112A                     clrloop0:
  6498  112A  0180               	clrf	0	;clear RAM location pointed to by FSR
  6499  112B  3101               	addfsr 0,1
  6500  112C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6501  112D  292A               	goto	clrloop0	;have we reached the end yet?
  6502  112E  3400               	retlw	0	;all done for this memory range, return
  6503                           
  6504                           	psect	cstackBANK1
  6505  00D2                     __pcstackBANK1:
  6506  00D2                     	ds	2
  6507  00D4                     sprintf@ap:
  6508                           
  6509                           ; 1 bytes @ 0x2
  6510  00D4                     	ds	1
  6511  00D5                     sprintf@s:
  6512                           
  6513                           ; 1 bytes @ 0x3
  6514  00D5                     	ds	1
  6515  00D6                     sprintf@f:
  6516                           
  6517                           ; 5 bytes @ 0x4
  6518  00D6                     	ds	5
  6519  00DB                     ??_dibujarMarcador:
  6520                           
  6521                           ; 1 bytes @ 0x9
  6522  00DB                     	ds	4
  6523  00DF                     ??_main:
  6524                           
  6525                           ; 1 bytes @ 0xD
  6526  00DF                     	ds	5
  6527                           
  6528                           	psect	cstackCOMMON
  6529  0070                     __pcstackCOMMON:
  6530  0070                     ?_PMD_Initialize:
  6531  0070                     ?_SPI1_Initialize:	
  6532                           ; 1 bytes @ 0x0
  6533                           
  6534  0070                     ?_PIN_MANAGER_Initialize:	
  6535                           ; 1 bytes @ 0x0
  6536                           
  6537  0070                     ?_OSCILLATOR_Initialize:	
  6538                           ; 1 bytes @ 0x0
  6539                           
  6540  0070                     ?_IOCAF1_DefaultInterruptHandler:	
  6541                           ; 1 bytes @ 0x0
  6542                           
  6543  0070                     ??_IOCAF1_DefaultInterruptHandler:	
  6544                           ; 1 bytes @ 0x0
  6545                           
  6546  0070                     ?_IOCAF2_DefaultInterruptHandler:	
  6547                           ; 1 bytes @ 0x0
  6548                           
  6549  0070                     ??_IOCAF2_DefaultInterruptHandler:	
  6550                           ; 1 bytes @ 0x0
  6551                           
  6552  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  6553                           ; 1 bytes @ 0x0
  6554                           
  6555  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  6556                           ; 1 bytes @ 0x0
  6557                           
  6558  0070                     ?_IOCCF5_DefaultInterruptHandler:	
  6559                           ; 1 bytes @ 0x0
  6560                           
  6561  0070                     ??_IOCCF5_DefaultInterruptHandler:	
  6562                           ; 1 bytes @ 0x0
  6563                           
  6564  0070                     ?_IOCAF1_ISR:	
  6565                           ; 1 bytes @ 0x0
  6566                           
  6567  0070                     ??_IOCAF1_ISR:	
  6568                           ; 1 bytes @ 0x0
  6569                           
  6570  0070                     ?_IOCAF2_ISR:	
  6571                           ; 1 bytes @ 0x0
  6572                           
  6573  0070                     ?_IOCBF4_ISR:	
  6574                           ; 1 bytes @ 0x0
  6575                           
  6576  0070                     ??_IOCBF4_ISR:	
  6577                           ; 1 bytes @ 0x0
  6578                           
  6579  0070                     ?_IOCCF5_ISR:	
  6580                           ; 1 bytes @ 0x0
  6581                           
  6582  0070                     ?_ctrl_der:	
  6583                           ; 1 bytes @ 0x0
  6584                           
  6585  0070                     ??_ctrl_der:	
  6586                           ; 1 bytes @ 0x0
  6587                           
  6588  0070                     ?_ctrl_izq:	
  6589                           ; 1 bytes @ 0x0
  6590                           
  6591  0070                     ??_ctrl_izq:	
  6592                           ; 1 bytes @ 0x0
  6593                           
  6594  0070                     ?_ctrl_izq2:	
  6595                           ; 1 bytes @ 0x0
  6596                           
  6597  0070                     ??_ctrl_izq2:	
  6598                           ; 1 bytes @ 0x0
  6599                           
  6600  0070                     ?_ctrl_der2:	
  6601                           ; 1 bytes @ 0x0
  6602                           
  6603  0070                     ??_ctrl_der2:	
  6604                           ; 1 bytes @ 0x0
  6605                           
  6606  0070                     ?_tft_begin:	
  6607                           ; 1 bytes @ 0x0
  6608                           
  6609  0070                     ?_setRotation:	
  6610                           ; 1 bytes @ 0x0
  6611                           
  6612  0070                     ?_display_setTextSize:	
  6613                           ; 1 bytes @ 0x0
  6614                           
  6615  0070                     ?_display_print:	
  6616                           ; 1 bytes @ 0x0
  6617                           
  6618  0070                     ?_putch:	
  6619                           ; 1 bytes @ 0x0
  6620                           
  6621  0070                     ?_SYSTEM_Initialize:	
  6622                           ; 1 bytes @ 0x0
  6623                           
  6624  0070                     ?_PIN_MANAGER_IOC:	
  6625                           ; 1 bytes @ 0x0
  6626                           
  6627  0070                     ?_SPI1_Open:	
  6628                           ; 1 bytes @ 0x0
  6629                           
  6630  0070                     ?_SPI1_ExchangeByte:	
  6631                           ; 1 bytes @ 0x0
  6632                           
  6633  0070                     ?_INTERRUPT_InterruptManager:	
  6634                           ; 1 bytes @ 0x0
  6635                           
  6636  0070                     ?_main:	
  6637                           ; 1 bytes @ 0x0
  6638                           
  6639  0070                     ?_startWrite:	
  6640                           ; 1 bytes @ 0x0
  6641                           
  6642  0070                     ?_endWrite:	
  6643                           ; 1 bytes @ 0x0
  6644                           
  6645  0070                     ?_writeCommand:	
  6646                           ; 1 bytes @ 0x0
  6647                           
  6648  0070                     putch@c:	
  6649                           ; 1 bytes @ 0x0
  6650                           
  6651                           
  6652                           ; 1 bytes @ 0x0
  6653  0070                     	ds	1
  6654  0071                     ??_PMD_Initialize:
  6655  0071                     ??_SPI1_Initialize:	
  6656                           ; 1 bytes @ 0x1
  6657                           
  6658  0071                     ??_OSCILLATOR_Initialize:	
  6659                           ; 1 bytes @ 0x1
  6660                           
  6661  0071                     ?_IOCAF1_SetInterruptHandler:	
  6662                           ; 1 bytes @ 0x1
  6663                           
  6664  0071                     ?_IOCAF2_SetInterruptHandler:	
  6665                           ; 1 bytes @ 0x1
  6666                           
  6667  0071                     ?_IOCBF4_SetInterruptHandler:	
  6668                           ; 1 bytes @ 0x1
  6669                           
  6670  0071                     ?_IOCCF5_SetInterruptHandler:	
  6671                           ; 1 bytes @ 0x1
  6672                           
  6673  0071                     ??_IOCAF2_ISR:	
  6674                           ; 1 bytes @ 0x1
  6675                           
  6676  0071                     ??_IOCCF5_ISR:	
  6677                           ; 1 bytes @ 0x1
  6678                           
  6679  0071                     ?_display_setCursor:	
  6680                           ; 1 bytes @ 0x1
  6681                           
  6682  0071                     ??_display_setTextSize:	
  6683                           ; 1 bytes @ 0x1
  6684                           
  6685  0071                     ?_display_setTextColor:	
  6686                           ; 1 bytes @ 0x1
  6687                           
  6688  0071                     ?_display_setTextColor2:	
  6689                           ; 1 bytes @ 0x1
  6690                           
  6691  0071                     ??_putch:	
  6692                           ; 1 bytes @ 0x1
  6693                           
  6694  0071                     ??_PIN_MANAGER_IOC:	
  6695                           ; 1 bytes @ 0x1
  6696                           
  6697  0071                     ??_SPI1_Open:	
  6698                           ; 1 bytes @ 0x1
  6699                           
  6700  0071                     ??_SPI1_ExchangeByte:	
  6701                           ; 1 bytes @ 0x1
  6702                           
  6703  0071                     ??_INTERRUPT_InterruptManager:	
  6704                           ; 1 bytes @ 0x1
  6705                           
  6706  0071                     ??_startWrite:	
  6707                           ; 1 bytes @ 0x1
  6708                           
  6709  0071                     ??_endWrite:	
  6710                           ; 1 bytes @ 0x1
  6711                           
  6712  0071                     ?___bmul:	
  6713                           ; 1 bytes @ 0x1
  6714                           
  6715  0071                     ??___aodiv:	
  6716                           ; 1 bytes @ 0x1
  6717                           
  6718  0071                     ??___aomod:	
  6719                           ; 1 bytes @ 0x1
  6720                           
  6721  0071                     ?_fputc:	
  6722                           ; 1 bytes @ 0x1
  6723                           
  6724  0071                     ?_strlen:	
  6725                           ; 2 bytes @ 0x1
  6726                           
  6727  0071                     ?___wmul:	
  6728                           ; 2 bytes @ 0x1
  6729                           
  6730  0071                     ?___lmul:	
  6731                           ; 2 bytes @ 0x1
  6732                           
  6733  0071                     SPI1_ExchangeByte@data:	
  6734                           ; 4 bytes @ 0x1
  6735                           
  6736  0071                     ___bmul@multiplicand:	
  6737                           ; 1 bytes @ 0x1
  6738                           
  6739  0071                     IOCAF1_SetInterruptHandler@InterruptHandler:	
  6740                           ; 1 bytes @ 0x1
  6741                           
  6742  0071                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  6743                           ; 2 bytes @ 0x1
  6744                           
  6745  0071                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  6746                           ; 2 bytes @ 0x1
  6747                           
  6748  0071                     IOCCF5_SetInterruptHandler@InterruptHandler:	
  6749                           ; 2 bytes @ 0x1
  6750                           
  6751  0071                     display_setCursor@x:	
  6752                           ; 2 bytes @ 0x1
  6753                           
  6754  0071                     display_setTextColor@c:	
  6755                           ; 2 bytes @ 0x1
  6756                           
  6757  0071                     display_setTextColor2@c:	
  6758                           ; 2 bytes @ 0x1
  6759                           
  6760  0071                     ___wmul@multiplier:	
  6761                           ; 2 bytes @ 0x1
  6762                           
  6763  0071                     fputc@c:	
  6764                           ; 2 bytes @ 0x1
  6765                           
  6766  0071                     ___lmul@multiplier:	
  6767                           ; 2 bytes @ 0x1
  6768                           
  6769                           
  6770                           ; 4 bytes @ 0x1
  6771  0071                     	ds	1
  6772  0072                     ??_writeCommand:
  6773  0072                     ??___bmul:	
  6774                           ; 1 bytes @ 0x2
  6775                           
  6776  0072                     writeCommand@cmd:	
  6777                           ; 1 bytes @ 0x2
  6778                           
  6779  0072                     ___aodiv@counter:	
  6780                           ; 1 bytes @ 0x2
  6781                           
  6782  0072                     ___aomod@counter:	
  6783                           ; 1 bytes @ 0x2
  6784                           
  6785                           
  6786                           ; 1 bytes @ 0x2
  6787  0072                     	ds	1
  6788  0073                     ??_PIN_MANAGER_Initialize:
  6789  0073                     ??_IOCAF1_SetInterruptHandler:	
  6790                           ; 1 bytes @ 0x3
  6791                           
  6792  0073                     ??_IOCAF2_SetInterruptHandler:	
  6793                           ; 1 bytes @ 0x3
  6794                           
  6795  0073                     ??_IOCBF4_SetInterruptHandler:	
  6796                           ; 1 bytes @ 0x3
  6797                           
  6798  0073                     ??_IOCCF5_SetInterruptHandler:	
  6799                           ; 1 bytes @ 0x3
  6800                           
  6801  0073                     ??_tft_begin:	
  6802                           ; 1 bytes @ 0x3
  6803                           
  6804  0073                     ??_setRotation:	
  6805                           ; 1 bytes @ 0x3
  6806                           
  6807  0073                     ??_display_setTextColor2:	
  6808                           ; 1 bytes @ 0x3
  6809                           
  6810  0073                     ??_strlen:	
  6811                           ; 1 bytes @ 0x3
  6812                           
  6813  0073                     ??_SYSTEM_Initialize:	
  6814                           ; 1 bytes @ 0x3
  6815                           
  6816  0073                     ?_setAddrWindow:	
  6817                           ; 1 bytes @ 0x3
  6818                           
  6819  0073                     ___bmul@product:	
  6820                           ; 1 bytes @ 0x3
  6821                           
  6822  0073                     ___aodiv@sign:	
  6823                           ; 1 bytes @ 0x3
  6824                           
  6825  0073                     ___aomod@sign:	
  6826                           ; 1 bytes @ 0x3
  6827                           
  6828  0073                     fputc@fp:	
  6829                           ; 1 bytes @ 0x3
  6830                           
  6831  0073                     display_setCursor@y:	
  6832                           ; 1 bytes @ 0x3
  6833                           
  6834  0073                     _display_setTextSize$1270:	
  6835                           ; 2 bytes @ 0x3
  6836                           
  6837  0073                     display_setTextColor@bg:	
  6838                           ; 2 bytes @ 0x3
  6839                           
  6840  0073                     setAddrWindow@x1:	
  6841                           ; 2 bytes @ 0x3
  6842                           
  6843  0073                     ___wmul@multiplicand:	
  6844                           ; 2 bytes @ 0x3
  6845                           
  6846                           
  6847                           ; 2 bytes @ 0x3
  6848  0073                     	ds	1
  6849  0074                     ??_fputc:
  6850  0074                     ?_abs:	
  6851                           ; 1 bytes @ 0x4
  6852                           
  6853  0074                     SPI1_Open@spi1UniqueConfiguration:	
  6854                           ; 2 bytes @ 0x4
  6855                           
  6856  0074                     ___bmul@multiplier:	
  6857                           ; 1 bytes @ 0x4
  6858                           
  6859  0074                     strlen@a:	
  6860                           ; 1 bytes @ 0x4
  6861                           
  6862  0074                     abs@a:	
  6863                           ; 1 bytes @ 0x4
  6864                           
  6865  0074                     ___aodiv@quotient:	
  6866                           ; 2 bytes @ 0x4
  6867                           
  6868                           
  6869                           ; 8 bytes @ 0x4
  6870  0074                     	ds	1
  6871  0075                     ??_display_setCursor:
  6872  0075                     ??_display_setTextColor:	
  6873                           ; 1 bytes @ 0x5
  6874                           
  6875  0075                     ??___wmul:	
  6876                           ; 1 bytes @ 0x5
  6877                           
  6878  0075                     display_setTextSize@s:	
  6879                           ; 1 bytes @ 0x5
  6880                           
  6881  0075                     tft_begin@numArgs:	
  6882                           ; 1 bytes @ 0x5
  6883                           
  6884  0075                     setRotation@m:	
  6885                           ; 1 bytes @ 0x5
  6886                           
  6887  0075                     strlen@s:	
  6888                           ; 1 bytes @ 0x5
  6889                           
  6890  0075                     setAddrWindow@y1:	
  6891                           ; 1 bytes @ 0x5
  6892                           
  6893  0075                     ___wmul@product:	
  6894                           ; 2 bytes @ 0x5
  6895                           
  6896  0075                     ___lmul@multiplicand:	
  6897                           ; 2 bytes @ 0x5
  6898                           
  6899                           
  6900                           ; 4 bytes @ 0x5
  6901  0075                     	ds	1
  6902  0076                     ??_abs:
  6903  0076                     tft_begin@x:	
  6904                           ; 1 bytes @ 0x6
  6905                           
  6906                           
  6907                           ; 1 bytes @ 0x6
  6908  0076                     	ds	1
  6909  0077                     tft_begin@cmd:
  6910  0077                     setAddrWindow@w:	
  6911                           ; 1 bytes @ 0x7
  6912                           
  6913                           
  6914                           ; 2 bytes @ 0x7
  6915  0077                     	ds	1
  6916  0078                     tft_begin@addr:
  6917                           
  6918                           ; 2 bytes @ 0x8
  6919  0078                     	ds	1
  6920  0079                     ??___lmul:
  6921  0079                     ?_fputs:	
  6922                           ; 1 bytes @ 0x9
  6923                           
  6924  0079                     fputs@fp:	
  6925                           ; 2 bytes @ 0x9
  6926                           
  6927  0079                     setAddrWindow@h:	
  6928                           ; 1 bytes @ 0x9
  6929                           
  6930                           
  6931                           ; 2 bytes @ 0x9
  6932  0079                     	ds	1
  6933  007A                     ??_pad:
  6934                           
  6935                           ; 1 bytes @ 0xA
  6936  007A                     	ds	1
  6937  007B                     ??_fillScreen:
  6938  007B                     ??_display_drawCustomChar:	
  6939                           ; 1 bytes @ 0xB
  6940                           
  6941  007B                     ??_drawPixel:	
  6942                           ; 1 bytes @ 0xB
  6943                           
  6944  007B                     disp_texto@i:	
  6945                           ; 1 bytes @ 0xB
  6946                           
  6947                           
  6948                           ; 1 bytes @ 0xB
  6949  007B                     	ds	1
  6950                           
  6951                           	psect	cstackBANK0
  6952  0020                     __pcstackBANK0:
  6953  0020                     ??_fputs:
  6954  0020                     ??_setAddrWindow:	
  6955                           ; 1 bytes @ 0x0
  6956                           
  6957  0020                     ?___aodiv:	
  6958                           ; 1 bytes @ 0x0
  6959                           
  6960  0020                     ?___aomod:	
  6961                           ; 8 bytes @ 0x0
  6962                           
  6963  0020                     ___lmul@product:	
  6964                           ; 8 bytes @ 0x0
  6965                           
  6966  0020                     ___aodiv@divisor:	
  6967                           ; 4 bytes @ 0x0
  6968                           
  6969  0020                     ___aomod@divisor:	
  6970                           ; 8 bytes @ 0x0
  6971                           
  6972                           
  6973                           ; 8 bytes @ 0x0
  6974  0020                     	ds	2
  6975  0022                     setAddrWindow@x2:
  6976                           
  6977                           ; 2 bytes @ 0x2
  6978  0022                     	ds	1
  6979  0023                     fputs@c:
  6980                           
  6981                           ; 1 bytes @ 0x3
  6982  0023                     	ds	1
  6983  0024                     setAddrWindow@y2:
  6984  0024                     fputs@i:	
  6985                           ; 2 bytes @ 0x4
  6986                           
  6987                           
  6988                           ; 2 bytes @ 0x4
  6989  0024                     	ds	2
  6990  0026                     ?_drawVLine:
  6991  0026                     ?_fillRect:	
  6992                           ; 1 bytes @ 0x6
  6993                           
  6994  0026                     ?_drawPixel:	
  6995                           ; 1 bytes @ 0x6
  6996                           
  6997  0026                     fputs@s:	
  6998                           ; 1 bytes @ 0x6
  6999                           
  7000  0026                     drawPixel@x:	
  7001                           ; 1 bytes @ 0x6
  7002                           
  7003  0026                     drawVLine@x:	
  7004                           ; 2 bytes @ 0x6
  7005                           
  7006  0026                     fillRect@x:	
  7007                           ; 2 bytes @ 0x6
  7008                           
  7009                           
  7010                           ; 2 bytes @ 0x6
  7011  0026                     	ds	1
  7012  0027                     ?_pad:
  7013  0027                     pad@buf:	
  7014                           ; 2 bytes @ 0x7
  7015                           
  7016                           
  7017                           ; 1 bytes @ 0x7
  7018  0027                     	ds	1
  7019  0028                     drawPixel@y:
  7020  0028                     drawVLine@y:	
  7021                           ; 2 bytes @ 0x8
  7022                           
  7023  0028                     fillRect@y:	
  7024                           ; 2 bytes @ 0x8
  7025                           
  7026  0028                     pad@p:	
  7027                           ; 2 bytes @ 0x8
  7028                           
  7029  0028                     ___aodiv@dividend:	
  7030                           ; 2 bytes @ 0x8
  7031                           
  7032  0028                     ___aomod@dividend:	
  7033                           ; 8 bytes @ 0x8
  7034                           
  7035                           
  7036                           ; 8 bytes @ 0x8
  7037  0028                     	ds	2
  7038  002A                     drawPixel@color:
  7039  002A                     drawVLine@h:	
  7040                           ; 2 bytes @ 0xA
  7041                           
  7042  002A                     fillRect@w:	
  7043                           ; 2 bytes @ 0xA
  7044                           
  7045  002A                     pad@i:	
  7046                           ; 2 bytes @ 0xA
  7047                           
  7048                           
  7049                           ; 2 bytes @ 0xA
  7050  002A                     	ds	2
  7051  002C                     drawVLine@color:
  7052  002C                     fillRect@h:	
  7053                           ; 2 bytes @ 0xC
  7054                           
  7055  002C                     pad@w:	
  7056                           ; 2 bytes @ 0xC
  7057                           
  7058                           
  7059                           ; 2 bytes @ 0xC
  7060  002C                     	ds	2
  7061  002E                     ??_drawVLine:
  7062  002E                     pad@fp:	
  7063                           ; 1 bytes @ 0xE
  7064                           
  7065  002E                     fillRect@color:	
  7066                           ; 1 bytes @ 0xE
  7067                           
  7068                           
  7069                           ; 2 bytes @ 0xE
  7070  002E                     	ds	2
  7071  0030                     ??_fillRect:
  7072  0030                     ?_dtoa:	
  7073                           ; 1 bytes @ 0x10
  7074                           
  7075  0030                     dtoa@d:	
  7076                           ; 2 bytes @ 0x10
  7077                           
  7078                           
  7079                           ; 8 bytes @ 0x10
  7080  0030                     	ds	2
  7081  0032                     drawVLine@hi:
  7082                           
  7083                           ; 1 bytes @ 0x12
  7084  0032                     	ds	1
  7085  0033                     drawVLine@lo:
  7086                           
  7087                           ; 1 bytes @ 0x13
  7088  0033                     	ds	1
  7089  0034                     fillRect@px:
  7090                           
  7091                           ; 4 bytes @ 0x14
  7092  0034                     	ds	4
  7093  0038                     ??_dtoa:
  7094  0038                     fillRect@hi:	
  7095                           ; 1 bytes @ 0x18
  7096                           
  7097                           
  7098                           ; 1 bytes @ 0x18
  7099  0038                     	ds	1
  7100  0039                     fillRect@lo:
  7101                           
  7102                           ; 1 bytes @ 0x19
  7103  0039                     	ds	1
  7104  003A                     ?_fillScreen:
  7105  003A                     ??_display_print:	
  7106                           ; 1 bytes @ 0x1A
  7107                           
  7108  003A                     ?_display_customChar:	
  7109                           ; 1 bytes @ 0x1A
  7110                           
  7111  003A                     display_customChar@c:	
  7112                           ; 1 bytes @ 0x1A
  7113                           
  7114  003A                     fillScreen@color:	
  7115                           ; 2 bytes @ 0x1A
  7116                           
  7117                           
  7118                           ; 2 bytes @ 0x1A
  7119  003A                     	ds	1
  7120  003B                     dtoa@fp:
  7121                           
  7122                           ; 1 bytes @ 0x1B
  7123  003B                     	ds	1
  7124  003C                     ??_display_customChar:
  7125  003C                     _dtoa$1971:	
  7126                           ; 1 bytes @ 0x1C
  7127                           
  7128                           
  7129                           ; 2 bytes @ 0x1C
  7130  003C                     	ds	2
  7131  003E                     dtoa@p:
  7132                           
  7133                           ; 2 bytes @ 0x1E
  7134  003E                     	ds	2
  7135  0040                     dtoa@w:
  7136                           
  7137                           ; 2 bytes @ 0x20
  7138  0040                     	ds	2
  7139  0042                     dtoa@s:
  7140                           
  7141                           ; 2 bytes @ 0x22
  7142  0042                     	ds	2
  7143  0044                     dtoa@n:
  7144                           
  7145                           ; 8 bytes @ 0x24
  7146  0044                     	ds	2
  7147  0046                     display_print@line:
  7148                           
  7149                           ; 1 bytes @ 0x26
  7150  0046                     	ds	1
  7151  0047                     display_print@c:
  7152                           
  7153                           ; 1 bytes @ 0x27
  7154  0047                     	ds	1
  7155  0048                     display_print@j:
  7156  0048                     display_customChar@line:	
  7157                           ; 1 bytes @ 0x28
  7158                           
  7159                           
  7160                           ; 1 bytes @ 0x28
  7161  0048                     	ds	1
  7162  0049                     display_print@i:
  7163  0049                     display_customChar@j:	
  7164                           ; 1 bytes @ 0x29
  7165                           
  7166                           
  7167                           ; 1 bytes @ 0x29
  7168  0049                     	ds	1
  7169  004A                     ?_disp_texto:
  7170  004A                     display_customChar@i:	
  7171                           ; 1 bytes @ 0x2A
  7172                           
  7173  004A                     disp_texto@cadena:	
  7174                           ; 1 bytes @ 0x2A
  7175                           
  7176                           
  7177                           ; 2 bytes @ 0x2A
  7178  004A                     	ds	1
  7179  004B                     ?_display_drawCustomChar:
  7180  004B                     display_drawCustomChar@x:	
  7181                           ; 1 bytes @ 0x2B
  7182                           
  7183                           
  7184                           ; 2 bytes @ 0x2B
  7185  004B                     	ds	1
  7186  004C                     ??_disp_texto:
  7187  004C                     dtoa@i:	
  7188                           ; 1 bytes @ 0x2C
  7189                           
  7190                           
  7191                           ; 2 bytes @ 0x2C
  7192  004C                     	ds	1
  7193  004D                     display_drawCustomChar@y:
  7194                           
  7195                           ; 2 bytes @ 0x2D
  7196  004D                     	ds	1
  7197  004E                     ?_vfpfcnvrt:
  7198  004E                     vfpfcnvrt@fmt:	
  7199                           ; 2 bytes @ 0x2E
  7200                           
  7201                           
  7202                           ; 1 bytes @ 0x2E
  7203  004E                     	ds	1
  7204  004F                     vfpfcnvrt@ap:
  7205  004F                     display_drawCustomChar@c:	
  7206                           ; 1 bytes @ 0x2F
  7207                           
  7208                           
  7209                           ; 2 bytes @ 0x2F
  7210  004F                     	ds	1
  7211  0050                     ??_vfpfcnvrt:
  7212                           
  7213                           ; 1 bytes @ 0x30
  7214  0050                     	ds	1
  7215  0051                     display_drawCustomChar@color:
  7216                           
  7217                           ; 2 bytes @ 0x31
  7218  0051                     	ds	2
  7219  0053                     display_drawCustomChar@bg:
  7220                           
  7221                           ; 2 bytes @ 0x33
  7222  0053                     	ds	2
  7223  0055                     display_drawCustomChar@size:
  7224  0055                     vfpfcnvrt@ll:	
  7225                           ; 1 bytes @ 0x35
  7226                           
  7227                           
  7228                           ; 8 bytes @ 0x35
  7229  0055                     	ds	1
  7230  0056                     display_drawCustomChar@prev_x:
  7231                           
  7232                           ; 2 bytes @ 0x36
  7233  0056                     	ds	2
  7234  0058                     display_drawCustomChar@prev_y:
  7235                           
  7236                           ; 2 bytes @ 0x38
  7237  0058                     	ds	2
  7238  005A                     display_drawCustomChar@prev_color:
  7239                           
  7240                           ; 2 bytes @ 0x3A
  7241  005A                     	ds	2
  7242  005C                     display_drawCustomChar@prev_bg:
  7243                           
  7244                           ; 2 bytes @ 0x3C
  7245  005C                     	ds	1
  7246  005D                     vfpfcnvrt@fp:
  7247                           
  7248                           ; 1 bytes @ 0x3D
  7249  005D                     	ds	1
  7250  005E                     ?_vfprintf:
  7251  005E                     display_drawCustomChar@prev_size:	
  7252                           ; 2 bytes @ 0x3E
  7253                           
  7254  005E                     vfprintf@fmt:	
  7255                           ; 1 bytes @ 0x3E
  7256                           
  7257                           
  7258                           ; 2 bytes @ 0x3E
  7259  005E                     	ds	1
  7260  005F                     ?_moverJugador:
  7261  005F                     moverJugador@jugador:	
  7262                           ; 1 bytes @ 0x3F
  7263                           
  7264                           
  7265                           ; 2 bytes @ 0x3F
  7266  005F                     	ds	1
  7267  0060                     vfprintf@ap:
  7268                           
  7269                           ; 1 bytes @ 0x40
  7270  0060                     	ds	1
  7271  0061                     ??_moverJugador:
  7272  0061                     ??_vfprintf:	
  7273                           ; 1 bytes @ 0x41
  7274                           
  7275                           
  7276                           ; 1 bytes @ 0x41
  7277  0061                     	ds	2
  7278  0063                     vfprintf@fp:
  7279                           
  7280                           ; 1 bytes @ 0x43
  7281  0063                     	ds	1
  7282  0064                     vfprintf@cfmt:
  7283                           
  7284                           ; 2 bytes @ 0x44
  7285  0064                     	ds	2
  7286  0066                     ?_sprintf:
  7287  0066                     moverJugador@y:	
  7288                           ; 2 bytes @ 0x46
  7289                           
  7290  0066                     sprintf@fmt:	
  7291                           ; 1 bytes @ 0x46
  7292                           
  7293                           
  7294                           ; 2 bytes @ 0x46
  7295  0066                     	ds	6
  7296  006C                     ??_sprintf:
  7297                           
  7298                           ; 1 bytes @ 0x4C
  7299  006C                     	ds	1
  7300  006D                     ?_dibujarMarcador:
  7301  006D                     dibujarMarcador@puntaje2:	
  7302                           ; 1 bytes @ 0x4D
  7303                           
  7304                           
  7305                           ; 1 bytes @ 0x4D
  7306  006D                     	ds	1
  7307  006E                     dibujarMarcador@puntaje1:
  7308                           
  7309                           ; 1 bytes @ 0x4E
  7310  006E                     	ds	1
  7311                           
  7312                           	psect	maintext
  7313  0C1A                     __pmaintext:	
  7314 ;;
  7315 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  7316 ;;
  7317 ;; *************** function _main *****************
  7318 ;; Defined at:
  7319 ;;		line 84 in file "main.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : B1F/0
  7330 ;;		On exit  : 1F/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;Total ram usage:        5 bytes
  7338 ;; Hardware stack levels required when called:   13
  7339 ;; This function calls:
  7340 ;;		_IOCAF1_SetInterruptHandler
  7341 ;;		_IOCAF2_SetInterruptHandler
  7342 ;;		_IOCBF4_SetInterruptHandler
  7343 ;;		_IOCCF5_SetInterruptHandler
  7344 ;;		_SPI1_Open
  7345 ;;		_SYSTEM_Initialize
  7346 ;;		_dibujarMarcador
  7347 ;;		_display_drawCustomChar
  7348 ;;		_fillScreen
  7349 ;;		_moverJugador
  7350 ;;		_tft_begin
  7351 ;; This function is called by:
  7352 ;;		Startup code after reset
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _main
  7358  0C1A                     _main:
  7359                           
  7360                           ;main.c: 85:     PORTAbits.RA0=0;
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7364  0C1A  100C               	bcf	12,0	;volatile
  7365                           
  7366                           ;main.c: 87:     SYSTEM_Initialize();
  7367  0C1B  3191  217B  318C   	fcall	_SYSTEM_Initialize
  7368                           
  7369                           ;main.c: 88:     SPI1_Open(SPI1_DEFAULT);
  7370  0C1E  3000               	movlw	0
  7371  0C1F  3194  243B  318C   	fcall	_SPI1_Open
  7372                           
  7373                           ;main.c: 91:     (INTCONbits.GIE = 1);
  7374  0C22  178B               	bsf	11,7	;volatile
  7375                           
  7376                           ;main.c: 93:     (INTCONbits.PEIE = 1);
  7377  0C23  170B               	bsf	11,6	;volatile
  7378                           
  7379                           ;main.c: 95:     IOCCF5_SetInterruptHandler(ctrl_der);
  7380  0C24  300E               	movlw	low _ctrl_der
  7381  0C25  00F1               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler
  7382  0C26  3011               	movlw	high _ctrl_der
  7383  0C27  00F2               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler+1
  7384  0C28  3191  2123  318C   	fcall	_IOCCF5_SetInterruptHandler
  7385                           
  7386                           ;main.c: 96:     IOCBF4_SetInterruptHandler(ctrl_izq);
  7387  0C2B  30FF               	movlw	low _ctrl_izq
  7388  0C2C  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  7389  0C2D  3010               	movlw	high _ctrl_izq
  7390  0C2E  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  7391  0C2F  3191  2118  318C   	fcall	_IOCBF4_SetInterruptHandler
  7392                           
  7393                           ;main.c: 98:     IOCAF1_SetInterruptHandler(ctrl_izq2);
  7394  0C32  30FC               	movlw	low _ctrl_izq2
  7395  0C33  00F1               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler
  7396  0C34  3010               	movlw	high _ctrl_izq2
  7397  0C35  00F2               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler+1
  7398  0C36  3191  211D  318C   	fcall	_IOCAF1_SetInterruptHandler
  7399                           
  7400                           ;main.c: 99:     IOCAF2_SetInterruptHandler(ctrl_der2);
  7401  0C39  3009               	movlw	low _ctrl_der2
  7402  0C3A  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  7403  0C3B  3011               	movlw	high _ctrl_der2
  7404  0C3C  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  7405  0C3D  3191  2113  318C   	fcall	_IOCAF2_SetInterruptHandler
  7406                           
  7407                           ;main.c: 102:     tft_begin();
  7408  0C40  3196  2625  318C   	fcall	_tft_begin
  7409                           
  7410                           ;main.c: 105:     fillScreen(0x0000);
  7411  0C43  3000               	movlw	0
  7412  0C44  0020               	movlb	0	; select bank0
  7413  0C45  00BA               	movwf	fillScreen@color
  7414  0C46  00BB               	movwf	fillScreen@color+1
  7415  0C47  3192  2270  318C   	fcall	_fillScreen
  7416                           
  7417                           ;main.c: 107:     display_drawCustomChar(0, 0, jugador1.forma, 0x07E0, 0x0000,jugador1.e
      +                          scala);
  7418  0C4A  3000               	movlw	0
  7419  0C4B  00CB               	movwf	display_drawCustomChar@x
  7420  0C4C  00CC               	movwf	display_drawCustomChar@x+1
  7421  0C4D  3000               	movlw	0
  7422  0C4E  00CD               	movwf	display_drawCustomChar@y
  7423  0C4F  00CE               	movwf	display_drawCustomChar@y+1
  7424  0C50  3044               	movlw	low (_jugador1+4)
  7425  0C51  00CF               	movwf	display_drawCustomChar@c
  7426  0C52  3001               	movlw	high (_jugador1+4)
  7427  0C53  00D0               	movwf	display_drawCustomChar@c+1
  7428  0C54  30E0               	movlw	224
  7429  0C55  00D1               	movwf	display_drawCustomChar@color
  7430  0C56  3007               	movlw	7
  7431  0C57  00D2               	movwf	display_drawCustomChar@color+1
  7432  0C58  3000               	movlw	0
  7433  0C59  00D3               	movwf	display_drawCustomChar@bg
  7434  0C5A  00D4               	movwf	display_drawCustomChar@bg+1
  7435  0C5B  0022               	movlb	2	; select bank2
  7436  0C5C  0842               	movf	(_jugador1^(0+256)+2),w
  7437  0C5D  0021               	movlb	1	; select bank1
  7438  0C5E  00DF               	movwf	??_main^(0+128)
  7439  0C5F  085F               	movf	??_main^(0+128),w
  7440  0C60  0020               	movlb	0	; select bank0
  7441  0C61  00D5               	movwf	display_drawCustomChar@size
  7442  0C62  3194  24D6  318C   	fcall	_display_drawCustomChar
  7443                           
  7444                           ;main.c: 108:     display_drawCustomChar(0, 320 -(jugador2.escala * 8), jugador2.forma, 
      +                          0x07E0, 0x0000,jugador2.escala);
  7445  0C65  3000               	movlw	0
  7446  0C66  00CB               	movwf	display_drawCustomChar@x
  7447  0C67  00CC               	movwf	display_drawCustomChar@x+1
  7448  0C68  0021               	movlb	1	; select bank1
  7449  0C69  0833               	movf	(_jugador2^(0+128)+2),w
  7450  0C6A  00DF               	movwf	??_main^(0+128)
  7451  0C6B  01E0               	clrf	(??_main^(0+128)+1)
  7452  0C6C  35DF               	lslf	??_main^(0+128),f
  7453  0C6D  0DE0               	rlf	(??_main^(0+128)+1),f
  7454  0C6E  35DF               	lslf	??_main^(0+128),f
  7455  0C6F  0DE0               	rlf	(??_main^(0+128)+1),f
  7456  0C70  35DF               	lslf	??_main^(0+128),f
  7457  0C71  0DE0               	rlf	(??_main^(0+128)+1),f
  7458  0C72  3040               	movlw	64
  7459  0C73  00E1               	movwf	(??_main+2)^(0+128)
  7460  0C74  3001               	movlw	1
  7461  0C75  00E2               	movwf	((??_main+2)^(0+128)+1)
  7462  0C76  085F               	movf	??_main^(0+128),w
  7463  0C77  0261               	subwf	(??_main+2)^(0+128),w
  7464  0C78  0020               	movlb	0	; select bank0
  7465  0C79  00CD               	movwf	display_drawCustomChar@y
  7466  0C7A  0021               	movlb	1	; select bank1
  7467  0C7B  0860               	movf	(??_main+1)^(0+128),w
  7468  0C7C  3B62               	subwfb	(??_main+3)^(0+128),w
  7469  0C7D  0020               	movlb	0	; select bank0
  7470  0C7E  00CE               	movwf	display_drawCustomChar@y+1
  7471  0C7F  30B5               	movlw	low (_jugador2+4)
  7472  0C80  00CF               	movwf	display_drawCustomChar@c
  7473  0C81  3000               	movlw	high (_jugador2+4)
  7474  0C82  00D0               	movwf	display_drawCustomChar@c+1
  7475  0C83  30E0               	movlw	224
  7476  0C84  00D1               	movwf	display_drawCustomChar@color
  7477  0C85  3007               	movlw	7
  7478  0C86  00D2               	movwf	display_drawCustomChar@color+1
  7479  0C87  3000               	movlw	0
  7480  0C88  00D3               	movwf	display_drawCustomChar@bg
  7481  0C89  00D4               	movwf	display_drawCustomChar@bg+1
  7482  0C8A  0021               	movlb	1	; select bank1
  7483  0C8B  0833               	movf	(_jugador2^(0+128)+2),w
  7484  0C8C  00E3               	movwf	(??_main+4)^(0+128)
  7485  0C8D  0863               	movf	(??_main+4)^(0+128),w
  7486  0C8E  0020               	movlb	0	; select bank0
  7487  0C8F  00D5               	movwf	display_drawCustomChar@size
  7488  0C90  3194  24D6  318C   	fcall	_display_drawCustomChar
  7489                           
  7490                           ;main.c: 110:     display_drawCustomChar(bolita.posicionx,bolita.posiciony,bolita.forma,
      +                          0xFFFF, 0x0000,bolita.escala);
  7491  0C93  0021               	movlb	1	; select bank1
  7492  0C94  082E               	movf	(_bolita^(0+128)+9),w
  7493  0C95  00DF               	movwf	??_main^(0+128)
  7494  0C96  01E0               	clrf	(??_main^(0+128)+1)
  7495  0C97  085F               	movf	??_main^(0+128),w
  7496  0C98  0020               	movlb	0	; select bank0
  7497  0C99  00CB               	movwf	display_drawCustomChar@x
  7498  0C9A  0021               	movlb	1	; select bank1
  7499  0C9B  0860               	movf	(??_main+1)^(0+128),w
  7500  0C9C  0020               	movlb	0	; select bank0
  7501  0C9D  00CC               	movwf	display_drawCustomChar@x+1
  7502  0C9E  0021               	movlb	1	; select bank1
  7503  0C9F  0830               	movf	((_bolita+1)^(0+128)+10),w
  7504  0CA0  0020               	movlb	0	; select bank0
  7505  0CA1  00CE               	movwf	display_drawCustomChar@y+1
  7506  0CA2  0021               	movlb	1	; select bank1
  7507  0CA3  082F               	movf	(_bolita^(0+128)+10),w
  7508  0CA4  0020               	movlb	0	; select bank0
  7509  0CA5  00CD               	movwf	display_drawCustomChar@y
  7510  0CA6  30A9               	movlw	low (_bolita+4)
  7511  0CA7  00CF               	movwf	display_drawCustomChar@c
  7512  0CA8  3000               	movlw	high (_bolita+4)
  7513  0CA9  00D0               	movwf	display_drawCustomChar@c+1
  7514  0CAA  30FF               	movlw	255
  7515  0CAB  00D1               	movwf	display_drawCustomChar@color
  7516  0CAC  30FF               	movlw	255
  7517  0CAD  00D2               	movwf	display_drawCustomChar@color+1
  7518  0CAE  3000               	movlw	0
  7519  0CAF  00D3               	movwf	display_drawCustomChar@bg
  7520  0CB0  00D4               	movwf	display_drawCustomChar@bg+1
  7521  0CB1  0021               	movlb	1	; select bank1
  7522  0CB2  0828               	movf	(_bolita^(0+128)+3),w
  7523  0CB3  00E1               	movwf	(??_main+2)^(0+128)
  7524  0CB4  0861               	movf	(??_main+2)^(0+128),w
  7525  0CB5  0020               	movlb	0	; select bank0
  7526  0CB6  00D5               	movwf	display_drawCustomChar@size
  7527  0CB7  3194  24D6  318C   	fcall	_display_drawCustomChar
  7528                           
  7529                           ;main.c: 111:     dibujarMarcador(0,0);
  7530  0CBA  01ED               	clrf	dibujarMarcador@puntaje2
  7531  0CBB  3000               	movlw	0
  7532  0CBC  3187  2799  318C   	fcall	_dibujarMarcador
  7533  0CBF                     l4203:
  7534                           
  7535                           ;main.c: 114:         if (movimiento_jugador1 == izquierda) {
  7536  0CBF  037C               	decf	_movimiento_jugador1,w
  7537  0CC0  1D03               	btfss	3,2
  7538  0CC1  2CC5               	goto	l4207
  7539                           
  7540                           ;main.c: 115:             jugador1.sentido=0;
  7541  0CC2  0022               	movlb	2	; select bank2
  7542  0CC3  01C0               	clrf	_jugador1^(0+256)
  7543                           
  7544                           ;main.c: 116:         } else if (movimiento_jugador1 == derecha) {
  7545  0CC4  2CCC               	goto	l4211
  7546  0CC5                     l4207:
  7547  0CC5  3002               	movlw	2
  7548  0CC6  067C               	xorwf	_movimiento_jugador1,w
  7549  0CC7  1D03               	btfss	3,2
  7550  0CC8  2CCC               	goto	l4211
  7551                           
  7552                           ;main.c: 117:             jugador1.sentido=1;
  7553  0CC9  0022               	movlb	2	; select bank2
  7554  0CCA  01C0               	clrf	_jugador1^(0+256)
  7555  0CCB  0AC0               	incf	_jugador1^(0+256),f
  7556  0CCC                     l4211:
  7557                           
  7558                           ;main.c: 119:         if (movimiento_jugador2 == izquierda) {
  7559  0CCC  0021               	movlb	1	; select bank1
  7560  0CCD  034D               	decf	_movimiento_jugador2^(0+128),w
  7561  0CCE  1D03               	btfss	3,2
  7562  0CCF  2CD2               	goto	l4215
  7563                           
  7564                           ;main.c: 120:             jugador2.sentido=0;
  7565  0CD0  01B1               	clrf	_jugador2^(0+128)
  7566                           
  7567                           ;main.c: 121:         } else if (movimiento_jugador2 == derecha) {
  7568  0CD1  2CD8               	goto	l4219
  7569  0CD2                     l4215:
  7570  0CD2  3002               	movlw	2
  7571  0CD3  064D               	xorwf	_movimiento_jugador2^(0+128),w
  7572  0CD4  1D03               	btfss	3,2
  7573  0CD5  2CD8               	goto	l4219
  7574                           
  7575                           ;main.c: 122:             jugador2.sentido=1;
  7576  0CD6  01B1               	clrf	_jugador2^(0+128)
  7577  0CD7  0AB1               	incf	_jugador2^(0+128),f
  7578  0CD8                     l4219:
  7579                           
  7580                           ;main.c: 125:         if (!(movimiento_jugador1 || movimiento_jugador2)) {
  7581  0CD8  087C               	movf	_movimiento_jugador1,w
  7582  0CD9  1D03               	btfss	3,2
  7583  0CDA  2CEB               	goto	l4225
  7584  0CDB  084D               	movf	_movimiento_jugador2^(0+128),w
  7585  0CDC  1D03               	btfss	3,2
  7586  0CDD  2CEB               	goto	l4225
  7587                           
  7588                           ;main.c: 126:             _delay((unsigned long)((65)*(32000000/4000.0)));
  7589  0CDE  3003               	movlw	3
  7590  0CDF  0021               	movlb	1	; select bank1
  7591  0CE0  00E0               	movwf	(??_main^(0+128)+1)
  7592  0CE1  30A4               	movlw	164
  7593  0CE2  00DF               	movwf	??_main^(0+128)
  7594  0CE3  304F               	movlw	79
  7595  0CE4                     u3777:
  7596  0CE4  0B89               	decfsz	9,f
  7597  0CE5  2CE4               	goto	u3777
  7598  0CE6  0BDF               	decfsz	??_main^(0+128),f
  7599  0CE7  2CE4               	goto	u3777
  7600  0CE8  0BE0               	decfsz	(??_main^(0+128)+1),f
  7601  0CE9  2CE4               	goto	u3777
  7602                           
  7603                           ;main.c: 127:         } else if(movimiento_jugador1) {
  7604  0CEA  2D0D               	goto	l4239
  7605  0CEB                     l4225:
  7606  0CEB  087C               	movf	_movimiento_jugador1,w
  7607  0CEC  1903               	btfsc	3,2
  7608  0CED  2CF9               	goto	l4233
  7609                           
  7610                           ;main.c: 128:             moverJugador(&jugador1);
  7611  0CEE  3040               	movlw	low _jugador1
  7612  0CEF  0020               	movlb	0	; select bank0
  7613  0CF0  00DF               	movwf	moverJugador@jugador
  7614  0CF1  3001               	movlw	high _jugador1
  7615  0CF2  00E0               	movwf	moverJugador@jugador+1
  7616  0CF3  3196  26AA  318C   	fcall	_moverJugador
  7617                           
  7618                           ;main.c: 129:             movimiento_jugador1 = inactivo;
  7619  0CF6  01FC               	clrf	_movimiento_jugador1
  7620                           
  7621                           ;main.c: 130:             dibujarMarcador(puntaje1,puntaje2);
  7622  0CF7  0021               	movlb	1	; select bank1
  7623  0CF8  2D03               	goto	l4237
  7624  0CF9                     l4233:	
  7625                           ;main.c: 131:         }else{
  7626                           
  7627                           
  7628                           ;main.c: 132:             moverJugador(&jugador2);
  7629  0CF9  30B1               	movlw	low _jugador2
  7630  0CFA  0020               	movlb	0	; select bank0
  7631  0CFB  00DF               	movwf	moverJugador@jugador
  7632  0CFC  3000               	movlw	high _jugador2
  7633  0CFD  00E0               	movwf	moverJugador@jugador+1
  7634  0CFE  3196  26AA  318C   	fcall	_moverJugador
  7635                           
  7636                           ;main.c: 133:             movimiento_jugador2 = inactivo;
  7637  0D01  0021               	movlb	1	; select bank1
  7638  0D02  01CD               	clrf	_movimiento_jugador2^(0+128)
  7639  0D03                     l4237:
  7640                           
  7641                           ;main.c: 134:             dibujarMarcador(puntaje1,puntaje2);
  7642  0D03  084B               	movf	_puntaje2^(0+128),w
  7643  0D04  00DF               	movwf	??_main^(0+128)
  7644  0D05  085F               	movf	??_main^(0+128),w
  7645  0D06  0020               	movlb	0	; select bank0
  7646  0D07  00ED               	movwf	dibujarMarcador@puntaje2
  7647  0D08  0021               	movlb	1	; select bank1
  7648  0D09  084C               	movf	_puntaje1^(0+128),w
  7649  0D0A  3187  2799  318C   	fcall	_dibujarMarcador
  7650  0D0D                     l4239:
  7651                           
  7652                           ;main.c: 138:         display_drawCustomChar(bolita.posicionx,bolita.posiciony,bolita.fo
      +                          rma,0x0000,0x0000,bolita.escala);
  7653  0D0D  0021               	movlb	1	; select bank1
  7654  0D0E  082E               	movf	(_bolita^(0+128)+9),w
  7655  0D0F  00DF               	movwf	??_main^(0+128)
  7656  0D10  01E0               	clrf	(??_main^(0+128)+1)
  7657  0D11  085F               	movf	??_main^(0+128),w
  7658  0D12  0020               	movlb	0	; select bank0
  7659  0D13  00CB               	movwf	display_drawCustomChar@x
  7660  0D14  0021               	movlb	1	; select bank1
  7661  0D15  0860               	movf	(??_main+1)^(0+128),w
  7662  0D16  0020               	movlb	0	; select bank0
  7663  0D17  00CC               	movwf	display_drawCustomChar@x+1
  7664  0D18  0021               	movlb	1	; select bank1
  7665  0D19  0830               	movf	((_bolita+1)^(0+128)+10),w
  7666  0D1A  0020               	movlb	0	; select bank0
  7667  0D1B  00CE               	movwf	display_drawCustomChar@y+1
  7668  0D1C  0021               	movlb	1	; select bank1
  7669  0D1D  082F               	movf	(_bolita^(0+128)+10),w
  7670  0D1E  0020               	movlb	0	; select bank0
  7671  0D1F  00CD               	movwf	display_drawCustomChar@y
  7672  0D20  30A9               	movlw	low (_bolita+4)
  7673  0D21  00CF               	movwf	display_drawCustomChar@c
  7674  0D22  3000               	movlw	high (_bolita+4)
  7675  0D23  00D0               	movwf	display_drawCustomChar@c+1
  7676  0D24  3000               	movlw	0
  7677  0D25  00D1               	movwf	display_drawCustomChar@color
  7678  0D26  00D2               	movwf	display_drawCustomChar@color+1
  7679  0D27  3000               	movlw	0
  7680  0D28  00D3               	movwf	display_drawCustomChar@bg
  7681  0D29  00D4               	movwf	display_drawCustomChar@bg+1
  7682  0D2A  0021               	movlb	1	; select bank1
  7683  0D2B  0828               	movf	(_bolita^(0+128)+3),w
  7684  0D2C  00E1               	movwf	(??_main+2)^(0+128)
  7685  0D2D  0861               	movf	(??_main+2)^(0+128),w
  7686  0D2E  0020               	movlb	0	; select bank0
  7687  0D2F  00D5               	movwf	display_drawCustomChar@size
  7688  0D30  3194  24D6  318C   	fcall	_display_drawCustomChar
  7689                           
  7690                           ;main.c: 139:         if (bolita.posicionx >= (240 -(2 * 5))) {
  7691  0D33  30E6               	movlw	230
  7692  0D34  0021               	movlb	1	; select bank1
  7693  0D35  022E               	subwf	(_bolita^(0+128)+9),w
  7694  0D36  1C03               	skipc
  7695  0D37  2D3B               	goto	l4245
  7696                           
  7697                           ;main.c: 140:             bolita.sentidox = 1;
  7698  0D38  01A5               	clrf	_bolita^(0+128)
  7699  0D39  0AA5               	incf	_bolita^(0+128),f
  7700                           
  7701                           ;main.c: 141:         } else if (bolita.posicionx <= 10) {
  7702  0D3A  2D3F               	goto	l4249
  7703  0D3B                     l4245:
  7704  0D3B  300B               	movlw	11
  7705  0D3C  022E               	subwf	(_bolita^(0+128)+9),w
  7706  0D3D  1C03               	btfss	3,0
  7707                           
  7708                           ;main.c: 142:             bolita.sentidox = 0;
  7709  0D3E  01A5               	clrf	_bolita^(0+128)
  7710  0D3F                     l4249:
  7711                           
  7712                           ;main.c: 145:         if (bolita.posiciony >= ((320 -(2 * 8))-16)) {
  7713  0D3F  3001               	movlw	1
  7714  0D40  0230               	subwf	((_bolita+1)^(0+128)+10),w
  7715  0D41  3020               	movlw	32
  7716  0D42  1903               	skipnz
  7717  0D43  022F               	subwf	(_bolita^(0+128)+10),w
  7718  0D44  1C03               	skipc
  7719  0D45  2D66               	goto	l4265
  7720                           
  7721                           ;main.c: 147:             if ((bolita.posicionx >= jugador2.posicion)&&(bolita.posicionx
      +                           <= (jugador2.posicion+((5 * 13) / 2)) + 30)) {
  7722  0D46  083A               	movf	(_jugador2^(0+128)+9),w
  7723  0D47  022E               	subwf	(_bolita^(0+128)+9),w
  7724  0D48  1C03               	skipc
  7725  0D49  2D60               	goto	l4257
  7726  0D4A  083A               	movf	(_jugador2^(0+128)+9),w
  7727  0D4B  3E3E               	addlw	62
  7728  0D4C  00DF               	movwf	??_main^(0+128)
  7729  0D4D  3000               	movlw	0
  7730  0D4E  1803               	skipnc
  7731  0D4F  3001               	movlw	1
  7732  0D50  00E0               	movwf	(??_main^(0+128)+1)
  7733  0D51  0860               	movf	(??_main+1)^(0+128),w
  7734  0D52  3A80               	xorlw	128
  7735  0D53  00E1               	movwf	(??_main+2)^(0+128)
  7736  0D54  3080               	movlw	128
  7737  0D55  0261               	subwf	(??_main+2)^(0+128),w
  7738  0D56  1D03               	skipz
  7739  0D57  2D5A               	goto	u3715
  7740  0D58  082E               	movf	(_bolita^(0+128)+9),w
  7741  0D59  025F               	subwf	??_main^(0+128),w
  7742  0D5A                     u3715:
  7743  0D5A  1C03               	skipc
  7744  0D5B  2D60               	goto	l4257
  7745                           
  7746                           ;main.c: 148:                 bolita.sentidoy = 1;
  7747  0D5C  0021               	movlb	1	; select bank1
  7748  0D5D  01A6               	clrf	(_bolita^(0+128)+1)
  7749  0D5E  0AA6               	incf	(_bolita^(0+128)+1),f
  7750                           
  7751                           ;main.c: 149:             }else{
  7752  0D5F  2DA2               	goto	l4281
  7753  0D60                     l4257:
  7754                           
  7755                           ;main.c: 150:                 puntaje1++;
  7756  0D60  3001               	movlw	1
  7757  0D61  0021               	movlb	1	; select bank1
  7758  0D62  00DF               	movwf	??_main^(0+128)
  7759  0D63  085F               	movf	??_main^(0+128),w
  7760  0D64  07CC               	addwf	_puntaje1^(0+128),f
  7761  0D65  2D8F               	goto	L1
  7762  0D66                     l4265:	
  7763                           ;main.c: 151:                 dibujarMarcador(puntaje1,puntaje2);
  7764                           
  7765  0D66  3000               	movlw	0
  7766  0D67  0230               	subwf	((_bolita+1)^(0+128)+10),w
  7767  0D68  3013               	movlw	19
  7768  0D69  1903               	skipnz
  7769  0D6A  022F               	subwf	(_bolita^(0+128)+10),w
  7770  0D6B  1803               	skipnc
  7771  0D6C  2DA2               	goto	l4281
  7772                           
  7773                           ;main.c: 157:             if ((bolita.posicionx >= jugador1.posicion)&&(bolita.posicionx
      +                           <= (jugador1.posicion+((5 * 13) / 2)) + 30)) {
  7774  0D6D  0022               	movlb	2	; select bank2
  7775  0D6E  0849               	movf	(_jugador1^(0+256)+9),w
  7776  0D6F  0021               	movlb	1	; select bank1
  7777  0D70  022E               	subwf	(_bolita^(0+128)+9),w
  7778  0D71  1C03               	skipc
  7779  0D72  2D8A               	goto	l4273
  7780  0D73  0022               	movlb	2	; select bank2
  7781  0D74  0849               	movf	(_jugador1^(0+256)+9),w
  7782  0D75  3E3E               	addlw	62
  7783  0D76  0021               	movlb	1	; select bank1
  7784  0D77  00DF               	movwf	??_main^(0+128)
  7785  0D78  3000               	movlw	0
  7786  0D79  1803               	skipnc
  7787  0D7A  3001               	movlw	1
  7788  0D7B  00E0               	movwf	(??_main^(0+128)+1)
  7789  0D7C  0860               	movf	(??_main+1)^(0+128),w
  7790  0D7D  3A80               	xorlw	128
  7791  0D7E  00E1               	movwf	(??_main+2)^(0+128)
  7792  0D7F  3080               	movlw	128
  7793  0D80  0261               	subwf	(??_main+2)^(0+128),w
  7794  0D81  1D03               	skipz
  7795  0D82  2D85               	goto	u3745
  7796  0D83  082E               	movf	(_bolita^(0+128)+9),w
  7797  0D84  025F               	subwf	??_main^(0+128),w
  7798  0D85                     u3745:
  7799  0D85  1C03               	skipc
  7800  0D86  2D8A               	goto	l4273
  7801                           
  7802                           ;main.c: 158:                 bolita.sentidoy = 0;
  7803  0D87  0021               	movlb	1	; select bank1
  7804  0D88  01A6               	clrf	(_bolita^(0+128)+1)
  7805                           
  7806                           ;main.c: 159:             }else{
  7807  0D89  2DA2               	goto	l4281
  7808  0D8A                     l4273:
  7809                           
  7810                           ;main.c: 160:                 puntaje2++;
  7811  0D8A  3001               	movlw	1
  7812  0D8B  0021               	movlb	1	; select bank1
  7813  0D8C  00DF               	movwf	??_main^(0+128)
  7814  0D8D  085F               	movf	??_main^(0+128),w
  7815  0D8E  07CB               	addwf	_puntaje2^(0+128),f
  7816  0D8F                     L1:
  7817                           
  7818                           ;main.c: 161:                 dibujarMarcador(puntaje1,puntaje2);
  7819  0D8F  084B               	movf	_puntaje2^(0+128),w
  7820  0D90  00DF               	movwf	??_main^(0+128)
  7821  0D91  085F               	movf	??_main^(0+128),w
  7822  0D92  0020               	movlb	0	; select bank0
  7823  0D93  00ED               	movwf	dibujarMarcador@puntaje2
  7824  0D94  0021               	movlb	1	; select bank1
  7825  0D95  084C               	movf	_puntaje1^(0+128),w
  7826  0D96  3187  2799  318C   	fcall	_dibujarMarcador
  7827                           
  7828                           ;main.c: 152:                 bolita.posicionx=(240 -(2 * 5)) / 2;
  7829  0D99  3073               	movlw	115
  7830  0D9A  0021               	movlb	1	; select bank1
  7831  0D9B  00DF               	movwf	??_main^(0+128)
  7832  0D9C  085F               	movf	??_main^(0+128),w
  7833  0D9D  00AE               	movwf	(_bolita^(0+128)+9)
  7834                           
  7835                           ;main.c: 153:                 bolita.posiciony=(320 -(2 * 8)) / 2;
  7836  0D9E  3098               	movlw	152
  7837  0D9F  00AF               	movwf	(_bolita^(0+128)+10)
  7838  0DA0  3000               	movlw	0
  7839  0DA1  00B0               	movwf	(_bolita^(0+128)+11)
  7840  0DA2                     l4281:
  7841                           
  7842                           ;main.c: 167:         if (bolita.sentidox) {
  7843  0DA2  0825               	movf	_bolita^(0+128),w
  7844  0DA3  1903               	btfsc	3,2
  7845  0DA4  2DA8               	goto	l4285
  7846                           
  7847                           ;main.c: 168:             bolita.posicionx -= bolita.velocidad;
  7848  0DA5  0827               	movf	(_bolita^(0+128)+2),w
  7849  0DA6  02AE               	subwf	(_bolita^(0+128)+9),f
  7850                           
  7851                           ;main.c: 169:         } else {
  7852  0DA7  2DAC               	goto	l442
  7853  0DA8                     l4285:
  7854                           
  7855                           ;main.c: 170:             bolita.posicionx += bolita.velocidad;
  7856  0DA8  0827               	movf	(_bolita^(0+128)+2),w
  7857  0DA9  00DF               	movwf	??_main^(0+128)
  7858  0DAA  085F               	movf	??_main^(0+128),w
  7859  0DAB  07AE               	addwf	(_bolita^(0+128)+9),f
  7860  0DAC                     l442:	
  7861                           ;main.c: 171:         }
  7862                           
  7863                           
  7864                           ;main.c: 173:         if (bolita.sentidoy) {
  7865  0DAC  0826               	movf	(_bolita^(0+128)+1),w
  7866  0DAD  1903               	btfsc	3,2
  7867  0DAE  2DB7               	goto	l4289
  7868                           
  7869                           ;main.c: 174:             bolita.posiciony -= bolita.velocidad;
  7870  0DAF  0827               	movf	(_bolita^(0+128)+2),w
  7871  0DB0  00DF               	movwf	??_main^(0+128)
  7872  0DB1  01E0               	clrf	(??_main^(0+128)+1)
  7873  0DB2  085F               	movf	??_main^(0+128),w
  7874  0DB3  02AF               	subwf	(_bolita^(0+128)+10),f
  7875  0DB4  0860               	movf	(??_main+1)^(0+128),w
  7876  0DB5  3BB0               	subwfb	((_bolita+1)^(0+128)+10),f
  7877                           
  7878                           ;main.c: 175:         } else {
  7879  0DB6  2DBE               	goto	l4291
  7880  0DB7                     l4289:
  7881                           
  7882                           ;main.c: 176:             bolita.posiciony += bolita.velocidad;
  7883  0DB7  0827               	movf	(_bolita^(0+128)+2),w
  7884  0DB8  00DF               	movwf	??_main^(0+128)
  7885  0DB9  01E0               	clrf	(??_main^(0+128)+1)
  7886  0DBA  085F               	movf	??_main^(0+128),w
  7887  0DBB  07AF               	addwf	(_bolita^(0+128)+10),f
  7888  0DBC  0860               	movf	(??_main^(0+128)+1),w
  7889  0DBD  3DB0               	addwfc	((_bolita+1)^(0+128)+10),f
  7890  0DBE                     l4291:
  7891                           
  7892                           ;main.c: 178:         display_drawCustomChar(bolita.posicionx, bolita.posiciony, bolita.
      +                          forma, 0x07E0, 0x0000,bolita.escala);
  7893  0DBE  082E               	movf	(_bolita^(0+128)+9),w
  7894  0DBF  00DF               	movwf	??_main^(0+128)
  7895  0DC0  01E0               	clrf	(??_main^(0+128)+1)
  7896  0DC1  085F               	movf	??_main^(0+128),w
  7897  0DC2  0020               	movlb	0	; select bank0
  7898  0DC3  00CB               	movwf	display_drawCustomChar@x
  7899  0DC4  0021               	movlb	1	; select bank1
  7900  0DC5  0860               	movf	(??_main+1)^(0+128),w
  7901  0DC6  0020               	movlb	0	; select bank0
  7902  0DC7  00CC               	movwf	display_drawCustomChar@x+1
  7903  0DC8  0021               	movlb	1	; select bank1
  7904  0DC9  0830               	movf	((_bolita+1)^(0+128)+10),w
  7905  0DCA  0020               	movlb	0	; select bank0
  7906  0DCB  00CE               	movwf	display_drawCustomChar@y+1
  7907  0DCC  0021               	movlb	1	; select bank1
  7908  0DCD  082F               	movf	(_bolita^(0+128)+10),w
  7909  0DCE  0020               	movlb	0	; select bank0
  7910  0DCF  00CD               	movwf	display_drawCustomChar@y
  7911  0DD0  30A9               	movlw	low (_bolita+4)
  7912  0DD1  00CF               	movwf	display_drawCustomChar@c
  7913  0DD2  3000               	movlw	high (_bolita+4)
  7914  0DD3  00D0               	movwf	display_drawCustomChar@c+1
  7915  0DD4  30E0               	movlw	224
  7916  0DD5  00D1               	movwf	display_drawCustomChar@color
  7917  0DD6  3007               	movlw	7
  7918  0DD7  00D2               	movwf	display_drawCustomChar@color+1
  7919  0DD8  3000               	movlw	0
  7920  0DD9  00D3               	movwf	display_drawCustomChar@bg
  7921  0DDA  00D4               	movwf	display_drawCustomChar@bg+1
  7922  0DDB  0021               	movlb	1	; select bank1
  7923  0DDC  0828               	movf	(_bolita^(0+128)+3),w
  7924  0DDD  00E1               	movwf	(??_main+2)^(0+128)
  7925  0DDE  0861               	movf	(??_main+2)^(0+128),w
  7926  0DDF  0020               	movlb	0	; select bank0
  7927  0DE0  00D5               	movwf	display_drawCustomChar@size
  7928  0DE1  3194  24D6  318C   	fcall	_display_drawCustomChar
  7929  0DE4  2CBF               	goto	l4203
  7930  0DE5                     __end_of_main:
  7931                           
  7932                           	psect	text1
  7933  1625                     __ptext1:	
  7934 ;; *************** function _tft_begin *****************
  7935 ;; Defined at:
  7936 ;;		line 94 in file "ILI9341.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  addr            2    8[COMMON] PTR const unsigned char 
  7941 ;;		 -> initcmd(111), 
  7942 ;;  cmd             1    7[COMMON] unsigned char 
  7943 ;;  x               1    6[COMMON] unsigned char 
  7944 ;;  numArgs         1    5[COMMON] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 1F/1
  7951 ;;		On exit  : 1F/1
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;Total ram usage:        7 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    6
  7961 ;; This function calls:
  7962 ;;		_SPI1_ExchangeByte
  7963 ;;		_endWrite
  7964 ;;		_startWrite
  7965 ;;		_writeCommand
  7966 ;; This function is called by:
  7967 ;;		_main
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _tft_begin
  7973  1625                     _tft_begin:
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _tft_begin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7977                           ;ILI9341.c: 98:       do { LATAbits.LATA0 = 1; } while(0);
  7978  1625  0020               	movlb	0	; select bank0
  7979  1626  1416               	bsf	22,0	;volatile
  7980                           
  7981                           ;ILI9341.c: 101:       _delay((unsigned long)((100)*(32000000/4000.0)));
  7982  1627  3005               	movlw	5
  7983  1628  00F4               	movwf	??_tft_begin+1
  7984  1629  300F               	movlw	15
  7985  162A  00F3               	movwf	??_tft_begin
  7986  162B  30F1               	movlw	241
  7987  162C                     u3787:
  7988  162C  0B89               	decfsz	9,f
  7989  162D  2E2C               	goto	u3787
  7990  162E  0BF3               	decfsz	??_tft_begin,f
  7991  162F  2E2C               	goto	u3787
  7992  1630  0BF4               	decfsz	??_tft_begin+1,f
  7993  1631  2E2C               	goto	u3787
  7994  1632  0000               	nop
  7995  1633  0020               	movlb	0	; select bank0
  7996  1634  1016               	bcf	22,0	;volatile
  7997                           
  7998                           ;ILI9341.c: 104:       _delay((unsigned long)((100)*(32000000/4000.0)));
  7999  1635  3005               	movlw	5
  8000  1636  00F4               	movwf	??_tft_begin+1
  8001  1637  300F               	movlw	15
  8002  1638  00F3               	movwf	??_tft_begin
  8003  1639  30F1               	movlw	241
  8004  163A                     u3797:
  8005  163A  0B89               	decfsz	9,f
  8006  163B  2E3A               	goto	u3797
  8007  163C  0BF3               	decfsz	??_tft_begin,f
  8008  163D  2E3A               	goto	u3797
  8009  163E  0BF4               	decfsz	??_tft_begin+1,f
  8010  163F  2E3A               	goto	u3797
  8011  1640  0000               	nop
  8012  1641  0020               	movlb	0	; select bank0
  8013  1642  1416               	bsf	22,0	;volatile
  8014                           
  8015                           ;ILI9341.c: 107:       _delay((unsigned long)((200)*(32000000/4000.0)));
  8016  1643  3009               	movlw	9
  8017  1644  00F4               	movwf	??_tft_begin+1
  8018  1645  301E               	movlw	30
  8019  1646  00F3               	movwf	??_tft_begin
  8020  1647  30E4               	movlw	228
  8021  1648                     u3807:
  8022  1648  0B89               	decfsz	9,f
  8023  1649  2E48               	goto	u3807
  8024  164A  0BF3               	decfsz	??_tft_begin,f
  8025  164B  2E48               	goto	u3807
  8026  164C  0BF4               	decfsz	??_tft_begin+1,f
  8027  164D  2E48               	goto	u3807
  8028  164E  3200               	nop2
  8029  164F  0020               	movlb	0	; select bank0
  8030  1650  1418               	bsf	24,0	;volatile
  8031                           
  8032                           ;ILI9341.c: 118:     startWrite();
  8033  1651  3191  2102  3196   	fcall	_startWrite
  8034                           
  8035                           ;ILI9341.c: 120:     uint8_t cmd, x, numArgs;;ILI9341.c: 121:     const uint8_t *addr = 
      +                          &initcmd;
  8036  1654  3000               	movlw	low (_initcmd| (0+32768))
  8037  1655  00F8               	movwf	tft_begin@addr
  8038  1656  3098               	movlw	high (_initcmd| (0+32768))
  8039  1657  00F9               	movwf	tft_begin@addr+1
  8040  1658                     l4109:	
  8041                           ;ILI9341.c: 123:     while( cmd > 0 ) {
  8042                           
  8043                           
  8044                           ;ILI9341.c: 122:     cmd = *addr++;
  8045  1658  0878               	movf	tft_begin@addr,w
  8046  1659  0084               	movwf	4
  8047  165A  0879               	movf	tft_begin@addr+1,w
  8048  165B  0085               	movwf	5
  8049  165C  0800               	movf	0,w	;code access
  8050  165D  00F3               	movwf	??_tft_begin
  8051  165E  0873               	movf	??_tft_begin,w
  8052  165F  00F7               	movwf	tft_begin@cmd
  8053  1660  3001               	movlw	1
  8054  1661  07F8               	addwf	tft_begin@addr,f
  8055  1662  3000               	movlw	0
  8056  1663  3DF9               	addwfc	tft_begin@addr+1,f
  8057                           
  8058                           ;ILI9341.c: 123:     while( cmd > 0 ) {
  8059  1664  0877               	movf	tft_begin@cmd,w
  8060  1665  1903               	btfsc	3,2
  8061  1666  2E9D               	goto	l4135
  8062                           
  8063                           ;ILI9341.c: 124:         writeCommand(cmd);
  8064  1667  0877               	movf	tft_begin@cmd,w
  8065  1668  3191  2140  3196   	fcall	_writeCommand
  8066                           
  8067                           ;ILI9341.c: 125:         x = *addr++;
  8068  166B  0878               	movf	tft_begin@addr,w
  8069  166C  0084               	movwf	4
  8070  166D  0879               	movf	tft_begin@addr+1,w
  8071  166E  0085               	movwf	5
  8072  166F  0800               	movf	0,w	;code access
  8073  1670  00F3               	movwf	??_tft_begin
  8074  1671  0873               	movf	??_tft_begin,w
  8075  1672  00F6               	movwf	tft_begin@x
  8076  1673  3001               	movlw	1
  8077  1674  07F8               	addwf	tft_begin@addr,f
  8078  1675  3000               	movlw	0
  8079  1676  3DF9               	addwfc	tft_begin@addr+1,f
  8080                           
  8081                           ;ILI9341.c: 126:         numArgs = x & 0x7F;
  8082  1677  0876               	movf	tft_begin@x,w
  8083  1678  397F               	andlw	127
  8084  1679  00F3               	movwf	??_tft_begin
  8085  167A  0873               	movf	??_tft_begin,w
  8086  167B  00F5               	movwf	tft_begin@numArgs
  8087  167C                     l4125:	
  8088                           ;ILI9341.c: 127:         while(numArgs--) SPI1_ExchangeByte(*addr++);
  8089                           
  8090  167C  3001               	movlw	1
  8091  167D  02F5               	subwf	tft_begin@numArgs,f
  8092  167E  0A75               	incf	tft_begin@numArgs,w
  8093  167F  1903               	btfsc	3,2
  8094  1680  2E8E               	goto	l910
  8095  1681  0878               	movf	tft_begin@addr,w
  8096  1682  0084               	movwf	4
  8097  1683  0879               	movf	tft_begin@addr+1,w
  8098  1684  0085               	movwf	5
  8099  1685  0800               	movf	0,w	;code access
  8100  1686  3191  2170  3196   	fcall	_SPI1_ExchangeByte
  8101  1689  3001               	movlw	1
  8102  168A  07F8               	addwf	tft_begin@addr,f
  8103  168B  3000               	movlw	0
  8104  168C  3DF9               	addwfc	tft_begin@addr+1,f
  8105  168D  2E7C               	goto	l4125
  8106  168E                     l910:
  8107                           
  8108                           ;ILI9341.c: 129:         if(x & 0x80) _delay((unsigned long)((150)*(32000000/4000.0)));
  8109  168E  1FF6               	btfss	tft_begin@x,7
  8110  168F  2E58               	goto	l4109
  8111  1690  3007               	movlw	7
  8112  1691  00F4               	movwf	??_tft_begin+1
  8113  1692  3017               	movlw	23
  8114  1693  00F3               	movwf	??_tft_begin
  8115  1694  306A               	movlw	106
  8116  1695                     u3817:
  8117  1695  0B89               	decfsz	9,f
  8118  1696  2E95               	goto	u3817
  8119  1697  0BF3               	decfsz	??_tft_begin,f
  8120  1698  2E95               	goto	u3817
  8121  1699  0BF4               	decfsz	??_tft_begin+1,f
  8122  169A  2E95               	goto	u3817
  8123  169B  3200               	nop2
  8124  169C  2E58               	goto	l4109
  8125  169D                     l4135:
  8126                           
  8127                           ;ILI9341.c: 133:     endWrite();
  8128  169D  3191  2105         	fcall	_endWrite
  8129                           
  8130                           ;ILI9341.c: 135:     _width = 240;
  8131  169F  30F0               	movlw	240
  8132  16A0  0021               	movlb	1	; select bank1
  8133  16A1  00C9               	movwf	__width^(0+128)
  8134  16A2  3000               	movlw	0
  8135  16A3  00CA               	movwf	(__width^(0+128)+1)
  8136                           
  8137                           ;ILI9341.c: 136:     _height = 320;
  8138  16A4  3040               	movlw	64
  8139  16A5  00C7               	movwf	__height^(0+128)
  8140  16A6  3001               	movlw	1
  8141  16A7  00C8               	movwf	(__height^(0+128)+1)
  8142                           
  8143                           ;ILI9341.c: 137:     rotation = 0;
  8144  16A8  01CE               	clrf	_rotation^(0+128)
  8145  16A9  0008               	return
  8146  16AA                     __end_of_tft_begin:
  8147                           
  8148                           	psect	text2
  8149  16AA                     __ptext2:	
  8150 ;; *************** function _moverJugador *****************
  8151 ;; Defined at:
  8152 ;;		line 216 in file "main.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  jugador         2   63[BANK0 ] PTR struct .
  8155 ;;		 -> jugador2(10), jugador1(10), 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  y               1   70[BANK0 ] unsigned char 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 1F/0
  8164 ;;		On exit  : 1F/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;Total ram usage:        8 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:   10
  8174 ;; This function calls:
  8175 ;;		___bmul
  8176 ;;		_display_drawCustomChar
  8177 ;; This function is called by:
  8178 ;;		_main
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _moverJugador
  8184  16AA                     _moverJugador:
  8185                           
  8186                           ;main.c: 217:     uint8_t y = 0;
  8187                           
  8188                           ;incstack = 0
  8189                           ; Regs used in _moverJugador: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8190  16AA  01E6               	clrf	moverJugador@y
  8191                           
  8192                           ;main.c: 218:     if (jugador->id) {
  8193  16AB  085F               	movf	moverJugador@jugador,w
  8194  16AC  0086               	movwf	6
  8195  16AD  0860               	movf	moverJugador@jugador+1,w
  8196  16AE  0087               	movwf	7
  8197  16AF  3143               	addfsr 1,3
  8198  16B0  0801               	movf	1,w
  8199  16B1  1903               	btfsc	3,2
  8200  16B2  2EC4               	goto	l465
  8201                           
  8202                           ;main.c: 219:         y = 320 -(jugador->escala * 8);
  8203  16B3  30F8               	movlw	248
  8204  16B4  00E1               	movwf	??_moverJugador
  8205  16B5  0861               	movf	??_moverJugador,w
  8206  16B6  00F1               	movwf	___bmul@multiplicand
  8207  16B7  085F               	movf	moverJugador@jugador,w
  8208  16B8  0086               	movwf	6
  8209  16B9  0860               	movf	moverJugador@jugador+1,w
  8210  16BA  0087               	movwf	7
  8211  16BB  3142               	addfsr 1,2
  8212  16BC  0801               	movf	1,w
  8213  16BD  3191  21BB  3196   	fcall	___bmul
  8214  16C0  3E40               	addlw	64
  8215  16C1  00E2               	movwf	??_moverJugador+1
  8216  16C2  0862               	movf	??_moverJugador+1,w
  8217  16C3  00E6               	movwf	moverJugador@y
  8218  16C4                     l465:	
  8219                           ;main.c: 220:     }
  8220                           
  8221                           
  8222                           ;main.c: 222:     display_drawCustomChar(jugador->posicion, y, jugador->forma, 0x0000, 0
      +                          x0000, jugador->escala);
  8223  16C4  085F               	movf	moverJugador@jugador,w
  8224  16C5  0086               	movwf	6
  8225  16C6  0860               	movf	moverJugador@jugador+1,w
  8226  16C7  0087               	movwf	7
  8227  16C8  3149               	addfsr 1,9
  8228  16C9  0801               	movf	1,w
  8229  16CA  00E1               	movwf	??_moverJugador
  8230  16CB  01E2               	clrf	??_moverJugador+1
  8231  16CC  0861               	movf	??_moverJugador,w
  8232  16CD  00CB               	movwf	display_drawCustomChar@x
  8233  16CE  0862               	movf	??_moverJugador+1,w
  8234  16CF  00CC               	movwf	display_drawCustomChar@x+1
  8235  16D0  0866               	movf	moverJugador@y,w
  8236  16D1  00E3               	movwf	??_moverJugador+2
  8237  16D2  01E4               	clrf	??_moverJugador+3
  8238  16D3  0863               	movf	??_moverJugador+2,w
  8239  16D4  00CD               	movwf	display_drawCustomChar@y
  8240  16D5  0864               	movf	??_moverJugador+3,w
  8241  16D6  00CE               	movwf	display_drawCustomChar@y+1
  8242  16D7  085F               	movf	moverJugador@jugador,w
  8243  16D8  3E04               	addlw	4
  8244  16D9  00CF               	movwf	display_drawCustomChar@c
  8245  16DA  3000               	movlw	0
  8246  16DB  3D60               	addwfc	moverJugador@jugador+1,w
  8247  16DC  00D0               	movwf	display_drawCustomChar@c+1
  8248  16DD  3000               	movlw	0
  8249  16DE  00D1               	movwf	display_drawCustomChar@color
  8250  16DF  00D2               	movwf	display_drawCustomChar@color+1
  8251  16E0  3000               	movlw	0
  8252  16E1  00D3               	movwf	display_drawCustomChar@bg
  8253  16E2  00D4               	movwf	display_drawCustomChar@bg+1
  8254  16E3  085F               	movf	moverJugador@jugador,w
  8255  16E4  0086               	movwf	6
  8256  16E5  0860               	movf	moverJugador@jugador+1,w
  8257  16E6  0087               	movwf	7
  8258  16E7  3142               	addfsr 1,2
  8259  16E8  0801               	movf	1,w
  8260  16E9  00E5               	movwf	??_moverJugador+4
  8261  16EA  0865               	movf	??_moverJugador+4,w
  8262  16EB  00D5               	movwf	display_drawCustomChar@size
  8263  16EC  3194  24D6  3196   	fcall	_display_drawCustomChar
  8264                           
  8265                           ;main.c: 223:     if (jugador->sentido) {
  8266  16EF  085F               	movf	moverJugador@jugador,w
  8267  16F0  0086               	movwf	6
  8268  16F1  0860               	movf	moverJugador@jugador+1,w
  8269  16F2  0087               	movwf	7
  8270  16F3  0801               	movf	1,w
  8271  16F4  1903               	btfsc	3,2
  8272  16F5  2F05               	goto	l4171
  8273                           
  8274                           ;main.c: 224:         jugador->posicion += jugador->velocidad;
  8275  16F6  085F               	movf	moverJugador@jugador,w
  8276  16F7  0086               	movwf	6
  8277  16F8  0860               	movf	moverJugador@jugador+1,w
  8278  16F9  0087               	movwf	7
  8279  16FA  3141               	addfsr 1,1
  8280  16FB  0801               	movf	1,w
  8281  16FC  00E1               	movwf	??_moverJugador
  8282  16FD  085F               	movf	moverJugador@jugador,w
  8283  16FE  0086               	movwf	6
  8284  16FF  0860               	movf	moverJugador@jugador+1,w
  8285  1700  0087               	movwf	7
  8286  1701  3149               	addfsr 1,9
  8287  1702  0861               	movf	??_moverJugador,w
  8288  1703  0781               	addwf	1,f
  8289                           
  8290                           ;main.c: 225:     } else {
  8291  1704  2F11               	goto	l4173
  8292  1705                     l4171:
  8293                           
  8294                           ;main.c: 226:         jugador->posicion -= jugador->velocidad;
  8295  1705  085F               	movf	moverJugador@jugador,w
  8296  1706  0086               	movwf	6
  8297  1707  0860               	movf	moverJugador@jugador+1,w
  8298  1708  0087               	movwf	7
  8299  1709  3141               	addfsr 1,1
  8300  170A  085F               	movf	moverJugador@jugador,w
  8301  170B  0084               	movwf	4
  8302  170C  0860               	movf	moverJugador@jugador+1,w
  8303  170D  0085               	movwf	5
  8304  170E  3109               	addfsr 0,9
  8305  170F  0801               	movf	1,w
  8306  1710  0280               	subwf	0,f
  8307  1711                     l4173:
  8308                           
  8309                           ;main.c: 228:     display_drawCustomChar(jugador->posicion, y, jugador->forma, 0x07E0, 0
      +                          x0000, jugador->escala);
  8310  1711  085F               	movf	moverJugador@jugador,w
  8311  1712  0086               	movwf	6
  8312  1713  0860               	movf	moverJugador@jugador+1,w
  8313  1714  0087               	movwf	7
  8314  1715  3149               	addfsr 1,9
  8315  1716  0801               	movf	1,w
  8316  1717  00E1               	movwf	??_moverJugador
  8317  1718  01E2               	clrf	??_moverJugador+1
  8318  1719  0861               	movf	??_moverJugador,w
  8319  171A  00CB               	movwf	display_drawCustomChar@x
  8320  171B  0862               	movf	??_moverJugador+1,w
  8321  171C  00CC               	movwf	display_drawCustomChar@x+1
  8322  171D  0866               	movf	moverJugador@y,w
  8323  171E  00E3               	movwf	??_moverJugador+2
  8324  171F  01E4               	clrf	??_moverJugador+3
  8325  1720  0863               	movf	??_moverJugador+2,w
  8326  1721  00CD               	movwf	display_drawCustomChar@y
  8327  1722  0864               	movf	??_moverJugador+3,w
  8328  1723  00CE               	movwf	display_drawCustomChar@y+1
  8329  1724  085F               	movf	moverJugador@jugador,w
  8330  1725  3E04               	addlw	4
  8331  1726  00CF               	movwf	display_drawCustomChar@c
  8332  1727  3000               	movlw	0
  8333  1728  3D60               	addwfc	moverJugador@jugador+1,w
  8334  1729  00D0               	movwf	display_drawCustomChar@c+1
  8335  172A  30E0               	movlw	224
  8336  172B  00D1               	movwf	display_drawCustomChar@color
  8337  172C  3007               	movlw	7
  8338  172D  00D2               	movwf	display_drawCustomChar@color+1
  8339  172E  3000               	movlw	0
  8340  172F  00D3               	movwf	display_drawCustomChar@bg
  8341  1730  00D4               	movwf	display_drawCustomChar@bg+1
  8342  1731  085F               	movf	moverJugador@jugador,w
  8343  1732  0086               	movwf	6
  8344  1733  0860               	movf	moverJugador@jugador+1,w
  8345  1734  0087               	movwf	7
  8346  1735  3142               	addfsr 1,2
  8347  1736  0801               	movf	1,w
  8348  1737  00E5               	movwf	??_moverJugador+4
  8349  1738  0865               	movf	??_moverJugador+4,w
  8350  1739  00D5               	movwf	display_drawCustomChar@size
  8351  173A  3194  24D6         	fcall	_display_drawCustomChar
  8352  173C  0008               	return
  8353  173D                     __end_of_moverJugador:
  8354                           
  8355                           	psect	text3
  8356  14D6                     __ptext3:	
  8357 ;; *************** function _display_drawCustomChar *****************
  8358 ;; Defined at:
  8359 ;;		line 827 in file "GFX_Library.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  x               2   43[BANK0 ] unsigned short 
  8362 ;;  y               2   45[BANK0 ] unsigned short 
  8363 ;;  c               2   47[BANK0 ] PTR unsigned char 
  8364 ;;		 -> bolita(12), jugador2(10), jugador1(10), 
  8365 ;;  color           2   49[BANK0 ] unsigned short 
  8366 ;;  bg              2   51[BANK0 ] unsigned short 
  8367 ;;  size            1   53[BANK0 ] unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  prev_bg         2   60[BANK0 ] unsigned short 
  8370 ;;  prev_color      2   58[BANK0 ] unsigned short 
  8371 ;;  prev_y          2   56[BANK0 ] unsigned short 
  8372 ;;  prev_x          2   54[BANK0 ] unsigned short 
  8373 ;;  prev_size       1   62[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 1F/0
  8380 ;;		On exit  : 1F/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         1      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:       21 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    9
  8390 ;; This function calls:
  8391 ;;		_display_customChar
  8392 ;;		_display_setCursor
  8393 ;;		_display_setTextColor
  8394 ;;		_display_setTextSize
  8395 ;; This function is called by:
  8396 ;;		_main
  8397 ;;		_moverJugador
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function _display_drawCustomChar
  8403  14D6                     _display_drawCustomChar:
  8404                           
  8405                           ;GFX_Library.c: 827: void display_drawCustomChar(uint16_t x, uint16_t y, uint8_t c[5], u
      +                          int16_t color, uint16_t bg,;GFX_Library.c: 828:      uint8_t size) {;GFX_Library.c: 829:
      +                             uint16_t prev_x = cursor_x,
  8406                           
  8407                           ;incstack = 0
  8408                           ; Regs used in _display_drawCustomChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8409  14D6  0021               	movlb	1	; select bank1
  8410  14D7  0846               	movf	(_cursor_x+1)^(0+128),w
  8411  14D8  0020               	movlb	0	; select bank0
  8412  14D9  00D7               	movwf	display_drawCustomChar@prev_x+1
  8413  14DA  0021               	movlb	1	; select bank1
  8414  14DB  0845               	movf	_cursor_x^(0+128),w
  8415  14DC  0020               	movlb	0	; select bank0
  8416  14DD  00D6               	movwf	display_drawCustomChar@prev_x
  8417                           
  8418                           ;GFX_Library.c: 830:            prev_y = cursor_y,
  8419  14DE  0021               	movlb	1	; select bank1
  8420  14DF  0844               	movf	(_cursor_y+1)^(0+128),w
  8421  14E0  0020               	movlb	0	; select bank0
  8422  14E1  00D9               	movwf	display_drawCustomChar@prev_y+1
  8423  14E2  0021               	movlb	1	; select bank1
  8424  14E3  0843               	movf	_cursor_y^(0+128),w
  8425  14E4  0020               	movlb	0	; select bank0
  8426  14E5  00D8               	movwf	display_drawCustomChar@prev_y
  8427                           
  8428                           ;GFX_Library.c: 831:            prev_color = textcolor,
  8429  14E6  0021               	movlb	1	; select bank1
  8430  14E7  0823               	movf	(_textcolor+1)^(0+128),w
  8431  14E8  0020               	movlb	0	; select bank0
  8432  14E9  00DB               	movwf	display_drawCustomChar@prev_color+1
  8433  14EA  0021               	movlb	1	; select bank1
  8434  14EB  0822               	movf	_textcolor^(0+128),w
  8435  14EC  0020               	movlb	0	; select bank0
  8436  14ED  00DA               	movwf	display_drawCustomChar@prev_color
  8437                           
  8438                           ;GFX_Library.c: 832:            prev_bg = textbgcolor;
  8439  14EE  0021               	movlb	1	; select bank1
  8440  14EF  0821               	movf	(_textbgcolor+1)^(0+128),w
  8441  14F0  0020               	movlb	0	; select bank0
  8442  14F1  00DD               	movwf	display_drawCustomChar@prev_bg+1
  8443  14F2  0021               	movlb	1	; select bank1
  8444  14F3  0820               	movf	_textbgcolor^(0+128),w
  8445  14F4  0020               	movlb	0	; select bank0
  8446  14F5  00DC               	movwf	display_drawCustomChar@prev_bg
  8447                           
  8448                           ;GFX_Library.c: 833:   uint8_t prev_size = textsize;
  8449  14F6  086F               	movf	_textsize,w
  8450  14F7  00FB               	movwf	??_display_drawCustomChar
  8451  14F8  087B               	movf	??_display_drawCustomChar,w
  8452  14F9  00DE               	movwf	display_drawCustomChar@prev_size
  8453                           
  8454                           ;GFX_Library.c: 835:   display_setCursor(x, y);
  8455  14FA  084C               	movf	display_drawCustomChar@x+1,w
  8456  14FB  00F2               	movwf	display_setCursor@x+1
  8457  14FC  084B               	movf	display_drawCustomChar@x,w
  8458  14FD  00F1               	movwf	display_setCursor@x
  8459  14FE  084E               	movf	display_drawCustomChar@y+1,w
  8460  14FF  00F4               	movwf	display_setCursor@y+1
  8461  1500  084D               	movf	display_drawCustomChar@y,w
  8462  1501  00F3               	movwf	display_setCursor@y
  8463  1502  3191  2152  3194   	fcall	_display_setCursor
  8464                           
  8465                           ;GFX_Library.c: 836:   display_setTextSize(size);
  8466  1505  0020               	movlb	0	; select bank0
  8467  1506  0855               	movf	display_drawCustomChar@size,w
  8468  1507  3191  21F6  3194   	fcall	_display_setTextSize
  8469                           
  8470                           ;GFX_Library.c: 837:   display_setTextColor(color, bg);
  8471  150A  0852               	movf	display_drawCustomChar@color+1,w
  8472  150B  00F2               	movwf	display_setTextColor@c+1
  8473  150C  0851               	movf	display_drawCustomChar@color,w
  8474  150D  00F1               	movwf	display_setTextColor@c
  8475  150E  0854               	movf	display_drawCustomChar@bg+1,w
  8476  150F  00F4               	movwf	display_setTextColor@bg+1
  8477  1510  0853               	movf	display_drawCustomChar@bg,w
  8478  1511  00F3               	movwf	display_setTextColor@bg
  8479  1512  3191  215C  3194   	fcall	_display_setTextColor
  8480                           
  8481                           ;GFX_Library.c: 838:   display_customChar(c);
  8482  1515  0020               	movlb	0	; select bank0
  8483  1516  0850               	movf	display_drawCustomChar@c+1,w
  8484  1517  00BB               	movwf	display_customChar@c+1
  8485  1518  084F               	movf	display_drawCustomChar@c,w
  8486  1519  00BA               	movwf	display_customChar@c
  8487  151A  318D  25E5         	fcall	_display_customChar
  8488                           
  8489                           ;GFX_Library.c: 841:   cursor_x = prev_x;
  8490  151C  0020               	movlb	0	; select bank0
  8491  151D  0857               	movf	display_drawCustomChar@prev_x+1,w
  8492  151E  0021               	movlb	1	; select bank1
  8493  151F  00C6               	movwf	(_cursor_x+1)^(0+128)
  8494  1520  0020               	movlb	0	; select bank0
  8495  1521  0856               	movf	display_drawCustomChar@prev_x,w
  8496  1522  0021               	movlb	1	; select bank1
  8497  1523  00C5               	movwf	_cursor_x^(0+128)
  8498                           
  8499                           ;GFX_Library.c: 842:   cursor_y = prev_y;
  8500  1524  0020               	movlb	0	; select bank0
  8501  1525  0859               	movf	display_drawCustomChar@prev_y+1,w
  8502  1526  0021               	movlb	1	; select bank1
  8503  1527  00C4               	movwf	(_cursor_y+1)^(0+128)
  8504  1528  0020               	movlb	0	; select bank0
  8505  1529  0858               	movf	display_drawCustomChar@prev_y,w
  8506  152A  0021               	movlb	1	; select bank1
  8507  152B  00C3               	movwf	_cursor_y^(0+128)
  8508                           
  8509                           ;GFX_Library.c: 843:   textcolor = prev_color;
  8510  152C  0020               	movlb	0	; select bank0
  8511  152D  085B               	movf	display_drawCustomChar@prev_color+1,w
  8512  152E  0021               	movlb	1	; select bank1
  8513  152F  00A3               	movwf	(_textcolor+1)^(0+128)
  8514  1530  0020               	movlb	0	; select bank0
  8515  1531  085A               	movf	display_drawCustomChar@prev_color,w
  8516  1532  0021               	movlb	1	; select bank1
  8517  1533  00A2               	movwf	_textcolor^(0+128)
  8518                           
  8519                           ;GFX_Library.c: 844:   textbgcolor = prev_bg;
  8520  1534  0020               	movlb	0	; select bank0
  8521  1535  085D               	movf	display_drawCustomChar@prev_bg+1,w
  8522  1536  0021               	movlb	1	; select bank1
  8523  1537  00A1               	movwf	(_textbgcolor+1)^(0+128)
  8524  1538  0020               	movlb	0	; select bank0
  8525  1539  085C               	movf	display_drawCustomChar@prev_bg,w
  8526  153A  0021               	movlb	1	; select bank1
  8527  153B  00A0               	movwf	_textbgcolor^(0+128)
  8528                           
  8529                           ;GFX_Library.c: 845:   textsize = prev_size;
  8530  153C  0020               	movlb	0	; select bank0
  8531  153D  085E               	movf	display_drawCustomChar@prev_size,w
  8532  153E  00FB               	movwf	??_display_drawCustomChar
  8533  153F  087B               	movf	??_display_drawCustomChar,w
  8534  1540  00EF               	movwf	_textsize
  8535  1541  0008               	return
  8536  1542                     __end_of_display_drawCustomChar:
  8537                           
  8538                           	psect	text4
  8539  0DE5                     __ptext4:	
  8540 ;; *************** function _display_customChar *****************
  8541 ;; Defined at:
  8542 ;;		line 515 in file "GFX_Library.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  c               2   26[BANK0 ] PTR const unsigned char 
  8545 ;;		 -> bolita(12), jugador2(10), jugador1(10), 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  j               1   41[BANK0 ] unsigned char 
  8548 ;;  line            1   40[BANK0 ] unsigned char 
  8549 ;;  i               1   42[BANK0 ] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 1F/0
  8556 ;;		On exit  : 1E/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8561 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;Total ram usage:       17 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    8
  8566 ;; This function calls:
  8567 ;;		___wmul
  8568 ;;		_drawPixel
  8569 ;;		_drawVLine
  8570 ;;		_fillRect
  8571 ;; This function is called by:
  8572 ;;		_display_drawCustomChar
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           
  8577                           ;psect for function _display_customChar
  8578  0DE5                     _display_customChar:
  8579                           
  8580                           ;GFX_Library.c: 517:   for(uint8_t i = 0; i < 5; i++ ) {
  8581                           
  8582                           ;incstack = 0
  8583                           ; Regs used in _display_customChar: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8584  0DE5  01CA               	clrf	display_customChar@i
  8585  0DE6                     l3971:
  8586                           
  8587                           ;GFX_Library.c: 518:     uint8_t line = c[i];
  8588  0DE6  084A               	movf	display_customChar@i,w
  8589  0DE7  00BC               	movwf	??_display_customChar
  8590  0DE8  01BD               	clrf	??_display_customChar+1
  8591  0DE9  083C               	movf	??_display_customChar,w
  8592  0DEA  073A               	addwf	display_customChar@c,w
  8593  0DEB  0086               	movwf	6
  8594  0DEC  083D               	movf	??_display_customChar+1,w
  8595  0DED  3D3B               	addwfc	display_customChar@c+1,w
  8596  0DEE  0087               	movwf	7
  8597  0DEF  0801               	movf	1,w
  8598  0DF0  00BE               	movwf	??_display_customChar+2
  8599  0DF1  083E               	movf	??_display_customChar+2,w
  8600  0DF2  00C8               	movwf	display_customChar@line
  8601                           
  8602                           ;GFX_Library.c: 519:     for(uint8_t j = 0; j < 8; j++, line >>= 1) {
  8603  0DF3  01C9               	clrf	display_customChar@j
  8604  0DF4                     l760:
  8605                           
  8606                           ;GFX_Library.c: 520:       if(line & 1) {
  8607  0DF4  1C48               	btfss	display_customChar@line,0
  8608  0DF5  2E66               	goto	l3985
  8609                           
  8610                           ;GFX_Library.c: 521:         if(textsize == 1)
  8611  0DF6  036F               	decf	_textsize,w
  8612  0DF7  1D03               	btfss	3,2
  8613  0DF8  2E1B               	goto	l3983
  8614                           
  8615                           ;GFX_Library.c: 522:           drawPixel(cursor_x + i, cursor_y + j, textcolor);
  8616  0DF9  084A               	movf	display_customChar@i,w
  8617  0DFA  0021               	movlb	1	; select bank1
  8618  0DFB  0745               	addwf	_cursor_x^(0+128),w
  8619  0DFC  0020               	movlb	0	; select bank0
  8620  0DFD  00A6               	movwf	drawPixel@x
  8621  0DFE  0021               	movlb	1	; select bank1
  8622  0DFF  0846               	movf	(_cursor_x+1)^(0+128),w
  8623  0E00  1803               	skipnc
  8624  0E01  0A46               	incf	(_cursor_x+1)^(0+128),w
  8625  0E02  0020               	movlb	0	; select bank0
  8626  0E03  00A7               	movwf	drawPixel@x+1
  8627  0E04  0849               	movf	display_customChar@j,w
  8628  0E05  0021               	movlb	1	; select bank1
  8629  0E06  0743               	addwf	_cursor_y^(0+128),w
  8630  0E07  0020               	movlb	0	; select bank0
  8631  0E08  00A8               	movwf	drawPixel@y
  8632  0E09  0021               	movlb	1	; select bank1
  8633  0E0A  0844               	movf	(_cursor_y+1)^(0+128),w
  8634  0E0B  1803               	skipnc
  8635  0E0C  0A44               	incf	(_cursor_y+1)^(0+128),w
  8636  0E0D  0020               	movlb	0	; select bank0
  8637  0E0E  00A9               	movwf	drawPixel@y+1
  8638  0E0F  0021               	movlb	1	; select bank1
  8639  0E10  0823               	movf	(_textcolor+1)^(0+128),w
  8640  0E11  0020               	movlb	0	; select bank0
  8641  0E12  00AB               	movwf	drawPixel@color+1
  8642  0E13  0021               	movlb	1	; select bank1
  8643  0E14  0822               	movf	_textcolor^(0+128),w
  8644  0E15  0020               	movlb	0	; select bank0
  8645  0E16  00AA               	movwf	drawPixel@color
  8646  0E17  3193  232B  318D   	fcall	_drawPixel
  8647  0E1A  2EE4               	goto	l3993
  8648  0E1B                     l3983:
  8649                           
  8650                           ;GFX_Library.c: 524:           fillRect(cursor_x + i * textsize, cursor_y + j * textsize
      +                          , textsize, textsize, textcolor);
  8651  0E1B  084A               	movf	display_customChar@i,w
  8652  0E1C  00BC               	movwf	??_display_customChar
  8653  0E1D  01BD               	clrf	??_display_customChar+1
  8654  0E1E  083C               	movf	??_display_customChar,w
  8655  0E1F  00F1               	movwf	___wmul@multiplier
  8656  0E20  083D               	movf	??_display_customChar+1,w
  8657  0E21  00F2               	movwf	___wmul@multiplier+1
  8658  0E22  086F               	movf	_textsize,w
  8659  0E23  00BE               	movwf	??_display_customChar+2
  8660  0E24  01BF               	clrf	??_display_customChar+3
  8661  0E25  083E               	movf	??_display_customChar+2,w
  8662  0E26  00F3               	movwf	___wmul@multiplicand
  8663  0E27  083F               	movf	??_display_customChar+3,w
  8664  0E28  00F4               	movwf	___wmul@multiplicand+1
  8665  0E29  3192  223A  318D   	fcall	___wmul
  8666  0E2C  0021               	movlb	1	; select bank1
  8667  0E2D  0845               	movf	_cursor_x^(0+128),w
  8668  0E2E  0771               	addwf	?___wmul,w
  8669  0E2F  0020               	movlb	0	; select bank0
  8670  0E30  00A6               	movwf	fillRect@x
  8671  0E31  0021               	movlb	1	; select bank1
  8672  0E32  0846               	movf	(_cursor_x+1)^(0+128),w
  8673  0E33  3D72               	addwfc	?___wmul+1,w
  8674  0E34  0020               	movlb	0	; select bank0
  8675  0E35  00A7               	movwf	fillRect@x+1
  8676  0E36  0849               	movf	display_customChar@j,w
  8677  0E37  00C0               	movwf	??_display_customChar+4
  8678  0E38  01C1               	clrf	??_display_customChar+5
  8679  0E39  0840               	movf	??_display_customChar+4,w
  8680  0E3A  00F1               	movwf	___wmul@multiplier
  8681  0E3B  0841               	movf	??_display_customChar+5,w
  8682  0E3C  00F2               	movwf	___wmul@multiplier+1
  8683  0E3D  086F               	movf	_textsize,w
  8684  0E3E  00C2               	movwf	??_display_customChar+6
  8685  0E3F  01C3               	clrf	??_display_customChar+7
  8686  0E40  0842               	movf	??_display_customChar+6,w
  8687  0E41  00F3               	movwf	___wmul@multiplicand
  8688  0E42  0843               	movf	??_display_customChar+7,w
  8689  0E43  00F4               	movwf	___wmul@multiplicand+1
  8690  0E44  3192  223A  318D   	fcall	___wmul
  8691  0E47  0021               	movlb	1	; select bank1
  8692  0E48  0843               	movf	_cursor_y^(0+128),w
  8693  0E49  0771               	addwf	?___wmul,w
  8694  0E4A  0020               	movlb	0	; select bank0
  8695  0E4B  00A8               	movwf	fillRect@y
  8696  0E4C  0021               	movlb	1	; select bank1
  8697  0E4D  0844               	movf	(_cursor_y+1)^(0+128),w
  8698  0E4E  3D72               	addwfc	?___wmul+1,w
  8699  0E4F  0020               	movlb	0	; select bank0
  8700  0E50  00A9               	movwf	fillRect@y+1
  8701  0E51  086F               	movf	_textsize,w
  8702  0E52  00C4               	movwf	??_display_customChar+8
  8703  0E53  01C5               	clrf	??_display_customChar+9
  8704  0E54  0844               	movf	??_display_customChar+8,w
  8705  0E55  00AA               	movwf	fillRect@w
  8706  0E56  0845               	movf	??_display_customChar+9,w
  8707  0E57  00AB               	movwf	fillRect@w+1
  8708  0E58  086F               	movf	_textsize,w
  8709  0E59  00C6               	movwf	??_display_customChar+10
  8710  0E5A  01C7               	clrf	??_display_customChar+11
  8711  0E5B  0846               	movf	??_display_customChar+10,w
  8712  0E5C  00AC               	movwf	fillRect@h
  8713  0E5D  0847               	movf	??_display_customChar+11,w
  8714  0E5E  00AD               	movwf	fillRect@h+1
  8715  0E5F  0021               	movlb	1	; select bank1
  8716  0E60  0823               	movf	(_textcolor+1)^(0+128),w
  8717  0E61  0020               	movlb	0	; select bank0
  8718  0E62  00AF               	movwf	fillRect@color+1
  8719  0E63  0021               	movlb	1	; select bank1
  8720  0E64  0822               	movf	_textcolor^(0+128),w
  8721  0E65  2EDF               	goto	L2
  8722  0E66                     l3985:
  8723                           
  8724                           ;GFX_Library.c: 527:         if(textbgcolor != textcolor) {
  8725  0E66  0021               	movlb	1	; select bank1
  8726  0E67  0823               	movf	(_textcolor+1)^(0+128),w
  8727  0E68  0621               	xorwf	(_textbgcolor+1)^(0+128),w
  8728  0E69  1D03               	skipz
  8729  0E6A  2E6D               	goto	u3445
  8730  0E6B  0822               	movf	_textcolor^(0+128),w
  8731  0E6C  0620               	xorwf	_textbgcolor^(0+128),w
  8732  0E6D                     u3445:
  8733  0E6D  1903               	skipnz
  8734  0E6E  2EE4               	goto	l3993
  8735                           
  8736                           ;GFX_Library.c: 528:           if(textsize == 1)
  8737  0E6F  0020               	movlb	0	; select bank0
  8738  0E70  036F               	decf	_textsize,w
  8739  0E71  1D03               	btfss	3,2
  8740  0E72  2E95               	goto	l3991
  8741                           
  8742                           ;GFX_Library.c: 529:             drawPixel(cursor_x + i, cursor_y + j, textbgcolor);
  8743  0E73  084A               	movf	display_customChar@i,w
  8744  0E74  0021               	movlb	1	; select bank1
  8745  0E75  0745               	addwf	_cursor_x^(0+128),w
  8746  0E76  0020               	movlb	0	; select bank0
  8747  0E77  00A6               	movwf	drawPixel@x
  8748  0E78  0021               	movlb	1	; select bank1
  8749  0E79  0846               	movf	(_cursor_x+1)^(0+128),w
  8750  0E7A  1803               	skipnc
  8751  0E7B  0A46               	incf	(_cursor_x+1)^(0+128),w
  8752  0E7C  0020               	movlb	0	; select bank0
  8753  0E7D  00A7               	movwf	drawPixel@x+1
  8754  0E7E  0849               	movf	display_customChar@j,w
  8755  0E7F  0021               	movlb	1	; select bank1
  8756  0E80  0743               	addwf	_cursor_y^(0+128),w
  8757  0E81  0020               	movlb	0	; select bank0
  8758  0E82  00A8               	movwf	drawPixel@y
  8759  0E83  0021               	movlb	1	; select bank1
  8760  0E84  0844               	movf	(_cursor_y+1)^(0+128),w
  8761  0E85  1803               	skipnc
  8762  0E86  0A44               	incf	(_cursor_y+1)^(0+128),w
  8763  0E87  0020               	movlb	0	; select bank0
  8764  0E88  00A9               	movwf	drawPixel@y+1
  8765  0E89  0021               	movlb	1	; select bank1
  8766  0E8A  0821               	movf	(_textbgcolor+1)^(0+128),w
  8767  0E8B  0020               	movlb	0	; select bank0
  8768  0E8C  00AB               	movwf	drawPixel@color+1
  8769  0E8D  0021               	movlb	1	; select bank1
  8770  0E8E  0820               	movf	_textbgcolor^(0+128),w
  8771  0E8F  0020               	movlb	0	; select bank0
  8772  0E90  00AA               	movwf	drawPixel@color
  8773  0E91  3193  232B  318D   	fcall	_drawPixel
  8774  0E94  2EE4               	goto	l3993
  8775  0E95                     l3991:
  8776                           
  8777                           ;GFX_Library.c: 531:             fillRect(cursor_x + i * textsize, cursor_y + j * textsi
      +                          ze, textsize, textsize, textbgcolor);
  8778  0E95  084A               	movf	display_customChar@i,w
  8779  0E96  00BC               	movwf	??_display_customChar
  8780  0E97  01BD               	clrf	??_display_customChar+1
  8781  0E98  083C               	movf	??_display_customChar,w
  8782  0E99  00F1               	movwf	___wmul@multiplier
  8783  0E9A  083D               	movf	??_display_customChar+1,w
  8784  0E9B  00F2               	movwf	___wmul@multiplier+1
  8785  0E9C  086F               	movf	_textsize,w
  8786  0E9D  00BE               	movwf	??_display_customChar+2
  8787  0E9E  01BF               	clrf	??_display_customChar+3
  8788  0E9F  083E               	movf	??_display_customChar+2,w
  8789  0EA0  00F3               	movwf	___wmul@multiplicand
  8790  0EA1  083F               	movf	??_display_customChar+3,w
  8791  0EA2  00F4               	movwf	___wmul@multiplicand+1
  8792  0EA3  3192  223A  318D   	fcall	___wmul
  8793  0EA6  0021               	movlb	1	; select bank1
  8794  0EA7  0845               	movf	_cursor_x^(0+128),w
  8795  0EA8  0771               	addwf	?___wmul,w
  8796  0EA9  0020               	movlb	0	; select bank0
  8797  0EAA  00A6               	movwf	fillRect@x
  8798  0EAB  0021               	movlb	1	; select bank1
  8799  0EAC  0846               	movf	(_cursor_x+1)^(0+128),w
  8800  0EAD  3D72               	addwfc	?___wmul+1,w
  8801  0EAE  0020               	movlb	0	; select bank0
  8802  0EAF  00A7               	movwf	fillRect@x+1
  8803  0EB0  0849               	movf	display_customChar@j,w
  8804  0EB1  00C0               	movwf	??_display_customChar+4
  8805  0EB2  01C1               	clrf	??_display_customChar+5
  8806  0EB3  0840               	movf	??_display_customChar+4,w
  8807  0EB4  00F1               	movwf	___wmul@multiplier
  8808  0EB5  0841               	movf	??_display_customChar+5,w
  8809  0EB6  00F2               	movwf	___wmul@multiplier+1
  8810  0EB7  086F               	movf	_textsize,w
  8811  0EB8  00C2               	movwf	??_display_customChar+6
  8812  0EB9  01C3               	clrf	??_display_customChar+7
  8813  0EBA  0842               	movf	??_display_customChar+6,w
  8814  0EBB  00F3               	movwf	___wmul@multiplicand
  8815  0EBC  0843               	movf	??_display_customChar+7,w
  8816  0EBD  00F4               	movwf	___wmul@multiplicand+1
  8817  0EBE  3192  223A  318D   	fcall	___wmul
  8818  0EC1  0021               	movlb	1	; select bank1
  8819  0EC2  0843               	movf	_cursor_y^(0+128),w
  8820  0EC3  0771               	addwf	?___wmul,w
  8821  0EC4  0020               	movlb	0	; select bank0
  8822  0EC5  00A8               	movwf	fillRect@y
  8823  0EC6  0021               	movlb	1	; select bank1
  8824  0EC7  0844               	movf	(_cursor_y+1)^(0+128),w
  8825  0EC8  3D72               	addwfc	?___wmul+1,w
  8826  0EC9  0020               	movlb	0	; select bank0
  8827  0ECA  00A9               	movwf	fillRect@y+1
  8828  0ECB  086F               	movf	_textsize,w
  8829  0ECC  00C4               	movwf	??_display_customChar+8
  8830  0ECD  01C5               	clrf	??_display_customChar+9
  8831  0ECE  0844               	movf	??_display_customChar+8,w
  8832  0ECF  00AA               	movwf	fillRect@w
  8833  0ED0  0845               	movf	??_display_customChar+9,w
  8834  0ED1  00AB               	movwf	fillRect@w+1
  8835  0ED2  086F               	movf	_textsize,w
  8836  0ED3  00C6               	movwf	??_display_customChar+10
  8837  0ED4  01C7               	clrf	??_display_customChar+11
  8838  0ED5  0846               	movf	??_display_customChar+10,w
  8839  0ED6  00AC               	movwf	fillRect@h
  8840  0ED7  0847               	movf	??_display_customChar+11,w
  8841  0ED8  00AD               	movwf	fillRect@h+1
  8842  0ED9  0021               	movlb	1	; select bank1
  8843  0EDA  0821               	movf	(_textbgcolor+1)^(0+128),w
  8844  0EDB  0020               	movlb	0	; select bank0
  8845  0EDC  00AF               	movwf	fillRect@color+1
  8846  0EDD  0021               	movlb	1	; select bank1
  8847  0EDE  0820               	movf	_textbgcolor^(0+128),w
  8848  0EDF                     L2:
  8849  0EDF  0020               	movlb	0	; select bank0
  8850  0EE0  00AE               	movwf	fillRect@color
  8851  0EE1  3197  273D  318D   	fcall	_fillRect
  8852  0EE4                     l3993:
  8853                           
  8854                           ;GFX_Library.c: 533:     }
  8855  0EE4  3001               	movlw	1
  8856  0EE5  0020               	movlb	0	; select bank0
  8857  0EE6  00BC               	movwf	??_display_customChar
  8858  0EE7  083C               	movf	??_display_customChar,w
  8859  0EE8  07C9               	addwf	display_customChar@j,f
  8860  0EE9  1003               	clrc
  8861  0EEA  0CC8               	rrf	display_customChar@line,f
  8862  0EEB  3008               	movlw	8
  8863  0EEC  0249               	subwf	display_customChar@j,w
  8864  0EED  1C03               	skipc
  8865  0EEE  2DF4               	goto	l760
  8866                           
  8867                           ;GFX_Library.c: 534:   }
  8868  0EEF  3001               	movlw	1
  8869  0EF0  00BC               	movwf	??_display_customChar
  8870  0EF1  083C               	movf	??_display_customChar,w
  8871  0EF2  07CA               	addwf	display_customChar@i,f
  8872  0EF3  3005               	movlw	5
  8873  0EF4  024A               	subwf	display_customChar@i,w
  8874  0EF5  1C03               	skipc
  8875  0EF6  2DE6               	goto	l3971
  8876                           
  8877                           ;GFX_Library.c: 536:   if(textbgcolor != textcolor) {
  8878  0EF7  0021               	movlb	1	; select bank1
  8879  0EF8  0823               	movf	(_textcolor+1)^(0+128),w
  8880  0EF9  0621               	xorwf	(_textbgcolor+1)^(0+128),w
  8881  0EFA  1D03               	skipz
  8882  0EFB  2EFE               	goto	u3485
  8883  0EFC  0822               	movf	_textcolor^(0+128),w
  8884  0EFD  0620               	xorwf	_textbgcolor^(0+128),w
  8885  0EFE                     u3485:
  8886  0EFE  1903               	skipnz
  8887  0EFF  2F65               	goto	l769
  8888                           
  8889                           ;GFX_Library.c: 537:     if(textsize == 1) drawVLine(cursor_x + 5, cursor_y, 8, textbgco
      +                          lor);
  8890  0F00  0020               	movlb	0	; select bank0
  8891  0F01  036F               	decf	_textsize,w
  8892  0F02  1D03               	btfss	3,2
  8893  0F03  2F26               	goto	l4009
  8894  0F04  0021               	movlb	1	; select bank1
  8895  0F05  0845               	movf	_cursor_x^(0+128),w
  8896  0F06  3E05               	addlw	5
  8897  0F07  0020               	movlb	0	; select bank0
  8898  0F08  00A6               	movwf	drawVLine@x
  8899  0F09  3000               	movlw	0
  8900  0F0A  0021               	movlb	1	; select bank1
  8901  0F0B  3D46               	addwfc	(_cursor_x+1)^(0+128),w
  8902  0F0C  0020               	movlb	0	; select bank0
  8903  0F0D  00A7               	movwf	drawVLine@x+1
  8904  0F0E  0021               	movlb	1	; select bank1
  8905  0F0F  0844               	movf	(_cursor_y+1)^(0+128),w
  8906  0F10  0020               	movlb	0	; select bank0
  8907  0F11  00A9               	movwf	drawVLine@y+1
  8908  0F12  0021               	movlb	1	; select bank1
  8909  0F13  0843               	movf	_cursor_y^(0+128),w
  8910  0F14  0020               	movlb	0	; select bank0
  8911  0F15  00A8               	movwf	drawVLine@y
  8912  0F16  3008               	movlw	8
  8913  0F17  00AA               	movwf	drawVLine@h
  8914  0F18  3000               	movlw	0
  8915  0F19  00AB               	movwf	drawVLine@h+1
  8916  0F1A  0021               	movlb	1	; select bank1
  8917  0F1B  0821               	movf	(_textbgcolor+1)^(0+128),w
  8918  0F1C  0020               	movlb	0	; select bank0
  8919  0F1D  00AD               	movwf	drawVLine@color+1
  8920  0F1E  0021               	movlb	1	; select bank1
  8921  0F1F  0820               	movf	_textbgcolor^(0+128),w
  8922  0F20  0020               	movlb	0	; select bank0
  8923  0F21  00AC               	movwf	drawVLine@color
  8924  0F22  3195  25B2  318D   	fcall	_drawVLine
  8925  0F25  2F65               	goto	l769
  8926  0F26                     l4009:
  8927  0F26  086F               	movf	_textsize,w
  8928  0F27  00BC               	movwf	??_display_customChar
  8929  0F28  01BD               	clrf	??_display_customChar+1
  8930  0F29  083C               	movf	??_display_customChar,w
  8931  0F2A  00F1               	movwf	___wmul@multiplier
  8932  0F2B  083D               	movf	??_display_customChar+1,w
  8933  0F2C  00F2               	movwf	___wmul@multiplier+1
  8934  0F2D  3005               	movlw	5
  8935  0F2E  00F3               	movwf	___wmul@multiplicand
  8936  0F2F  3000               	movlw	0
  8937  0F30  00F4               	movwf	___wmul@multiplicand+1
  8938  0F31  3192  223A  318D   	fcall	___wmul
  8939  0F34  0021               	movlb	1	; select bank1
  8940  0F35  0845               	movf	_cursor_x^(0+128),w
  8941  0F36  0771               	addwf	?___wmul,w
  8942  0F37  0020               	movlb	0	; select bank0
  8943  0F38  00A6               	movwf	fillRect@x
  8944  0F39  0021               	movlb	1	; select bank1
  8945  0F3A  0846               	movf	(_cursor_x+1)^(0+128),w
  8946  0F3B  3D72               	addwfc	?___wmul+1,w
  8947  0F3C  0020               	movlb	0	; select bank0
  8948  0F3D  00A7               	movwf	fillRect@x+1
  8949  0F3E  0021               	movlb	1	; select bank1
  8950  0F3F  0844               	movf	(_cursor_y+1)^(0+128),w
  8951  0F40  0020               	movlb	0	; select bank0
  8952  0F41  00A9               	movwf	fillRect@y+1
  8953  0F42  0021               	movlb	1	; select bank1
  8954  0F43  0843               	movf	_cursor_y^(0+128),w
  8955  0F44  0020               	movlb	0	; select bank0
  8956  0F45  00A8               	movwf	fillRect@y
  8957  0F46  086F               	movf	_textsize,w
  8958  0F47  00BE               	movwf	??_display_customChar+2
  8959  0F48  01BF               	clrf	??_display_customChar+3
  8960  0F49  083E               	movf	??_display_customChar+2,w
  8961  0F4A  00AA               	movwf	fillRect@w
  8962  0F4B  083F               	movf	??_display_customChar+3,w
  8963  0F4C  00AB               	movwf	fillRect@w+1
  8964  0F4D  086F               	movf	_textsize,w
  8965  0F4E  00C0               	movwf	??_display_customChar+4
  8966  0F4F  01C1               	clrf	??_display_customChar+5
  8967  0F50  35C0               	lslf	??_display_customChar+4,f
  8968  0F51  0DC1               	rlf	??_display_customChar+5,f
  8969  0F52  35C0               	lslf	??_display_customChar+4,f
  8970  0F53  0DC1               	rlf	??_display_customChar+5,f
  8971  0F54  35C0               	lslf	??_display_customChar+4,f
  8972  0F55  0DC1               	rlf	??_display_customChar+5,f
  8973  0F56  0840               	movf	??_display_customChar+4,w
  8974  0F57  00AC               	movwf	fillRect@h
  8975  0F58  0841               	movf	??_display_customChar+5,w
  8976  0F59  00AD               	movwf	fillRect@h+1
  8977  0F5A  0021               	movlb	1	; select bank1
  8978  0F5B  0821               	movf	(_textbgcolor+1)^(0+128),w
  8979  0F5C  0020               	movlb	0	; select bank0
  8980  0F5D  00AF               	movwf	fillRect@color+1
  8981  0F5E  0021               	movlb	1	; select bank1
  8982  0F5F  0820               	movf	_textbgcolor^(0+128),w
  8983  0F60  0020               	movlb	0	; select bank0
  8984  0F61  00AE               	movwf	fillRect@color
  8985  0F62  3197  273D  318D   	fcall	_fillRect
  8986  0F65                     l769:	
  8987                           ;GFX_Library.c: 539:   }
  8988                           
  8989                           
  8990                           ;GFX_Library.c: 541:   cursor_x += textsize * 6;
  8991  0F65  0020               	movlb	0	; select bank0
  8992  0F66  086F               	movf	_textsize,w
  8993  0F67  00BC               	movwf	??_display_customChar
  8994  0F68  01BD               	clrf	??_display_customChar+1
  8995  0F69  083C               	movf	??_display_customChar,w
  8996  0F6A  00F1               	movwf	___wmul@multiplier
  8997  0F6B  083D               	movf	??_display_customChar+1,w
  8998  0F6C  00F2               	movwf	___wmul@multiplier+1
  8999  0F6D  3006               	movlw	6
  9000  0F6E  00F3               	movwf	___wmul@multiplicand
  9001  0F6F  3000               	movlw	0
  9002  0F70  00F4               	movwf	___wmul@multiplicand+1
  9003  0F71  3192  223A  318D   	fcall	___wmul
  9004  0F74  0871               	movf	?___wmul,w
  9005  0F75  0021               	movlb	1	; select bank1
  9006  0F76  07C5               	addwf	_cursor_x^(0+128),f
  9007  0F77  0872               	movf	?___wmul+1,w
  9008  0F78  3DC6               	addwfc	(_cursor_x+1)^(0+128),f
  9009                           
  9010                           ;GFX_Library.c: 543:   if( cursor_x > ((uint16_t)_width + textsize * 6) )
  9011  0F79  0020               	movlb	0	; select bank0
  9012  0F7A  086F               	movf	_textsize,w
  9013  0F7B  00BC               	movwf	??_display_customChar
  9014  0F7C  01BD               	clrf	??_display_customChar+1
  9015  0F7D  083C               	movf	??_display_customChar,w
  9016  0F7E  00F1               	movwf	___wmul@multiplier
  9017  0F7F  083D               	movf	??_display_customChar+1,w
  9018  0F80  00F2               	movwf	___wmul@multiplier+1
  9019  0F81  3006               	movlw	6
  9020  0F82  00F3               	movwf	___wmul@multiplicand
  9021  0F83  3000               	movlw	0
  9022  0F84  00F4               	movwf	___wmul@multiplicand+1
  9023  0F85  3192  223A  318D   	fcall	___wmul
  9024  0F88  0021               	movlb	1	; select bank1
  9025  0F89  0849               	movf	__width^(0+128),w
  9026  0F8A  0771               	addwf	?___wmul,w
  9027  0F8B  0020               	movlb	0	; select bank0
  9028  0F8C  00BE               	movwf	??_display_customChar+2
  9029  0F8D  0021               	movlb	1	; select bank1
  9030  0F8E  084A               	movf	(__width+1)^(0+128),w
  9031  0F8F  3D72               	addwfc	?___wmul+1,w
  9032  0F90  0020               	movlb	0	; select bank0
  9033  0F91  00BF               	movwf	??_display_customChar+3
  9034  0F92  0021               	movlb	1	; select bank1
  9035  0F93  0846               	movf	(_cursor_x+1)^(0+128),w
  9036  0F94  0020               	movlb	0	; select bank0
  9037  0F95  023F               	subwf	??_display_customChar+3,w
  9038  0F96  1D03               	skipz
  9039  0F97  2F9C               	goto	u3505
  9040  0F98  0021               	movlb	1	; select bank1
  9041  0F99  0845               	movf	_cursor_x^(0+128),w
  9042  0F9A  0020               	movlb	0	; select bank0
  9043  0F9B  023E               	subwf	??_display_customChar+2,w
  9044  0F9C                     u3505:
  9045  0F9C  1803               	skipnc
  9046  0F9D  2FA3               	goto	l4013
  9047                           
  9048                           ;GFX_Library.c: 544:     cursor_x = _width;
  9049  0F9E  0021               	movlb	1	; select bank1
  9050  0F9F  084A               	movf	(__width+1)^(0+128),w
  9051  0FA0  00C6               	movwf	(_cursor_x+1)^(0+128)
  9052  0FA1  0849               	movf	__width^(0+128),w
  9053  0FA2  00C5               	movwf	_cursor_x^(0+128)
  9054  0FA3                     l4013:
  9055  0FA3  0020               	movlb	0	; select bank0
  9056  0FA4  086F               	movf	_textsize,w
  9057  0FA5  00BC               	movwf	??_display_customChar
  9058  0FA6  01BD               	clrf	??_display_customChar+1
  9059  0FA7  083C               	movf	??_display_customChar,w
  9060  0FA8  00F1               	movwf	___wmul@multiplier
  9061  0FA9  083D               	movf	??_display_customChar+1,w
  9062  0FAA  00F2               	movwf	___wmul@multiplier+1
  9063  0FAB  3005               	movlw	5
  9064  0FAC  00F3               	movwf	___wmul@multiplicand
  9065  0FAD  3000               	movlw	0
  9066  0FAE  00F4               	movwf	___wmul@multiplicand+1
  9067  0FAF  3192  223A  318D   	fcall	___wmul
  9068  0FB2  0021               	movlb	1	; select bank1
  9069  0FB3  0845               	movf	_cursor_x^(0+128),w
  9070  0FB4  0771               	addwf	?___wmul,w
  9071  0FB5  0020               	movlb	0	; select bank0
  9072  0FB6  00BE               	movwf	??_display_customChar+2
  9073  0FB7  0021               	movlb	1	; select bank1
  9074  0FB8  0846               	movf	(_cursor_x+1)^(0+128),w
  9075  0FB9  3D72               	addwfc	?___wmul+1,w
  9076  0FBA  0020               	movlb	0	; select bank0
  9077  0FBB  00BF               	movwf	??_display_customChar+3
  9078  0FBC  083F               	movf	??_display_customChar+3,w
  9079  0FBD  0021               	movlb	1	; select bank1
  9080  0FBE  024A               	subwf	(__width+1)^(0+128),w
  9081  0FBF  1D03               	skipz
  9082  0FC0  2FC5               	goto	u3515
  9083  0FC1  0020               	movlb	0	; select bank0
  9084  0FC2  083E               	movf	??_display_customChar+2,w
  9085  0FC3  0021               	movlb	1	; select bank1
  9086  0FC4  0249               	subwf	__width^(0+128),w
  9087  0FC5                     u3515:
  9088  0FC5  1803               	skipnc
  9089  0FC6  0008               	return
  9090                           
  9091                           ;GFX_Library.c: 547:   {;GFX_Library.c: 548:     cursor_x = 0;
  9092  0FC7  01C5               	clrf	_cursor_x^(0+128)
  9093  0FC8  01C6               	clrf	(_cursor_x+1)^(0+128)
  9094                           
  9095                           ;GFX_Library.c: 549:     cursor_y += textsize * 8;
  9096  0FC9  0020               	movlb	0	; select bank0
  9097  0FCA  086F               	movf	_textsize,w
  9098  0FCB  00BC               	movwf	??_display_customChar
  9099  0FCC  01BD               	clrf	??_display_customChar+1
  9100  0FCD  35BC               	lslf	??_display_customChar,f
  9101  0FCE  0DBD               	rlf	??_display_customChar+1,f
  9102  0FCF  35BC               	lslf	??_display_customChar,f
  9103  0FD0  0DBD               	rlf	??_display_customChar+1,f
  9104  0FD1  35BC               	lslf	??_display_customChar,f
  9105  0FD2  0DBD               	rlf	??_display_customChar+1,f
  9106  0FD3  083C               	movf	??_display_customChar,w
  9107  0FD4  0021               	movlb	1	; select bank1
  9108  0FD5  07C3               	addwf	_cursor_y^(0+128),f
  9109  0FD6  0020               	movlb	0	; select bank0
  9110  0FD7  083D               	movf	??_display_customChar+1,w
  9111  0FD8  0021               	movlb	1	; select bank1
  9112  0FD9  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
  9113                           
  9114                           ;GFX_Library.c: 550:     if( cursor_y > ((uint16_t)_height + textsize * 8) )
  9115  0FDA  0020               	movlb	0	; select bank0
  9116  0FDB  086F               	movf	_textsize,w
  9117  0FDC  00BC               	movwf	??_display_customChar
  9118  0FDD  01BD               	clrf	??_display_customChar+1
  9119  0FDE  35BC               	lslf	??_display_customChar,f
  9120  0FDF  0DBD               	rlf	??_display_customChar+1,f
  9121  0FE0  35BC               	lslf	??_display_customChar,f
  9122  0FE1  0DBD               	rlf	??_display_customChar+1,f
  9123  0FE2  35BC               	lslf	??_display_customChar,f
  9124  0FE3  0DBD               	rlf	??_display_customChar+1,f
  9125  0FE4  0021               	movlb	1	; select bank1
  9126  0FE5  0847               	movf	__height^(0+128),w
  9127  0FE6  0020               	movlb	0	; select bank0
  9128  0FE7  073C               	addwf	??_display_customChar,w
  9129  0FE8  00BE               	movwf	??_display_customChar+2
  9130  0FE9  0021               	movlb	1	; select bank1
  9131  0FEA  0848               	movf	(__height+1)^(0+128),w
  9132  0FEB  0020               	movlb	0	; select bank0
  9133  0FEC  3D3D               	addwfc	??_display_customChar+1,w
  9134  0FED  00BF               	movwf	??_display_customChar+3
  9135  0FEE  0021               	movlb	1	; select bank1
  9136  0FEF  0844               	movf	(_cursor_y+1)^(0+128),w
  9137  0FF0  0020               	movlb	0	; select bank0
  9138  0FF1  023F               	subwf	??_display_customChar+3,w
  9139  0FF2  1D03               	skipz
  9140  0FF3  2FF8               	goto	u3525
  9141  0FF4  0021               	movlb	1	; select bank1
  9142  0FF5  0843               	movf	_cursor_y^(0+128),w
  9143  0FF6  0020               	movlb	0	; select bank0
  9144  0FF7  023E               	subwf	??_display_customChar+2,w
  9145  0FF8                     u3525:
  9146  0FF8  1803               	skipnc
  9147  0FF9  0008               	return
  9148                           
  9149                           ;GFX_Library.c: 551:       cursor_y = _height;
  9150  0FFA  0021               	movlb	1	; select bank1
  9151  0FFB  0848               	movf	(__height+1)^(0+128),w
  9152  0FFC  00C4               	movwf	(_cursor_y+1)^(0+128)
  9153  0FFD  0847               	movf	__height^(0+128),w
  9154  0FFE  00C3               	movwf	_cursor_y^(0+128)
  9155  0FFF  0008               	return
  9156  1000                     __end_of_display_customChar:
  9157                           
  9158                           	psect	text5
  9159  11BB                     __ptext5:	
  9160 ;; *************** function ___bmul *****************
  9161 ;; Defined at:
  9162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  multiplier      1    wreg     unsigned char 
  9165 ;;  multiplicand    1    1[COMMON] unsigned char 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;  multiplier      1    4[COMMON] unsigned char 
  9168 ;;  product         1    3[COMMON] unsigned char 
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      unsigned char 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0
  9173 ;; Tracked objects:
  9174 ;;		On entry : 1F/0
  9175 ;;		On exit  : 1F/0
  9176 ;;		Unchanged: 1F/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9178 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;Total ram usage:        4 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    4
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_moverJugador
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function ___bmul
  9194  11BB                     ___bmul:
  9195                           
  9196                           ;incstack = 0
  9197                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9198                           ;___bmul@multiplier stored from wreg
  9199  11BB  00F4               	movwf	___bmul@multiplier
  9200  11BC  01F3               	clrf	___bmul@product
  9201  11BD                     l3357:
  9202  11BD  1C74               	btfss	___bmul@multiplier,0
  9203  11BE  29C3               	goto	l3361
  9204  11BF  0871               	movf	___bmul@multiplicand,w
  9205  11C0  00F2               	movwf	??___bmul
  9206  11C1  0872               	movf	??___bmul,w
  9207  11C2  07F3               	addwf	___bmul@product,f
  9208  11C3                     l3361:
  9209  11C3  1003               	clrc
  9210  11C4  0DF1               	rlf	___bmul@multiplicand,f
  9211  11C5  1003               	clrc
  9212  11C6  0CF4               	rrf	___bmul@multiplier,f
  9213  11C7  0874               	movf	___bmul@multiplier,w
  9214  11C8  1D03               	btfss	3,2
  9215  11C9  29BD               	goto	l3357
  9216  11CA  0873               	movf	___bmul@product,w
  9217  11CB  0008               	return
  9218  11CC                     __end_of___bmul:
  9219                           
  9220                           	psect	text6
  9221  1270                     __ptext6:	
  9222 ;; *************** function _fillScreen *****************
  9223 ;; Defined at:
  9224 ;;		line 297 in file "ILI9341.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  color           2   26[BANK0 ] unsigned short 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2, status,0, pclath, cstack
  9233 ;; Tracked objects:
  9234 ;;		On entry : 1F/0
  9235 ;;		On exit  : 1F/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;Total ram usage:        2 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; Hardware stack levels required when called:    8
  9245 ;; This function calls:
  9246 ;;		_fillRect
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           
  9253                           ;psect for function _fillScreen
  9254  1270                     _fillScreen:
  9255                           
  9256                           ;ILI9341.c: 298:     fillRect(0, 0, _width, _height, color);
  9257                           
  9258                           ;incstack = 0
  9259                           ; Regs used in _fillScreen: [wreg+status,2+status,0+pclath+cstack]
  9260  1270  3000               	movlw	0
  9261  1271  00A6               	movwf	fillRect@x
  9262  1272  00A7               	movwf	fillRect@x+1
  9263  1273  3000               	movlw	0
  9264  1274  00A8               	movwf	fillRect@y
  9265  1275  00A9               	movwf	fillRect@y+1
  9266  1276  0021               	movlb	1	; select bank1
  9267  1277  084A               	movf	(__width+1)^(0+128),w
  9268  1278  0020               	movlb	0	; select bank0
  9269  1279  00AB               	movwf	fillRect@w+1
  9270  127A  0021               	movlb	1	; select bank1
  9271  127B  0849               	movf	__width^(0+128),w
  9272  127C  0020               	movlb	0	; select bank0
  9273  127D  00AA               	movwf	fillRect@w
  9274  127E  0021               	movlb	1	; select bank1
  9275  127F  0848               	movf	(__height+1)^(0+128),w
  9276  1280  0020               	movlb	0	; select bank0
  9277  1281  00AD               	movwf	fillRect@h+1
  9278  1282  0021               	movlb	1	; select bank1
  9279  1283  0847               	movf	__height^(0+128),w
  9280  1284  0020               	movlb	0	; select bank0
  9281  1285  00AC               	movwf	fillRect@h
  9282  1286  083B               	movf	fillScreen@color+1,w
  9283  1287  00AF               	movwf	fillRect@color+1
  9284  1288  083A               	movf	fillScreen@color,w
  9285  1289  00AE               	movwf	fillRect@color
  9286  128A  3197  273D         	fcall	_fillRect
  9287  128C  0008               	return
  9288  128D                     __end_of_fillScreen:
  9289                           
  9290                           	psect	text7
  9291  0799                     __ptext7:	
  9292 ;; *************** function _dibujarMarcador *****************
  9293 ;; Defined at:
  9294 ;;		line 201 in file "main.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  puntaje1        1    wreg     unsigned char 
  9297 ;;  puntaje2        1   77[BANK0 ] unsigned char 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  puntaje1        1   78[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      void 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 1E/0
  9306 ;;		On exit  : 1F/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:        6 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:   12
  9316 ;; This function calls:
  9317 ;;		_disp_texto
  9318 ;;		_display_setCursor
  9319 ;;		_display_setTextColor
  9320 ;;		_display_setTextColor2
  9321 ;;		_display_setTextSize
  9322 ;;		_setRotation
  9323 ;;		_sprintf
  9324 ;; This function is called by:
  9325 ;;		_main
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _dibujarMarcador
  9331  0799                     _dibujarMarcador:
  9332                           
  9333                           ;incstack = 0
  9334                           ; Regs used in _dibujarMarcador: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9335                           ;dibujarMarcador@puntaje1 stored from wreg
  9336  0799  0020               	movlb	0	; select bank0
  9337  079A  00EE               	movwf	dibujarMarcador@puntaje1
  9338                           
  9339                           ;main.c: 202:     setRotation(1);
  9340  079B  3001               	movlw	1
  9341  079C  3193  23F2  3187   	fcall	_setRotation
  9342                           
  9343                           ;main.c: 203:     display_setCursor((320/2)-10,0);
  9344  079F  3096               	movlw	150
  9345  07A0  00F1               	movwf	display_setCursor@x
  9346  07A1  3000               	movlw	0
  9347  07A2  00F2               	movwf	display_setCursor@x+1
  9348  07A3  3000               	movlw	0
  9349  07A4  00F3               	movwf	display_setCursor@y
  9350  07A5  00F4               	movwf	display_setCursor@y+1
  9351  07A6  3191  2152  3187   	fcall	_display_setCursor
  9352                           
  9353                           ;main.c: 204:     display_setTextSize(2);
  9354  07A9  3002               	movlw	2
  9355  07AA  3191  21F6  3187   	fcall	_display_setTextSize
  9356                           
  9357                           ;main.c: 205:     display_setTextColor(0x0000,0x0000);
  9358  07AD  3000               	movlw	0
  9359  07AE  00F1               	movwf	display_setTextColor@c
  9360  07AF  00F2               	movwf	display_setTextColor@c+1
  9361  07B0  3000               	movlw	0
  9362  07B1  00F3               	movwf	display_setTextColor@bg
  9363  07B2  00F4               	movwf	display_setTextColor@bg+1
  9364  07B3  3191  215C  3187   	fcall	_display_setTextColor
  9365                           
  9366                           ;main.c: 207:     disp_texto(marcador);
  9367  07B6  30CF               	movlw	low _marcador
  9368  07B7  0020               	movlb	0	; select bank0
  9369  07B8  00CA               	movwf	disp_texto@cadena
  9370  07B9  3000               	movlw	high _marcador
  9371  07BA  00CB               	movwf	disp_texto@cadena+1
  9372  07BB  3192  228D  3187   	fcall	_disp_texto
  9373                           
  9374                           ;main.c: 208:     display_setCursor((320/2)-10,0);
  9375  07BE  3096               	movlw	150
  9376  07BF  00F1               	movwf	display_setCursor@x
  9377  07C0  3000               	movlw	0
  9378  07C1  00F2               	movwf	display_setCursor@x+1
  9379  07C2  3000               	movlw	0
  9380  07C3  00F3               	movwf	display_setCursor@y
  9381  07C4  00F4               	movwf	display_setCursor@y+1
  9382  07C5  3191  2152  3187   	fcall	_display_setCursor
  9383                           
  9384                           ;main.c: 209:     display_setTextColor2(0x07E0);
  9385  07C8  30E0               	movlw	224
  9386  07C9  00F1               	movwf	display_setTextColor2@c
  9387  07CA  3007               	movlw	7
  9388  07CB  00F2               	movwf	display_setTextColor2@c+1
  9389  07CC  3191  2149  3187   	fcall	_display_setTextColor2
  9390                           
  9391                           ;main.c: 210:     sprintf(marcador,"%i:%i",puntaje1,puntaje2);
  9392  07CF  305E               	movlw	low (STR_1| (0+32768))
  9393  07D0  0020               	movlb	0	; select bank0
  9394  07D1  00E6               	movwf	sprintf@fmt
  9395  07D2  3099               	movlw	high (STR_1| (0+32768))
  9396  07D3  00E7               	movwf	sprintf@fmt+1
  9397  07D4  086E               	movf	dibujarMarcador@puntaje1,w
  9398  07D5  0021               	movlb	1	; select bank1
  9399  07D6  00DB               	movwf	??_dibujarMarcador^(0+128)
  9400  07D7  01DC               	clrf	(??_dibujarMarcador^(0+128)+1)
  9401  07D8  085B               	movf	??_dibujarMarcador^(0+128),w
  9402  07D9  0020               	movlb	0	; select bank0
  9403  07DA  00E8               	movwf	?_sprintf+2
  9404  07DB  0021               	movlb	1	; select bank1
  9405  07DC  085C               	movf	(??_dibujarMarcador+1)^(0+128),w
  9406  07DD  0020               	movlb	0	; select bank0
  9407  07DE  00E9               	movwf	?_sprintf+3
  9408  07DF  086D               	movf	dibujarMarcador@puntaje2,w
  9409  07E0  0021               	movlb	1	; select bank1
  9410  07E1  00DD               	movwf	(??_dibujarMarcador+2)^(0+128)
  9411  07E2  01DE               	clrf	((??_dibujarMarcador+2)^(0+128)+1)
  9412  07E3  085D               	movf	(??_dibujarMarcador+2)^(0+128),w
  9413  07E4  0020               	movlb	0	; select bank0
  9414  07E5  00EA               	movwf	?_sprintf+4
  9415  07E6  0021               	movlb	1	; select bank1
  9416  07E7  085E               	movf	(??_dibujarMarcador+3)^(0+128),w
  9417  07E8  0020               	movlb	0	; select bank0
  9418  07E9  00EB               	movwf	?_sprintf+5
  9419  07EA  30CF               	movlw	(low (_marcador| 0))& (0+255)
  9420  07EB  3192  22D6  3187   	fcall	_sprintf
  9421                           
  9422                           ;main.c: 211:     disp_texto(marcador);
  9423  07EE  30CF               	movlw	low _marcador
  9424  07EF  00CA               	movwf	disp_texto@cadena
  9425  07F0  3000               	movlw	high _marcador
  9426  07F1  00CB               	movwf	disp_texto@cadena+1
  9427  07F2  3192  228D  3187   	fcall	_disp_texto
  9428                           
  9429                           ;main.c: 212:     setRotation(0);
  9430  07F5  3000               	movlw	0
  9431  07F6  3193  23F2         	fcall	_setRotation
  9432  07F8  0008               	return
  9433  07F9                     __end_of_dibujarMarcador:
  9434                           
  9435                           	psect	text8
  9436  12D6                     __ptext8:	
  9437 ;; *************** function _sprintf *****************
  9438 ;; Defined at:
  9439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  s               1    wreg     PTR unsigned char 
  9442 ;;		 -> marcador(3), 
  9443 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  9444 ;;		 -> STR_1(6), 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  s               1    3[BANK1 ] PTR unsigned char 
  9447 ;;		 -> marcador(3), 
  9448 ;;  f               5    4[BANK1 ] struct _IO_FILE
  9449 ;;  ret             2    0        int 
  9450 ;;  ap              1    2[BANK1 ] PTR void [1]
  9451 ;;		 -> ?_sprintf(2), 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  2   70[BANK0 ] int 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 1F/0
  9458 ;;		On exit  : 1F/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9461 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;Total ram usage:       16 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:   11
  9468 ;; This function calls:
  9469 ;;		_vfprintf
  9470 ;; This function is called by:
  9471 ;;		_dibujarMarcador
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           
  9476                           ;psect for function _sprintf
  9477  12D6                     _sprintf:
  9478                           
  9479                           ;incstack = 0
  9480                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9481                           ;sprintf@s stored from wreg
  9482  12D6  0021               	movlb	1	; select bank1
  9483  12D7  00D5               	movwf	sprintf@s^(0+128)
  9484  12D8  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9485  12D9  0020               	movlb	0	; select bank0
  9486  12DA  00EC               	movwf	??_sprintf
  9487  12DB  086C               	movf	??_sprintf,w
  9488  12DC  0021               	movlb	1	; select bank1
  9489  12DD  00D4               	movwf	sprintf@ap^(0+128)
  9490  12DE  0855               	movf	sprintf@s^(0+128),w
  9491  12DF  0020               	movlb	0	; select bank0
  9492  12E0  00EC               	movwf	??_sprintf
  9493  12E1  086C               	movf	??_sprintf,w
  9494  12E2  0021               	movlb	1	; select bank1
  9495  12E3  00D6               	movwf	sprintf@f^(0+128)
  9496  12E4  01D7               	clrf	(sprintf@f^(0+128)+1)
  9497  12E5  01D8               	clrf	((sprintf@f+1)^(0+128)+1)
  9498  12E6  01D9               	clrf	(sprintf@f^(0+128)+3)
  9499  12E7  01DA               	clrf	((sprintf@f+1)^(0+128)+3)
  9500  12E8  0020               	movlb	0	; select bank0
  9501  12E9  0867               	movf	sprintf@fmt+1,w
  9502  12EA  00DF               	movwf	vfprintf@fmt+1
  9503  12EB  0866               	movf	sprintf@fmt,w
  9504  12EC  00DE               	movwf	vfprintf@fmt
  9505  12ED  30D4               	movlw	(low (sprintf@ap| 0))& (0+255)
  9506  12EE  00EC               	movwf	??_sprintf
  9507  12EF  086C               	movf	??_sprintf,w
  9508  12F0  00E0               	movwf	vfprintf@ap
  9509  12F1  30D6               	movlw	(low (sprintf@f| 0))& (0+255)
  9510  12F2  3192  22FE         	fcall	_vfprintf
  9511  12F4  0021               	movlb	1	; select bank1
  9512  12F5  0857               	movf	(sprintf@f^(0+128)+1),w
  9513  12F6  0755               	addwf	sprintf@s^(0+128),w
  9514  12F7  0020               	movlb	0	; select bank0
  9515  12F8  00EC               	movwf	??_sprintf
  9516  12F9  086C               	movf	??_sprintf,w
  9517  12FA  0086               	movwf	6
  9518  12FB  0187               	clrf	7
  9519  12FC  0181               	clrf	1
  9520  12FD  0008               	return
  9521  12FE                     __end_of_sprintf:
  9522                           
  9523                           	psect	text9
  9524  12FE                     __ptext9:	
  9525 ;; *************** function _vfprintf *****************
  9526 ;; Defined at:
  9527 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  fp              1    wreg     PTR struct _IO_FILE
  9530 ;;		 -> sprintf@f(5), 
  9531 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  9532 ;;		 -> STR_1(6), 
  9533 ;;  ap              1   64[BANK0 ] PTR PTR void 
  9534 ;;		 -> sprintf@ap(1), 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  9537 ;;		 -> sprintf@f(5), 
  9538 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  9539 ;;		 -> STR_1(6), 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  2   62[BANK0 ] int 
  9542 ;; Registers used:
  9543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 1F/0
  9546 ;;		On exit  : 1F/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;Total ram usage:        8 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:   10
  9556 ;; This function calls:
  9557 ;;		_vfpfcnvrt
  9558 ;; This function is called by:
  9559 ;;		_sprintf
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           
  9564                           ;psect for function _vfprintf
  9565  12FE                     _vfprintf:
  9566                           
  9567                           ;incstack = 0
  9568                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9569                           ;vfprintf@fp stored from wreg
  9570  12FE  00E3               	movwf	vfprintf@fp
  9571                           
  9572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9573  12FF  085F               	movf	vfprintf@fmt+1,w
  9574  1300  00E5               	movwf	vfprintf@cfmt+1
  9575  1301  085E               	movf	vfprintf@fmt,w
  9576  1302  00E4               	movwf	vfprintf@cfmt
  9577                           
  9578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9579  1303  0021               	movlb	1	; select bank1
  9580  1304  01BB               	clrf	_nout^(0+128)
  9581  1305  01BC               	clrf	(_nout+1)^(0+128)
  9582  1306                     l4029:	
  9583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9584                           
  9585                           
  9586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9587  1306  0020               	movlb	0	; select bank0
  9588  1307  0864               	movf	vfprintf@cfmt,w
  9589  1308  0084               	movwf	4
  9590  1309  0865               	movf	vfprintf@cfmt+1,w
  9591  130A  0085               	movwf	5
  9592  130B  0012               	moviw fsr0++
  9593  130C  1903               	btfsc	3,2
  9594  130D  2B22               	goto	l4031
  9595                           
  9596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9597  130E  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9598  130F  00E1               	movwf	??_vfprintf
  9599  1310  0861               	movf	??_vfprintf,w
  9600  1311  00CE               	movwf	vfpfcnvrt@fmt
  9601  1312  0860               	movf	vfprintf@ap,w
  9602  1313  00E2               	movwf	??_vfprintf+1
  9603  1314  0862               	movf	??_vfprintf+1,w
  9604  1315  00CF               	movwf	vfpfcnvrt@ap
  9605  1316  0863               	movf	vfprintf@fp,w
  9606  1317  3188  2030  3192   	fcall	_vfpfcnvrt
  9607  131A  084E               	movf	?_vfpfcnvrt,w
  9608  131B  0021               	movlb	1	; select bank1
  9609  131C  07BB               	addwf	_nout^(0+128),f
  9610  131D  0020               	movlb	0	; select bank0
  9611  131E  084F               	movf	?_vfpfcnvrt+1,w
  9612  131F  0021               	movlb	1	; select bank1
  9613  1320  3DBC               	addwfc	(_nout+1)^(0+128),f
  9614  1321  2B06               	goto	l4029
  9615  1322                     l4031:
  9616                           
  9617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9618  1322  0021               	movlb	1	; select bank1
  9619  1323  083C               	movf	(_nout+1)^(0+128),w
  9620  1324  0020               	movlb	0	; select bank0
  9621  1325  00DF               	movwf	?_vfprintf+1
  9622  1326  0021               	movlb	1	; select bank1
  9623  1327  083B               	movf	_nout^(0+128),w
  9624  1328  0020               	movlb	0	; select bank0
  9625  1329  00DE               	movwf	?_vfprintf
  9626  132A  0008               	return
  9627  132B                     __end_of_vfprintf:
  9628                           
  9629                           	psect	text10
  9630  0830                     __ptext10:	
  9631 ;; *************** function _vfpfcnvrt *****************
  9632 ;; Defined at:
  9633 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;  fp              1    wreg     PTR struct _IO_FILE
  9636 ;;		 -> sprintf@f(5), 
  9637 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  9638 ;;		 -> vfprintf@cfmt(2), 
  9639 ;;  ap              1   47[BANK0 ] PTR PTR void 
  9640 ;;		 -> sprintf@ap(1), 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  9643 ;;		 -> sprintf@f(5), 
  9644 ;;  ll              8   53[BANK0 ] long long 
  9645 ;;  llu             8    0        unsigned long long 
  9646 ;;  f               4    0        unsigned long long 
  9647 ;;  ct              3    0        unsigned char [3]
  9648 ;;  vp              2    0        PTR void 
  9649 ;;  i               2    0        int 
  9650 ;;  done            2    0        int 
  9651 ;;  cp              2    0        PTR unsigned char 
  9652 ;;  c               1    0        unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  2   46[BANK0 ] int 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 1F/0
  9659 ;;		On exit  : 1F/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;Total ram usage:       16 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    9
  9669 ;; This function calls:
  9670 ;;		_dtoa
  9671 ;;		_fputc
  9672 ;; This function is called by:
  9673 ;;		_vfprintf
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           
  9678                           ;psect for function _vfpfcnvrt
  9679  0830                     _vfpfcnvrt:
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9683                           ;vfpfcnvrt@fp stored from wreg
  9684  0830  00DD               	movwf	vfpfcnvrt@fp
  9685                           
  9686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9687  0831  084E               	movf	vfpfcnvrt@fmt,w
  9688  0832  0086               	movwf	6
  9689  0833  0187               	clrf	7
  9690  0834  3F40               	moviw [0]fsr1
  9691  0835  00D0               	movwf	??_vfpfcnvrt
  9692  0836  3F41               	moviw [1]fsr1
  9693  0837  00D1               	movwf	??_vfpfcnvrt+1
  9694  0838  0850               	movf	??_vfpfcnvrt,w
  9695  0839  0084               	movwf	4
  9696  083A  0851               	movf	??_vfpfcnvrt+1,w
  9697  083B  0085               	movwf	5
  9698  083C  0012               	moviw fsr0++
  9699  083D  3A25               	xorlw	37
  9700  083E  1D03               	btfss	3,2
  9701  083F  28DB               	goto	l3881
  9702                           
  9703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9704  0840  084E               	movf	vfpfcnvrt@fmt,w
  9705  0841  0086               	movwf	6
  9706  0842  0187               	clrf	7
  9707  0843  3001               	movlw	1
  9708  0844  0781               	addwf	1,f
  9709  0845  3141               	addfsr 1,1
  9710  0846  1803               	skipnc
  9711  0847  0A81               	incf	1,f
  9712                           
  9713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9714  0848  0021               	movlb	1	; select bank1
  9715  0849  01BD               	clrf	_width^(0+128)
  9716  084A  01BE               	clrf	(_width+1)^(0+128)
  9717  084B  01C1               	clrf	_flags^(0+128)
  9718  084C  01C2               	clrf	(_flags+1)^(0+128)
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9721  084D  30FF               	movlw	255
  9722  084E  00BF               	movwf	_prec^(0+128)
  9723  084F  30FF               	movlw	255
  9724  0850  00C0               	movwf	(_prec^(0+128)+1)
  9725                           
  9726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9727  0851  0020               	movlb	0	; select bank0
  9728  0852  084E               	movf	vfpfcnvrt@fmt,w
  9729  0853  0086               	movwf	6
  9730  0854  0187               	clrf	7
  9731  0855  3F40               	moviw [0]fsr1
  9732  0856  00D0               	movwf	??_vfpfcnvrt
  9733  0857  3F41               	moviw [1]fsr1
  9734  0858  00D1               	movwf	??_vfpfcnvrt+1
  9735  0859  0850               	movf	??_vfpfcnvrt,w
  9736  085A  0084               	movwf	4
  9737  085B  0851               	movf	??_vfpfcnvrt+1,w
  9738  085C  0085               	movwf	5
  9739  085D  0012               	moviw fsr0++
  9740  085E  3A64               	xorlw	100
  9741  085F  1903               	btfsc	3,2
  9742  0860  2870               	goto	l3857
  9743  0861  084E               	movf	vfpfcnvrt@fmt,w
  9744  0862  0086               	movwf	6
  9745  0863  0187               	clrf	7
  9746  0864  3F40               	moviw [0]fsr1
  9747  0865  00D0               	movwf	??_vfpfcnvrt
  9748  0866  3F41               	moviw [1]fsr1
  9749  0867  00D1               	movwf	??_vfpfcnvrt+1
  9750  0868  0850               	movf	??_vfpfcnvrt,w
  9751  0869  0084               	movwf	4
  9752  086A  0851               	movf	??_vfpfcnvrt+1,w
  9753  086B  0085               	movwf	5
  9754  086C  0012               	moviw fsr0++
  9755  086D  3A69               	xorlw	105
  9756  086E  1D03               	btfss	3,2
  9757  086F  28A9               	goto	l3865
  9758  0870                     l3857:
  9759                           
  9760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  9761  0870  084E               	movf	vfpfcnvrt@fmt,w
  9762  0871  0086               	movwf	6
  9763  0872  0187               	clrf	7
  9764  0873  3001               	movlw	1
  9765  0874  0781               	addwf	1,f
  9766  0875  3141               	addfsr 1,1
  9767  0876  1803               	skipnc
  9768  0877  0A81               	incf	1,f
  9769                           
  9770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9771  0878  084F               	movf	vfpfcnvrt@ap,w
  9772  0879  0086               	movwf	6
  9773  087A  0187               	clrf	7
  9774  087B  0801               	movf	1,w
  9775  087C  0084               	movwf	4
  9776  087D  0185               	clrf	5
  9777  087E  3002               	movlw	2
  9778  087F  0781               	addwf	1,f
  9779  0880  3F00               	moviw [0]fsr0
  9780  0881  00D0               	movwf	??_vfpfcnvrt
  9781  0882  3F01               	moviw [1]fsr0
  9782  0883  00D1               	movwf	??_vfpfcnvrt+1
  9783  0884  0850               	movf	??_vfpfcnvrt,w
  9784  0885  00D5               	movwf	vfpfcnvrt@ll
  9785  0886  0851               	movf	??_vfpfcnvrt+1,w
  9786  0887  00D6               	movwf	vfpfcnvrt@ll+1
  9787  0888  0D89               	rlf	9,f
  9788  0889  3B89               	subwfb	9,f
  9789  088A  0989               	comf	9,f
  9790  088B  00D7               	movwf	vfpfcnvrt@ll+2
  9791  088C  00D8               	movwf	vfpfcnvrt@ll+3
  9792  088D  00D9               	movwf	vfpfcnvrt@ll+4
  9793  088E  00DA               	movwf	vfpfcnvrt@ll+5
  9794  088F  00DB               	movwf	vfpfcnvrt@ll+6
  9795  0890  00DC               	movwf	vfpfcnvrt@ll+7
  9796                           
  9797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  9798  0891  0855               	movf	vfpfcnvrt@ll,w
  9799  0892  00B0               	movwf	dtoa@d
  9800  0893  0856               	movf	vfpfcnvrt@ll+1,w
  9801  0894  00B1               	movwf	dtoa@d+1
  9802  0895  0857               	movf	vfpfcnvrt@ll+2,w
  9803  0896  00B2               	movwf	dtoa@d+2
  9804  0897  0858               	movf	vfpfcnvrt@ll+3,w
  9805  0898  00B3               	movwf	dtoa@d+3
  9806  0899  0859               	movf	vfpfcnvrt@ll+4,w
  9807  089A  00B4               	movwf	dtoa@d+4
  9808  089B  085A               	movf	vfpfcnvrt@ll+5,w
  9809  089C  00B5               	movwf	dtoa@d+5
  9810  089D  085B               	movf	vfpfcnvrt@ll+6,w
  9811  089E  00B6               	movwf	dtoa@d+6
  9812  089F  085C               	movf	vfpfcnvrt@ll+7,w
  9813  08A0  00B7               	movwf	dtoa@d+7
  9814  08A1  085D               	movf	vfpfcnvrt@fp,w
  9815  08A2  318A  22CD         	fcall	_dtoa
  9816  08A4  0831               	movf	?_dtoa+1,w
  9817  08A5  00CF               	movwf	?_vfpfcnvrt+1
  9818  08A6  0830               	movf	?_dtoa,w
  9819  08A7  00CE               	movwf	?_vfpfcnvrt
  9820  08A8  0008               	return
  9821  08A9                     l3865:
  9822                           
  9823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  9824  08A9  084E               	movf	vfpfcnvrt@fmt,w
  9825  08AA  0086               	movwf	6
  9826  08AB  0187               	clrf	7
  9827  08AC  3F40               	moviw [0]fsr1
  9828  08AD  00D0               	movwf	??_vfpfcnvrt
  9829  08AE  3F41               	moviw [1]fsr1
  9830  08AF  00D1               	movwf	??_vfpfcnvrt+1
  9831  08B0  0850               	movf	??_vfpfcnvrt,w
  9832  08B1  0084               	movwf	4
  9833  08B2  0851               	movf	??_vfpfcnvrt+1,w
  9834  08B3  0085               	movwf	5
  9835  08B4  0012               	moviw fsr0++
  9836  08B5  3A25               	xorlw	37
  9837  08B6  1D03               	btfss	3,2
  9838  08B7  28D0               	goto	l3875
  9839                           
  9840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  9841  08B8  084E               	movf	vfpfcnvrt@fmt,w
  9842  08B9  0086               	movwf	6
  9843  08BA  0187               	clrf	7
  9844  08BB  3001               	movlw	1
  9845  08BC  0781               	addwf	1,f
  9846  08BD  3141               	addfsr 1,1
  9847  08BE  1803               	skipnc
  9848  08BF  0A81               	incf	1,f
  9849                           
  9850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  9851  08C0  3025               	movlw	37
  9852  08C1  00F1               	movwf	fputc@c
  9853  08C2  3000               	movlw	0
  9854  08C3  00F2               	movwf	fputc@c+1
  9855  08C4  085D               	movf	vfpfcnvrt@fp,w
  9856  08C5  00D0               	movwf	??_vfpfcnvrt
  9857  08C6  0850               	movf	??_vfpfcnvrt,w
  9858  08C7  00F3               	movwf	fputc@fp
  9859  08C8  3193  2365         	fcall	_fputc
  9860  08CA                     l3871:
  9861                           
  9862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  9863  08CA  3001               	movlw	1
  9864  08CB  0020               	movlb	0	; select bank0
  9865  08CC  00CE               	movwf	?_vfpfcnvrt
  9866  08CD  3000               	movlw	0
  9867  08CE  00CF               	movwf	?_vfpfcnvrt+1
  9868  08CF  0008               	return
  9869  08D0                     l3875:
  9870                           
  9871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  9872  08D0  084E               	movf	vfpfcnvrt@fmt,w
  9873  08D1  0086               	movwf	6
  9874  08D2  0187               	clrf	7
  9875  08D3  3001               	movlw	1
  9876  08D4  0781               	addwf	1,f
  9877  08D5  3141               	addfsr 1,1
  9878  08D6  1803               	skipnc
  9879  08D7  0A81               	incf	1,f
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  9882  08D8  01CE               	clrf	?_vfpfcnvrt
  9883  08D9  01CF               	clrf	?_vfpfcnvrt+1
  9884  08DA  0008               	return
  9885  08DB                     l3881:
  9886                           
  9887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  9888  08DB  084E               	movf	vfpfcnvrt@fmt,w
  9889  08DC  0086               	movwf	6
  9890  08DD  0187               	clrf	7
  9891  08DE  3F40               	moviw [0]fsr1
  9892  08DF  00D0               	movwf	??_vfpfcnvrt
  9893  08E0  3F41               	moviw [1]fsr1
  9894  08E1  00D1               	movwf	??_vfpfcnvrt+1
  9895  08E2  0850               	movf	??_vfpfcnvrt,w
  9896  08E3  0084               	movwf	4
  9897  08E4  0851               	movf	??_vfpfcnvrt+1,w
  9898  08E5  0085               	movwf	5
  9899  08E6  0800               	movf	0,w	;code access
  9900  08E7  00D2               	movwf	??_vfpfcnvrt+2
  9901  08E8  01D3               	clrf	??_vfpfcnvrt+3
  9902  08E9  0852               	movf	??_vfpfcnvrt+2,w
  9903  08EA  00F1               	movwf	fputc@c
  9904  08EB  0853               	movf	??_vfpfcnvrt+3,w
  9905  08EC  00F2               	movwf	fputc@c+1
  9906  08ED  085D               	movf	vfpfcnvrt@fp,w
  9907  08EE  00D4               	movwf	??_vfpfcnvrt+4
  9908  08EF  0854               	movf	??_vfpfcnvrt+4,w
  9909  08F0  00F3               	movwf	fputc@fp
  9910  08F1  3193  2365  3188   	fcall	_fputc
  9911                           
  9912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9913  08F4  0020               	movlb	0	; select bank0
  9914  08F5  084E               	movf	vfpfcnvrt@fmt,w
  9915  08F6  0086               	movwf	6
  9916  08F7  0187               	clrf	7
  9917  08F8  3001               	movlw	1
  9918  08F9  0781               	addwf	1,f
  9919  08FA  3141               	addfsr 1,1
  9920  08FB  1803               	skipnc
  9921  08FC  0A81               	incf	1,f
  9922  08FD  28CA               	goto	l3871
  9923  08FE                     __end_of_vfpfcnvrt:
  9924                           
  9925                           	psect	text11
  9926  0ACD                     __ptext11:	
  9927 ;; *************** function _dtoa *****************
  9928 ;; Defined at:
  9929 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  fp              1    wreg     PTR struct _IO_FILE
  9932 ;;		 -> sprintf@f(5), 
  9933 ;;  d               8   16[BANK0 ] long long 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  9936 ;;		 -> sprintf@f(5), 
  9937 ;;  n               8   36[BANK0 ] long long 
  9938 ;;  i               2   44[BANK0 ] int 
  9939 ;;  s               2   34[BANK0 ] int 
  9940 ;;  w               2   32[BANK0 ] int 
  9941 ;;  p               2   30[BANK0 ] int 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  2   16[BANK0 ] int 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 1F/0
  9948 ;;		On exit  : 1F/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9951 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;Total ram usage:       30 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    8
  9958 ;; This function calls:
  9959 ;;		___aodiv
  9960 ;;		___aomod
  9961 ;;		_abs
  9962 ;;		_pad
  9963 ;; This function is called by:
  9964 ;;		_vfpfcnvrt
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           
  9969                           ;psect for function _dtoa
  9970  0ACD                     _dtoa:
  9971                           
  9972                           ;incstack = 0
  9973                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9974                           ;dtoa@fp stored from wreg
  9975  0ACD  00BB               	movwf	dtoa@fp
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9978  0ACE  0830               	movf	dtoa@d,w
  9979  0ACF  00C4               	movwf	dtoa@n
  9980  0AD0  0831               	movf	dtoa@d+1,w
  9981  0AD1  00C5               	movwf	dtoa@n+1
  9982  0AD2  0832               	movf	dtoa@d+2,w
  9983  0AD3  00C6               	movwf	dtoa@n+2
  9984  0AD4  0833               	movf	dtoa@d+3,w
  9985  0AD5  00C7               	movwf	dtoa@n+3
  9986  0AD6  0834               	movf	dtoa@d+4,w
  9987  0AD7  00C8               	movwf	dtoa@n+4
  9988  0AD8  0835               	movf	dtoa@d+5,w
  9989  0AD9  00C9               	movwf	dtoa@n+5
  9990  0ADA  0836               	movf	dtoa@d+6,w
  9991  0ADB  00CA               	movwf	dtoa@n+6
  9992  0ADC  0837               	movf	dtoa@d+7,w
  9993  0ADD  00CB               	movwf	dtoa@n+7
  9994                           
  9995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9996  0ADE  3044               	movlw	low dtoa@n
  9997  0ADF  0086               	movwf	6
  9998  0AE0  3000               	movlw	high dtoa@n
  9999  0AE1  0087               	movwf	7
 10000  0AE2  3F47               	moviw [7]fsr1
 10001  0AE3  00B8               	movwf	??_dtoa
 10002  0AE4  1FB8               	btfss	??_dtoa,7
 10003  0AE5  2AE8               	goto	u2890
 10004  0AE6  3001               	movlw	1
 10005  0AE7  2AE9               	goto	u2900
 10006  0AE8                     u2890:
 10007  0AE8  3000               	movlw	0
 10008  0AE9                     u2900:
 10009  0AE9  0020               	movlb	0	; select bank0
 10010  0AEA  00B9               	movwf	??_dtoa+1
 10011  0AEB  01BA               	clrf	??_dtoa+2
 10012  0AEC  0839               	movf	??_dtoa+1,w
 10013  0AED  00C2               	movwf	dtoa@s
 10014  0AEE  083A               	movf	??_dtoa+2,w
 10015  0AEF  00C3               	movwf	dtoa@s+1
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 10018  0AF0  0842               	movf	dtoa@s,w
 10019  0AF1  0443               	iorwf	dtoa@s+1,w
 10020  0AF2  1903               	btfsc	3,2
 10021  0AF3  2B12               	goto	l1617
 10022                           
 10023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 10024  0AF4  09C4               	comf	dtoa@n,f
 10025  0AF5  09C5               	comf	dtoa@n+1,f
 10026  0AF6  09C6               	comf	dtoa@n+2,f
 10027  0AF7  09C7               	comf	dtoa@n+3,f
 10028  0AF8  09C8               	comf	dtoa@n+4,f
 10029  0AF9  09C9               	comf	dtoa@n+5,f
 10030  0AFA  09CA               	comf	dtoa@n+6,f
 10031  0AFB  09CB               	comf	dtoa@n+7,f
 10032  0AFC  0AC4               	incf	dtoa@n,f
 10033  0AFD  1D03               	skipz
 10034  0AFE  2B12               	goto	l1617
 10035  0AFF  0AC5               	incf	dtoa@n+1,f
 10036  0B00  1D03               	skipz
 10037  0B01  2B12               	goto	l1617
 10038  0B02  0AC6               	incf	dtoa@n+2,f
 10039  0B03  1D03               	skipz
 10040  0B04  2B12               	goto	l1617
 10041  0B05  0AC7               	incf	dtoa@n+3,f
 10042  0B06  1D03               	skipz
 10043  0B07  2B12               	goto	l1617
 10044  0B08  0AC8               	incf	dtoa@n+4,f
 10045  0B09  1D03               	skipz
 10046  0B0A  2B12               	goto	l1617
 10047  0B0B  0AC9               	incf	dtoa@n+5,f
 10048  0B0C  1D03               	skipz
 10049  0B0D  2B12               	goto	l1617
 10050  0B0E  0ACA               	incf	dtoa@n+6,f
 10051  0B0F  1D03               	skipz
 10052  0B10  2B12               	goto	l1617
 10053  0B11  0ACB               	incf	dtoa@n+7,f
 10054  0B12                     l1617:	
 10055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
 10056                           
 10057                           
 10058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 10059  0B12  0021               	movlb	1	; select bank1
 10060  0B13  1BC0               	btfsc	(_prec+1)^(0+128),7
 10061  0B14  2B19               	goto	l1618
 10062                           
 10063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 10064  0B15  30FD               	movlw	253
 10065  0B16  05C1               	andwf	_flags^(0+128),f
 10066  0B17  30FF               	movlw	255
 10067  0B18  05C2               	andwf	(_flags+1)^(0+128),f
 10068  0B19                     l1618:	
 10069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
 10070                           
 10071                           
 10072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 10073  0B19  0840               	movf	(_prec+1)^(0+128),w
 10074  0B1A  3A80               	xorlw	128
 10075  0B1B  0020               	movlb	0	; select bank0
 10076  0B1C  00B8               	movwf	??_dtoa
 10077  0B1D  3080               	movlw	128
 10078  0B1E  0238               	subwf	??_dtoa,w
 10079  0B1F  1D03               	skipz
 10080  0B20  2B24               	goto	u2945
 10081  0B21  3001               	movlw	1
 10082  0B22  0021               	movlb	1	; select bank1
 10083  0B23  023F               	subwf	_prec^(0+128),w
 10084  0B24                     u2945:
 10085  0B24  1803               	skipnc
 10086  0B25  2B2C               	goto	l3723
 10087  0B26  3001               	movlw	1
 10088  0B27  0020               	movlb	0	; select bank0
 10089  0B28  00BE               	movwf	dtoa@p
 10090  0B29  3000               	movlw	0
 10091  0B2A  00BF               	movwf	dtoa@p+1
 10092  0B2B  2B34               	goto	l1622
 10093  0B2C                     l3723:
 10094  0B2C  0021               	movlb	1	; select bank1
 10095  0B2D  0840               	movf	(_prec+1)^(0+128),w
 10096  0B2E  0020               	movlb	0	; select bank0
 10097  0B2F  00BF               	movwf	dtoa@p+1
 10098  0B30  0021               	movlb	1	; select bank1
 10099  0B31  083F               	movf	_prec^(0+128),w
 10100  0B32  0020               	movlb	0	; select bank0
 10101  0B33  00BE               	movwf	dtoa@p
 10102  0B34                     l1622:
 10103                           
 10104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 10105  0B34  0021               	movlb	1	; select bank1
 10106  0B35  083E               	movf	(_width+1)^(0+128),w
 10107  0B36  0020               	movlb	0	; select bank0
 10108  0B37  00C1               	movwf	dtoa@w+1
 10109  0B38  0021               	movlb	1	; select bank1
 10110  0B39  083D               	movf	_width^(0+128),w
 10111  0B3A  0020               	movlb	0	; select bank0
 10112  0B3B  00C0               	movwf	dtoa@w
 10113                           
 10114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 10115  0B3C  0842               	movf	dtoa@s,w
 10116  0B3D  0443               	iorwf	dtoa@s+1,w
 10117  0B3E  1D03               	btfss	3,2
 10118  0B3F  2B43               	goto	l3729
 10119  0B40  0021               	movlb	1	; select bank1
 10120  0B41  1D41               	btfss	_flags^(0+128),2
 10121  0B42  2B48               	goto	l1623
 10122  0B43                     l3729:
 10123                           
 10124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
 10125  0B43  30FF               	movlw	255
 10126  0B44  0020               	movlb	0	; select bank0
 10127  0B45  07C0               	addwf	dtoa@w,f
 10128  0B46  30FF               	movlw	255
 10129  0B47  3DC1               	addwfc	dtoa@w+1,f
 10130  0B48                     l1623:	
 10131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
 10132                           
 10133                           
 10134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 10135  0B48  301F               	movlw	31
 10136  0B49  0020               	movlb	0	; select bank0
 10137  0B4A  00CC               	movwf	dtoa@i
 10138  0B4B  3000               	movlw	0
 10139  0B4C  00CD               	movwf	dtoa@i+1
 10140                           
 10141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 10142  0B4D  0022               	movlb	2	; select bank2
 10143  0B4E  01BF               	clrf	(_dbuf^(0+256)+31)
 10144                           
 10145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10146  0B4F  2BDC               	goto	l1626
 10147  0B50                     l3743:
 10148  0B50  0020               	movlb	0	; select bank0
 10149  0B51  0844               	movf	dtoa@n,w
 10150  0B52  0445               	iorwf	dtoa@n+1,w
 10151  0B53  0446               	iorwf	dtoa@n+2,w
 10152  0B54  0447               	iorwf	dtoa@n+3,w
 10153  0B55  0448               	iorwf	dtoa@n+4,w
 10154  0B56  0449               	iorwf	dtoa@n+5,w
 10155  0B57  044A               	iorwf	dtoa@n+6,w
 10156  0B58  044B               	iorwf	dtoa@n+7,w
 10157  0B59  1D03               	skipz
 10158  0B5A  2B75               	goto	l3733
 10159  0B5B  083F               	movf	dtoa@p+1,w
 10160  0B5C  3A80               	xorlw	128
 10161  0B5D  00B8               	movwf	??_dtoa
 10162  0B5E  3080               	movlw	128
 10163  0B5F  0238               	subwf	??_dtoa,w
 10164  0B60  1D03               	skipz
 10165  0B61  2B64               	goto	u2995
 10166  0B62  3001               	movlw	1
 10167  0B63  023E               	subwf	dtoa@p,w
 10168  0B64                     u2995:
 10169  0B64  1803               	skipnc
 10170  0B65  2B75               	goto	l3733
 10171  0B66  0020               	movlb	0	; select bank0
 10172  0B67  0841               	movf	dtoa@w+1,w
 10173  0B68  3A80               	xorlw	128
 10174  0B69  00B8               	movwf	??_dtoa
 10175  0B6A  3080               	movlw	128
 10176  0B6B  0238               	subwf	??_dtoa,w
 10177  0B6C  1D03               	skipz
 10178  0B6D  2B70               	goto	u3005
 10179  0B6E  3001               	movlw	1
 10180  0B6F  0240               	subwf	dtoa@w,w
 10181  0B70                     u3005:
 10182  0B70  1C03               	skipc
 10183  0B71  2BE8               	goto	l3751
 10184  0B72  0021               	movlb	1	; select bank1
 10185  0B73  1CC1               	btfss	_flags^(0+128),1
 10186  0B74  2BE8               	goto	l3751
 10187  0B75                     l3733:
 10188                           
 10189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
 10190  0B75  30FF               	movlw	255
 10191  0B76  0020               	movlb	0	; select bank0
 10192  0B77  07CC               	addwf	dtoa@i,f
 10193  0B78  30FF               	movlw	255
 10194  0B79  3DCD               	addwfc	dtoa@i+1,f
 10195                           
 10196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 10197  0B7A  300A               	movlw	10
 10198  0B7B  00A0               	movwf	___aomod@divisor
 10199  0B7C  01A1               	clrf	___aomod@divisor+1
 10200  0B7D  01A2               	clrf	___aomod@divisor+2
 10201  0B7E  01A3               	clrf	___aomod@divisor+3
 10202  0B7F  01A4               	clrf	___aomod@divisor+4
 10203  0B80  01A5               	clrf	___aomod@divisor+5
 10204  0B81  01A6               	clrf	___aomod@divisor+6
 10205  0B82  01A7               	clrf	___aomod@divisor+7
 10206  0B83  0844               	movf	dtoa@n,w
 10207  0B84  00A8               	movwf	___aomod@dividend
 10208  0B85  0845               	movf	dtoa@n+1,w
 10209  0B86  00A9               	movwf	___aomod@dividend+1
 10210  0B87  0846               	movf	dtoa@n+2,w
 10211  0B88  00AA               	movwf	___aomod@dividend+2
 10212  0B89  0847               	movf	dtoa@n+3,w
 10213  0B8A  00AB               	movwf	___aomod@dividend+3
 10214  0B8B  0848               	movf	dtoa@n+4,w
 10215  0B8C  00AC               	movwf	___aomod@dividend+4
 10216  0B8D  0849               	movf	dtoa@n+5,w
 10217  0B8E  00AD               	movwf	___aomod@dividend+5
 10218  0B8F  084A               	movf	dtoa@n+6,w
 10219  0B90  00AE               	movwf	___aomod@dividend+6
 10220  0B91  084B               	movf	dtoa@n+7,w
 10221  0B92  00AF               	movwf	___aomod@dividend+7
 10222  0B93  3188  20FE  318A   	fcall	___aomod
 10223  0B96  0821               	movf	?___aomod+1,w
 10224  0B97  00F5               	movwf	abs@a+1
 10225  0B98  0820               	movf	?___aomod,w
 10226  0B99  00F4               	movwf	abs@a
 10227  0B9A  3192  220B  318A   	fcall	_abs
 10228  0B9D  0874               	movf	?_abs,w
 10229  0B9E  3E30               	addlw	48
 10230  0B9F  0020               	movlb	0	; select bank0
 10231  0BA0  00B8               	movwf	??_dtoa
 10232  0BA1  084C               	movf	dtoa@i,w
 10233  0BA2  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10234  0BA3  0086               	movwf	6
 10235  0BA4  3001               	movlw	1	; select bank2/3
 10236  0BA5  0087               	movwf	7
 10237  0BA6  0838               	movf	??_dtoa,w
 10238  0BA7  0081               	movwf	1
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
 10241  0BA8  30FF               	movlw	255
 10242  0BA9  07BE               	addwf	dtoa@p,f
 10243  0BAA  30FF               	movlw	255
 10244  0BAB  3DBF               	addwfc	dtoa@p+1,f
 10245                           
 10246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
 10247  0BAC  30FF               	movlw	255
 10248  0BAD  07C0               	addwf	dtoa@w,f
 10249  0BAE  30FF               	movlw	255
 10250  0BAF  3DC1               	addwfc	dtoa@w+1,f
 10251                           
 10252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 10253  0BB0  300A               	movlw	10
 10254  0BB1  00A0               	movwf	___aodiv@divisor
 10255  0BB2  01A1               	clrf	___aodiv@divisor+1
 10256  0BB3  01A2               	clrf	___aodiv@divisor+2
 10257  0BB4  01A3               	clrf	___aodiv@divisor+3
 10258  0BB5  01A4               	clrf	___aodiv@divisor+4
 10259  0BB6  01A5               	clrf	___aodiv@divisor+5
 10260  0BB7  01A6               	clrf	___aodiv@divisor+6
 10261  0BB8  01A7               	clrf	___aodiv@divisor+7
 10262  0BB9  0844               	movf	dtoa@n,w
 10263  0BBA  00A8               	movwf	___aodiv@dividend
 10264  0BBB  0845               	movf	dtoa@n+1,w
 10265  0BBC  00A9               	movwf	___aodiv@dividend+1
 10266  0BBD  0846               	movf	dtoa@n+2,w
 10267  0BBE  00AA               	movwf	___aodiv@dividend+2
 10268  0BBF  0847               	movf	dtoa@n+3,w
 10269  0BC0  00AB               	movwf	___aodiv@dividend+3
 10270  0BC1  0848               	movf	dtoa@n+4,w
 10271  0BC2  00AC               	movwf	___aodiv@dividend+4
 10272  0BC3  0849               	movf	dtoa@n+5,w
 10273  0BC4  00AD               	movwf	___aodiv@dividend+5
 10274  0BC5  084A               	movf	dtoa@n+6,w
 10275  0BC6  00AE               	movwf	___aodiv@dividend+6
 10276  0BC7  084B               	movf	dtoa@n+7,w
 10277  0BC8  00AF               	movwf	___aodiv@dividend+7
 10278  0BC9  3189  21DA  318A   	fcall	___aodiv
 10279  0BCC  0820               	movf	?___aodiv,w
 10280  0BCD  00C4               	movwf	dtoa@n
 10281  0BCE  0821               	movf	?___aodiv+1,w
 10282  0BCF  00C5               	movwf	dtoa@n+1
 10283  0BD0  0822               	movf	?___aodiv+2,w
 10284  0BD1  00C6               	movwf	dtoa@n+2
 10285  0BD2  0823               	movf	?___aodiv+3,w
 10286  0BD3  00C7               	movwf	dtoa@n+3
 10287  0BD4  0824               	movf	?___aodiv+4,w
 10288  0BD5  00C8               	movwf	dtoa@n+4
 10289  0BD6  0825               	movf	?___aodiv+5,w
 10290  0BD7  00C9               	movwf	dtoa@n+5
 10291  0BD8  0826               	movf	?___aodiv+6,w
 10292  0BD9  00CA               	movwf	dtoa@n+6
 10293  0BDA  0827               	movf	?___aodiv+7,w
 10294  0BDB  00CB               	movwf	dtoa@n+7
 10295  0BDC                     l1626:	
 10296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
 10297                           
 10298                           
 10299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10300  0BDC  0020               	movlb	0	; select bank0
 10301  0BDD  084D               	movf	dtoa@i+1,w
 10302  0BDE  3A80               	xorlw	128
 10303  0BDF  00B8               	movwf	??_dtoa
 10304  0BE0  3080               	movlw	128
 10305  0BE1  0238               	subwf	??_dtoa,w
 10306  0BE2  1D03               	skipz
 10307  0BE3  2BE6               	goto	u2975
 10308  0BE4  3001               	movlw	1
 10309  0BE5  024C               	subwf	dtoa@i,w
 10310  0BE6                     u2975:
 10311  0BE6  1803               	btfsc	3,0
 10312  0BE7  2B50               	goto	l3743
 10313  0BE8                     l3751:
 10314                           
 10315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 10316  0BE8  0020               	movlb	0	; select bank0
 10317  0BE9  0842               	movf	dtoa@s,w
 10318  0BEA  0443               	iorwf	dtoa@s+1,w
 10319  0BEB  1D03               	btfss	3,2
 10320  0BEC  2BF0               	goto	l3755
 10321  0BED  0021               	movlb	1	; select bank1
 10322  0BEE  1D41               	btfss	_flags^(0+128),2
 10323  0BEF  2C08               	goto	l3765
 10324  0BF0                     l3755:
 10325                           
 10326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
 10327  0BF0  30FF               	movlw	255
 10328  0BF1  0020               	movlb	0	; select bank0
 10329  0BF2  07CC               	addwf	dtoa@i,f
 10330  0BF3  30FF               	movlw	255
 10331  0BF4  3DCD               	addwfc	dtoa@i+1,f
 10332                           
 10333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 10334  0BF5  0842               	movf	dtoa@s,w
 10335  0BF6  0443               	iorwf	dtoa@s+1,w
 10336  0BF7  1D03               	btfss	3,2
 10337  0BF8  2BFB               	goto	l3761
 10338  0BF9  302B               	movlw	43
 10339  0BFA  2BFC               	goto	L3
 10340  0BFB                     l3761:
 10341  0BFB  302D               	movlw	45
 10342  0BFC                     L3:
 10343  0BFC  00BC               	movwf	_dtoa$1971
 10344  0BFD  3000               	movlw	0
 10345  0BFE  00BD               	movwf	_dtoa$1971+1
 10346  0BFF  083C               	movf	_dtoa$1971,w
 10347  0C00  00B8               	movwf	??_dtoa
 10348  0C01  084C               	movf	dtoa@i,w
 10349  0C02  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10350  0C03  0086               	movwf	6
 10351  0C04  3001               	movlw	1	; select bank2/3
 10352  0C05  0087               	movwf	7
 10353  0C06  0838               	movf	??_dtoa,w
 10354  0C07  0081               	movwf	1
 10355  0C08                     l3765:
 10356                           
 10357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 10358  0C08  0020               	movlb	0	; select bank0
 10359  0C09  084C               	movf	dtoa@i,w
 10360  0C0A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10361  0C0B  00B8               	movwf	??_dtoa
 10362  0C0C  0838               	movf	??_dtoa,w
 10363  0C0D  00A7               	movwf	pad@buf
 10364  0C0E  0841               	movf	dtoa@w+1,w
 10365  0C0F  00A9               	movwf	pad@p+1
 10366  0C10  0840               	movf	dtoa@w,w
 10367  0C11  00A8               	movwf	pad@p
 10368  0C12  083B               	movf	dtoa@fp,w
 10369  0C13  3194  2488         	fcall	_pad
 10370  0C15  0828               	movf	?_pad+1,w
 10371  0C16  00B1               	movwf	?_dtoa+1
 10372  0C17  0827               	movf	?_pad,w
 10373  0C18  00B0               	movwf	?_dtoa
 10374  0C19  0008               	return
 10375  0C1A                     __end_of_dtoa:
 10376                           
 10377                           	psect	text12
 10378  1488                     __ptext12:	
 10379 ;; *************** function _pad *****************
 10380 ;; Defined at:
 10381 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  fp              1    wreg     PTR struct _IO_FILE
 10384 ;;		 -> sprintf@f(5), 
 10385 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 10386 ;;		 -> dbuf(32), 
 10387 ;;  p               2    8[BANK0 ] int 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 10390 ;;		 -> sprintf@f(5), 
 10391 ;;  w               2   12[BANK0 ] int 
 10392 ;;  i               2   10[BANK0 ] int 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  2    7[BANK0 ] int 
 10395 ;; Registers used:
 10396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 1F/0
 10399 ;;		On exit  : 1F/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10402 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;Total ram usage:        9 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    7
 10409 ;; This function calls:
 10410 ;;		_fputc
 10411 ;;		_fputs
 10412 ;;		_strlen
 10413 ;; This function is called by:
 10414 ;;		_dtoa
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function _pad
 10420  1488                     _pad:
 10421                           
 10422                           ;incstack = 0
 10423                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10424                           ;pad@fp stored from wreg
 10425  1488  00AE               	movwf	pad@fp
 10426                           
 10427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 10428  1489  0021               	movlb	1	; select bank1
 10429  148A  1C41               	btfss	_flags^(0+128),0
 10430  148B  2C95               	goto	l3653
 10431                           
 10432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 10433  148C  0020               	movlb	0	; select bank0
 10434  148D  082E               	movf	pad@fp,w
 10435  148E  00FA               	movwf	??_pad
 10436  148F  087A               	movf	??_pad,w
 10437  1490  00F9               	movwf	fputs@fp
 10438  1491  0827               	movf	pad@buf,w
 10439  1492  3192  22B1  3194   	fcall	_fputs
 10440  1495                     l3653:
 10441                           
 10442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10443  1495  0020               	movlb	0	; select bank0
 10444  1496  1BA9               	btfsc	pad@p+1,7
 10445  1497  2C9D               	goto	l3657
 10446  1498  0829               	movf	pad@p+1,w
 10447  1499  00AD               	movwf	pad@w+1
 10448  149A  0828               	movf	pad@p,w
 10449  149B  00AC               	movwf	pad@w
 10450  149C  2C9F               	goto	l1609
 10451  149D                     l3657:
 10452  149D  01AC               	clrf	pad@w
 10453  149E  01AD               	clrf	pad@w+1
 10454  149F                     l1609:
 10455                           
 10456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10457  149F  01AA               	clrf	pad@i
 10458  14A0  01AB               	clrf	pad@i+1
 10459  14A1                     l3663:	
 10460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10461                           
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10464  14A1  082B               	movf	pad@i+1,w
 10465  14A2  3A80               	xorlw	128
 10466  14A3  00FA               	movwf	??_pad
 10467  14A4  082D               	movf	pad@w+1,w
 10468  14A5  3A80               	xorlw	128
 10469  14A6  027A               	subwf	??_pad,w
 10470  14A7  1D03               	skipz
 10471  14A8  2CAB               	goto	u2835
 10472  14A9  082C               	movf	pad@w,w
 10473  14AA  022A               	subwf	pad@i,w
 10474  14AB                     u2835:
 10475  14AB  1803               	btfsc	3,0
 10476  14AC  2CBF               	goto	l1612
 10477                           
 10478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10479  14AD  3020               	movlw	32
 10480  14AE  00F1               	movwf	fputc@c
 10481  14AF  3000               	movlw	0
 10482  14B0  00F2               	movwf	fputc@c+1
 10483  14B1  0020               	movlb	0	; select bank0
 10484  14B2  082E               	movf	pad@fp,w
 10485  14B3  00FA               	movwf	??_pad
 10486  14B4  087A               	movf	??_pad,w
 10487  14B5  00F3               	movwf	fputc@fp
 10488  14B6  3193  2365  3194   	fcall	_fputc
 10489                           
 10490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10491  14B9  3001               	movlw	1
 10492  14BA  0020               	movlb	0	; select bank0
 10493  14BB  07AA               	addwf	pad@i,f
 10494  14BC  3000               	movlw	0
 10495  14BD  3DAB               	addwfc	pad@i+1,f
 10496  14BE  2CA1               	goto	l3663
 10497  14BF                     l1612:
 10498                           
 10499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10500  14BF  0021               	movlb	1	; select bank1
 10501  14C0  1841               	btfsc	_flags^(0+128),0
 10502  14C1  2CCB               	goto	l3667
 10503                           
 10504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10505  14C2  0020               	movlb	0	; select bank0
 10506  14C3  082E               	movf	pad@fp,w
 10507  14C4  00FA               	movwf	??_pad
 10508  14C5  087A               	movf	??_pad,w
 10509  14C6  00F9               	movwf	fputs@fp
 10510  14C7  0827               	movf	pad@buf,w
 10511  14C8  3192  22B1  3194   	fcall	_fputs
 10512  14CB                     l3667:
 10513                           
 10514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10515  14CB  0020               	movlb	0	; select bank0
 10516  14CC  0827               	movf	pad@buf,w
 10517  14CD  3192  2222         	fcall	_strlen
 10518  14CF  082C               	movf	pad@w,w
 10519  14D0  0771               	addwf	?_strlen,w
 10520  14D1  00A7               	movwf	?_pad
 10521  14D2  082D               	movf	pad@w+1,w
 10522  14D3  3D72               	addwfc	?_strlen+1,w
 10523  14D4  00A8               	movwf	?_pad+1
 10524  14D5  0008               	return
 10525  14D6                     __end_of_pad:
 10526                           
 10527                           	psect	text13
 10528  1222                     __ptext13:	
 10529 ;; *************** function _strlen *****************
 10530 ;; Defined at:
 10531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  s               1    wreg     PTR const unsigned char 
 10534 ;;		 -> dbuf(32), 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  s               1    5[COMMON] PTR const unsigned char 
 10537 ;;		 -> dbuf(32), 
 10538 ;;  a               1    4[COMMON] PTR const unsigned char 
 10539 ;;		 -> dbuf(32), 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2    1[COMMON] unsigned int 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10544 ;; Tracked objects:
 10545 ;;		On entry : 1F/0
 10546 ;;		On exit  : 1F/0
 10547 ;;		Unchanged: 1F/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        5 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    4
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_pad
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           
 10564                           ;psect for function _strlen
 10565  1222                     _strlen:
 10566                           
 10567                           ;incstack = 0
 10568                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10569                           ;strlen@s stored from wreg
 10570  1222  00F5               	movwf	strlen@s
 10571  1223  0875               	movf	strlen@s,w
 10572  1224  00F3               	movwf	??_strlen
 10573  1225  0873               	movf	??_strlen,w
 10574  1226  00F4               	movwf	strlen@a
 10575  1227                     l2691:
 10576  1227  0875               	movf	strlen@s,w
 10577  1228  0086               	movwf	6
 10578  1229  3001               	movlw	1	; select bank2/3
 10579  122A  0087               	movwf	7
 10580  122B  0801               	movf	1,w
 10581  122C  1903               	btfsc	3,2
 10582  122D  2A33               	goto	l2693
 10583  122E  3001               	movlw	1
 10584  122F  00F3               	movwf	??_strlen
 10585  1230  0873               	movf	??_strlen,w
 10586  1231  07F5               	addwf	strlen@s,f
 10587  1232  2A27               	goto	l2691
 10588  1233                     l2693:
 10589  1233  0874               	movf	strlen@a,w
 10590  1234  0275               	subwf	strlen@s,w
 10591  1235  00F1               	movwf	?_strlen
 10592  1236  01F2               	clrf	?_strlen+1
 10593  1237  1BF1               	btfsc	?_strlen,7
 10594  1238  03F2               	decf	?_strlen+1,f
 10595  1239  0008               	return
 10596  123A                     __end_of_strlen:
 10597                           
 10598                           	psect	text14
 10599  12B1                     __ptext14:	
 10600 ;; *************** function _fputs *****************
 10601 ;; Defined at:
 10602 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  s               1    wreg     PTR const unsigned char 
 10605 ;;		 -> dbuf(32), 
 10606 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
 10607 ;;		 -> sprintf@f(5), 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 10610 ;;		 -> dbuf(32), 
 10611 ;;  i               2    4[BANK0 ] int 
 10612 ;;  c               1    3[BANK0 ] unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  2    9[COMMON] int 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 1F/0
 10619 ;;		On exit  : 1F/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10622 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;Total ram usage:        8 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    6
 10629 ;; This function calls:
 10630 ;;		_fputc
 10631 ;; This function is called by:
 10632 ;;		_pad
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           
 10637                           ;psect for function _fputs
 10638  12B1                     _fputs:
 10639                           
 10640                           ;incstack = 0
 10641                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10642                           ;fputs@s stored from wreg
 10643  12B1  00A6               	movwf	fputs@s
 10644  12B2  01A4               	clrf	fputs@i
 10645  12B3  01A5               	clrf	fputs@i+1
 10646  12B4                     l3641:
 10647  12B4  0824               	movf	fputs@i,w
 10648  12B5  0726               	addwf	fputs@s,w
 10649  12B6  00A0               	movwf	??_fputs
 10650  12B7  0820               	movf	??_fputs,w
 10651  12B8  0086               	movwf	6
 10652  12B9  3001               	movlw	1	; select bank2/3
 10653  12BA  0087               	movwf	7
 10654  12BB  0801               	movf	1,w
 10655  12BC  00A1               	movwf	??_fputs+1
 10656  12BD  0821               	movf	??_fputs+1,w
 10657  12BE  00A3               	movwf	fputs@c
 10658  12BF  0823               	movf	fputs@c,w
 10659  12C0  1903               	btfsc	3,2
 10660  12C1  0008               	return
 10661  12C2  0823               	movf	fputs@c,w
 10662  12C3  00A0               	movwf	??_fputs
 10663  12C4  01A1               	clrf	??_fputs+1
 10664  12C5  0820               	movf	??_fputs,w
 10665  12C6  00F1               	movwf	fputc@c
 10666  12C7  0821               	movf	??_fputs+1,w
 10667  12C8  00F2               	movwf	fputc@c+1
 10668  12C9  0879               	movf	fputs@fp,w
 10669  12CA  00A2               	movwf	??_fputs+2
 10670  12CB  0822               	movf	??_fputs+2,w
 10671  12CC  00F3               	movwf	fputc@fp
 10672  12CD  3193  2365  3192   	fcall	_fputc
 10673  12D0  3001               	movlw	1
 10674  12D1  0020               	movlb	0	; select bank0
 10675  12D2  07A4               	addwf	fputs@i,f
 10676  12D3  3000               	movlw	0
 10677  12D4  3DA5               	addwfc	fputs@i+1,f
 10678  12D5  2AB4               	goto	l3641
 10679  12D6                     __end_of_fputs:
 10680                           
 10681                           	psect	text15
 10682  1365                     __ptext15:	
 10683 ;; *************** function _fputc *****************
 10684 ;; Defined at:
 10685 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  c               2    1[COMMON] int 
 10688 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
 10689 ;;		 -> sprintf@f(5), 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  2    1[COMMON] int 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 1F/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10701 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10703 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;Total ram usage:        8 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    5
 10708 ;; This function calls:
 10709 ;;		_putch
 10710 ;; This function is called by:
 10711 ;;		_pad
 10712 ;;		_vfpfcnvrt
 10713 ;;		_fputs
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           
 10718                           ;psect for function _fputc
 10719  1365                     _fputc:
 10720                           
 10721                           ;incstack = 0
 10722                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10723  1365  0873               	movf	fputc@fp,w
 10724  1366  1D03               	btfss	3,2
 10725  1367  0873               	movf	fputc@fp,w
 10726  1368  1D03               	btfss	3,2
 10727  1369  2B6E               	goto	l2663
 10728  136A  0871               	movf	fputc@c,w
 10729  136B  3180  2003         	fcall	_putch
 10730  136D  0008               	return
 10731  136E                     l2663:
 10732  136E  0873               	movf	fputc@fp,w
 10733  136F  3E03               	addlw	3
 10734  1370  0086               	movwf	6
 10735  1371  0187               	clrf	7
 10736  1372  0016               	moviw fsr1++
 10737  1373  0401               	iorwf	1,w
 10738  1374  1903               	btfsc	3,2
 10739  1375  2B91               	goto	l2667
 10740  1376  0873               	movf	fputc@fp,w
 10741  1377  3E03               	addlw	3
 10742  1378  0086               	movwf	6
 10743  1379  0187               	clrf	7
 10744  137A  3F40               	moviw [0]fsr1
 10745  137B  00F4               	movwf	??_fputc
 10746  137C  3F41               	moviw [1]fsr1
 10747  137D  00F5               	movwf	??_fputc+1
 10748  137E  0A73               	incf	fputc@fp,w
 10749  137F  0086               	movwf	6
 10750  1380  0187               	clrf	7
 10751  1381  3F40               	moviw [0]fsr1
 10752  1382  00F6               	movwf	??_fputc+2
 10753  1383  3F41               	moviw [1]fsr1
 10754  1384  00F7               	movwf	??_fputc+3
 10755  1385  0877               	movf	??_fputc+3,w
 10756  1386  3A80               	xorlw	128
 10757  1387  00F8               	movwf	??_fputc+4
 10758  1388  0875               	movf	??_fputc+1,w
 10759  1389  3A80               	xorlw	128
 10760  138A  0278               	subwf	??_fputc+4,w
 10761  138B  1D03               	skipz
 10762  138C  2B8F               	goto	u1435
 10763  138D  0874               	movf	??_fputc,w
 10764  138E  0276               	subwf	??_fputc+2,w
 10765  138F                     u1435:
 10766  138F  1803               	skipnc
 10767  1390  0008               	return
 10768  1391                     l2667:
 10769  1391  0871               	movf	fputc@c,w
 10770  1392  00F4               	movwf	??_fputc
 10771  1393  0873               	movf	fputc@fp,w
 10772  1394  0086               	movwf	6
 10773  1395  0187               	clrf	7
 10774  1396  0A73               	incf	fputc@fp,w
 10775  1397  0084               	movwf	4
 10776  1398  0185               	clrf	5
 10777  1399  0800               	movf	0,w
 10778  139A  0701               	addwf	1,w
 10779  139B  00F5               	movwf	??_fputc+1
 10780  139C  0875               	movf	??_fputc+1,w
 10781  139D  0086               	movwf	6
 10782  139E  0187               	clrf	7
 10783  139F  0874               	movf	??_fputc,w
 10784  13A0  0081               	movwf	1
 10785  13A1  0A73               	incf	fputc@fp,w
 10786  13A2  0086               	movwf	6
 10787  13A3  0187               	clrf	7
 10788  13A4  3001               	movlw	1
 10789  13A5  0781               	addwf	1,f
 10790  13A6  3141               	addfsr 1,1
 10791  13A7  1803               	skipnc
 10792  13A8  0A81               	incf	1,f
 10793  13A9  0008               	return
 10794  13AA                     __end_of_fputc:
 10795                           
 10796                           	psect	text16
 10797  0003                     __ptext16:	
 10798 ;; *************** function _putch *****************
 10799 ;; Defined at:
 10800 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  c               1    wreg     unsigned char 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  c               1    0[COMMON] unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg
 10809 ;; Tracked objects:
 10810 ;;		On entry : 1F/0
 10811 ;;		On exit  : 1F/0
 10812 ;;		Unchanged: 1F/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        0 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    4
 10821 ;; This function calls:
 10822 ;;		Nothing
 10823 ;; This function is called by:
 10824 ;;		_fputc
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           
 10829                           ;psect for function _putch
 10830  0003                     _putch:
 10831                           
 10832                           ;incstack = 0
 10833                           ; Regs used in _putch: [wreg]
 10834  0003  0008               	return
 10835  0004                     __end_of_putch:
 10836                           
 10837                           	psect	text17
 10838  120B                     __ptext17:	
 10839 ;; *************** function _abs *****************
 10840 ;; Defined at:
 10841 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  a               2    4[COMMON] int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  2    4[COMMON] int 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 1F/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        4 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    4
 10862 ;; This function calls:
 10863 ;;		Nothing
 10864 ;; This function is called by:
 10865 ;;		_dtoa
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           
 10870                           ;psect for function _abs
 10871  120B                     _abs:
 10872                           
 10873                           ;incstack = 0
 10874                           ; Regs used in _abs: [wreg+status,2+status,0]
 10875  120B  0875               	movf	abs@a+1,w
 10876  120C  3A80               	xorlw	128
 10877  120D  00F6               	movwf	??_abs
 10878  120E  3080               	movlw	128
 10879  120F  0276               	subwf	??_abs,w
 10880  1210  1D03               	skipz
 10881  1211  2A14               	goto	u1475
 10882  1212  3001               	movlw	1
 10883  1213  0274               	subwf	abs@a,w
 10884  1214                     u1475:
 10885  1214  1803               	skipnc
 10886  1215  0008               	return
 10887  1216  0974               	comf	abs@a,w
 10888  1217  00F6               	movwf	??_abs
 10889  1218  0975               	comf	abs@a+1,w
 10890  1219  00F7               	movwf	??_abs+1
 10891  121A  0AF6               	incf	??_abs,f
 10892  121B  1903               	skipnz
 10893  121C  0AF7               	incf	??_abs+1,f
 10894  121D  0876               	movf	??_abs,w
 10895  121E  00F4               	movwf	?_abs
 10896  121F  0877               	movf	??_abs+1,w
 10897  1220  00F5               	movwf	?_abs+1
 10898  1221  0008               	return
 10899  1222                     __end_of_abs:
 10900                           
 10901                           	psect	text18
 10902  08FE                     __ptext18:	
 10903 ;; *************** function ___aomod *****************
 10904 ;; Defined at:
 10905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  divisor         8    0[BANK0 ] long long 
 10908 ;;  dividend        8    8[BANK0 ] long long 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  sign            1    3[COMMON] unsigned char 
 10911 ;;  counter         1    2[COMMON] unsigned char 
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  8    0[BANK0 ] long long 
 10914 ;; Registers used:
 10915 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10916 ;; Tracked objects:
 10917 ;;		On entry : 1F/0
 10918 ;;		On exit  : 1F/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10921 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;Total ram usage:       19 bytes
 10926 ;; Hardware stack levels used:    1
 10927 ;; Hardware stack levels required when called:    4
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_dtoa
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function ___aomod
 10937  08FE                     ___aomod:
 10938                           
 10939                           ;incstack = 0
 10940                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 10941  08FE  01F3               	clrf	___aomod@sign
 10942  08FF  3028               	movlw	low ___aomod@dividend
 10943  0900  0086               	movwf	6
 10944  0901  3000               	movlw	high ___aomod@dividend
 10945  0902  0087               	movwf	7
 10946  0903  3F47               	moviw [7]fsr1
 10947  0904  00F1               	movwf	??___aomod
 10948  0905  1FF1               	btfss	??___aomod,7
 10949  0906  2928               	goto	l2751
 10950  0907  0020               	movlb	0	; select bank0
 10951  0908  09A8               	comf	___aomod@dividend,f
 10952  0909  09A9               	comf	___aomod@dividend+1,f
 10953  090A  09AA               	comf	___aomod@dividend+2,f
 10954  090B  09AB               	comf	___aomod@dividend+3,f
 10955  090C  09AC               	comf	___aomod@dividend+4,f
 10956  090D  09AD               	comf	___aomod@dividend+5,f
 10957  090E  09AE               	comf	___aomod@dividend+6,f
 10958  090F  09AF               	comf	___aomod@dividend+7,f
 10959  0910  0AA8               	incf	___aomod@dividend,f
 10960  0911  1D03               	skipz
 10961  0912  2926               	goto	u160lld
 10962  0913  0AA9               	incf	___aomod@dividend+1,f
 10963  0914  1D03               	skipz
 10964  0915  2926               	goto	u160lld
 10965  0916  0AAA               	incf	___aomod@dividend+2,f
 10966  0917  1D03               	skipz
 10967  0918  2926               	goto	u160lld
 10968  0919  0AAB               	incf	___aomod@dividend+3,f
 10969  091A  1D03               	skipz
 10970  091B  2926               	goto	u160lld
 10971  091C  0AAC               	incf	___aomod@dividend+4,f
 10972  091D  1D03               	skipz
 10973  091E  2926               	goto	u160lld
 10974  091F  0AAD               	incf	___aomod@dividend+5,f
 10975  0920  1D03               	skipz
 10976  0921  2926               	goto	u160lld
 10977  0922  0AAE               	incf	___aomod@dividend+6,f
 10978  0923  1D03               	skipz
 10979  0924  2926               	goto	u160lld
 10980  0925  0AAF               	incf	___aomod@dividend+7,f
 10981  0926                     u160lld:
 10982  0926  01F3               	clrf	___aomod@sign
 10983  0927  0AF3               	incf	___aomod@sign,f
 10984  0928                     l2751:
 10985  0928  3020               	movlw	low ___aomod@divisor
 10986  0929  0086               	movwf	6
 10987  092A  3000               	movlw	high ___aomod@divisor
 10988  092B  0087               	movwf	7
 10989  092C  3F47               	moviw [7]fsr1
 10990  092D  00F1               	movwf	??___aomod
 10991  092E  1FF1               	btfss	??___aomod,7
 10992  092F  294F               	goto	l2755
 10993  0930  0020               	movlb	0	; select bank0
 10994  0931  09A0               	comf	___aomod@divisor,f
 10995  0932  09A1               	comf	___aomod@divisor+1,f
 10996  0933  09A2               	comf	___aomod@divisor+2,f
 10997  0934  09A3               	comf	___aomod@divisor+3,f
 10998  0935  09A4               	comf	___aomod@divisor+4,f
 10999  0936  09A5               	comf	___aomod@divisor+5,f
 11000  0937  09A6               	comf	___aomod@divisor+6,f
 11001  0938  09A7               	comf	___aomod@divisor+7,f
 11002  0939  0AA0               	incf	___aomod@divisor,f
 11003  093A  1D03               	skipz
 11004  093B  294F               	goto	l2755
 11005  093C  0AA1               	incf	___aomod@divisor+1,f
 11006  093D  1D03               	skipz
 11007  093E  294F               	goto	l2755
 11008  093F  0AA2               	incf	___aomod@divisor+2,f
 11009  0940  1D03               	skipz
 11010  0941  294F               	goto	l2755
 11011  0942  0AA3               	incf	___aomod@divisor+3,f
 11012  0943  1D03               	skipz
 11013  0944  294F               	goto	l2755
 11014  0945  0AA4               	incf	___aomod@divisor+4,f
 11015  0946  1D03               	skipz
 11016  0947  294F               	goto	l2755
 11017  0948  0AA5               	incf	___aomod@divisor+5,f
 11018  0949  1D03               	skipz
 11019  094A  294F               	goto	l2755
 11020  094B  0AA6               	incf	___aomod@divisor+6,f
 11021  094C  1D03               	skipz
 11022  094D  294F               	goto	l2755
 11023  094E  0AA7               	incf	___aomod@divisor+7,f
 11024  094F                     l2755:
 11025  094F  0020               	movlb	0	; select bank0
 11026  0950  0820               	movf	___aomod@divisor,w
 11027  0951  0421               	iorwf	___aomod@divisor+1,w
 11028  0952  0422               	iorwf	___aomod@divisor+2,w
 11029  0953  0423               	iorwf	___aomod@divisor+3,w
 11030  0954  0424               	iorwf	___aomod@divisor+4,w
 11031  0955  0425               	iorwf	___aomod@divisor+5,w
 11032  0956  0426               	iorwf	___aomod@divisor+6,w
 11033  0957  0427               	iorwf	___aomod@divisor+7,w
 11034  0958  1903               	skipnz
 11035  0959  29A7               	goto	l2771
 11036  095A  01F2               	clrf	___aomod@counter
 11037  095B  0AF2               	incf	___aomod@counter,f
 11038  095C                     l2763:
 11039  095C  1BA7               	btfsc	___aomod@divisor+7,7
 11040  095D  296B               	goto	l2765
 11041  095E  35A0               	lslf	___aomod@divisor,f
 11042  095F  0DA1               	rlf	___aomod@divisor+1,f
 11043  0960  0DA2               	rlf	___aomod@divisor+2,f
 11044  0961  0DA3               	rlf	___aomod@divisor+3,f
 11045  0962  0DA4               	rlf	___aomod@divisor+4,f
 11046  0963  0DA5               	rlf	___aomod@divisor+5,f
 11047  0964  0DA6               	rlf	___aomod@divisor+6,f
 11048  0965  0DA7               	rlf	___aomod@divisor+7,f
 11049  0966  3001               	movlw	1
 11050  0967  00F1               	movwf	??___aomod
 11051  0968  0871               	movf	??___aomod,w
 11052  0969  07F2               	addwf	___aomod@counter,f
 11053  096A  295C               	goto	l2763
 11054  096B                     l2765:
 11055  096B  0827               	movf	___aomod@divisor+7,w
 11056  096C  022F               	subwf	___aomod@dividend+7,w
 11057  096D  1D03               	skipz
 11058  096E  2989               	goto	u1655
 11059  096F  0826               	movf	___aomod@divisor+6,w
 11060  0970  022E               	subwf	___aomod@dividend+6,w
 11061  0971  1D03               	skipz
 11062  0972  2989               	goto	u1655
 11063  0973  0825               	movf	___aomod@divisor+5,w
 11064  0974  022D               	subwf	___aomod@dividend+5,w
 11065  0975  1D03               	skipz
 11066  0976  2989               	goto	u1655
 11067  0977  0824               	movf	___aomod@divisor+4,w
 11068  0978  022C               	subwf	___aomod@dividend+4,w
 11069  0979  1D03               	skipz
 11070  097A  2989               	goto	u1655
 11071  097B  0823               	movf	___aomod@divisor+3,w
 11072  097C  022B               	subwf	___aomod@dividend+3,w
 11073  097D  1D03               	skipz
 11074  097E  2989               	goto	u1655
 11075  097F  0822               	movf	___aomod@divisor+2,w
 11076  0980  022A               	subwf	___aomod@dividend+2,w
 11077  0981  1D03               	skipz
 11078  0982  2989               	goto	u1655
 11079  0983  0821               	movf	___aomod@divisor+1,w
 11080  0984  0229               	subwf	___aomod@dividend+1,w
 11081  0985  1D03               	skipz
 11082  0986  2989               	goto	u1655
 11083  0987  0820               	movf	___aomod@divisor,w
 11084  0988  0228               	subwf	___aomod@dividend,w
 11085  0989                     u1655:
 11086  0989  1C03               	skipc
 11087  098A  299B               	goto	l2769
 11088  098B  0820               	movf	___aomod@divisor,w
 11089  098C  02A8               	subwf	___aomod@dividend,f
 11090  098D  0821               	movf	___aomod@divisor+1,w
 11091  098E  3BA9               	subwfb	___aomod@dividend+1,f
 11092  098F  0822               	movf	___aomod@divisor+2,w
 11093  0990  3BAA               	subwfb	___aomod@dividend+2,f
 11094  0991  0823               	movf	___aomod@divisor+3,w
 11095  0992  3BAB               	subwfb	___aomod@dividend+3,f
 11096  0993  0824               	movf	___aomod@divisor+4,w
 11097  0994  3BAC               	subwfb	___aomod@dividend+4,f
 11098  0995  0825               	movf	___aomod@divisor+5,w
 11099  0996  3BAD               	subwfb	___aomod@dividend+5,f
 11100  0997  0826               	movf	___aomod@divisor+6,w
 11101  0998  3BAE               	subwfb	___aomod@dividend+6,f
 11102  0999  0827               	movf	___aomod@divisor+7,w
 11103  099A  3BAF               	subwfb	___aomod@dividend+7,f
 11104  099B                     l2769:
 11105  099B  36A7               	lsrf	___aomod@divisor+7,f
 11106  099C  0CA6               	rrf	___aomod@divisor+6,f
 11107  099D  0CA5               	rrf	___aomod@divisor+5,f
 11108  099E  0CA4               	rrf	___aomod@divisor+4,f
 11109  099F  0CA3               	rrf	___aomod@divisor+3,f
 11110  09A0  0CA2               	rrf	___aomod@divisor+2,f
 11111  09A1  0CA1               	rrf	___aomod@divisor+1,f
 11112  09A2  0CA0               	rrf	___aomod@divisor,f
 11113  09A3  3001               	movlw	1
 11114  09A4  02F2               	subwf	___aomod@counter,f
 11115  09A5  1D03               	btfss	3,2
 11116  09A6  296B               	goto	l2765
 11117  09A7                     l2771:
 11118  09A7  0873               	movf	___aomod@sign,w
 11119  09A8  1903               	btfsc	3,2
 11120  09A9  29C8               	goto	l1225
 11121  09AA  09A8               	comf	___aomod@dividend,f
 11122  09AB  09A9               	comf	___aomod@dividend+1,f
 11123  09AC  09AA               	comf	___aomod@dividend+2,f
 11124  09AD  09AB               	comf	___aomod@dividend+3,f
 11125  09AE  09AC               	comf	___aomod@dividend+4,f
 11126  09AF  09AD               	comf	___aomod@dividend+5,f
 11127  09B0  09AE               	comf	___aomod@dividend+6,f
 11128  09B1  09AF               	comf	___aomod@dividend+7,f
 11129  09B2  0AA8               	incf	___aomod@dividend,f
 11130  09B3  1D03               	skipz
 11131  09B4  29C8               	goto	l1225
 11132  09B5  0AA9               	incf	___aomod@dividend+1,f
 11133  09B6  1D03               	skipz
 11134  09B7  29C8               	goto	l1225
 11135  09B8  0AAA               	incf	___aomod@dividend+2,f
 11136  09B9  1D03               	skipz
 11137  09BA  29C8               	goto	l1225
 11138  09BB  0AAB               	incf	___aomod@dividend+3,f
 11139  09BC  1D03               	skipz
 11140  09BD  29C8               	goto	l1225
 11141  09BE  0AAC               	incf	___aomod@dividend+4,f
 11142  09BF  1D03               	skipz
 11143  09C0  29C8               	goto	l1225
 11144  09C1  0AAD               	incf	___aomod@dividend+5,f
 11145  09C2  1D03               	skipz
 11146  09C3  29C8               	goto	l1225
 11147  09C4  0AAE               	incf	___aomod@dividend+6,f
 11148  09C5  1D03               	skipz
 11149  09C6  29C8               	goto	l1225
 11150  09C7  0AAF               	incf	___aomod@dividend+7,f
 11151  09C8                     l1225:
 11152  09C8  0020               	movlb	0	; select bank0
 11153  09C9  0828               	movf	___aomod@dividend,w
 11154  09CA  00A0               	movwf	?___aomod
 11155  09CB  0829               	movf	___aomod@dividend+1,w
 11156  09CC  00A1               	movwf	?___aomod+1
 11157  09CD  082A               	movf	___aomod@dividend+2,w
 11158  09CE  00A2               	movwf	?___aomod+2
 11159  09CF  082B               	movf	___aomod@dividend+3,w
 11160  09D0  00A3               	movwf	?___aomod+3
 11161  09D1  082C               	movf	___aomod@dividend+4,w
 11162  09D2  00A4               	movwf	?___aomod+4
 11163  09D3  082D               	movf	___aomod@dividend+5,w
 11164  09D4  00A5               	movwf	?___aomod+5
 11165  09D5  082E               	movf	___aomod@dividend+6,w
 11166  09D6  00A6               	movwf	?___aomod+6
 11167  09D7  082F               	movf	___aomod@dividend+7,w
 11168  09D8  00A7               	movwf	?___aomod+7
 11169  09D9  0008               	return
 11170  09DA                     __end_of___aomod:
 11171                           
 11172                           	psect	text19
 11173  09DA                     __ptext19:	
 11174 ;; *************** function ___aodiv *****************
 11175 ;; Defined at:
 11176 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  divisor         8    0[BANK0 ] long long 
 11179 ;;  dividend        8    8[BANK0 ] long long 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  quotient        8    4[COMMON] long long 
 11182 ;;  sign            1    3[COMMON] unsigned char 
 11183 ;;  counter         1    2[COMMON] unsigned char 
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  8    0[BANK0 ] long long 
 11186 ;; Registers used:
 11187 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11188 ;; Tracked objects:
 11189 ;;		On entry : 1F/0
 11190 ;;		On exit  : 1F/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:       27 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; Hardware stack levels required when called:    4
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_dtoa
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           
 11208                           ;psect for function ___aodiv
 11209  09DA                     ___aodiv:
 11210                           
 11211                           ;incstack = 0
 11212                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 11213  09DA  01F3               	clrf	___aodiv@sign
 11214  09DB  3020               	movlw	low ___aodiv@divisor
 11215  09DC  0086               	movwf	6
 11216  09DD  3000               	movlw	high ___aodiv@divisor
 11217  09DE  0087               	movwf	7
 11218  09DF  3F47               	moviw [7]fsr1
 11219  09E0  00F1               	movwf	??___aodiv
 11220  09E1  1FF1               	btfss	??___aodiv,7
 11221  09E2  2A04               	goto	l2713
 11222  09E3  0020               	movlb	0	; select bank0
 11223  09E4  09A0               	comf	___aodiv@divisor,f
 11224  09E5  09A1               	comf	___aodiv@divisor+1,f
 11225  09E6  09A2               	comf	___aodiv@divisor+2,f
 11226  09E7  09A3               	comf	___aodiv@divisor+3,f
 11227  09E8  09A4               	comf	___aodiv@divisor+4,f
 11228  09E9  09A5               	comf	___aodiv@divisor+5,f
 11229  09EA  09A6               	comf	___aodiv@divisor+6,f
 11230  09EB  09A7               	comf	___aodiv@divisor+7,f
 11231  09EC  0AA0               	incf	___aodiv@divisor,f
 11232  09ED  1D03               	skipz
 11233  09EE  2A02               	goto	u149lld
 11234  09EF  0AA1               	incf	___aodiv@divisor+1,f
 11235  09F0  1D03               	skipz
 11236  09F1  2A02               	goto	u149lld
 11237  09F2  0AA2               	incf	___aodiv@divisor+2,f
 11238  09F3  1D03               	skipz
 11239  09F4  2A02               	goto	u149lld
 11240  09F5  0AA3               	incf	___aodiv@divisor+3,f
 11241  09F6  1D03               	skipz
 11242  09F7  2A02               	goto	u149lld
 11243  09F8  0AA4               	incf	___aodiv@divisor+4,f
 11244  09F9  1D03               	skipz
 11245  09FA  2A02               	goto	u149lld
 11246  09FB  0AA5               	incf	___aodiv@divisor+5,f
 11247  09FC  1D03               	skipz
 11248  09FD  2A02               	goto	u149lld
 11249  09FE  0AA6               	incf	___aodiv@divisor+6,f
 11250  09FF  1D03               	skipz
 11251  0A00  2A02               	goto	u149lld
 11252  0A01  0AA7               	incf	___aodiv@divisor+7,f
 11253  0A02                     u149lld:
 11254  0A02  01F3               	clrf	___aodiv@sign
 11255  0A03  0AF3               	incf	___aodiv@sign,f
 11256  0A04                     l2713:
 11257  0A04  3028               	movlw	low ___aodiv@dividend
 11258  0A05  0086               	movwf	6
 11259  0A06  3000               	movlw	high ___aodiv@dividend
 11260  0A07  0087               	movwf	7
 11261  0A08  3F47               	moviw [7]fsr1
 11262  0A09  00F1               	movwf	??___aodiv
 11263  0A0A  1FF1               	btfss	??___aodiv,7
 11264  0A0B  2A2F               	goto	l2719
 11265  0A0C  0020               	movlb	0	; select bank0
 11266  0A0D  09A8               	comf	___aodiv@dividend,f
 11267  0A0E  09A9               	comf	___aodiv@dividend+1,f
 11268  0A0F  09AA               	comf	___aodiv@dividend+2,f
 11269  0A10  09AB               	comf	___aodiv@dividend+3,f
 11270  0A11  09AC               	comf	___aodiv@dividend+4,f
 11271  0A12  09AD               	comf	___aodiv@dividend+5,f
 11272  0A13  09AE               	comf	___aodiv@dividend+6,f
 11273  0A14  09AF               	comf	___aodiv@dividend+7,f
 11274  0A15  0AA8               	incf	___aodiv@dividend,f
 11275  0A16  1D03               	skipz
 11276  0A17  2A2B               	goto	l2717
 11277  0A18  0AA9               	incf	___aodiv@dividend+1,f
 11278  0A19  1D03               	skipz
 11279  0A1A  2A2B               	goto	l2717
 11280  0A1B  0AAA               	incf	___aodiv@dividend+2,f
 11281  0A1C  1D03               	skipz
 11282  0A1D  2A2B               	goto	l2717
 11283  0A1E  0AAB               	incf	___aodiv@dividend+3,f
 11284  0A1F  1D03               	skipz
 11285  0A20  2A2B               	goto	l2717
 11286  0A21  0AAC               	incf	___aodiv@dividend+4,f
 11287  0A22  1D03               	skipz
 11288  0A23  2A2B               	goto	l2717
 11289  0A24  0AAD               	incf	___aodiv@dividend+5,f
 11290  0A25  1D03               	skipz
 11291  0A26  2A2B               	goto	l2717
 11292  0A27  0AAE               	incf	___aodiv@dividend+6,f
 11293  0A28  1D03               	skipz
 11294  0A29  2A2B               	goto	l2717
 11295  0A2A  0AAF               	incf	___aodiv@dividend+7,f
 11296  0A2B                     l2717:
 11297  0A2B  3001               	movlw	1
 11298  0A2C  00F1               	movwf	??___aodiv
 11299  0A2D  0871               	movf	??___aodiv,w
 11300  0A2E  06F3               	xorwf	___aodiv@sign,f
 11301  0A2F                     l2719:
 11302  0A2F  3074               	movlw	low ___aodiv@quotient
 11303  0A30  0086               	movwf	6
 11304  0A31  3000               	movlw	high ___aodiv@quotient
 11305  0A32  0087               	movwf	7
 11306  0A33  3008               	movlw	8
 11307  0A34  00F1               	movwf	??___aodiv
 11308  0A35  3000               	movlw	0
 11309  0A36                     u1520:
 11310  0A36  001E               	movwi fsr1++
 11311  0A37  0BF1               	decfsz	??___aodiv,f
 11312  0A38  2A36               	goto	u1520
 11313  0A39  0020               	movlb	0	; select bank0
 11314  0A3A  0820               	movf	___aodiv@divisor,w
 11315  0A3B  0421               	iorwf	___aodiv@divisor+1,w
 11316  0A3C  0422               	iorwf	___aodiv@divisor+2,w
 11317  0A3D  0423               	iorwf	___aodiv@divisor+3,w
 11318  0A3E  0424               	iorwf	___aodiv@divisor+4,w
 11319  0A3F  0425               	iorwf	___aodiv@divisor+5,w
 11320  0A40  0426               	iorwf	___aodiv@divisor+6,w
 11321  0A41  0427               	iorwf	___aodiv@divisor+7,w
 11322  0A42  1903               	skipnz
 11323  0A43  2A9A               	goto	l2741
 11324  0A44  01F2               	clrf	___aodiv@counter
 11325  0A45  0AF2               	incf	___aodiv@counter,f
 11326  0A46                     l2729:
 11327  0A46  1BA7               	btfsc	___aodiv@divisor+7,7
 11328  0A47  2A55               	goto	l2731
 11329  0A48  35A0               	lslf	___aodiv@divisor,f
 11330  0A49  0DA1               	rlf	___aodiv@divisor+1,f
 11331  0A4A  0DA2               	rlf	___aodiv@divisor+2,f
 11332  0A4B  0DA3               	rlf	___aodiv@divisor+3,f
 11333  0A4C  0DA4               	rlf	___aodiv@divisor+4,f
 11334  0A4D  0DA5               	rlf	___aodiv@divisor+5,f
 11335  0A4E  0DA6               	rlf	___aodiv@divisor+6,f
 11336  0A4F  0DA7               	rlf	___aodiv@divisor+7,f
 11337  0A50  3001               	movlw	1
 11338  0A51  00F1               	movwf	??___aodiv
 11339  0A52  0871               	movf	??___aodiv,w
 11340  0A53  07F2               	addwf	___aodiv@counter,f
 11341  0A54  2A46               	goto	l2729
 11342  0A55                     l2731:
 11343  0A55  35F4               	lslf	___aodiv@quotient,f
 11344  0A56  0DF5               	rlf	___aodiv@quotient+1,f
 11345  0A57  0DF6               	rlf	___aodiv@quotient+2,f
 11346  0A58  0DF7               	rlf	___aodiv@quotient+3,f
 11347  0A59  0DF8               	rlf	___aodiv@quotient+4,f
 11348  0A5A  0DF9               	rlf	___aodiv@quotient+5,f
 11349  0A5B  0DFA               	rlf	___aodiv@quotient+6,f
 11350  0A5C  0DFB               	rlf	___aodiv@quotient+7,f
 11351  0A5D  0827               	movf	___aodiv@divisor+7,w
 11352  0A5E  022F               	subwf	___aodiv@dividend+7,w
 11353  0A5F  1D03               	skipz
 11354  0A60  2A7B               	goto	u1555
 11355  0A61  0826               	movf	___aodiv@divisor+6,w
 11356  0A62  022E               	subwf	___aodiv@dividend+6,w
 11357  0A63  1D03               	skipz
 11358  0A64  2A7B               	goto	u1555
 11359  0A65  0825               	movf	___aodiv@divisor+5,w
 11360  0A66  022D               	subwf	___aodiv@dividend+5,w
 11361  0A67  1D03               	skipz
 11362  0A68  2A7B               	goto	u1555
 11363  0A69  0824               	movf	___aodiv@divisor+4,w
 11364  0A6A  022C               	subwf	___aodiv@dividend+4,w
 11365  0A6B  1D03               	skipz
 11366  0A6C  2A7B               	goto	u1555
 11367  0A6D  0823               	movf	___aodiv@divisor+3,w
 11368  0A6E  022B               	subwf	___aodiv@dividend+3,w
 11369  0A6F  1D03               	skipz
 11370  0A70  2A7B               	goto	u1555
 11371  0A71  0822               	movf	___aodiv@divisor+2,w
 11372  0A72  022A               	subwf	___aodiv@dividend+2,w
 11373  0A73  1D03               	skipz
 11374  0A74  2A7B               	goto	u1555
 11375  0A75  0821               	movf	___aodiv@divisor+1,w
 11376  0A76  0229               	subwf	___aodiv@dividend+1,w
 11377  0A77  1D03               	skipz
 11378  0A78  2A7B               	goto	u1555
 11379  0A79  0820               	movf	___aodiv@divisor,w
 11380  0A7A  0228               	subwf	___aodiv@dividend,w
 11381  0A7B                     u1555:
 11382  0A7B  1C03               	skipc
 11383  0A7C  2A8E               	goto	l2739
 11384  0A7D  0820               	movf	___aodiv@divisor,w
 11385  0A7E  02A8               	subwf	___aodiv@dividend,f
 11386  0A7F  0821               	movf	___aodiv@divisor+1,w
 11387  0A80  3BA9               	subwfb	___aodiv@dividend+1,f
 11388  0A81  0822               	movf	___aodiv@divisor+2,w
 11389  0A82  3BAA               	subwfb	___aodiv@dividend+2,f
 11390  0A83  0823               	movf	___aodiv@divisor+3,w
 11391  0A84  3BAB               	subwfb	___aodiv@dividend+3,f
 11392  0A85  0824               	movf	___aodiv@divisor+4,w
 11393  0A86  3BAC               	subwfb	___aodiv@dividend+4,f
 11394  0A87  0825               	movf	___aodiv@divisor+5,w
 11395  0A88  3BAD               	subwfb	___aodiv@dividend+5,f
 11396  0A89  0826               	movf	___aodiv@divisor+6,w
 11397  0A8A  3BAE               	subwfb	___aodiv@dividend+6,f
 11398  0A8B  0827               	movf	___aodiv@divisor+7,w
 11399  0A8C  3BAF               	subwfb	___aodiv@dividend+7,f
 11400  0A8D  1474               	bsf	___aodiv@quotient,0
 11401  0A8E                     l2739:
 11402  0A8E  36A7               	lsrf	___aodiv@divisor+7,f
 11403  0A8F  0CA6               	rrf	___aodiv@divisor+6,f
 11404  0A90  0CA5               	rrf	___aodiv@divisor+5,f
 11405  0A91  0CA4               	rrf	___aodiv@divisor+4,f
 11406  0A92  0CA3               	rrf	___aodiv@divisor+3,f
 11407  0A93  0CA2               	rrf	___aodiv@divisor+2,f
 11408  0A94  0CA1               	rrf	___aodiv@divisor+1,f
 11409  0A95  0CA0               	rrf	___aodiv@divisor,f
 11410  0A96  3001               	movlw	1
 11411  0A97  02F2               	subwf	___aodiv@counter,f
 11412  0A98  1D03               	btfss	3,2
 11413  0A99  2A55               	goto	l2731
 11414  0A9A                     l2741:
 11415  0A9A  0873               	movf	___aodiv@sign,w
 11416  0A9B  1903               	btfsc	3,2
 11417  0A9C  2ABB               	goto	l1212
 11418  0A9D  09F4               	comf	___aodiv@quotient,f
 11419  0A9E  09F5               	comf	___aodiv@quotient+1,f
 11420  0A9F  09F6               	comf	___aodiv@quotient+2,f
 11421  0AA0  09F7               	comf	___aodiv@quotient+3,f
 11422  0AA1  09F8               	comf	___aodiv@quotient+4,f
 11423  0AA2  09F9               	comf	___aodiv@quotient+5,f
 11424  0AA3  09FA               	comf	___aodiv@quotient+6,f
 11425  0AA4  09FB               	comf	___aodiv@quotient+7,f
 11426  0AA5  0AF4               	incf	___aodiv@quotient,f
 11427  0AA6  1D03               	skipz
 11428  0AA7  2ABB               	goto	l1212
 11429  0AA8  0AF5               	incf	___aodiv@quotient+1,f
 11430  0AA9  1D03               	skipz
 11431  0AAA  2ABB               	goto	l1212
 11432  0AAB  0AF6               	incf	___aodiv@quotient+2,f
 11433  0AAC  1D03               	skipz
 11434  0AAD  2ABB               	goto	l1212
 11435  0AAE  0AF7               	incf	___aodiv@quotient+3,f
 11436  0AAF  1D03               	skipz
 11437  0AB0  2ABB               	goto	l1212
 11438  0AB1  0AF8               	incf	___aodiv@quotient+4,f
 11439  0AB2  1D03               	skipz
 11440  0AB3  2ABB               	goto	l1212
 11441  0AB4  0AF9               	incf	___aodiv@quotient+5,f
 11442  0AB5  1D03               	skipz
 11443  0AB6  2ABB               	goto	l1212
 11444  0AB7  0AFA               	incf	___aodiv@quotient+6,f
 11445  0AB8  1D03               	skipz
 11446  0AB9  2ABB               	goto	l1212
 11447  0ABA  0AFB               	incf	___aodiv@quotient+7,f
 11448  0ABB                     l1212:
 11449  0ABB  0874               	movf	___aodiv@quotient,w
 11450  0ABC  0020               	movlb	0	; select bank0
 11451  0ABD  00A0               	movwf	?___aodiv
 11452  0ABE  0875               	movf	___aodiv@quotient+1,w
 11453  0ABF  00A1               	movwf	?___aodiv+1
 11454  0AC0  0876               	movf	___aodiv@quotient+2,w
 11455  0AC1  00A2               	movwf	?___aodiv+2
 11456  0AC2  0877               	movf	___aodiv@quotient+3,w
 11457  0AC3  00A3               	movwf	?___aodiv+3
 11458  0AC4  0878               	movf	___aodiv@quotient+4,w
 11459  0AC5  00A4               	movwf	?___aodiv+4
 11460  0AC6  0879               	movf	___aodiv@quotient+5,w
 11461  0AC7  00A5               	movwf	?___aodiv+5
 11462  0AC8  087A               	movf	___aodiv@quotient+6,w
 11463  0AC9  00A6               	movwf	?___aodiv+6
 11464  0ACA  087B               	movf	___aodiv@quotient+7,w
 11465  0ACB  00A7               	movwf	?___aodiv+7
 11466  0ACC  0008               	return
 11467  0ACD                     __end_of___aodiv:
 11468                           
 11469                           	psect	text20
 11470  13F2                     __ptext20:	
 11471 ;; *************** function _setRotation *****************
 11472 ;; Defined at:
 11473 ;;		line 171 in file "ILI9341.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;  m               1    wreg     unsigned char 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  m               1    5[COMMON] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      void 
 11480 ;; Registers used:
 11481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : 1F/0
 11484 ;;		On exit  : 1F/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;Total ram usage:        3 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    6
 11494 ;; This function calls:
 11495 ;;		_SPI1_ExchangeByte
 11496 ;;		_endWrite
 11497 ;;		_startWrite
 11498 ;;		_writeCommand
 11499 ;; This function is called by:
 11500 ;;		_dibujarMarcador
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           
 11505                           ;psect for function _setRotation
 11506  13F2                     _setRotation:
 11507                           
 11508                           ;incstack = 0
 11509                           ; Regs used in _setRotation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11510                           ;setRotation@m stored from wreg
 11511  13F2  00F5               	movwf	setRotation@m
 11512                           
 11513                           ;ILI9341.c: 172:   rotation = m % 4;
 11514  13F3  0875               	movf	setRotation@m,w
 11515  13F4  3903               	andlw	3
 11516  13F5  00F3               	movwf	??_setRotation
 11517  13F6  0873               	movf	??_setRotation,w
 11518  13F7  0021               	movlb	1	; select bank1
 11519  13F8  00CE               	movwf	_rotation^(0+128)
 11520                           
 11521                           ;ILI9341.c: 173:     switch (rotation) {
 11522  13F9  2C17               	goto	l4067
 11523  13FA                     l4057:
 11524                           
 11525                           ;ILI9341.c: 175:             m = (0x40 | 0x08);
 11526  13FA  3048               	movlw	72
 11527  13FB  2BFF               	goto	L8
 11528  13FC                     l4059:	
 11529                           ;ILI9341.c: 178:             break;
 11530                           
 11531                           ;ILI9341.c: 177:             _height = 320;
 11532                           
 11533                           ;ILI9341.c: 176:             _width = 240;
 11534                           
 11535                           
 11536                           ;ILI9341.c: 180:             m = (0x20 | 0x08);
 11537  13FC  3028               	movlw	40
 11538  13FD  2C0B               	goto	L7
 11539  13FE                     l4061:	
 11540                           ;ILI9341.c: 183:             break;
 11541                           
 11542                           ;ILI9341.c: 182:             _height = 240;
 11543                           
 11544                           ;ILI9341.c: 181:             _width = 320;
 11545                           
 11546                           
 11547                           ;ILI9341.c: 185:             m = (0x80 | 0x08);
 11548  13FE  3088               	movlw	136
 11549  13FF                     L8:
 11550  13FF  00F3               	movwf	??_setRotation
 11551  1400  0873               	movf	??_setRotation,w
 11552  1401  00F5               	movwf	setRotation@m
 11553                           
 11554                           ;ILI9341.c: 186:             _width = 240;
 11555  1402  30F0               	movlw	240
 11556  1403  00C9               	movwf	__width^(0+128)
 11557  1404  3000               	movlw	0
 11558  1405  00CA               	movwf	(__width^(0+128)+1)
 11559                           
 11560                           ;ILI9341.c: 187:             _height = 320;
 11561  1406  3040               	movlw	64
 11562  1407  00C7               	movwf	__height^(0+128)
 11563  1408  3001               	movlw	1
 11564  1409  2C15               	goto	L6
 11565  140A                     l4063:	
 11566                           ;ILI9341.c: 188:             break;
 11567                           
 11568                           
 11569                           ;ILI9341.c: 190:             m = (0x40 | 0x80 | 0x20 | 0x08);
 11570  140A  30E8               	movlw	232
 11571  140B                     L7:
 11572  140B  00F3               	movwf	??_setRotation
 11573  140C  0873               	movf	??_setRotation,w
 11574  140D  00F5               	movwf	setRotation@m
 11575                           
 11576                           ;ILI9341.c: 191:             _width = 320;
 11577  140E  3040               	movlw	64
 11578  140F  00C9               	movwf	__width^(0+128)
 11579  1410  3001               	movlw	1
 11580  1411  00CA               	movwf	(__width^(0+128)+1)
 11581                           
 11582                           ;ILI9341.c: 192:             _height = 240;
 11583  1412  30F0               	movlw	240
 11584  1413  00C7               	movwf	__height^(0+128)
 11585  1414  3000               	movlw	0
 11586  1415                     L6:
 11587  1415  00C8               	movwf	(__height^(0+128)+1)
 11588                           
 11589                           ;ILI9341.c: 193:             break;
 11590  1416  2C2D               	goto	l4069
 11591  1417                     l4067:
 11592  1417  084E               	movf	_rotation^(0+128),w
 11593  1418  00F3               	movwf	??_setRotation
 11594  1419  01F4               	clrf	??_setRotation+1
 11595                           
 11596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11597                           ; Switch size 1, requested type "simple"
 11598                           ; Number of cases is 1, Range of values is 0 to 0
 11599                           ; switch strategies available:
 11600                           ; Name         Instructions Cycles
 11601                           ; simple_byte            4     3 (average)
 11602                           ; direct_byte            8     6 (fixed)
 11603                           ; jumptable            260     6 (fixed)
 11604                           ;	Chosen strategy is simple_byte
 11605  141A  0874               	movf	??_setRotation+1,w
 11606  141B  3A00               	xorlw	0	; case 0
 11607  141C  1903               	skipnz
 11608  141D  2C1F               	goto	l4313
 11609  141E  2C2D               	goto	l4069
 11610  141F                     l4313:
 11611                           
 11612                           ; Switch size 1, requested type "simple"
 11613                           ; Number of cases is 4, Range of values is 0 to 3
 11614                           ; switch strategies available:
 11615                           ; Name         Instructions Cycles
 11616                           ; simple_byte           13     7 (average)
 11617                           ; direct_byte           14     6 (fixed)
 11618                           ; jumptable            260     6 (fixed)
 11619                           ;	Chosen strategy is simple_byte
 11620  141F  0873               	movf	??_setRotation,w
 11621  1420  3A00               	xorlw	0	; case 0
 11622  1421  1903               	skipnz
 11623  1422  2BFA               	goto	l4057
 11624  1423  3A01               	xorlw	1	; case 1
 11625  1424  1903               	skipnz
 11626  1425  2BFC               	goto	l4059
 11627  1426  3A03               	xorlw	3	; case 2
 11628  1427  1903               	skipnz
 11629  1428  2BFE               	goto	l4061
 11630  1429  3A01               	xorlw	1	; case 3
 11631  142A  1903               	skipnz
 11632  142B  2C0A               	goto	l4063
 11633  142C  2C2D               	goto	l4069
 11634  142D                     l4069:
 11635                           
 11636                           ;ILI9341.c: 196:     startWrite();
 11637  142D  3191  2102  3193   	fcall	_startWrite
 11638                           
 11639                           ;ILI9341.c: 197:     writeCommand(0x36);
 11640  1430  3036               	movlw	54
 11641  1431  3191  2140  3193   	fcall	_writeCommand
 11642                           
 11643                           ;ILI9341.c: 198:     SPI1_ExchangeByte(m);
 11644  1434  0875               	movf	setRotation@m,w
 11645  1435  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 11646                           
 11647                           ;ILI9341.c: 199:     endWrite();
 11648  1438  3191  2105         	fcall	_endWrite
 11649  143A  0008               	return
 11650  143B                     __end_of_setRotation:
 11651                           
 11652                           	psect	text21
 11653  11F6                     __ptext21:	
 11654 ;; *************** function _display_setTextSize *****************
 11655 ;; Defined at:
 11656 ;;		line 624 in file "GFX_Library.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  s               1    wreg     unsigned char 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  s               1    5[COMMON] unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2, status,0
 11665 ;; Tracked objects:
 11666 ;;		On entry : 1E/0
 11667 ;;		On exit  : 1F/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;Total ram usage:        5 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    4
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_dibujarMarcador
 11681 ;;		_display_drawCustomChar
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           
 11686                           ;psect for function _display_setTextSize
 11687  11F6                     _display_setTextSize:
 11688                           
 11689                           ;incstack = 0
 11690                           ; Regs used in _display_setTextSize: [wreg+status,2+status,0]
 11691                           ;display_setTextSize@s stored from wreg
 11692  11F6  00F5               	movwf	display_setTextSize@s
 11693                           
 11694                           ;GFX_Library.c: 625:     textsize = (s > 0) ? s : 1;
 11695  11F7  0875               	movf	display_setTextSize@s,w
 11696  11F8  1D03               	btfss	3,2
 11697  11F9  29FE               	goto	l3037
 11698  11FA  3001               	movlw	1
 11699  11FB  00F3               	movwf	_display_setTextSize$1270
 11700  11FC  3000               	movlw	0
 11701  11FD  2A04               	goto	L9
 11702  11FE                     l3037:
 11703  11FE  0875               	movf	display_setTextSize@s,w
 11704  11FF  00F1               	movwf	??_display_setTextSize
 11705  1200  01F2               	clrf	??_display_setTextSize+1
 11706  1201  0871               	movf	??_display_setTextSize,w
 11707  1202  00F3               	movwf	_display_setTextSize$1270
 11708  1203  0872               	movf	??_display_setTextSize+1,w
 11709  1204                     L9:
 11710  1204  00F4               	movwf	_display_setTextSize$1270+1
 11711  1205  0873               	movf	_display_setTextSize$1270,w
 11712  1206  00F1               	movwf	??_display_setTextSize
 11713  1207  0871               	movf	??_display_setTextSize,w
 11714  1208  0020               	movlb	0	; select bank0
 11715  1209  00EF               	movwf	_textsize
 11716  120A  0008               	return
 11717  120B                     __end_of_display_setTextSize:
 11718                           
 11719                           	psect	text22
 11720  1149                     __ptext22:	
 11721 ;; *************** function _display_setTextColor2 *****************
 11722 ;; Defined at:
 11723 ;;		line 646 in file "GFX_Library.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  c               2    1[COMMON] unsigned short 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg
 11732 ;; Tracked objects:
 11733 ;;		On entry : 1F/1
 11734 ;;		On exit  : 1F/1
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;Total ram usage:        2 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:    4
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_dibujarMarcador
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           
 11752                           ;psect for function _display_setTextColor2
 11753  1149                     _display_setTextColor2:
 11754                           
 11755                           ;GFX_Library.c: 647:   textcolor = textbgcolor = c;
 11756                           
 11757                           ;incstack = 0
 11758                           ; Regs used in _display_setTextColor2: [wreg]
 11759  1149  0872               	movf	display_setTextColor2@c+1,w
 11760  114A  00A1               	movwf	(_textbgcolor+1)^(0+128)
 11761  114B  0871               	movf	display_setTextColor2@c,w
 11762  114C  00A0               	movwf	_textbgcolor^(0+128)
 11763  114D  0821               	movf	(_textbgcolor+1)^(0+128),w
 11764  114E  00A3               	movwf	(_textcolor+1)^(0+128)
 11765  114F  0820               	movf	_textbgcolor^(0+128),w
 11766  1150  00A2               	movwf	_textcolor^(0+128)
 11767  1151  0008               	return
 11768  1152                     __end_of_display_setTextColor2:
 11769                           
 11770                           	psect	text23
 11771  115C                     __ptext23:	
 11772 ;; *************** function _display_setTextColor *****************
 11773 ;; Defined at:
 11774 ;;		line 635 in file "GFX_Library.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  c               2    1[COMMON] unsigned short 
 11777 ;;  bg              2    3[COMMON] unsigned short 
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;		None
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  1    wreg      void 
 11782 ;; Registers used:
 11783 ;;		wreg
 11784 ;; Tracked objects:
 11785 ;;		On entry : 1F/0
 11786 ;;		On exit  : 1F/1
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;Total ram usage:        4 bytes
 11794 ;; Hardware stack levels used:    1
 11795 ;; Hardware stack levels required when called:    4
 11796 ;; This function calls:
 11797 ;;		Nothing
 11798 ;; This function is called by:
 11799 ;;		_dibujarMarcador
 11800 ;;		_display_drawCustomChar
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           
 11805                           ;psect for function _display_setTextColor
 11806  115C                     _display_setTextColor:
 11807                           
 11808                           ;GFX_Library.c: 636:     textcolor = c;
 11809                           
 11810                           ;incstack = 0
 11811                           ; Regs used in _display_setTextColor: [wreg]
 11812  115C  0872               	movf	display_setTextColor@c+1,w
 11813  115D  0021               	movlb	1	; select bank1
 11814  115E  00A3               	movwf	(_textcolor+1)^(0+128)
 11815  115F  0871               	movf	display_setTextColor@c,w
 11816  1160  00A2               	movwf	_textcolor^(0+128)
 11817                           
 11818                           ;GFX_Library.c: 637:     textbgcolor = bg;
 11819  1161  0874               	movf	display_setTextColor@bg+1,w
 11820  1162  00A1               	movwf	(_textbgcolor+1)^(0+128)
 11821  1163  0873               	movf	display_setTextColor@bg,w
 11822  1164  00A0               	movwf	_textbgcolor^(0+128)
 11823  1165  0008               	return
 11824  1166                     __end_of_display_setTextColor:
 11825                           
 11826                           	psect	text24
 11827  1152                     __ptext24:	
 11828 ;; *************** function _display_setCursor *****************
 11829 ;; Defined at:
 11830 ;;		line 593 in file "GFX_Library.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  x               2    1[COMMON] unsigned short 
 11833 ;;  y               2    3[COMMON] unsigned short 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg
 11840 ;; Tracked objects:
 11841 ;;		On entry : 1F/0
 11842 ;;		On exit  : 1F/1
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;Total ram usage:        4 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    4
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		_dibujarMarcador
 11856 ;;		_display_drawCustomChar
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _display_setCursor
 11862  1152                     _display_setCursor:
 11863                           
 11864                           ;GFX_Library.c: 594:     cursor_x = x;
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _display_setCursor: [wreg]
 11868  1152  0872               	movf	display_setCursor@x+1,w
 11869  1153  0021               	movlb	1	; select bank1
 11870  1154  00C6               	movwf	(_cursor_x+1)^(0+128)
 11871  1155  0871               	movf	display_setCursor@x,w
 11872  1156  00C5               	movwf	_cursor_x^(0+128)
 11873                           
 11874                           ;GFX_Library.c: 595:     cursor_y = y;
 11875  1157  0874               	movf	display_setCursor@y+1,w
 11876  1158  00C4               	movwf	(_cursor_y+1)^(0+128)
 11877  1159  0873               	movf	display_setCursor@y,w
 11878  115A  00C3               	movwf	_cursor_y^(0+128)
 11879  115B  0008               	return
 11880  115C                     __end_of_display_setCursor:
 11881                           
 11882                           	psect	text25
 11883  128D                     __ptext25:	
 11884 ;; *************** function _disp_texto *****************
 11885 ;; Defined at:
 11886 ;;		line 231 in file "main.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  cadena          2   42[BANK0 ] PTR unsigned char 
 11889 ;;		 -> STR_14(18), STR_13(28), STR_12(21), STR_11(22), 
 11890 ;;		 -> STR_10(30), STR_9(29), STR_8(29), STR_7(18), 
 11891 ;;		 -> STR_6(8), STR_5(3), STR_4(11), STR_3(10), 
 11892 ;;		 -> STR_2(15), marcador(3), 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  i               1   11[COMMON] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11899 ;; Tracked objects:
 11900 ;;		On entry : 1F/0
 11901 ;;		On exit  : 1F/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;Total ram usage:        6 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:    9
 11911 ;; This function calls:
 11912 ;;		_display_print
 11913 ;; This function is called by:
 11914 ;;		_dibujarMarcador
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           
 11919                           ;psect for function _disp_texto
 11920  128D                     _disp_texto:
 11921                           
 11922                           ;main.c: 232:     uint8_t i = -1;
 11923                           
 11924                           ;incstack = 0
 11925                           ; Regs used in _disp_texto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11926  128D  30FF               	movlw	255
 11927  128E  00CC               	movwf	??_disp_texto
 11928  128F  084C               	movf	??_disp_texto,w
 11929  1290  00FB               	movwf	disp_texto@i
 11930  1291                     l4083:	
 11931                           ;main.c: 233:     while (cadena[i++] != '\0') {
 11932                           
 11933                           
 11934                           ;main.c: 233:     while (cadena[i++] != '\0') {
 11935  1291  0020               	movlb	0	; select bank0
 11936  1292  084B               	movf	disp_texto@cadena+1,w
 11937  1293  00CD               	movwf	??_disp_texto+1
 11938  1294  084A               	movf	disp_texto@cadena,w
 11939  1295  00CC               	movwf	??_disp_texto
 11940  1296  087B               	movf	disp_texto@i,w
 11941  1297  0AFB               	incf	disp_texto@i,f
 11942  1298  074C               	addwf	??_disp_texto,w
 11943  1299  0084               	movwf	4
 11944  129A  084D               	movf	??_disp_texto+1,w
 11945  129B  1803               	skipnc
 11946  129C  0A4D               	incf	??_disp_texto+1,w
 11947  129D  0085               	movwf	5
 11948  129E  0012               	moviw fsr0++
 11949  129F  1903               	btfsc	3,2
 11950  12A0  0008               	return
 11951                           
 11952                           ;main.c: 234:         display_print(cadena[i]);
 11953  12A1  084B               	movf	disp_texto@cadena+1,w
 11954  12A2  00CD               	movwf	??_disp_texto+1
 11955  12A3  084A               	movf	disp_texto@cadena,w
 11956  12A4  00CC               	movwf	??_disp_texto
 11957  12A5  087B               	movf	disp_texto@i,w
 11958  12A6  074C               	addwf	??_disp_texto,w
 11959  12A7  0084               	movwf	4
 11960  12A8  084D               	movf	??_disp_texto+1,w
 11961  12A9  1803               	skipnc
 11962  12AA  0A4D               	incf	??_disp_texto+1,w
 11963  12AB  0085               	movwf	5
 11964  12AC  0800               	movf	0,w	;code access
 11965  12AD  3185  2540  3192   	fcall	_display_print
 11966  12B0  2A91               	goto	l4083
 11967  12B1                     __end_of_disp_texto:
 11968                           
 11969                           	psect	text26
 11970  0540                     __ptext26:	
 11971 ;; *************** function _display_print *****************
 11972 ;; Defined at:
 11973 ;;		line 460 in file "GFX_Library.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  c               1    wreg     unsigned char 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  c               1   39[BANK0 ] unsigned char 
 11978 ;;  j               1   40[BANK0 ] unsigned char 
 11979 ;;  line            1   38[BANK0 ] unsigned char 
 11980 ;;  i               1   41[BANK0 ] unsigned char 
 11981 ;; Return value:  Size  Location     Type
 11982 ;;                  1    wreg      void 
 11983 ;; Registers used:
 11984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11985 ;; Tracked objects:
 11986 ;;		On entry : 1F/0
 11987 ;;		On exit  : 1E/0
 11988 ;;		Unchanged: 0/0
 11989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;Total ram usage:       16 bytes
 11995 ;; Hardware stack levels used:    1
 11996 ;; Hardware stack levels required when called:    8
 11997 ;; This function calls:
 11998 ;;		___wmul
 11999 ;;		_drawPixel
 12000 ;;		_drawVLine
 12001 ;;		_fillRect
 12002 ;; This function is called by:
 12003 ;;		_disp_texto
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           
 12008                           ;psect for function _display_print
 12009  0540                     _display_print:
 12010                           
 12011                           ;incstack = 0
 12012                           ; Regs used in _display_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12013                           ;display_print@c stored from wreg
 12014  0540  00C7               	movwf	display_print@c
 12015                           
 12016                           ;GFX_Library.c: 462:   if (c == ' ' && cursor_x == 0 && wrap)
 12017  0541  3020               	movlw	32
 12018  0542  0647               	xorwf	display_print@c,w
 12019  0543  1D03               	btfss	3,2
 12020  0544  2D4A               	goto	l3895
 12021  0545  0021               	movlb	1	; select bank1
 12022  0546  0845               	movf	_cursor_x^(0+128),w
 12023  0547  0446               	iorwf	(_cursor_x+1)^(0+128),w
 12024  0548  1903               	btfsc	3,2
 12025  0549  0008               	return
 12026  054A                     l3895:
 12027                           
 12028                           ;GFX_Library.c: 464:   if(c == '\r') {
 12029  054A  300D               	movlw	13
 12030  054B  0020               	movlb	0	; select bank0
 12031  054C  0647               	xorwf	display_print@c,w
 12032  054D  1D03               	btfss	3,2
 12033  054E  2D53               	goto	l3901
 12034                           
 12035                           ;GFX_Library.c: 465:     cursor_x = 0;
 12036  054F  0021               	movlb	1	; select bank1
 12037  0550  01C5               	clrf	_cursor_x^(0+128)
 12038  0551  01C6               	clrf	(_cursor_x+1)^(0+128)
 12039  0552  0008               	return
 12040  0553                     l3901:
 12041                           
 12042                           ;GFX_Library.c: 468:   if(c == '\n') {
 12043  0553  300A               	movlw	10
 12044  0554  0647               	xorwf	display_print@c,w
 12045  0555  1D03               	btfss	3,2
 12046  0556  2D68               	goto	l3907
 12047                           
 12048                           ;GFX_Library.c: 469:     cursor_y += textsize * 8;
 12049  0557  086F               	movf	_textsize,w
 12050  0558  00BA               	movwf	??_display_print
 12051  0559  01BB               	clrf	??_display_print+1
 12052  055A  35BA               	lslf	??_display_print,f
 12053  055B  0DBB               	rlf	??_display_print+1,f
 12054  055C  35BA               	lslf	??_display_print,f
 12055  055D  0DBB               	rlf	??_display_print+1,f
 12056  055E  35BA               	lslf	??_display_print,f
 12057  055F  0DBB               	rlf	??_display_print+1,f
 12058  0560  083A               	movf	??_display_print,w
 12059  0561  0021               	movlb	1	; select bank1
 12060  0562  07C3               	addwf	_cursor_y^(0+128),f
 12061  0563  0020               	movlb	0	; select bank0
 12062  0564  083B               	movf	??_display_print+1,w
 12063  0565  0021               	movlb	1	; select bank1
 12064  0566  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
 12065  0567  0008               	return
 12066  0568                     l3907:
 12067                           
 12068                           ;GFX_Library.c: 473:   for(uint8_t i = 0; i < 5; i++ ) {
 12069  0568  01C9               	clrf	display_print@i
 12070  0569                     l3913:
 12071                           
 12072                           ;GFX_Library.c: 474:       uint8_t line=font[c][i];
 12073  0569  0847               	movf	display_print@c,w
 12074  056A  00BA               	movwf	??_display_print
 12075  056B  01BB               	clrf	??_display_print+1
 12076  056C  083A               	movf	??_display_print,w
 12077  056D  00F1               	movwf	___wmul@multiplier
 12078  056E  083B               	movf	??_display_print+1,w
 12079  056F  00F2               	movwf	___wmul@multiplier+1
 12080  0570  3005               	movlw	5
 12081  0571  00F3               	movwf	___wmul@multiplicand
 12082  0572  3000               	movlw	0
 12083  0573  00F4               	movwf	___wmul@multiplicand+1
 12084  0574  3192  223A  3185   	fcall	___wmul
 12085  0577  3040               	movlw	low (_font| (0+32768))
 12086  0578  00BC               	movwf	??_display_print+2
 12087  0579  3080               	movlw	high (_font| (0+32768))
 12088  057A  00BD               	movwf	??_display_print+3
 12089  057B  0871               	movf	?___wmul,w
 12090  057C  073C               	addwf	??_display_print+2,w
 12091  057D  00BE               	movwf	??_display_print+4
 12092  057E  0872               	movf	?___wmul+1,w
 12093  057F  3D3D               	addwfc	??_display_print+3,w
 12094  0580  00BF               	movwf	??_display_print+5
 12095  0581  0849               	movf	display_print@i,w
 12096  0582  073E               	addwf	??_display_print+4,w
 12097  0583  0084               	movwf	4
 12098  0584  083F               	movf	??_display_print+5,w
 12099  0585  1803               	skipnc
 12100  0586  0A3F               	incf	??_display_print+5,w
 12101  0587  0085               	movwf	5
 12102  0588  0800               	movf	0,w	;code access
 12103  0589  00C0               	movwf	??_display_print+6
 12104  058A  0840               	movf	??_display_print+6,w
 12105  058B  00C6               	movwf	display_print@line
 12106                           
 12107                           ;GFX_Library.c: 475:     for(uint8_t j = 0; j < 8; j++, line >>= 1) {
 12108  058C  01C8               	clrf	display_print@j
 12109  058D                     l741:
 12110                           
 12111                           ;GFX_Library.c: 476:       if(line & 1) {
 12112  058D  1C46               	btfss	display_print@line,0
 12113  058E  2DFF               	goto	l3927
 12114                           
 12115                           ;GFX_Library.c: 477:         if(textsize == 1)
 12116  058F  036F               	decf	_textsize,w
 12117  0590  1D03               	btfss	3,2
 12118  0591  2DB4               	goto	l3925
 12119                           
 12120                           ;GFX_Library.c: 478:           drawPixel(cursor_x + i, cursor_y + j, textcolor);
 12121  0592  0849               	movf	display_print@i,w
 12122  0593  0021               	movlb	1	; select bank1
 12123  0594  0745               	addwf	_cursor_x^(0+128),w
 12124  0595  0020               	movlb	0	; select bank0
 12125  0596  00A6               	movwf	drawPixel@x
 12126  0597  0021               	movlb	1	; select bank1
 12127  0598  0846               	movf	(_cursor_x+1)^(0+128),w
 12128  0599  1803               	skipnc
 12129  059A  0A46               	incf	(_cursor_x+1)^(0+128),w
 12130  059B  0020               	movlb	0	; select bank0
 12131  059C  00A7               	movwf	drawPixel@x+1
 12132  059D  0848               	movf	display_print@j,w
 12133  059E  0021               	movlb	1	; select bank1
 12134  059F  0743               	addwf	_cursor_y^(0+128),w
 12135  05A0  0020               	movlb	0	; select bank0
 12136  05A1  00A8               	movwf	drawPixel@y
 12137  05A2  0021               	movlb	1	; select bank1
 12138  05A3  0844               	movf	(_cursor_y+1)^(0+128),w
 12139  05A4  1803               	skipnc
 12140  05A5  0A44               	incf	(_cursor_y+1)^(0+128),w
 12141  05A6  0020               	movlb	0	; select bank0
 12142  05A7  00A9               	movwf	drawPixel@y+1
 12143  05A8  0021               	movlb	1	; select bank1
 12144  05A9  0823               	movf	(_textcolor+1)^(0+128),w
 12145  05AA  0020               	movlb	0	; select bank0
 12146  05AB  00AB               	movwf	drawPixel@color+1
 12147  05AC  0021               	movlb	1	; select bank1
 12148  05AD  0822               	movf	_textcolor^(0+128),w
 12149  05AE  0020               	movlb	0	; select bank0
 12150  05AF  00AA               	movwf	drawPixel@color
 12151  05B0  3193  232B  3185   	fcall	_drawPixel
 12152  05B3  2E7D               	goto	l3935
 12153  05B4                     l3925:
 12154                           
 12155                           ;GFX_Library.c: 480:           fillRect(cursor_x + i * textsize, cursor_y + j * textsize
      +                          , textsize, textsize, textcolor);
 12156  05B4  0849               	movf	display_print@i,w
 12157  05B5  00BA               	movwf	??_display_print
 12158  05B6  01BB               	clrf	??_display_print+1
 12159  05B7  083A               	movf	??_display_print,w
 12160  05B8  00F1               	movwf	___wmul@multiplier
 12161  05B9  083B               	movf	??_display_print+1,w
 12162  05BA  00F2               	movwf	___wmul@multiplier+1
 12163  05BB  086F               	movf	_textsize,w
 12164  05BC  00BC               	movwf	??_display_print+2
 12165  05BD  01BD               	clrf	??_display_print+3
 12166  05BE  083C               	movf	??_display_print+2,w
 12167  05BF  00F3               	movwf	___wmul@multiplicand
 12168  05C0  083D               	movf	??_display_print+3,w
 12169  05C1  00F4               	movwf	___wmul@multiplicand+1
 12170  05C2  3192  223A  3185   	fcall	___wmul
 12171  05C5  0021               	movlb	1	; select bank1
 12172  05C6  0845               	movf	_cursor_x^(0+128),w
 12173  05C7  0771               	addwf	?___wmul,w
 12174  05C8  0020               	movlb	0	; select bank0
 12175  05C9  00A6               	movwf	fillRect@x
 12176  05CA  0021               	movlb	1	; select bank1
 12177  05CB  0846               	movf	(_cursor_x+1)^(0+128),w
 12178  05CC  3D72               	addwfc	?___wmul+1,w
 12179  05CD  0020               	movlb	0	; select bank0
 12180  05CE  00A7               	movwf	fillRect@x+1
 12181  05CF  0848               	movf	display_print@j,w
 12182  05D0  00BE               	movwf	??_display_print+4
 12183  05D1  01BF               	clrf	??_display_print+5
 12184  05D2  083E               	movf	??_display_print+4,w
 12185  05D3  00F1               	movwf	___wmul@multiplier
 12186  05D4  083F               	movf	??_display_print+5,w
 12187  05D5  00F2               	movwf	___wmul@multiplier+1
 12188  05D6  086F               	movf	_textsize,w
 12189  05D7  00C0               	movwf	??_display_print+6
 12190  05D8  01C1               	clrf	??_display_print+7
 12191  05D9  0840               	movf	??_display_print+6,w
 12192  05DA  00F3               	movwf	___wmul@multiplicand
 12193  05DB  0841               	movf	??_display_print+7,w
 12194  05DC  00F4               	movwf	___wmul@multiplicand+1
 12195  05DD  3192  223A  3185   	fcall	___wmul
 12196  05E0  0021               	movlb	1	; select bank1
 12197  05E1  0843               	movf	_cursor_y^(0+128),w
 12198  05E2  0771               	addwf	?___wmul,w
 12199  05E3  0020               	movlb	0	; select bank0
 12200  05E4  00A8               	movwf	fillRect@y
 12201  05E5  0021               	movlb	1	; select bank1
 12202  05E6  0844               	movf	(_cursor_y+1)^(0+128),w
 12203  05E7  3D72               	addwfc	?___wmul+1,w
 12204  05E8  0020               	movlb	0	; select bank0
 12205  05E9  00A9               	movwf	fillRect@y+1
 12206  05EA  086F               	movf	_textsize,w
 12207  05EB  00C2               	movwf	??_display_print+8
 12208  05EC  01C3               	clrf	??_display_print+9
 12209  05ED  0842               	movf	??_display_print+8,w
 12210  05EE  00AA               	movwf	fillRect@w
 12211  05EF  0843               	movf	??_display_print+9,w
 12212  05F0  00AB               	movwf	fillRect@w+1
 12213  05F1  086F               	movf	_textsize,w
 12214  05F2  00C4               	movwf	??_display_print+10
 12215  05F3  01C5               	clrf	??_display_print+11
 12216  05F4  0844               	movf	??_display_print+10,w
 12217  05F5  00AC               	movwf	fillRect@h
 12218  05F6  0845               	movf	??_display_print+11,w
 12219  05F7  00AD               	movwf	fillRect@h+1
 12220  05F8  0021               	movlb	1	; select bank1
 12221  05F9  0823               	movf	(_textcolor+1)^(0+128),w
 12222  05FA  0020               	movlb	0	; select bank0
 12223  05FB  00AF               	movwf	fillRect@color+1
 12224  05FC  0021               	movlb	1	; select bank1
 12225  05FD  0822               	movf	_textcolor^(0+128),w
 12226  05FE  2E78               	goto	L10
 12227  05FF                     l3927:
 12228                           
 12229                           ;GFX_Library.c: 483:         if(textbgcolor != textcolor) {
 12230  05FF  0021               	movlb	1	; select bank1
 12231  0600  0823               	movf	(_textcolor+1)^(0+128),w
 12232  0601  0621               	xorwf	(_textbgcolor+1)^(0+128),w
 12233  0602  1D03               	skipz
 12234  0603  2E06               	goto	u3335
 12235  0604  0822               	movf	_textcolor^(0+128),w
 12236  0605  0620               	xorwf	_textbgcolor^(0+128),w
 12237  0606                     u3335:
 12238  0606  1903               	skipnz
 12239  0607  2E7D               	goto	l3935
 12240                           
 12241                           ;GFX_Library.c: 484:           if(textsize == 1)
 12242  0608  0020               	movlb	0	; select bank0
 12243  0609  036F               	decf	_textsize,w
 12244  060A  1D03               	btfss	3,2
 12245  060B  2E2E               	goto	l3933
 12246                           
 12247                           ;GFX_Library.c: 485:             drawPixel(cursor_x + i, cursor_y + j, textbgcolor);
 12248  060C  0849               	movf	display_print@i,w
 12249  060D  0021               	movlb	1	; select bank1
 12250  060E  0745               	addwf	_cursor_x^(0+128),w
 12251  060F  0020               	movlb	0	; select bank0
 12252  0610  00A6               	movwf	drawPixel@x
 12253  0611  0021               	movlb	1	; select bank1
 12254  0612  0846               	movf	(_cursor_x+1)^(0+128),w
 12255  0613  1803               	skipnc
 12256  0614  0A46               	incf	(_cursor_x+1)^(0+128),w
 12257  0615  0020               	movlb	0	; select bank0
 12258  0616  00A7               	movwf	drawPixel@x+1
 12259  0617  0848               	movf	display_print@j,w
 12260  0618  0021               	movlb	1	; select bank1
 12261  0619  0743               	addwf	_cursor_y^(0+128),w
 12262  061A  0020               	movlb	0	; select bank0
 12263  061B  00A8               	movwf	drawPixel@y
 12264  061C  0021               	movlb	1	; select bank1
 12265  061D  0844               	movf	(_cursor_y+1)^(0+128),w
 12266  061E  1803               	skipnc
 12267  061F  0A44               	incf	(_cursor_y+1)^(0+128),w
 12268  0620  0020               	movlb	0	; select bank0
 12269  0621  00A9               	movwf	drawPixel@y+1
 12270  0622  0021               	movlb	1	; select bank1
 12271  0623  0821               	movf	(_textbgcolor+1)^(0+128),w
 12272  0624  0020               	movlb	0	; select bank0
 12273  0625  00AB               	movwf	drawPixel@color+1
 12274  0626  0021               	movlb	1	; select bank1
 12275  0627  0820               	movf	_textbgcolor^(0+128),w
 12276  0628  0020               	movlb	0	; select bank0
 12277  0629  00AA               	movwf	drawPixel@color
 12278  062A  3193  232B  3185   	fcall	_drawPixel
 12279  062D  2E7D               	goto	l3935
 12280  062E                     l3933:
 12281                           
 12282                           ;GFX_Library.c: 487:             fillRect(cursor_x + i * textsize, cursor_y + j * textsi
      +                          ze, textsize, textsize, textbgcolor);
 12283  062E  0849               	movf	display_print@i,w
 12284  062F  00BA               	movwf	??_display_print
 12285  0630  01BB               	clrf	??_display_print+1
 12286  0631  083A               	movf	??_display_print,w
 12287  0632  00F1               	movwf	___wmul@multiplier
 12288  0633  083B               	movf	??_display_print+1,w
 12289  0634  00F2               	movwf	___wmul@multiplier+1
 12290  0635  086F               	movf	_textsize,w
 12291  0636  00BC               	movwf	??_display_print+2
 12292  0637  01BD               	clrf	??_display_print+3
 12293  0638  083C               	movf	??_display_print+2,w
 12294  0639  00F3               	movwf	___wmul@multiplicand
 12295  063A  083D               	movf	??_display_print+3,w
 12296  063B  00F4               	movwf	___wmul@multiplicand+1
 12297  063C  3192  223A  3185   	fcall	___wmul
 12298  063F  0021               	movlb	1	; select bank1
 12299  0640  0845               	movf	_cursor_x^(0+128),w
 12300  0641  0771               	addwf	?___wmul,w
 12301  0642  0020               	movlb	0	; select bank0
 12302  0643  00A6               	movwf	fillRect@x
 12303  0644  0021               	movlb	1	; select bank1
 12304  0645  0846               	movf	(_cursor_x+1)^(0+128),w
 12305  0646  3D72               	addwfc	?___wmul+1,w
 12306  0647  0020               	movlb	0	; select bank0
 12307  0648  00A7               	movwf	fillRect@x+1
 12308  0649  0848               	movf	display_print@j,w
 12309  064A  00BE               	movwf	??_display_print+4
 12310  064B  01BF               	clrf	??_display_print+5
 12311  064C  083E               	movf	??_display_print+4,w
 12312  064D  00F1               	movwf	___wmul@multiplier
 12313  064E  083F               	movf	??_display_print+5,w
 12314  064F  00F2               	movwf	___wmul@multiplier+1
 12315  0650  086F               	movf	_textsize,w
 12316  0651  00C0               	movwf	??_display_print+6
 12317  0652  01C1               	clrf	??_display_print+7
 12318  0653  0840               	movf	??_display_print+6,w
 12319  0654  00F3               	movwf	___wmul@multiplicand
 12320  0655  0841               	movf	??_display_print+7,w
 12321  0656  00F4               	movwf	___wmul@multiplicand+1
 12322  0657  3192  223A  3185   	fcall	___wmul
 12323  065A  0021               	movlb	1	; select bank1
 12324  065B  0843               	movf	_cursor_y^(0+128),w
 12325  065C  0771               	addwf	?___wmul,w
 12326  065D  0020               	movlb	0	; select bank0
 12327  065E  00A8               	movwf	fillRect@y
 12328  065F  0021               	movlb	1	; select bank1
 12329  0660  0844               	movf	(_cursor_y+1)^(0+128),w
 12330  0661  3D72               	addwfc	?___wmul+1,w
 12331  0662  0020               	movlb	0	; select bank0
 12332  0663  00A9               	movwf	fillRect@y+1
 12333  0664  086F               	movf	_textsize,w
 12334  0665  00C2               	movwf	??_display_print+8
 12335  0666  01C3               	clrf	??_display_print+9
 12336  0667  0842               	movf	??_display_print+8,w
 12337  0668  00AA               	movwf	fillRect@w
 12338  0669  0843               	movf	??_display_print+9,w
 12339  066A  00AB               	movwf	fillRect@w+1
 12340  066B  086F               	movf	_textsize,w
 12341  066C  00C4               	movwf	??_display_print+10
 12342  066D  01C5               	clrf	??_display_print+11
 12343  066E  0844               	movf	??_display_print+10,w
 12344  066F  00AC               	movwf	fillRect@h
 12345  0670  0845               	movf	??_display_print+11,w
 12346  0671  00AD               	movwf	fillRect@h+1
 12347  0672  0021               	movlb	1	; select bank1
 12348  0673  0821               	movf	(_textbgcolor+1)^(0+128),w
 12349  0674  0020               	movlb	0	; select bank0
 12350  0675  00AF               	movwf	fillRect@color+1
 12351  0676  0021               	movlb	1	; select bank1
 12352  0677  0820               	movf	_textbgcolor^(0+128),w
 12353  0678                     L10:
 12354  0678  0020               	movlb	0	; select bank0
 12355  0679  00AE               	movwf	fillRect@color
 12356  067A  3197  273D  3185   	fcall	_fillRect
 12357  067D                     l3935:
 12358                           
 12359                           ;GFX_Library.c: 489:     }
 12360  067D  3001               	movlw	1
 12361  067E  0020               	movlb	0	; select bank0
 12362  067F  00BA               	movwf	??_display_print
 12363  0680  083A               	movf	??_display_print,w
 12364  0681  07C8               	addwf	display_print@j,f
 12365  0682  1003               	clrc
 12366  0683  0CC6               	rrf	display_print@line,f
 12367  0684  3008               	movlw	8
 12368  0685  0248               	subwf	display_print@j,w
 12369  0686  1C03               	skipc
 12370  0687  2D8D               	goto	l741
 12371                           
 12372                           ;GFX_Library.c: 490:   }
 12373  0688  3001               	movlw	1
 12374  0689  00BA               	movwf	??_display_print
 12375  068A  083A               	movf	??_display_print,w
 12376  068B  07C9               	addwf	display_print@i,f
 12377  068C  3005               	movlw	5
 12378  068D  0249               	subwf	display_print@i,w
 12379  068E  1C03               	skipc
 12380  068F  2D69               	goto	l3913
 12381                           
 12382                           ;GFX_Library.c: 492:   if(textbgcolor != textcolor) {
 12383  0690  0021               	movlb	1	; select bank1
 12384  0691  0823               	movf	(_textcolor+1)^(0+128),w
 12385  0692  0621               	xorwf	(_textbgcolor+1)^(0+128),w
 12386  0693  1D03               	skipz
 12387  0694  2E97               	goto	u3375
 12388  0695  0822               	movf	_textcolor^(0+128),w
 12389  0696  0620               	xorwf	_textbgcolor^(0+128),w
 12390  0697                     u3375:
 12391  0697  1903               	skipnz
 12392  0698  2EFE               	goto	l750
 12393                           
 12394                           ;GFX_Library.c: 493:     if(textsize == 1) drawVLine(cursor_x + 5, cursor_y, 8, textbgco
      +                          lor);
 12395  0699  0020               	movlb	0	; select bank0
 12396  069A  036F               	decf	_textsize,w
 12397  069B  1D03               	btfss	3,2
 12398  069C  2EBF               	goto	l3951
 12399  069D  0021               	movlb	1	; select bank1
 12400  069E  0845               	movf	_cursor_x^(0+128),w
 12401  069F  3E05               	addlw	5
 12402  06A0  0020               	movlb	0	; select bank0
 12403  06A1  00A6               	movwf	drawVLine@x
 12404  06A2  3000               	movlw	0
 12405  06A3  0021               	movlb	1	; select bank1
 12406  06A4  3D46               	addwfc	(_cursor_x+1)^(0+128),w
 12407  06A5  0020               	movlb	0	; select bank0
 12408  06A6  00A7               	movwf	drawVLine@x+1
 12409  06A7  0021               	movlb	1	; select bank1
 12410  06A8  0844               	movf	(_cursor_y+1)^(0+128),w
 12411  06A9  0020               	movlb	0	; select bank0
 12412  06AA  00A9               	movwf	drawVLine@y+1
 12413  06AB  0021               	movlb	1	; select bank1
 12414  06AC  0843               	movf	_cursor_y^(0+128),w
 12415  06AD  0020               	movlb	0	; select bank0
 12416  06AE  00A8               	movwf	drawVLine@y
 12417  06AF  3008               	movlw	8
 12418  06B0  00AA               	movwf	drawVLine@h
 12419  06B1  3000               	movlw	0
 12420  06B2  00AB               	movwf	drawVLine@h+1
 12421  06B3  0021               	movlb	1	; select bank1
 12422  06B4  0821               	movf	(_textbgcolor+1)^(0+128),w
 12423  06B5  0020               	movlb	0	; select bank0
 12424  06B6  00AD               	movwf	drawVLine@color+1
 12425  06B7  0021               	movlb	1	; select bank1
 12426  06B8  0820               	movf	_textbgcolor^(0+128),w
 12427  06B9  0020               	movlb	0	; select bank0
 12428  06BA  00AC               	movwf	drawVLine@color
 12429  06BB  3195  25B2  3185   	fcall	_drawVLine
 12430  06BE  2EFE               	goto	l750
 12431  06BF                     l3951:
 12432  06BF  086F               	movf	_textsize,w
 12433  06C0  00BA               	movwf	??_display_print
 12434  06C1  01BB               	clrf	??_display_print+1
 12435  06C2  083A               	movf	??_display_print,w
 12436  06C3  00F1               	movwf	___wmul@multiplier
 12437  06C4  083B               	movf	??_display_print+1,w
 12438  06C5  00F2               	movwf	___wmul@multiplier+1
 12439  06C6  3005               	movlw	5
 12440  06C7  00F3               	movwf	___wmul@multiplicand
 12441  06C8  3000               	movlw	0
 12442  06C9  00F4               	movwf	___wmul@multiplicand+1
 12443  06CA  3192  223A  3185   	fcall	___wmul
 12444  06CD  0021               	movlb	1	; select bank1
 12445  06CE  0845               	movf	_cursor_x^(0+128),w
 12446  06CF  0771               	addwf	?___wmul,w
 12447  06D0  0020               	movlb	0	; select bank0
 12448  06D1  00A6               	movwf	fillRect@x
 12449  06D2  0021               	movlb	1	; select bank1
 12450  06D3  0846               	movf	(_cursor_x+1)^(0+128),w
 12451  06D4  3D72               	addwfc	?___wmul+1,w
 12452  06D5  0020               	movlb	0	; select bank0
 12453  06D6  00A7               	movwf	fillRect@x+1
 12454  06D7  0021               	movlb	1	; select bank1
 12455  06D8  0844               	movf	(_cursor_y+1)^(0+128),w
 12456  06D9  0020               	movlb	0	; select bank0
 12457  06DA  00A9               	movwf	fillRect@y+1
 12458  06DB  0021               	movlb	1	; select bank1
 12459  06DC  0843               	movf	_cursor_y^(0+128),w
 12460  06DD  0020               	movlb	0	; select bank0
 12461  06DE  00A8               	movwf	fillRect@y
 12462  06DF  086F               	movf	_textsize,w
 12463  06E0  00BC               	movwf	??_display_print+2
 12464  06E1  01BD               	clrf	??_display_print+3
 12465  06E2  083C               	movf	??_display_print+2,w
 12466  06E3  00AA               	movwf	fillRect@w
 12467  06E4  083D               	movf	??_display_print+3,w
 12468  06E5  00AB               	movwf	fillRect@w+1
 12469  06E6  086F               	movf	_textsize,w
 12470  06E7  00BE               	movwf	??_display_print+4
 12471  06E8  01BF               	clrf	??_display_print+5
 12472  06E9  35BE               	lslf	??_display_print+4,f
 12473  06EA  0DBF               	rlf	??_display_print+5,f
 12474  06EB  35BE               	lslf	??_display_print+4,f
 12475  06EC  0DBF               	rlf	??_display_print+5,f
 12476  06ED  35BE               	lslf	??_display_print+4,f
 12477  06EE  0DBF               	rlf	??_display_print+5,f
 12478  06EF  083E               	movf	??_display_print+4,w
 12479  06F0  00AC               	movwf	fillRect@h
 12480  06F1  083F               	movf	??_display_print+5,w
 12481  06F2  00AD               	movwf	fillRect@h+1
 12482  06F3  0021               	movlb	1	; select bank1
 12483  06F4  0821               	movf	(_textbgcolor+1)^(0+128),w
 12484  06F5  0020               	movlb	0	; select bank0
 12485  06F6  00AF               	movwf	fillRect@color+1
 12486  06F7  0021               	movlb	1	; select bank1
 12487  06F8  0820               	movf	_textbgcolor^(0+128),w
 12488  06F9  0020               	movlb	0	; select bank0
 12489  06FA  00AE               	movwf	fillRect@color
 12490  06FB  3197  273D  3185   	fcall	_fillRect
 12491  06FE                     l750:	
 12492                           ;GFX_Library.c: 495:   }
 12493                           
 12494                           
 12495                           ;GFX_Library.c: 497:   cursor_x += textsize * 6;
 12496  06FE  0020               	movlb	0	; select bank0
 12497  06FF  086F               	movf	_textsize,w
 12498  0700  00BA               	movwf	??_display_print
 12499  0701  01BB               	clrf	??_display_print+1
 12500  0702  083A               	movf	??_display_print,w
 12501  0703  00F1               	movwf	___wmul@multiplier
 12502  0704  083B               	movf	??_display_print+1,w
 12503  0705  00F2               	movwf	___wmul@multiplier+1
 12504  0706  3006               	movlw	6
 12505  0707  00F3               	movwf	___wmul@multiplicand
 12506  0708  3000               	movlw	0
 12507  0709  00F4               	movwf	___wmul@multiplicand+1
 12508  070A  3192  223A  3185   	fcall	___wmul
 12509  070D  0871               	movf	?___wmul,w
 12510  070E  0021               	movlb	1	; select bank1
 12511  070F  07C5               	addwf	_cursor_x^(0+128),f
 12512  0710  0872               	movf	?___wmul+1,w
 12513  0711  3DC6               	addwfc	(_cursor_x+1)^(0+128),f
 12514                           
 12515                           ;GFX_Library.c: 499:   if(cursor_x > (_width + (textsize * 6))){
 12516  0712  0020               	movlb	0	; select bank0
 12517  0713  086F               	movf	_textsize,w
 12518  0714  00BA               	movwf	??_display_print
 12519  0715  01BB               	clrf	??_display_print+1
 12520  0716  083A               	movf	??_display_print,w
 12521  0717  00F1               	movwf	___wmul@multiplier
 12522  0718  083B               	movf	??_display_print+1,w
 12523  0719  00F2               	movwf	___wmul@multiplier+1
 12524  071A  3006               	movlw	6
 12525  071B  00F3               	movwf	___wmul@multiplicand
 12526  071C  3000               	movlw	0
 12527  071D  00F4               	movwf	___wmul@multiplicand+1
 12528  071E  3192  223A  3185   	fcall	___wmul
 12529  0721  0021               	movlb	1	; select bank1
 12530  0722  0849               	movf	__width^(0+128),w
 12531  0723  0771               	addwf	?___wmul,w
 12532  0724  0020               	movlb	0	; select bank0
 12533  0725  00BC               	movwf	??_display_print+2
 12534  0726  0021               	movlb	1	; select bank1
 12535  0727  084A               	movf	(__width+1)^(0+128),w
 12536  0728  3D72               	addwfc	?___wmul+1,w
 12537  0729  0020               	movlb	0	; select bank0
 12538  072A  00BD               	movwf	??_display_print+3
 12539  072B  0021               	movlb	1	; select bank1
 12540  072C  0846               	movf	(_cursor_x+1)^(0+128),w
 12541  072D  0020               	movlb	0	; select bank0
 12542  072E  023D               	subwf	??_display_print+3,w
 12543  072F  1D03               	skipz
 12544  0730  2F35               	goto	u3395
 12545  0731  0021               	movlb	1	; select bank1
 12546  0732  0845               	movf	_cursor_x^(0+128),w
 12547  0733  0020               	movlb	0	; select bank0
 12548  0734  023C               	subwf	??_display_print+2,w
 12549  0735                     u3395:
 12550  0735  1803               	skipnc
 12551  0736  2F3C               	goto	l3955
 12552                           
 12553                           ;GFX_Library.c: 500:     cursor_x = _width;
 12554  0737  0021               	movlb	1	; select bank1
 12555  0738  084A               	movf	(__width+1)^(0+128),w
 12556  0739  00C6               	movwf	(_cursor_x+1)^(0+128)
 12557  073A  0849               	movf	__width^(0+128),w
 12558  073B  00C5               	movwf	_cursor_x^(0+128)
 12559  073C                     l3955:
 12560  073C  0020               	movlb	0	; select bank0
 12561  073D  086F               	movf	_textsize,w
 12562  073E  00BA               	movwf	??_display_print
 12563  073F  01BB               	clrf	??_display_print+1
 12564  0740  083A               	movf	??_display_print,w
 12565  0741  00F1               	movwf	___wmul@multiplier
 12566  0742  083B               	movf	??_display_print+1,w
 12567  0743  00F2               	movwf	___wmul@multiplier+1
 12568  0744  3005               	movlw	5
 12569  0745  00F3               	movwf	___wmul@multiplicand
 12570  0746  3000               	movlw	0
 12571  0747  00F4               	movwf	___wmul@multiplicand+1
 12572  0748  3192  223A  3185   	fcall	___wmul
 12573  074B  0021               	movlb	1	; select bank1
 12574  074C  0845               	movf	_cursor_x^(0+128),w
 12575  074D  0771               	addwf	?___wmul,w
 12576  074E  0020               	movlb	0	; select bank0
 12577  074F  00BC               	movwf	??_display_print+2
 12578  0750  0021               	movlb	1	; select bank1
 12579  0751  0846               	movf	(_cursor_x+1)^(0+128),w
 12580  0752  3D72               	addwfc	?___wmul+1,w
 12581  0753  0020               	movlb	0	; select bank0
 12582  0754  00BD               	movwf	??_display_print+3
 12583  0755  083D               	movf	??_display_print+3,w
 12584  0756  0021               	movlb	1	; select bank1
 12585  0757  024A               	subwf	(__width+1)^(0+128),w
 12586  0758  1D03               	skipz
 12587  0759  2F5E               	goto	u3405
 12588  075A  0020               	movlb	0	; select bank0
 12589  075B  083C               	movf	??_display_print+2,w
 12590  075C  0021               	movlb	1	; select bank1
 12591  075D  0249               	subwf	__width^(0+128),w
 12592  075E                     u3405:
 12593  075E  1803               	skipnc
 12594  075F  0008               	return
 12595                           
 12596                           ;GFX_Library.c: 504:   {;GFX_Library.c: 505:     cursor_x = 0;
 12597  0760  01C5               	clrf	_cursor_x^(0+128)
 12598  0761  01C6               	clrf	(_cursor_x+1)^(0+128)
 12599                           
 12600                           ;GFX_Library.c: 506:     cursor_y += textsize * 8;
 12601  0762  0020               	movlb	0	; select bank0
 12602  0763  086F               	movf	_textsize,w
 12603  0764  00BA               	movwf	??_display_print
 12604  0765  01BB               	clrf	??_display_print+1
 12605  0766  35BA               	lslf	??_display_print,f
 12606  0767  0DBB               	rlf	??_display_print+1,f
 12607  0768  35BA               	lslf	??_display_print,f
 12608  0769  0DBB               	rlf	??_display_print+1,f
 12609  076A  35BA               	lslf	??_display_print,f
 12610  076B  0DBB               	rlf	??_display_print+1,f
 12611  076C  083A               	movf	??_display_print,w
 12612  076D  0021               	movlb	1	; select bank1
 12613  076E  07C3               	addwf	_cursor_y^(0+128),f
 12614  076F  0020               	movlb	0	; select bank0
 12615  0770  083B               	movf	??_display_print+1,w
 12616  0771  0021               	movlb	1	; select bank1
 12617  0772  3DC4               	addwfc	(_cursor_y+1)^(0+128),f
 12618                           
 12619                           ;GFX_Library.c: 507:     if( cursor_y > ((uint16_t)_height + textsize * 8) ){
 12620  0773  0020               	movlb	0	; select bank0
 12621  0774  086F               	movf	_textsize,w
 12622  0775  00BA               	movwf	??_display_print
 12623  0776  01BB               	clrf	??_display_print+1
 12624  0777  35BA               	lslf	??_display_print,f
 12625  0778  0DBB               	rlf	??_display_print+1,f
 12626  0779  35BA               	lslf	??_display_print,f
 12627  077A  0DBB               	rlf	??_display_print+1,f
 12628  077B  35BA               	lslf	??_display_print,f
 12629  077C  0DBB               	rlf	??_display_print+1,f
 12630  077D  0021               	movlb	1	; select bank1
 12631  077E  0847               	movf	__height^(0+128),w
 12632  077F  0020               	movlb	0	; select bank0
 12633  0780  073A               	addwf	??_display_print,w
 12634  0781  00BC               	movwf	??_display_print+2
 12635  0782  0021               	movlb	1	; select bank1
 12636  0783  0848               	movf	(__height+1)^(0+128),w
 12637  0784  0020               	movlb	0	; select bank0
 12638  0785  3D3B               	addwfc	??_display_print+1,w
 12639  0786  00BD               	movwf	??_display_print+3
 12640  0787  0021               	movlb	1	; select bank1
 12641  0788  0844               	movf	(_cursor_y+1)^(0+128),w
 12642  0789  0020               	movlb	0	; select bank0
 12643  078A  023D               	subwf	??_display_print+3,w
 12644  078B  1D03               	skipz
 12645  078C  2F91               	goto	u3415
 12646  078D  0021               	movlb	1	; select bank1
 12647  078E  0843               	movf	_cursor_y^(0+128),w
 12648  078F  0020               	movlb	0	; select bank0
 12649  0790  023C               	subwf	??_display_print+2,w
 12650  0791                     u3415:
 12651  0791  1803               	skipnc
 12652  0792  0008               	return
 12653                           
 12654                           ;GFX_Library.c: 508:       cursor_y = _height;
 12655  0793  0021               	movlb	1	; select bank1
 12656  0794  0848               	movf	(__height+1)^(0+128),w
 12657  0795  00C4               	movwf	(_cursor_y+1)^(0+128)
 12658  0796  0847               	movf	__height^(0+128),w
 12659  0797  00C3               	movwf	_cursor_y^(0+128)
 12660  0798  0008               	return
 12661  0799                     __end_of_display_print:
 12662                           
 12663                           	psect	text27
 12664  173D                     __ptext27:	
 12665 ;; *************** function _fillRect *****************
 12666 ;; Defined at:
 12667 ;;		line 271 in file "ILI9341.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  x               2    6[BANK0 ] unsigned short 
 12670 ;;  y               2    8[BANK0 ] unsigned short 
 12671 ;;  w               2   10[BANK0 ] unsigned short 
 12672 ;;  h               2   12[BANK0 ] unsigned short 
 12673 ;;  color           2   14[BANK0 ] unsigned short 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;  px              4   20[BANK0 ] unsigned long 
 12676 ;;  lo              1   25[BANK0 ] unsigned char 
 12677 ;;  hi              1   24[BANK0 ] unsigned char 
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  1    wreg      void 
 12680 ;; Registers used:
 12681 ;;		wreg, status,2, status,0, pclath, cstack
 12682 ;; Tracked objects:
 12683 ;;		On entry : 1F/0
 12684 ;;		On exit  : 1F/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12687 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;Total ram usage:       20 bytes
 12692 ;; Hardware stack levels used:    1
 12693 ;; Hardware stack levels required when called:    7
 12694 ;; This function calls:
 12695 ;;		_SPI1_ExchangeByte
 12696 ;;		___lmul
 12697 ;;		_endWrite
 12698 ;;		_setAddrWindow
 12699 ;;		_startWrite
 12700 ;; This function is called by:
 12701 ;;		_display_print
 12702 ;;		_display_customChar
 12703 ;;		_fillScreen
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           
 12708                           ;psect for function _fillRect
 12709  173D                     _fillRect:
 12710                           
 12711                           ;ILI9341.c: 272:   if(w && h) {
 12712                           
 12713                           ;incstack = 0
 12714                           ; Regs used in _fillRect: [wreg+status,2+status,0+pclath+cstack]
 12715  173D  082A               	movf	fillRect@w,w
 12716  173E  042B               	iorwf	fillRect@w+1,w
 12717  173F  1903               	btfsc	3,2
 12718  1740  0008               	return
 12719  1741  082C               	movf	fillRect@h,w
 12720  1742  042D               	iorwf	fillRect@h+1,w
 12721  1743  1903               	btfsc	3,2
 12722  1744  0008               	return
 12723                           
 12724                           ;ILI9341.c: 273:     uint8_t hi = color >> 8, lo = color;
 12725  1745  082F               	movf	fillRect@color+1,w
 12726  1746  00B0               	movwf	??_fillRect
 12727  1747  0830               	movf	??_fillRect,w
 12728  1748  00B8               	movwf	fillRect@hi
 12729  1749  082E               	movf	fillRect@color,w
 12730  174A  00B0               	movwf	??_fillRect
 12731  174B  0830               	movf	??_fillRect,w
 12732  174C  00B9               	movwf	fillRect@lo
 12733                           
 12734                           ;ILI9341.c: 274:     if((x >= _width) || (y >= _height))
 12735  174D  0021               	movlb	1	; select bank1
 12736  174E  084A               	movf	(__width+1)^(0+128),w
 12737  174F  0020               	movlb	0	; select bank0
 12738  1750  0227               	subwf	fillRect@x+1,w
 12739  1751  1D03               	skipz
 12740  1752  2F57               	goto	u3125
 12741  1753  0021               	movlb	1	; select bank1
 12742  1754  0849               	movf	__width^(0+128),w
 12743  1755  0020               	movlb	0	; select bank0
 12744  1756  0226               	subwf	fillRect@x,w
 12745  1757                     u3125:
 12746  1757  1803               	skipnc
 12747  1758  0008               	return
 12748  1759  0021               	movlb	1	; select bank1
 12749  175A  0848               	movf	(__height+1)^(0+128),w
 12750  175B  0020               	movlb	0	; select bank0
 12751  175C  0229               	subwf	fillRect@y+1,w
 12752  175D  1D03               	skipz
 12753  175E  2F63               	goto	u3135
 12754  175F  0021               	movlb	1	; select bank1
 12755  1760  0847               	movf	__height^(0+128),w
 12756  1761  0020               	movlb	0	; select bank0
 12757  1762  0228               	subwf	fillRect@y,w
 12758  1763                     u3135:
 12759  1763  1803               	btfsc	3,0
 12760  1764  0008               	return
 12761                           
 12762                           ;ILI9341.c: 276:     if((x + w - 1) >= _width)
 12763  1765  082A               	movf	fillRect@w,w
 12764  1766  0726               	addwf	fillRect@x,w
 12765  1767  00B0               	movwf	??_fillRect
 12766  1768  082B               	movf	fillRect@w+1,w
 12767  1769  3D27               	addwfc	fillRect@x+1,w
 12768  176A  00B1               	movwf	??_fillRect+1
 12769  176B  0830               	movf	??_fillRect,w
 12770  176C  3EFF               	addlw	255
 12771  176D  00B2               	movwf	??_fillRect+2
 12772  176E  30FF               	movlw	255
 12773  176F  3D31               	addwfc	??_fillRect+1,w
 12774  1770  00B3               	movwf	??_fillRect+3
 12775  1771  0021               	movlb	1	; select bank1
 12776  1772  084A               	movf	(__width+1)^(0+128),w
 12777  1773  0020               	movlb	0	; select bank0
 12778  1774  0233               	subwf	??_fillRect+3,w
 12779  1775  1D03               	skipz
 12780  1776  2F7B               	goto	u3145
 12781  1777  0021               	movlb	1	; select bank1
 12782  1778  0849               	movf	__width^(0+128),w
 12783  1779  0020               	movlb	0	; select bank0
 12784  177A  0232               	subwf	??_fillRect+2,w
 12785  177B                     u3145:
 12786  177B  1C03               	skipc
 12787  177C  2F87               	goto	l953
 12788                           
 12789                           ;ILI9341.c: 277:       w = _width - x;
 12790  177D  0826               	movf	fillRect@x,w
 12791  177E  0021               	movlb	1	; select bank1
 12792  177F  0249               	subwf	__width^(0+128),w
 12793  1780  0020               	movlb	0	; select bank0
 12794  1781  00AA               	movwf	fillRect@w
 12795  1782  0827               	movf	fillRect@x+1,w
 12796  1783  0021               	movlb	1	; select bank1
 12797  1784  3B4A               	subwfb	(__width+1)^(0+128),w
 12798  1785  0020               	movlb	0	; select bank0
 12799  1786  00AB               	movwf	fillRect@w+1
 12800  1787                     l953:
 12801                           
 12802                           ;ILI9341.c: 278:     if((y + h - 1) >= _height)
 12803  1787  082C               	movf	fillRect@h,w
 12804  1788  0728               	addwf	fillRect@y,w
 12805  1789  00B0               	movwf	??_fillRect
 12806  178A  082D               	movf	fillRect@h+1,w
 12807  178B  3D29               	addwfc	fillRect@y+1,w
 12808  178C  00B1               	movwf	??_fillRect+1
 12809  178D  0830               	movf	??_fillRect,w
 12810  178E  3EFF               	addlw	255
 12811  178F  00B2               	movwf	??_fillRect+2
 12812  1790  30FF               	movlw	255
 12813  1791  3D31               	addwfc	??_fillRect+1,w
 12814  1792  00B3               	movwf	??_fillRect+3
 12815  1793  0021               	movlb	1	; select bank1
 12816  1794  0848               	movf	(__height+1)^(0+128),w
 12817  1795  0020               	movlb	0	; select bank0
 12818  1796  0233               	subwf	??_fillRect+3,w
 12819  1797  1D03               	skipz
 12820  1798  2F9D               	goto	u3155
 12821  1799  0021               	movlb	1	; select bank1
 12822  179A  0847               	movf	__height^(0+128),w
 12823  179B  0020               	movlb	0	; select bank0
 12824  179C  0232               	subwf	??_fillRect+2,w
 12825  179D                     u3155:
 12826  179D  1C03               	skipc
 12827  179E  2FA9               	goto	l3805
 12828                           
 12829                           ;ILI9341.c: 279:       h = _height - y;
 12830  179F  0828               	movf	fillRect@y,w
 12831  17A0  0021               	movlb	1	; select bank1
 12832  17A1  0247               	subwf	__height^(0+128),w
 12833  17A2  0020               	movlb	0	; select bank0
 12834  17A3  00AC               	movwf	fillRect@h
 12835  17A4  0829               	movf	fillRect@y+1,w
 12836  17A5  0021               	movlb	1	; select bank1
 12837  17A6  3B48               	subwfb	(__height+1)^(0+128),w
 12838  17A7  0020               	movlb	0	; select bank0
 12839  17A8  00AD               	movwf	fillRect@h+1
 12840  17A9                     l3805:
 12841                           
 12842                           ;ILI9341.c: 280:     startWrite();
 12843  17A9  3191  2102  3197   	fcall	_startWrite
 12844                           
 12845                           ;ILI9341.c: 281:     setAddrWindow(x, y, w, h);
 12846  17AC  0827               	movf	fillRect@x+1,w
 12847  17AD  00F4               	movwf	setAddrWindow@x1+1
 12848  17AE  0826               	movf	fillRect@x,w
 12849  17AF  00F3               	movwf	setAddrWindow@x1
 12850  17B0  0829               	movf	fillRect@y+1,w
 12851  17B1  00F6               	movwf	setAddrWindow@y1+1
 12852  17B2  0828               	movf	fillRect@y,w
 12853  17B3  00F5               	movwf	setAddrWindow@y1
 12854  17B4  082B               	movf	fillRect@w+1,w
 12855  17B5  00F8               	movwf	setAddrWindow@w+1
 12856  17B6  082A               	movf	fillRect@w,w
 12857  17B7  00F7               	movwf	setAddrWindow@w
 12858  17B8  082D               	movf	fillRect@h+1,w
 12859  17B9  00FA               	movwf	setAddrWindow@h+1
 12860  17BA  082C               	movf	fillRect@h,w
 12861  17BB  00F9               	movwf	setAddrWindow@h
 12862  17BC  3193  23AA  3197   	fcall	_setAddrWindow
 12863                           
 12864                           ;ILI9341.c: 282:     uint32_t px = (uint32_t)w * h;
 12865  17BF  082A               	movf	fillRect@w,w
 12866  17C0  00F1               	movwf	___lmul@multiplier
 12867  17C1  082B               	movf	fillRect@w+1,w
 12868  17C2  00F2               	movwf	___lmul@multiplier+1
 12869  17C3  01F3               	clrf	___lmul@multiplier+2
 12870  17C4  01F4               	clrf	___lmul@multiplier+3
 12871  17C5  082C               	movf	fillRect@h,w
 12872  17C6  00F5               	movwf	___lmul@multiplicand
 12873  17C7  082D               	movf	fillRect@h+1,w
 12874  17C8  00F6               	movwf	___lmul@multiplicand+1
 12875  17C9  01F7               	clrf	___lmul@multiplicand+2
 12876  17CA  01F8               	clrf	___lmul@multiplicand+3
 12877  17CB  3188  2001  3197   	fcall	___lmul
 12878  17CE  0874               	movf	?___lmul+3,w
 12879  17CF  00B7               	movwf	fillRect@px+3
 12880  17D0  0873               	movf	?___lmul+2,w
 12881  17D1  00B6               	movwf	fillRect@px+2
 12882  17D2  0872               	movf	?___lmul+1,w
 12883  17D3  00B5               	movwf	fillRect@px+1
 12884  17D4  0871               	movf	?___lmul,w
 12885  17D5  00B4               	movwf	fillRect@px
 12886  17D6                     l3813:	
 12887                           ;ILI9341.c: 283:     while (px--) {
 12888                           
 12889                           
 12890                           ;ILI9341.c: 283:     while (px--) {
 12891  17D6  3001               	movlw	1
 12892  17D7  0020               	movlb	0	; select bank0
 12893  17D8  00B0               	movwf	??_fillRect
 12894  17D9  3000               	movlw	0
 12895  17DA  00B1               	movwf	??_fillRect+1
 12896  17DB  3000               	movlw	0
 12897  17DC  00B2               	movwf	??_fillRect+2
 12898  17DD  3000               	movlw	0
 12899  17DE  00B3               	movwf	??_fillRect+3
 12900  17DF  0830               	movf	??_fillRect,w
 12901  17E0  02B4               	subwf	fillRect@px,f
 12902  17E1  0831               	movf	??_fillRect+1,w
 12903  17E2  3BB5               	subwfb	fillRect@px+1,f
 12904  17E3  0832               	movf	??_fillRect+2,w
 12905  17E4  3BB6               	subwfb	fillRect@px+2,f
 12906  17E5  0833               	movf	??_fillRect+3,w
 12907  17E6  3BB7               	subwfb	fillRect@px+3,f
 12908  17E7  0A34               	incf	fillRect@px,w
 12909  17E8  1D03               	skipz
 12910  17E9  2FF2               	goto	l3811
 12911  17EA  0A35               	incf	fillRect@px+1,w
 12912  17EB  1D03               	skipz
 12913  17EC  2FF2               	goto	l3811
 12914  17ED  0A36               	incf	fillRect@px+2,w
 12915  17EE  1903               	btfsc	3,2
 12916  17EF  0A37               	incf	fillRect@px+3,w
 12917  17F0  1903               	btfsc	3,2
 12918  17F1  2FFD               	goto	l3815
 12919  17F2                     l3811:
 12920                           
 12921                           ;ILI9341.c: 284:       SPI1_ExchangeByte(hi);
 12922  17F2  0020               	movlb	0	; select bank0
 12923  17F3  0838               	movf	fillRect@hi,w
 12924  17F4  3191  2170  3197   	fcall	_SPI1_ExchangeByte
 12925                           
 12926                           ;ILI9341.c: 285:       SPI1_ExchangeByte(lo);
 12927  17F7  0020               	movlb	0	; select bank0
 12928  17F8  0839               	movf	fillRect@lo,w
 12929  17F9  3191  2170  3197   	fcall	_SPI1_ExchangeByte
 12930  17FC  2FD6               	goto	l3813
 12931  17FD                     l3815:
 12932                           
 12933                           ;ILI9341.c: 287:     endWrite();
 12934  17FD  3191  2105         	fcall	_endWrite
 12935  17FF  0008               	return
 12936  1800                     __end_of_fillRect:
 12937                           
 12938                           	psect	text28
 12939  0801                     __ptext28:	
 12940 ;; *************** function ___lmul *****************
 12941 ;; Defined at:
 12942 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  multiplier      4    1[COMMON] unsigned long 
 12945 ;;  multiplicand    4    5[COMMON] unsigned long 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;  product         4    0[BANK0 ] unsigned long 
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  4    1[COMMON] unsigned long 
 12950 ;; Registers used:
 12951 ;;		wreg, status,2, status,0
 12952 ;; Tracked objects:
 12953 ;;		On entry : 1F/0
 12954 ;;		On exit  : 1F/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12957 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;Total ram usage:       12 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; Hardware stack levels required when called:    4
 12964 ;; This function calls:
 12965 ;;		Nothing
 12966 ;; This function is called by:
 12967 ;;		_fillRect
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function ___lmul
 12973  0801                     ___lmul:
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12977  0801  3000               	movlw	0
 12978  0802  00A3               	movwf	___lmul@product+3
 12979  0803  3000               	movlw	0
 12980  0804  00A2               	movwf	___lmul@product+2
 12981  0805  3000               	movlw	0
 12982  0806  00A1               	movwf	___lmul@product+1
 12983  0807  3000               	movlw	0
 12984  0808  00A0               	movwf	___lmul@product
 12985  0809                     l3699:
 12986  0809  1C71               	btfss	___lmul@multiplier,0
 12987  080A  2813               	goto	l3703
 12988  080B  0875               	movf	___lmul@multiplicand,w
 12989  080C  07A0               	addwf	___lmul@product,f
 12990  080D  0876               	movf	___lmul@multiplicand+1,w
 12991  080E  3DA1               	addwfc	___lmul@product+1,f
 12992  080F  0877               	movf	___lmul@multiplicand+2,w
 12993  0810  3DA2               	addwfc	___lmul@product+2,f
 12994  0811  0878               	movf	___lmul@multiplicand+3,w
 12995  0812  3DA3               	addwfc	___lmul@product+3,f
 12996  0813                     l3703:
 12997  0813  3001               	movlw	1
 12998  0814                     u2865:
 12999  0814  35F5               	lslf	___lmul@multiplicand,f
 13000  0815  0DF6               	rlf	___lmul@multiplicand+1,f
 13001  0816  0DF7               	rlf	___lmul@multiplicand+2,f
 13002  0817  0DF8               	rlf	___lmul@multiplicand+3,f
 13003  0818  0B89               	decfsz	9,f
 13004  0819  2814               	goto	u2865
 13005  081A  3001               	movlw	1
 13006  081B                     u2875:
 13007  081B  36F4               	lsrf	___lmul@multiplier+3,f
 13008  081C  0CF3               	rrf	___lmul@multiplier+2,f
 13009  081D  0CF2               	rrf	___lmul@multiplier+1,f
 13010  081E  0CF1               	rrf	___lmul@multiplier,f
 13011  081F  0B89               	decfsz	9,f
 13012  0820  281B               	goto	u2875
 13013  0821  0874               	movf	___lmul@multiplier+3,w
 13014  0822  0473               	iorwf	___lmul@multiplier+2,w
 13015  0823  0472               	iorwf	___lmul@multiplier+1,w
 13016  0824  0471               	iorwf	___lmul@multiplier,w
 13017  0825  1D03               	skipz
 13018  0826  2809               	goto	l3699
 13019  0827  0823               	movf	___lmul@product+3,w
 13020  0828  00F4               	movwf	?___lmul+3
 13021  0829  0822               	movf	___lmul@product+2,w
 13022  082A  00F3               	movwf	?___lmul+2
 13023  082B  0821               	movf	___lmul@product+1,w
 13024  082C  00F2               	movwf	?___lmul+1
 13025  082D  0820               	movf	___lmul@product,w
 13026  082E  00F1               	movwf	?___lmul
 13027  082F  0008               	return
 13028  0830                     __end_of___lmul:
 13029                           
 13030                           	psect	text29
 13031  15B2                     __ptext29:	
 13032 ;; *************** function _drawVLine *****************
 13033 ;; Defined at:
 13034 ;;		line 246 in file "ILI9341.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;  x               2    6[BANK0 ] unsigned short 
 13037 ;;  y               2    8[BANK0 ] unsigned short 
 13038 ;;  h               2   10[BANK0 ] unsigned short 
 13039 ;;  color           2   12[BANK0 ] unsigned short 
 13040 ;; Auto vars:     Size  Location     Type
 13041 ;;  lo              1   19[BANK0 ] unsigned char 
 13042 ;;  hi              1   18[BANK0 ] unsigned char 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      void 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0, pclath, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 1F/0
 13049 ;;		On exit  : 1F/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13052 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;Total ram usage:       14 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    7
 13059 ;; This function calls:
 13060 ;;		_SPI1_ExchangeByte
 13061 ;;		_endWrite
 13062 ;;		_setAddrWindow
 13063 ;;		_startWrite
 13064 ;; This function is called by:
 13065 ;;		_display_print
 13066 ;;		_display_customChar
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           
 13071                           ;psect for function _drawVLine
 13072  15B2                     _drawVLine:
 13073                           
 13074                           ;ILI9341.c: 247:   if( (x < _width) && (y < _height) && h) {
 13075                           
 13076                           ;incstack = 0
 13077                           ; Regs used in _drawVLine: [wreg+status,2+status,0+pclath+cstack]
 13078  15B2  0021               	movlb	1	; select bank1
 13079  15B3  084A               	movf	(__width+1)^(0+128),w
 13080  15B4  0020               	movlb	0	; select bank0
 13081  15B5  0227               	subwf	drawVLine@x+1,w
 13082  15B6  1D03               	skipz
 13083  15B7  2DBC               	goto	u3055
 13084  15B8  0021               	movlb	1	; select bank1
 13085  15B9  0849               	movf	__width^(0+128),w
 13086  15BA  0020               	movlb	0	; select bank0
 13087  15BB  0226               	subwf	drawVLine@x,w
 13088  15BC                     u3055:
 13089  15BC  1803               	skipnc
 13090  15BD  0008               	return
 13091  15BE  0021               	movlb	1	; select bank1
 13092  15BF  0848               	movf	(__height+1)^(0+128),w
 13093  15C0  0020               	movlb	0	; select bank0
 13094  15C1  0229               	subwf	drawVLine@y+1,w
 13095  15C2  1D03               	skipz
 13096  15C3  2DC8               	goto	u3065
 13097  15C4  0021               	movlb	1	; select bank1
 13098  15C5  0847               	movf	__height^(0+128),w
 13099  15C6  0020               	movlb	0	; select bank0
 13100  15C7  0228               	subwf	drawVLine@y,w
 13101  15C8                     u3065:
 13102  15C8  1803               	skipnc
 13103  15C9  0008               	return
 13104  15CA  082A               	movf	drawVLine@h,w
 13105  15CB  042B               	iorwf	drawVLine@h+1,w
 13106  15CC  1903               	btfsc	3,2
 13107  15CD  0008               	return
 13108                           
 13109                           ;ILI9341.c: 248:     uint8_t hi = color >> 8, lo = color;
 13110  15CE  082D               	movf	drawVLine@color+1,w
 13111  15CF  00AE               	movwf	??_drawVLine
 13112  15D0  082E               	movf	??_drawVLine,w
 13113  15D1  00B2               	movwf	drawVLine@hi
 13114  15D2  082C               	movf	drawVLine@color,w
 13115  15D3  00AE               	movwf	??_drawVLine
 13116  15D4  082E               	movf	??_drawVLine,w
 13117  15D5  00B3               	movwf	drawVLine@lo
 13118                           
 13119                           ;ILI9341.c: 249:     if((y + h - 1) >= _height)
 13120  15D6  082A               	movf	drawVLine@h,w
 13121  15D7  0728               	addwf	drawVLine@y,w
 13122  15D8  00AE               	movwf	??_drawVLine
 13123  15D9  082B               	movf	drawVLine@h+1,w
 13124  15DA  3D29               	addwfc	drawVLine@y+1,w
 13125  15DB  00AF               	movwf	??_drawVLine+1
 13126  15DC  082E               	movf	??_drawVLine,w
 13127  15DD  3EFF               	addlw	255
 13128  15DE  00B0               	movwf	??_drawVLine+2
 13129  15DF  30FF               	movlw	255
 13130  15E0  3D2F               	addwfc	??_drawVLine+1,w
 13131  15E1  00B1               	movwf	??_drawVLine+3
 13132  15E2  0021               	movlb	1	; select bank1
 13133  15E3  0848               	movf	(__height+1)^(0+128),w
 13134  15E4  0020               	movlb	0	; select bank0
 13135  15E5  0231               	subwf	??_drawVLine+3,w
 13136  15E6  1D03               	skipz
 13137  15E7  2DEC               	goto	u3085
 13138  15E8  0021               	movlb	1	; select bank1
 13139  15E9  0847               	movf	__height^(0+128),w
 13140  15EA  0020               	movlb	0	; select bank0
 13141  15EB  0230               	subwf	??_drawVLine+2,w
 13142  15EC                     u3085:
 13143  15EC  1C03               	skipc
 13144  15ED  2DF8               	goto	l3781
 13145                           
 13146                           ;ILI9341.c: 250:       h = _height - y;
 13147  15EE  0828               	movf	drawVLine@y,w
 13148  15EF  0021               	movlb	1	; select bank1
 13149  15F0  0247               	subwf	__height^(0+128),w
 13150  15F1  0020               	movlb	0	; select bank0
 13151  15F2  00AA               	movwf	drawVLine@h
 13152  15F3  0829               	movf	drawVLine@y+1,w
 13153  15F4  0021               	movlb	1	; select bank1
 13154  15F5  3B48               	subwfb	(__height+1)^(0+128),w
 13155  15F6  0020               	movlb	0	; select bank0
 13156  15F7  00AB               	movwf	drawVLine@h+1
 13157  15F8                     l3781:
 13158                           
 13159                           ;ILI9341.c: 251:     startWrite();
 13160  15F8  3191  2102  3195   	fcall	_startWrite
 13161                           
 13162                           ;ILI9341.c: 252:     setAddrWindow(x, y, 1, h);
 13163  15FB  0827               	movf	drawVLine@x+1,w
 13164  15FC  00F4               	movwf	setAddrWindow@x1+1
 13165  15FD  0826               	movf	drawVLine@x,w
 13166  15FE  00F3               	movwf	setAddrWindow@x1
 13167  15FF  0829               	movf	drawVLine@y+1,w
 13168  1600  00F6               	movwf	setAddrWindow@y1+1
 13169  1601  0828               	movf	drawVLine@y,w
 13170  1602  00F5               	movwf	setAddrWindow@y1
 13171  1603  3001               	movlw	1
 13172  1604  00F7               	movwf	setAddrWindow@w
 13173  1605  3000               	movlw	0
 13174  1606  00F8               	movwf	setAddrWindow@w+1
 13175  1607  082B               	movf	drawVLine@h+1,w
 13176  1608  00FA               	movwf	setAddrWindow@h+1
 13177  1609  082A               	movf	drawVLine@h,w
 13178  160A  00F9               	movwf	setAddrWindow@h
 13179  160B  3193  23AA  3195   	fcall	_setAddrWindow
 13180  160E                     l3787:	
 13181                           ;ILI9341.c: 253:     while (h--) {
 13182                           
 13183                           
 13184                           ;ILI9341.c: 253:     while (h--) {
 13185  160E  3001               	movlw	1
 13186  160F  0020               	movlb	0	; select bank0
 13187  1610  02AA               	subwf	drawVLine@h,f
 13188  1611  3000               	movlw	0
 13189  1612  3BAB               	subwfb	drawVLine@h+1,f
 13190  1613  0A2A               	incf	drawVLine@h,w
 13191  1614  1903               	btfsc	3,2
 13192  1615  0A2B               	incf	drawVLine@h+1,w
 13193  1616  1903               	btfsc	3,2
 13194  1617  2E22               	goto	l3789
 13195                           
 13196                           ;ILI9341.c: 254:       SPI1_ExchangeByte(hi);
 13197  1618  0832               	movf	drawVLine@hi,w
 13198  1619  3191  2170  3195   	fcall	_SPI1_ExchangeByte
 13199                           
 13200                           ;ILI9341.c: 255:       SPI1_ExchangeByte(lo);
 13201  161C  0020               	movlb	0	; select bank0
 13202  161D  0833               	movf	drawVLine@lo,w
 13203  161E  3191  2170  3195   	fcall	_SPI1_ExchangeByte
 13204  1621  2E0E               	goto	l3787
 13205  1622                     l3789:
 13206                           
 13207                           ;ILI9341.c: 257:     endWrite();
 13208  1622  3191  2105         	fcall	_endWrite
 13209  1624  0008               	return
 13210  1625                     __end_of_drawVLine:
 13211                           
 13212                           	psect	text30
 13213  132B                     __ptext30:	
 13214 ;; *************** function _drawPixel *****************
 13215 ;; Defined at:
 13216 ;;		line 202 in file "ILI9341.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  x               2    6[BANK0 ] unsigned short 
 13219 ;;  y               2    8[BANK0 ] unsigned short 
 13220 ;;  color           2   10[BANK0 ] unsigned short 
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;		None
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1    wreg      void 
 13225 ;; Registers used:
 13226 ;;		wreg, status,2, status,0, pclath, cstack
 13227 ;; Tracked objects:
 13228 ;;		On entry : 1F/0
 13229 ;;		On exit  : 1F/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13232 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;Total ram usage:        6 bytes
 13237 ;; Hardware stack levels used:    1
 13238 ;; Hardware stack levels required when called:    7
 13239 ;; This function calls:
 13240 ;;		_SPI1_ExchangeByte
 13241 ;;		_endWrite
 13242 ;;		_setAddrWindow
 13243 ;;		_startWrite
 13244 ;; This function is called by:
 13245 ;;		_display_print
 13246 ;;		_display_customChar
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           
 13251                           ;psect for function _drawPixel
 13252  132B                     _drawPixel:
 13253                           
 13254                           ;ILI9341.c: 203:   if((x < _width) && (y < _height)) {
 13255                           
 13256                           ;incstack = 0
 13257                           ; Regs used in _drawPixel: [wreg+status,2+status,0+pclath+cstack]
 13258  132B  0021               	movlb	1	; select bank1
 13259  132C  084A               	movf	(__width+1)^(0+128),w
 13260  132D  0020               	movlb	0	; select bank0
 13261  132E  0227               	subwf	drawPixel@x+1,w
 13262  132F  1D03               	skipz
 13263  1330  2B35               	goto	u3175
 13264  1331  0021               	movlb	1	; select bank1
 13265  1332  0849               	movf	__width^(0+128),w
 13266  1333  0020               	movlb	0	; select bank0
 13267  1334  0226               	subwf	drawPixel@x,w
 13268  1335                     u3175:
 13269  1335  1803               	skipnc
 13270  1336  0008               	return
 13271  1337  0021               	movlb	1	; select bank1
 13272  1338  0848               	movf	(__height+1)^(0+128),w
 13273  1339  0020               	movlb	0	; select bank0
 13274  133A  0229               	subwf	drawPixel@y+1,w
 13275  133B  1D03               	skipz
 13276  133C  2B41               	goto	u3185
 13277  133D  0021               	movlb	1	; select bank1
 13278  133E  0847               	movf	__height^(0+128),w
 13279  133F  0020               	movlb	0	; select bank0
 13280  1340  0228               	subwf	drawPixel@y,w
 13281  1341                     u3185:
 13282  1341  1803               	skipnc
 13283  1342  0008               	return
 13284                           
 13285                           ;ILI9341.c: 204:     startWrite();
 13286  1343  3191  2102  3193   	fcall	_startWrite
 13287                           
 13288                           ;ILI9341.c: 205:     setAddrWindow(x, y, 1, 1);
 13289  1346  0827               	movf	drawPixel@x+1,w
 13290  1347  00F4               	movwf	setAddrWindow@x1+1
 13291  1348  0826               	movf	drawPixel@x,w
 13292  1349  00F3               	movwf	setAddrWindow@x1
 13293  134A  0829               	movf	drawPixel@y+1,w
 13294  134B  00F6               	movwf	setAddrWindow@y1+1
 13295  134C  0828               	movf	drawPixel@y,w
 13296  134D  00F5               	movwf	setAddrWindow@y1
 13297  134E  3001               	movlw	1
 13298  134F  00F7               	movwf	setAddrWindow@w
 13299  1350  3000               	movlw	0
 13300  1351  00F8               	movwf	setAddrWindow@w+1
 13301  1352  3001               	movlw	1
 13302  1353  00F9               	movwf	setAddrWindow@h
 13303  1354  3000               	movlw	0
 13304  1355  00FA               	movwf	setAddrWindow@h+1
 13305  1356  3193  23AA  3193   	fcall	_setAddrWindow
 13306                           
 13307                           ;ILI9341.c: 206:     SPI1_ExchangeByte(color >> 8);
 13308  1359  082B               	movf	drawPixel@color+1,w
 13309  135A  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13310                           
 13311                           ;ILI9341.c: 207:     SPI1_ExchangeByte(color & 0xFF);
 13312  135D  0020               	movlb	0	; select bank0
 13313  135E  082A               	movf	drawPixel@color,w
 13314  135F  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13315                           
 13316                           ;ILI9341.c: 208:     endWrite();
 13317  1362  3191  2105         	fcall	_endWrite
 13318  1364  0008               	return
 13319  1365                     __end_of_drawPixel:
 13320                           
 13321                           	psect	text31
 13322  1102                     __ptext31:	
 13323 ;; *************** function _startWrite *****************
 13324 ;; Defined at:
 13325 ;;		line 54 in file "ILI9341.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;		None
 13328 ;; Auto vars:     Size  Location     Type
 13329 ;;		None
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  1    wreg      void 
 13332 ;; Registers used:
 13333 ;;		None
 13334 ;; Tracked objects:
 13335 ;;		On entry : 1E/0
 13336 ;;		On exit  : 1F/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;Total ram usage:        0 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; Hardware stack levels required when called:    4
 13346 ;; This function calls:
 13347 ;;		Nothing
 13348 ;; This function is called by:
 13349 ;;		_tft_begin
 13350 ;;		_setRotation
 13351 ;;		_drawPixel
 13352 ;;		_drawVLine
 13353 ;;		_fillRect
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           
 13358                           ;psect for function _startWrite
 13359  1102                     _startWrite:
 13360                           
 13361                           ;incstack = 0
 13362                           ; Regs used in _startWrite: []
 13363                           ;ILI9341.c: 56:     do { LATCbits.LATC0 = 0; } while(0);
 13364  1102  0020               	movlb	0	; select bank0
 13365  1103  1018               	bcf	24,0	;volatile
 13366  1104  0008               	return
 13367  1105                     __end_of_startWrite:
 13368                           
 13369                           	psect	text32
 13370  13AA                     __ptext32:	
 13371 ;; *************** function _setAddrWindow *****************
 13372 ;; Defined at:
 13373 ;;		line 149 in file "ILI9341.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  x1              2    3[COMMON] unsigned short 
 13376 ;;  y1              2    5[COMMON] unsigned short 
 13377 ;;  w               2    7[COMMON] unsigned short 
 13378 ;;  h               2    9[COMMON] unsigned short 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;  y2              2    4[BANK0 ] unsigned short 
 13381 ;;  x2              2    2[BANK0 ] unsigned short 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0, pclath, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 1F/0
 13388 ;;		On exit  : 1F/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13391 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;Total ram usage:       14 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    6
 13398 ;; This function calls:
 13399 ;;		_SPI1_ExchangeByte
 13400 ;;		_writeCommand
 13401 ;; This function is called by:
 13402 ;;		_drawPixel
 13403 ;;		_drawVLine
 13404 ;;		_fillRect
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _setAddrWindow
 13410  13AA                     _setAddrWindow:
 13411                           
 13412                           ;ILI9341.c: 150:     uint16_t x2 = (x1 + w - 1),
 13413                           
 13414                           ;incstack = 0
 13415                           ; Regs used in _setAddrWindow: [wreg+status,2+status,0+pclath+cstack]
 13416  13AA  0877               	movf	setAddrWindow@w,w
 13417  13AB  0773               	addwf	setAddrWindow@x1,w
 13418  13AC  00A0               	movwf	??_setAddrWindow
 13419  13AD  0878               	movf	setAddrWindow@w+1,w
 13420  13AE  3D74               	addwfc	setAddrWindow@x1+1,w
 13421  13AF  00A1               	movwf	??_setAddrWindow+1
 13422  13B0  0820               	movf	??_setAddrWindow,w
 13423  13B1  3EFF               	addlw	255
 13424  13B2  00A2               	movwf	setAddrWindow@x2
 13425  13B3  30FF               	movlw	255
 13426  13B4  3D21               	addwfc	??_setAddrWindow+1,w
 13427  13B5  00A3               	movwf	setAddrWindow@x2+1
 13428                           
 13429                           ;ILI9341.c: 151:              y2 = (y1 + h - 1);
 13430  13B6  0879               	movf	setAddrWindow@h,w
 13431  13B7  0775               	addwf	setAddrWindow@y1,w
 13432  13B8  00A0               	movwf	??_setAddrWindow
 13433  13B9  087A               	movf	setAddrWindow@h+1,w
 13434  13BA  3D76               	addwfc	setAddrWindow@y1+1,w
 13435  13BB  00A1               	movwf	??_setAddrWindow+1
 13436  13BC  0820               	movf	??_setAddrWindow,w
 13437  13BD  3EFF               	addlw	255
 13438  13BE  00A4               	movwf	setAddrWindow@y2
 13439  13BF  30FF               	movlw	255
 13440  13C0  3D21               	addwfc	??_setAddrWindow+1,w
 13441  13C1  00A5               	movwf	setAddrWindow@y2+1
 13442                           
 13443                           ;ILI9341.c: 152:     writeCommand(0x2A);
 13444  13C2  302A               	movlw	42
 13445  13C3  3191  2140  3193   	fcall	_writeCommand
 13446                           
 13447                           ;ILI9341.c: 153:     SPI1_ExchangeByte(x1 >> 8);
 13448  13C6  0874               	movf	setAddrWindow@x1+1,w
 13449  13C7  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13450                           
 13451                           ;ILI9341.c: 154:     SPI1_ExchangeByte(x1);
 13452  13CA  0873               	movf	setAddrWindow@x1,w
 13453  13CB  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13454                           
 13455                           ;ILI9341.c: 155:     SPI1_ExchangeByte(x2 >> 8);
 13456  13CE  0020               	movlb	0	; select bank0
 13457  13CF  0823               	movf	setAddrWindow@x2+1,w
 13458  13D0  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13459                           
 13460                           ;ILI9341.c: 156:     SPI1_ExchangeByte(x2);
 13461  13D3  0020               	movlb	0	; select bank0
 13462  13D4  0822               	movf	setAddrWindow@x2,w
 13463  13D5  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13464                           
 13465                           ;ILI9341.c: 157:     writeCommand(0x2B);
 13466  13D8  302B               	movlw	43
 13467  13D9  3191  2140  3193   	fcall	_writeCommand
 13468                           
 13469                           ;ILI9341.c: 158:     SPI1_ExchangeByte(y1 >> 8);
 13470  13DC  0876               	movf	setAddrWindow@y1+1,w
 13471  13DD  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13472                           
 13473                           ;ILI9341.c: 159:     SPI1_ExchangeByte(y1);
 13474  13E0  0875               	movf	setAddrWindow@y1,w
 13475  13E1  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13476                           
 13477                           ;ILI9341.c: 160:     SPI1_ExchangeByte(y2 >> 8);
 13478  13E4  0020               	movlb	0	; select bank0
 13479  13E5  0825               	movf	setAddrWindow@y2+1,w
 13480  13E6  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13481                           
 13482                           ;ILI9341.c: 161:     SPI1_ExchangeByte(y2);
 13483  13E9  0020               	movlb	0	; select bank0
 13484  13EA  0824               	movf	setAddrWindow@y2,w
 13485  13EB  3191  2170  3193   	fcall	_SPI1_ExchangeByte
 13486                           
 13487                           ;ILI9341.c: 162:     writeCommand(0x2C);
 13488  13EE  302C               	movlw	44
 13489  13EF  3191  2140         	fcall	_writeCommand
 13490  13F1  0008               	return
 13491  13F2                     __end_of_setAddrWindow:
 13492                           
 13493                           	psect	text33
 13494  1140                     __ptext33:	
 13495 ;; *************** function _writeCommand *****************
 13496 ;; Defined at:
 13497 ;;		line 81 in file "ILI9341.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  cmd             1    wreg     unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  cmd             1    2[COMMON] unsigned char 
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0, pclath, cstack
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 1F/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;Total ram usage:        1 bytes
 13516 ;; Hardware stack levels used:    1
 13517 ;; Hardware stack levels required when called:    5
 13518 ;; This function calls:
 13519 ;;		_SPI1_ExchangeByte
 13520 ;; This function is called by:
 13521 ;;		_tft_begin
 13522 ;;		_setAddrWindow
 13523 ;;		_setRotation
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           
 13528                           ;psect for function _writeCommand
 13529  1140                     _writeCommand:
 13530                           
 13531                           ;incstack = 0
 13532                           ; Regs used in _writeCommand: [wreg+status,2+status,0+pclath+cstack]
 13533                           ;writeCommand@cmd stored from wreg
 13534  1140  00F2               	movwf	writeCommand@cmd
 13535                           
 13536                           ;ILI9341.c: 82:   PORTAbits.RA0=0;
 13537  1141  0020               	movlb	0	; select bank0
 13538  1142  100C               	bcf	12,0	;volatile
 13539                           
 13540                           ;ILI9341.c: 83:   SPI1_ExchangeByte(cmd);
 13541  1143  0872               	movf	writeCommand@cmd,w
 13542  1144  3191  2170         	fcall	_SPI1_ExchangeByte
 13543                           
 13544                           ;ILI9341.c: 84:   PORTAbits.RA0=1;
 13545  1146  0020               	movlb	0	; select bank0
 13546  1147  140C               	bsf	12,0	;volatile
 13547  1148  0008               	return
 13548  1149                     __end_of_writeCommand:
 13549                           
 13550                           	psect	text34
 13551  1170                     __ptext34:	
 13552 ;; *************** function _SPI1_ExchangeByte *****************
 13553 ;; Defined at:
 13554 ;;		line 97 in file "mcc_generated_files/spi1.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;  data            1    wreg     unsigned char 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;  data            1    1[COMMON] unsigned char 
 13559 ;; Return value:  Size  Location     Type
 13560 ;;                  1    wreg      unsigned char 
 13561 ;; Registers used:
 13562 ;;		wreg
 13563 ;; Tracked objects:
 13564 ;;		On entry : 1C/0
 13565 ;;		On exit  : 1F/3
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;Total ram usage:        1 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:    4
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_writeCommand
 13579 ;;		_tft_begin
 13580 ;;		_setAddrWindow
 13581 ;;		_setRotation
 13582 ;;		_drawPixel
 13583 ;;		_drawVLine
 13584 ;;		_fillRect
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           
 13589                           ;psect for function _SPI1_ExchangeByte
 13590  1170                     _SPI1_ExchangeByte:
 13591                           
 13592                           ;incstack = 0
 13593                           ; Regs used in _SPI1_ExchangeByte: [wreg]
 13594                           ;SPI1_ExchangeByte@data stored from wreg
 13595  1170  00F1               	movwf	SPI1_ExchangeByte@data
 13596                           
 13597                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
 13598  1171  0871               	movf	SPI1_ExchangeByte@data,w
 13599  1172  0023               	movlb	3	; select bank3
 13600  1173  008C               	movwf	12	;volatile
 13601  1174                     l258:	
 13602                           ;mcc_generated_files/spi1.c: 100:     while(!PIR3bits.SSP1IF);
 13603                           
 13604  1174  002E               	movlb	14	; select bank14
 13605  1175  1C0F               	btfss	15,0	;volatile
 13606  1176  2974               	goto	l258
 13607                           
 13608                           ;mcc_generated_files/spi1.c: 101:     PIR3bits.SSP1IF = 0;
 13609  1177  100F               	bcf	15,0	;volatile
 13610                           
 13611                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
 13612  1178  0023               	movlb	3	; select bank3
 13613  1179  080C               	movf	12,w	;volatile
 13614  117A  0008               	return
 13615  117B                     __end_of_SPI1_ExchangeByte:
 13616                           
 13617                           	psect	text35
 13618  1105                     __ptext35:	
 13619 ;; *************** function _endWrite *****************
 13620 ;; Defined at:
 13621 ;;		line 66 in file "ILI9341.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;		None
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  1    wreg      void 
 13628 ;; Registers used:
 13629 ;;		None
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 1F/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;Total ram usage:        0 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    4
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_tft_begin
 13646 ;;		_setRotation
 13647 ;;		_drawPixel
 13648 ;;		_drawVLine
 13649 ;;		_fillRect
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           
 13654                           ;psect for function _endWrite
 13655  1105                     _endWrite:
 13656                           
 13657                           ;ILI9341.c: 67:     PORTAbits.RA0=1;
 13658                           
 13659                           ;incstack = 0
 13660                           ; Regs used in _endWrite: []
 13661  1105  0020               	movlb	0	; select bank0
 13662  1106  140C               	bsf	12,0	;volatile
 13663                           
 13664                           ;ILI9341.c: 68:     do { LATCbits.LATC0 = 1; } while(0);
 13665  1107  1418               	bsf	24,0	;volatile
 13666  1108  0008               	return
 13667  1109                     __end_of_endWrite:
 13668                           
 13669                           	psect	text36
 13670  123A                     __ptext36:	
 13671 ;; *************** function ___wmul *****************
 13672 ;; Defined at:
 13673 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;  multiplier      2    1[COMMON] unsigned int 
 13676 ;;  multiplicand    2    3[COMMON] unsigned int 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  product         2    5[COMMON] unsigned int 
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  2    1[COMMON] unsigned int 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 1F/0
 13685 ;;		On exit  : 1F/0
 13686 ;;		Unchanged: 1F/0
 13687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;Total ram usage:        6 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; Hardware stack levels required when called:    4
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_display_print
 13699 ;;		_display_customChar
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           
 13704                           ;psect for function ___wmul
 13705  123A                     ___wmul:
 13706                           
 13707                           ;incstack = 0
 13708                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13709  123A  01F5               	clrf	___wmul@product
 13710  123B  01F6               	clrf	___wmul@product+1
 13711  123C                     l3833:
 13712  123C  1C71               	btfss	___wmul@multiplier,0
 13713  123D  2A42               	goto	l1112
 13714  123E  0873               	movf	___wmul@multiplicand,w
 13715  123F  07F5               	addwf	___wmul@product,f
 13716  1240  0874               	movf	___wmul@multiplicand+1,w
 13717  1241  3DF6               	addwfc	___wmul@product+1,f
 13718  1242                     l1112:
 13719  1242  3001               	movlw	1
 13720  1243                     u3205:
 13721  1243  35F3               	lslf	___wmul@multiplicand,f
 13722  1244  0DF4               	rlf	___wmul@multiplicand+1,f
 13723  1245  0B89               	decfsz	9,f
 13724  1246  2A43               	goto	u3205
 13725  1247  3001               	movlw	1
 13726  1248                     u3215:
 13727  1248  36F2               	lsrf	___wmul@multiplier+1,f
 13728  1249  0CF1               	rrf	___wmul@multiplier,f
 13729  124A  0B89               	decfsz	9,f
 13730  124B  2A48               	goto	u3215
 13731  124C  0871               	movf	___wmul@multiplier,w
 13732  124D  0472               	iorwf	___wmul@multiplier+1,w
 13733  124E  1D03               	btfss	3,2
 13734  124F  2A3C               	goto	l3833
 13735  1250  0876               	movf	___wmul@product+1,w
 13736  1251  00F2               	movwf	?___wmul+1
 13737  1252  0875               	movf	___wmul@product,w
 13738  1253  00F1               	movwf	?___wmul
 13739  1254  0008               	return
 13740  1255                     __end_of___wmul:
 13741                           
 13742                           	psect	text37
 13743  117B                     __ptext37:	
 13744 ;; *************** function _SYSTEM_Initialize *****************
 13745 ;; Defined at:
 13746 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;		None
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;		None
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1    wreg      void 
 13753 ;; Registers used:
 13754 ;;		wreg, status,2, status,0, pclath, cstack
 13755 ;; Tracked objects:
 13756 ;;		On entry : B1F/0
 13757 ;;		On exit  : 1F/11
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        0 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    6
 13767 ;; This function calls:
 13768 ;;		_OSCILLATOR_Initialize
 13769 ;;		_PIN_MANAGER_Initialize
 13770 ;;		_PMD_Initialize
 13771 ;;		_SPI1_Initialize
 13772 ;; This function is called by:
 13773 ;;		_main
 13774 ;; This function uses a non-reentrant model
 13775 ;;
 13776                           
 13777                           
 13778                           ;psect for function _SYSTEM_Initialize
 13779  117B                     _SYSTEM_Initialize:
 13780                           
 13781                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13782                           
 13783                           ;incstack = 0
 13784                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13785  117B  3191  212F  3191   	fcall	_PMD_Initialize
 13786                           
 13787                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
 13788  117E  3191  21E1  3191   	fcall	_SPI1_Initialize
 13789                           
 13790                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13791  1181  3195  2542  3191   	fcall	_PIN_MANAGER_Initialize
 13792                           
 13793                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13794  1184  3191  2137         	fcall	_OSCILLATOR_Initialize
 13795  1186  0008               	return
 13796  1187                     __end_of_SYSTEM_Initialize:
 13797                           
 13798                           	psect	text38
 13799  11E1                     __ptext38:	
 13800 ;; *************** function _SPI1_Initialize *****************
 13801 ;; Defined at:
 13802 ;;		line 62 in file "mcc_generated_files/spi1.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;		None
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;		None
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, status,2
 13811 ;; Tracked objects:
 13812 ;;		On entry : B1F/F
 13813 ;;		On exit  : B1F/3
 13814 ;;		Unchanged: B00/0
 13815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;Total ram usage:        0 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; Hardware stack levels required when called:    4
 13823 ;; This function calls:
 13824 ;;		Nothing
 13825 ;; This function is called by:
 13826 ;;		_SYSTEM_Initialize
 13827 ;; This function uses a non-reentrant model
 13828 ;;
 13829                           
 13830                           
 13831                           ;psect for function _SPI1_Initialize
 13832  11E1                     _SPI1_Initialize:
 13833                           
 13834                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 19;
 13835                           
 13836                           ;incstack = 0
 13837                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 13838  11E1  3013               	movlw	19
 13839  11E2  003D               	movlb	29	; select bank29
 13840  11E3  00C5               	movwf	69	;volatile
 13841                           
 13842                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 20;
 13843  11E4  3014               	movlw	20
 13844  11E5  00C6               	movwf	70	;volatile
 13845                           
 13846                           ;mcc_generated_files/spi1.c: 67:     RC3PPS = 20;
 13847  11E6  3014               	movlw	20
 13848  11E7  003E               	movlb	30	; select bank30
 13849  11E8  00A3               	movwf	35	;volatile
 13850                           
 13851                           ;mcc_generated_files/spi1.c: 68:     RC6PPS = 21;
 13852  11E9  3015               	movlw	21
 13853  11EA  00A6               	movwf	38	;volatile
 13854                           
 13855                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0xC0;
 13856  11EB  30C0               	movlw	192
 13857  11EC  0023               	movlb	3	; select bank3
 13858  11ED  008F               	movwf	15	;volatile
 13859                           
 13860                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
 13861  11EE  0190               	clrf	16	;volatile
 13862                           
 13863                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x4F;
 13864  11EF  304F               	movlw	79
 13865  11F0  008D               	movwf	13	;volatile
 13866                           
 13867                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC3 = 0;
 13868  11F1  0020               	movlb	0	; select bank0
 13869  11F2  1193               	bcf	19,3	;volatile
 13870                           
 13871                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
 13872  11F3  0023               	movlb	3	; select bank3
 13873  11F4  1290               	bcf	16,5	;volatile
 13874  11F5  0008               	return
 13875  11F6                     __end_of_SPI1_Initialize:
 13876                           
 13877                           	psect	text39
 13878  112F                     __ptext39:	
 13879 ;; *************** function _PMD_Initialize *****************
 13880 ;; Defined at:
 13881 ;;		line 72 in file "mcc_generated_files/mcc.c"
 13882 ;; Parameters:    Size  Location     Type
 13883 ;;		None
 13884 ;; Auto vars:     Size  Location     Type
 13885 ;;		None
 13886 ;; Return value:  Size  Location     Type
 13887 ;;                  1    wreg      void 
 13888 ;; Registers used:
 13889 ;;		status,2
 13890 ;; Tracked objects:
 13891 ;;		On entry : B1F/0
 13892 ;;		On exit  : B1F/F
 13893 ;;		Unchanged: B00/0
 13894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;Total ram usage:        0 bytes
 13900 ;; Hardware stack levels used:    1
 13901 ;; Hardware stack levels required when called:    4
 13902 ;; This function calls:
 13903 ;;		Nothing
 13904 ;; This function is called by:
 13905 ;;		_SYSTEM_Initialize
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909                           
 13910                           ;psect for function _PMD_Initialize
 13911  112F                     _PMD_Initialize:
 13912                           
 13913                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 13914                           
 13915                           ;incstack = 0
 13916                           ; Regs used in _PMD_Initialize: [status,2]
 13917  112F  002F               	movlb	15	; select bank15
 13918  1130  0196               	clrf	22	;volatile
 13919                           
 13920                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 13921  1131  0197               	clrf	23	;volatile
 13922                           
 13923                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 13924  1132  0198               	clrf	24	;volatile
 13925                           
 13926                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 13927  1133  0199               	clrf	25	;volatile
 13928                           
 13929                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 13930  1134  019A               	clrf	26	;volatile
 13931                           
 13932                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 13933  1135  019B               	clrf	27	;volatile
 13934  1136  0008               	return
 13935  1137                     __end_of_PMD_Initialize:
 13936                           
 13937                           	psect	text40
 13938  1542                     __ptext40:	
 13939 ;; *************** function _PIN_MANAGER_Initialize *****************
 13940 ;; Defined at:
 13941 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;		None
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;		None
 13946 ;; Return value:  Size  Location     Type
 13947 ;;                  1    wreg      void 
 13948 ;; Registers used:
 13949 ;;		wreg, status,2, status,0, pclath, cstack
 13950 ;; Tracked objects:
 13951 ;;		On entry : B1F/3
 13952 ;;		On exit  : 1F/1D
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13959 ;;Total ram usage:        0 bytes
 13960 ;; Hardware stack levels used:    1
 13961 ;; Hardware stack levels required when called:    5
 13962 ;; This function calls:
 13963 ;;		_IOCAF1_SetInterruptHandler
 13964 ;;		_IOCAF2_SetInterruptHandler
 13965 ;;		_IOCBF4_SetInterruptHandler
 13966 ;;		_IOCCF5_SetInterruptHandler
 13967 ;; This function is called by:
 13968 ;;		_SYSTEM_Initialize
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           
 13972                           
 13973                           ;psect for function _PIN_MANAGER_Initialize
 13974  1542                     _PIN_MANAGER_Initialize:
 13975                           
 13976                           ;mcc_generated_files/pin_manager.c: 65:     LATE = 0x00;
 13977                           
 13978                           ;incstack = 0
 13979                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13980  1542  0020               	movlb	0	; select bank0
 13981  1543  019A               	clrf	26	;volatile
 13982                           
 13983                           ;mcc_generated_files/pin_manager.c: 66:     LATD = 0x00;
 13984  1544  0199               	clrf	25	;volatile
 13985                           
 13986                           ;mcc_generated_files/pin_manager.c: 67:     LATA = 0x01;
 13987  1545  3001               	movlw	1
 13988  1546  0096               	movwf	22	;volatile
 13989                           
 13990                           ;mcc_generated_files/pin_manager.c: 68:     LATB = 0x00;
 13991  1547  0197               	clrf	23	;volatile
 13992                           
 13993                           ;mcc_generated_files/pin_manager.c: 69:     LATC = 0x03;
 13994  1548  3003               	movlw	3
 13995  1549  0098               	movwf	24	;volatile
 13996                           
 13997                           ;mcc_generated_files/pin_manager.c: 74:     TRISE = 0x07;
 13998  154A  3007               	movlw	7
 13999  154B  0095               	movwf	21	;volatile
 14000                           
 14001                           ;mcc_generated_files/pin_manager.c: 75:     TRISA = 0xFE;
 14002  154C  30FE               	movlw	254
 14003  154D  0091               	movwf	17	;volatile
 14004                           
 14005                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
 14006  154E  30FF               	movlw	255
 14007  154F  0092               	movwf	18	;volatile
 14008                           
 14009                           ;mcc_generated_files/pin_manager.c: 77:     TRISC = 0xB4;
 14010  1550  30B4               	movlw	180
 14011  1551  0093               	movwf	19	;volatile
 14012                           
 14013                           ;mcc_generated_files/pin_manager.c: 78:     TRISD = 0xFF;
 14014  1552  30FF               	movlw	255
 14015  1553  0094               	movwf	20	;volatile
 14016                           
 14017                           ;mcc_generated_files/pin_manager.c: 83:     ANSELD = 0xFF;
 14018  1554  30FF               	movlw	255
 14019  1555  003E               	movlb	30	; select bank30
 14020  1556  00D9               	movwf	89	;volatile
 14021                           
 14022                           ;mcc_generated_files/pin_manager.c: 84:     ANSELC = 0x84;
 14023  1557  3084               	movlw	132
 14024  1558  00CE               	movwf	78	;volatile
 14025                           
 14026                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xEF;
 14027  1559  30EF               	movlw	239
 14028  155A  00C3               	movwf	67	;volatile
 14029                           
 14030                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0x07;
 14031  155B  3007               	movlw	7
 14032  155C  00E4               	movwf	100	;volatile
 14033                           
 14034                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xF8;
 14035  155D  30F8               	movlw	248
 14036  155E  00B8               	movwf	56	;volatile
 14037                           
 14038                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 14039  155F  01DA               	clrf	90	;volatile
 14040                           
 14041                           ;mcc_generated_files/pin_manager.c: 93:     WPUE = 0x00;
 14042  1560  01E5               	clrf	101	;volatile
 14043                           
 14044                           ;mcc_generated_files/pin_manager.c: 94:     WPUB = 0x00;
 14045  1561  01C4               	clrf	68	;volatile
 14046                           
 14047                           ;mcc_generated_files/pin_manager.c: 95:     WPUA = 0x00;
 14048  1562  01B9               	clrf	57	;volatile
 14049                           
 14050                           ;mcc_generated_files/pin_manager.c: 96:     WPUC = 0x00;
 14051  1563  01CF               	clrf	79	;volatile
 14052                           
 14053                           ;mcc_generated_files/pin_manager.c: 101:     ODCONE = 0x00;
 14054  1564  01E6               	clrf	102	;volatile
 14055                           
 14056                           ;mcc_generated_files/pin_manager.c: 102:     ODCONA = 0x00;
 14057  1565  01BA               	clrf	58	;volatile
 14058                           
 14059                           ;mcc_generated_files/pin_manager.c: 103:     ODCONB = 0x00;
 14060  1566  01C5               	clrf	69	;volatile
 14061                           
 14062                           ;mcc_generated_files/pin_manager.c: 104:     ODCONC = 0x00;
 14063  1567  01D0               	clrf	80	;volatile
 14064                           
 14065                           ;mcc_generated_files/pin_manager.c: 105:     ODCOND = 0x00;
 14066  1568  01DB               	clrf	91	;volatile
 14067                           
 14068                           ;mcc_generated_files/pin_manager.c: 110:     SLRCONA = 0xFF;
 14069  1569  30FF               	movlw	255
 14070  156A  00BB               	movwf	59	;volatile
 14071                           
 14072                           ;mcc_generated_files/pin_manager.c: 111:     SLRCONB = 0xFF;
 14073  156B  30FF               	movlw	255
 14074  156C  00C6               	movwf	70	;volatile
 14075                           
 14076                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONC = 0xFF;
 14077  156D  30FF               	movlw	255
 14078  156E  00D1               	movwf	81	;volatile
 14079                           
 14080                           ;mcc_generated_files/pin_manager.c: 113:     SLRCOND = 0xFF;
 14081  156F  30FF               	movlw	255
 14082  1570  00DC               	movwf	92	;volatile
 14083                           
 14084                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONE = 0x07;
 14085  1571  3007               	movlw	7
 14086  1572  00E7               	movwf	103	;volatile
 14087                           
 14088                           ;mcc_generated_files/pin_manager.c: 119:     INLVLA = 0xFF;
 14089  1573  30FF               	movlw	255
 14090  1574  00BC               	movwf	60	;volatile
 14091                           
 14092                           ;mcc_generated_files/pin_manager.c: 120:     INLVLB = 0xFF;
 14093  1575  30FF               	movlw	255
 14094  1576  00C7               	movwf	71	;volatile
 14095                           
 14096                           ;mcc_generated_files/pin_manager.c: 121:     INLVLC = 0xFF;
 14097  1577  30FF               	movlw	255
 14098  1578  00D2               	movwf	82	;volatile
 14099                           
 14100                           ;mcc_generated_files/pin_manager.c: 122:     INLVLD = 0xFF;
 14101  1579  30FF               	movlw	255
 14102  157A  00DD               	movwf	93	;volatile
 14103                           
 14104                           ;mcc_generated_files/pin_manager.c: 123:     INLVLE = 0x07;
 14105  157B  3007               	movlw	7
 14106  157C  00E8               	movwf	104	;volatile
 14107                           
 14108                           ;mcc_generated_files/pin_manager.c: 130:     IOCAFbits.IOCAF1 = 0;
 14109  157D  10BF               	bcf	63,1	;volatile
 14110                           
 14111                           ;mcc_generated_files/pin_manager.c: 132:     IOCAFbits.IOCAF2 = 0;
 14112  157E  113F               	bcf	63,2	;volatile
 14113                           
 14114                           ;mcc_generated_files/pin_manager.c: 134:     IOCANbits.IOCAN1 = 1;
 14115  157F  14BE               	bsf	62,1	;volatile
 14116                           
 14117                           ;mcc_generated_files/pin_manager.c: 136:     IOCANbits.IOCAN2 = 1;
 14118  1580  153E               	bsf	62,2	;volatile
 14119                           
 14120                           ;mcc_generated_files/pin_manager.c: 138:     IOCAPbits.IOCAP1 = 0;
 14121  1581  10BD               	bcf	61,1	;volatile
 14122                           
 14123                           ;mcc_generated_files/pin_manager.c: 140:     IOCAPbits.IOCAP2 = 0;
 14124  1582  113D               	bcf	61,2	;volatile
 14125                           
 14126                           ;mcc_generated_files/pin_manager.c: 142:     IOCBFbits.IOCBF4 = 0;
 14127  1583  124A               	bcf	74,4	;volatile
 14128                           
 14129                           ;mcc_generated_files/pin_manager.c: 144:     IOCBNbits.IOCBN4 = 1;
 14130  1584  1649               	bsf	73,4	;volatile
 14131                           
 14132                           ;mcc_generated_files/pin_manager.c: 146:     IOCBPbits.IOCBP4 = 0;
 14133  1585  1248               	bcf	72,4	;volatile
 14134                           
 14135                           ;mcc_generated_files/pin_manager.c: 148:     IOCCFbits.IOCCF5 = 0;
 14136  1586  12D5               	bcf	85,5	;volatile
 14137                           
 14138                           ;mcc_generated_files/pin_manager.c: 150:     IOCCNbits.IOCCN5 = 1;
 14139  1587  16D4               	bsf	84,5	;volatile
 14140                           
 14141                           ;mcc_generated_files/pin_manager.c: 152:     IOCCPbits.IOCCP5 = 0;
 14142  1588  12D3               	bcf	83,5	;volatile
 14143                           
 14144                           ;mcc_generated_files/pin_manager.c: 157:     IOCAF1_SetInterruptHandler(IOCAF1_DefaultIn
      +                          terruptHandler);
 14145  1589  30FA               	movlw	low _IOCAF1_DefaultInterruptHandler
 14146  158A  00F1               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler
 14147  158B  3010               	movlw	high _IOCAF1_DefaultInterruptHandler
 14148  158C  00F2               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler+1
 14149  158D  3191  211D  3195   	fcall	_IOCAF1_SetInterruptHandler
 14150                           
 14151                           ;mcc_generated_files/pin_manager.c: 158:     IOCAF2_SetInterruptHandler(IOCAF2_DefaultIn
      +                          terruptHandler);
 14152  1590  30FB               	movlw	low _IOCAF2_DefaultInterruptHandler
 14153  1591  00F1               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
 14154  1592  3010               	movlw	high _IOCAF2_DefaultInterruptHandler
 14155  1593  00F2               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
 14156  1594  3191  2113  3195   	fcall	_IOCAF2_SetInterruptHandler
 14157                           
 14158                           ;mcc_generated_files/pin_manager.c: 159:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
 14159  1597  3000               	movlw	low _IOCBF4_DefaultInterruptHandler
 14160  1598  00F1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
 14161  1599  3008               	movlw	high _IOCBF4_DefaultInterruptHandler
 14162  159A  00F2               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
 14163  159B  3191  2118  3195   	fcall	_IOCBF4_SetInterruptHandler
 14164                           
 14165                           ;mcc_generated_files/pin_manager.c: 160:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
 14166  159E  3002               	movlw	low _IOCCF5_DefaultInterruptHandler
 14167  159F  00F1               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler
 14168  15A0  3000               	movlw	high _IOCCF5_DefaultInterruptHandler
 14169  15A1  00F2               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler+1
 14170  15A2  3191  2123         	fcall	_IOCCF5_SetInterruptHandler
 14171                           
 14172                           ;mcc_generated_files/pin_manager.c: 163:     PIE0bits.IOCIE = 1;
 14173  15A4  002E               	movlb	14	; select bank14
 14174  15A5  1616               	bsf	22,4	;volatile
 14175                           
 14176                           ;mcc_generated_files/pin_manager.c: 166:     SSP1CLKPPS = 0x13;
 14177  15A6  3013               	movlw	19
 14178  15A7  003D               	movlb	29	; select bank29
 14179  15A8  00C5               	movwf	69	;volatile
 14180                           
 14181                           ;mcc_generated_files/pin_manager.c: 167:     RC3PPS = 0x14;
 14182  15A9  3014               	movlw	20
 14183  15AA  003E               	movlb	30	; select bank30
 14184  15AB  00A3               	movwf	35	;volatile
 14185                           
 14186                           ;mcc_generated_files/pin_manager.c: 168:     RC6PPS = 0x15;
 14187  15AC  3015               	movlw	21
 14188  15AD  00A6               	movwf	38	;volatile
 14189                           
 14190                           ;mcc_generated_files/pin_manager.c: 169:     SSP1DATPPS = 0x14;
 14191  15AE  3014               	movlw	20
 14192  15AF  003D               	movlb	29	; select bank29
 14193  15B0  00C6               	movwf	70	;volatile
 14194  15B1  0008               	return
 14195  15B2                     __end_of_PIN_MANAGER_Initialize:
 14196                           
 14197                           	psect	text41
 14198  1123                     __ptext41:	
 14199 ;; *************** function _IOCCF5_SetInterruptHandler *****************
 14200 ;; Defined at:
 14201 ;;		line 304 in file "mcc_generated_files/pin_manager.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 14204 ;;		 -> ctrl_der(1), IOCCF5_DefaultInterruptHandler(1), 
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;		None
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  1    wreg      void 
 14209 ;; Registers used:
 14210 ;;		wreg
 14211 ;; Tracked objects:
 14212 ;;		On entry : 1D/3
 14213 ;;		On exit  : 1F/1
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;Total ram usage:        2 bytes
 14221 ;; Hardware stack levels used:    1
 14222 ;; Hardware stack levels required when called:    4
 14223 ;; This function calls:
 14224 ;;		Nothing
 14225 ;; This function is called by:
 14226 ;;		_PIN_MANAGER_Initialize
 14227 ;;		_main
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           
 14232                           ;psect for function _IOCCF5_SetInterruptHandler
 14233  1123                     _IOCCF5_SetInterruptHandler:
 14234                           
 14235                           ;mcc_generated_files/pin_manager.c: 305:     IOCCF5_InterruptHandler = InterruptHandler;
 14236                           
 14237                           ;incstack = 0
 14238                           ; Regs used in _IOCCF5_SetInterruptHandler: [wreg]
 14239  1123  0872               	movf	IOCCF5_SetInterruptHandler@InterruptHandler+1,w
 14240  1124  0021               	movlb	1	; select bank1
 14241  1125  00E5               	movwf	(_IOCCF5_InterruptHandler+1)^(0+128)
 14242  1126  0871               	movf	IOCCF5_SetInterruptHandler@InterruptHandler,w
 14243  1127  00E4               	movwf	_IOCCF5_InterruptHandler^(0+128)
 14244  1128  0008               	return
 14245  1129                     __end_of_IOCCF5_SetInterruptHandler:
 14246                           
 14247                           	psect	text42
 14248  1118                     __ptext42:	
 14249 ;; *************** function _IOCBF4_SetInterruptHandler *****************
 14250 ;; Defined at:
 14251 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 14254 ;;		 -> ctrl_izq(1), IOCBF4_DefaultInterruptHandler(1), 
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;		None
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		wreg
 14261 ;; Tracked objects:
 14262 ;;		On entry : 1F/1
 14263 ;;		On exit  : 1F/1
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;Total ram usage:        2 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    4
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_PIN_MANAGER_Initialize
 14277 ;;		_main
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           
 14282                           ;psect for function _IOCBF4_SetInterruptHandler
 14283  1118                     _IOCBF4_SetInterruptHandler:
 14284                           
 14285                           ;mcc_generated_files/pin_manager.c: 275:     IOCBF4_InterruptHandler = InterruptHandler;
 14286                           
 14287                           ;incstack = 0
 14288                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
 14289  1118  0872               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
 14290  1119  00E7               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
 14291  111A  0871               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
 14292  111B  00E6               	movwf	_IOCBF4_InterruptHandler^(0+128)
 14293  111C  0008               	return
 14294  111D                     __end_of_IOCBF4_SetInterruptHandler:
 14295                           
 14296                           	psect	text43
 14297  1113                     __ptext43:	
 14298 ;; *************** function _IOCAF2_SetInterruptHandler *****************
 14299 ;; Defined at:
 14300 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 14303 ;;		 -> ctrl_der2(1), IOCAF2_DefaultInterruptHandler(1), 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;		None
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  1    wreg      void 
 14308 ;; Registers used:
 14309 ;;		wreg
 14310 ;; Tracked objects:
 14311 ;;		On entry : 1F/1
 14312 ;;		On exit  : 1F/1
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;Total ram usage:        2 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:    4
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		_PIN_MANAGER_Initialize
 14326 ;;		_main
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           
 14331                           ;psect for function _IOCAF2_SetInterruptHandler
 14332  1113                     _IOCAF2_SetInterruptHandler:
 14333                           
 14334                           ;mcc_generated_files/pin_manager.c: 245:     IOCAF2_InterruptHandler = InterruptHandler;
 14335                           
 14336                           ;incstack = 0
 14337                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
 14338  1113  0872               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
 14339  1114  00E9               	movwf	(_IOCAF2_InterruptHandler+1)^(0+128)
 14340  1115  0871               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
 14341  1116  00E8               	movwf	_IOCAF2_InterruptHandler^(0+128)
 14342  1117  0008               	return
 14343  1118                     __end_of_IOCAF2_SetInterruptHandler:
 14344                           
 14345                           	psect	text44
 14346  111D                     __ptext44:	
 14347 ;; *************** function _IOCAF1_SetInterruptHandler *****************
 14348 ;; Defined at:
 14349 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 14352 ;;		 -> ctrl_izq2(1), IOCAF1_DefaultInterruptHandler(1), 
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		wreg
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/1
 14361 ;;		On exit  : 1F/1
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;Total ram usage:        2 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:    4
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_PIN_MANAGER_Initialize
 14375 ;;		_main
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           
 14380                           ;psect for function _IOCAF1_SetInterruptHandler
 14381  111D                     _IOCAF1_SetInterruptHandler:
 14382                           
 14383                           ;mcc_generated_files/pin_manager.c: 215:     IOCAF1_InterruptHandler = InterruptHandler;
 14384                           
 14385                           ;incstack = 0
 14386                           ; Regs used in _IOCAF1_SetInterruptHandler: [wreg]
 14387  111D  0872               	movf	IOCAF1_SetInterruptHandler@InterruptHandler+1,w
 14388  111E  0021               	movlb	1	; select bank1
 14389  111F  00EB               	movwf	(_IOCAF1_InterruptHandler+1)^(0+128)
 14390  1120  0871               	movf	IOCAF1_SetInterruptHandler@InterruptHandler,w
 14391  1121  00EA               	movwf	_IOCAF1_InterruptHandler^(0+128)
 14392  1122  0008               	return
 14393  1123                     __end_of_IOCAF1_SetInterruptHandler:
 14394                           
 14395                           	psect	text45
 14396  1137                     __ptext45:	
 14397 ;; *************** function _OSCILLATOR_Initialize *****************
 14398 ;; Defined at:
 14399 ;;		line 58 in file "mcc_generated_files/mcc.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;		None
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      void 
 14406 ;; Registers used:
 14407 ;;		wreg, status,2
 14408 ;; Tracked objects:
 14409 ;;		On entry : 1F/1D
 14410 ;;		On exit  : 1F/11
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; Hardware stack levels required when called:    4
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_SYSTEM_Initialize
 14424 ;; This function uses a non-reentrant model
 14425 ;;
 14426                           
 14427                           
 14428                           ;psect for function _OSCILLATOR_Initialize
 14429  1137                     _OSCILLATOR_Initialize:
 14430                           
 14431                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
 14432                           
 14433                           ;incstack = 0
 14434                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14435  1137  3060               	movlw	96
 14436  1138  0031               	movlb	17	; select bank17
 14437  1139  008D               	movwf	13	;volatile
 14438                           
 14439                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 14440  113A  018F               	clrf	15	;volatile
 14441                           
 14442                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 14443  113B  0191               	clrf	17	;volatile
 14444                           
 14445                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
 14446  113C  3006               	movlw	6
 14447  113D  0093               	movwf	19	;volatile
 14448                           
 14449                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 14450  113E  0192               	clrf	18	;volatile
 14451  113F  0008               	return
 14452  1140                     __end_of_OSCILLATOR_Initialize:
 14453                           
 14454                           	psect	text46
 14455  143B                     __ptext46:	
 14456 ;; *************** function _SPI1_Open *****************
 14457 ;; Defined at:
 14458 ;;		line 77 in file "mcc_generated_files/spi1.c"
 14459 ;; Parameters:    Size  Location     Type
 14460 ;;  spi1UniqueCo    1    wreg     enum E355
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;  spi1UniqueCo    1    4[COMMON] enum E355
 14463 ;; Return value:  Size  Location     Type
 14464 ;;                  1    wreg      _Bool 
 14465 ;; Registers used:
 14466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14467 ;; Tracked objects:
 14468 ;;		On entry : 1F/11
 14469 ;;		On exit  : 1F/3
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14475 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;Total ram usage:        4 bytes
 14477 ;; Hardware stack levels used:    1
 14478 ;; Hardware stack levels required when called:    4
 14479 ;; This function calls:
 14480 ;;		Nothing
 14481 ;; This function is called by:
 14482 ;;		_main
 14483 ;; This function uses a non-reentrant model
 14484 ;;
 14485                           
 14486                           
 14487                           ;psect for function _SPI1_Open
 14488  143B                     _SPI1_Open:
 14489                           
 14490                           ;incstack = 0
 14491                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 14492                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 14493  143B  00F4               	movwf	SPI1_Open@spi1UniqueConfiguration
 14494                           
 14495                           ;mcc_generated_files/spi1.c: 77: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 78: {;mcc_generated_files/spi1.c: 79:     if(!SSP1CON1bits.SS
      +                          PEN)
 14496  143C  0023               	movlb	3	; select bank3
 14497  143D  1A90               	btfsc	16,5	;volatile
 14498  143E  0008               	return
 14499                           
 14500                           ;mcc_generated_files/spi1.c: 80:     {;mcc_generated_files/spi1.c: 81:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 14501  143F  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 14502  1440  00F1               	movwf	??_SPI1_Open
 14503  1441  01F2               	clrf	??_SPI1_Open+1
 14504  1442  35F1               	lslf	??_SPI1_Open,f
 14505  1443  0DF2               	rlf	??_SPI1_Open+1,f
 14506  1444  35F1               	lslf	??_SPI1_Open,f
 14507  1445  0DF2               	rlf	??_SPI1_Open+1,f
 14508  1446  3065               	movlw	low ((_spi1_configuration+1)| (0+32768))
 14509  1447  0771               	addwf	??_SPI1_Open,w
 14510  1448  0084               	movwf	4
 14511  1449  3099               	movlw	high ((_spi1_configuration+1)| (0+32768))
 14512  144A  3D72               	addwfc	??_SPI1_Open+1,w
 14513  144B  0085               	movwf	5
 14514  144C  0800               	movf	0,w	;code access
 14515  144D  008F               	movwf	15	;volatile
 14516                           
 14517                           ;mcc_generated_files/spi1.c: 82:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 14518  144E  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 14519  144F  00F1               	movwf	??_SPI1_Open
 14520  1450  01F2               	clrf	??_SPI1_Open+1
 14521  1451  35F1               	lslf	??_SPI1_Open,f
 14522  1452  0DF2               	rlf	??_SPI1_Open+1,f
 14523  1453  35F1               	lslf	??_SPI1_Open,f
 14524  1454  0DF2               	rlf	??_SPI1_Open+1,f
 14525  1455  3064               	movlw	low (_spi1_configuration| (0+32768))
 14526  1456  0771               	addwf	??_SPI1_Open,w
 14527  1457  0084               	movwf	4
 14528  1458  3099               	movlw	high (_spi1_configuration| (0+32768))
 14529  1459  3D72               	addwfc	??_SPI1_Open+1,w
 14530  145A  0085               	movwf	5
 14531  145B  0800               	movf	0,w	;code access
 14532  145C  0090               	movwf	16	;volatile
 14533                           
 14534                           ;mcc_generated_files/spi1.c: 83:         SSP1CON2 = 0x00;
 14535  145D  0191               	clrf	17	;volatile
 14536                           
 14537                           ;mcc_generated_files/spi1.c: 84:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 14538  145E  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 14539  145F  00F1               	movwf	??_SPI1_Open
 14540  1460  01F2               	clrf	??_SPI1_Open+1
 14541  1461  35F1               	lslf	??_SPI1_Open,f
 14542  1462  0DF2               	rlf	??_SPI1_Open+1,f
 14543  1463  35F1               	lslf	??_SPI1_Open,f
 14544  1464  0DF2               	rlf	??_SPI1_Open+1,f
 14545  1465  3066               	movlw	low ((_spi1_configuration+2)| (0+32768))
 14546  1466  0771               	addwf	??_SPI1_Open,w
 14547  1467  0084               	movwf	4
 14548  1468  3099               	movlw	high ((_spi1_configuration+2)| (0+32768))
 14549  1469  3D72               	addwfc	??_SPI1_Open+1,w
 14550  146A  0085               	movwf	5
 14551  146B  0800               	movf	0,w	;code access
 14552  146C  008D               	movwf	13	;volatile
 14553                           
 14554                           ;mcc_generated_files/spi1.c: 85:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 14555  146D  0874               	movf	SPI1_Open@spi1UniqueConfiguration,w
 14556  146E  00F1               	movwf	??_SPI1_Open
 14557  146F  01F2               	clrf	??_SPI1_Open+1
 14558  1470  35F1               	lslf	??_SPI1_Open,f
 14559  1471  0DF2               	rlf	??_SPI1_Open+1,f
 14560  1472  35F1               	lslf	??_SPI1_Open,f
 14561  1473  0DF2               	rlf	??_SPI1_Open+1,f
 14562  1474  3067               	movlw	low ((_spi1_configuration+3)| (0+32768))
 14563  1475  0771               	addwf	??_SPI1_Open,w
 14564  1476  0084               	movwf	4
 14565  1477  3099               	movlw	high ((_spi1_configuration+3)| (0+32768))
 14566  1478  3D72               	addwfc	??_SPI1_Open+1,w
 14567  1479  0085               	movwf	5
 14568  147A  0800               	movf	0,w	;code access
 14569  147B  00F3               	movwf	??_SPI1_Open+2
 14570  147C  0DF3               	rlf	??_SPI1_Open+2,f
 14571  147D  0DF3               	rlf	??_SPI1_Open+2,f
 14572  147E  0DF3               	rlf	??_SPI1_Open+2,f
 14573  147F  0020               	movlb	0	; select bank0
 14574  1480  0813               	movf	19,w	;volatile
 14575  1481  0673               	xorwf	??_SPI1_Open+2,w
 14576  1482  39F7               	andlw	-9
 14577  1483  0673               	xorwf	??_SPI1_Open+2,w
 14578  1484  0093               	movwf	19	;volatile
 14579                           
 14580                           ;mcc_generated_files/spi1.c: 86:         SSP1CON1bits.SSPEN = 1;
 14581  1485  0023               	movlb	3	; select bank3
 14582  1486  1690               	bsf	16,5	;volatile
 14583  1487  0008               	return
 14584  1488                     __end_of_SPI1_Open:
 14585                           
 14586                           	psect	intentry
 14587  0004                     __pintentry:	
 14588 ;; *************** function _INTERRUPT_InterruptManager *****************
 14589 ;; Defined at:
 14590 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;		None
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1    wreg      void 
 14597 ;; Registers used:
 14598 ;;		wreg, status,2, status,0, pclath, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : F/E
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;Total ram usage:        0 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    3
 14611 ;; This function calls:
 14612 ;;		_PIN_MANAGER_IOC
 14613 ;; This function is called by:
 14614 ;;		Interrupt level 1
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618  0004                     _INTERRUPT_InterruptManager:
 14619                           
 14620                           ;incstack = 0
 14621  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14622                           
 14623                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 14624  0005  3180               	pagesel	$
 14625                           
 14626                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 14627  0006  002E               	movlb	14	; select bank14
 14628  0007  1A16               	btfsc	22,4	;volatile
 14629  0008  1E0C               	btfss	12,4	;volatile
 14630  0009  280C               	goto	i1l301
 14631                           
 14632                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 14633  000A  3191  21CC         	fcall	_PIN_MANAGER_IOC
 14634  000C                     i1l301:	
 14635                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14636                           
 14637  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14638  000D  0009               	retfie
 14639  000E                     __end_of_INTERRUPT_InterruptManager:
 14640                           
 14641                           	psect	text48
 14642  11CC                     __ptext48:	
 14643 ;; *************** function _PIN_MANAGER_IOC *****************
 14644 ;; Defined at:
 14645 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;		None
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;		None
 14650 ;; Return value:  Size  Location     Type
 14651 ;;                  1    wreg      void 
 14652 ;; Registers used:
 14653 ;;		wreg, status,2, status,0, pclath, cstack
 14654 ;; Tracked objects:
 14655 ;;		On entry : 1F/E
 14656 ;;		On exit  : 1F/1E
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;Total ram usage:        0 bytes
 14664 ;; Hardware stack levels used:    1
 14665 ;; Hardware stack levels required when called:    2
 14666 ;; This function calls:
 14667 ;;		_IOCAF1_ISR
 14668 ;;		_IOCAF2_ISR
 14669 ;;		_IOCBF4_ISR
 14670 ;;		_IOCCF5_ISR
 14671 ;; This function is called by:
 14672 ;;		_INTERRUPT_InterruptManager
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           
 14677                           ;psect for function _PIN_MANAGER_IOC
 14678  11CC                     _PIN_MANAGER_IOC:
 14679                           
 14680                           ;mcc_generated_files/pin_manager.c: 175:     if(IOCAFbits.IOCAF1 == 1)
 14681                           
 14682                           ;incstack = 0
 14683                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 14684  11CC  003E               	movlb	30	; select bank30
 14685  11CD  1CBF               	btfss	63,1	;volatile
 14686  11CE  29D2               	goto	i1l3381
 14687                           
 14688                           ;mcc_generated_files/pin_manager.c: 176:     {;mcc_generated_files/pin_manager.c: 177:  
      +                                 IOCAF1_ISR();
 14689  11CF  3191  2187  3191   	fcall	_IOCAF1_ISR
 14690  11D2                     i1l3381:
 14691                           
 14692                           ;mcc_generated_files/pin_manager.c: 180:     if(IOCAFbits.IOCAF2 == 1)
 14693  11D2  1D3F               	btfss	63,2	;volatile
 14694  11D3  29D7               	goto	i1l3385
 14695                           
 14696                           ;mcc_generated_files/pin_manager.c: 181:     {;mcc_generated_files/pin_manager.c: 182:  
      +                                 IOCAF2_ISR();
 14697  11D4  3191  2194  3191   	fcall	_IOCAF2_ISR
 14698  11D7                     i1l3385:
 14699                           
 14700                           ;mcc_generated_files/pin_manager.c: 185:     if(IOCBFbits.IOCBF4 == 1)
 14701  11D7  1E4A               	btfss	74,4	;volatile
 14702  11D8  29DC               	goto	i1l3389
 14703                           
 14704                           ;mcc_generated_files/pin_manager.c: 186:     {;mcc_generated_files/pin_manager.c: 187:  
      +                                 IOCBF4_ISR();
 14705  11D9  3191  21A1  3191   	fcall	_IOCBF4_ISR
 14706  11DC                     i1l3389:
 14707                           
 14708                           ;mcc_generated_files/pin_manager.c: 190:     if(IOCCFbits.IOCCF5 == 1)
 14709  11DC  1ED5               	btfss	85,5	;volatile
 14710  11DD  0008               	return
 14711                           
 14712                           ;mcc_generated_files/pin_manager.c: 191:     {;mcc_generated_files/pin_manager.c: 192:  
      +                                 IOCCF5_ISR();
 14713  11DE  3191  21AE         	fcall	_IOCCF5_ISR
 14714  11E0  0008               	return
 14715  11E1                     __end_of_PIN_MANAGER_IOC:
 14716                           
 14717                           	psect	text49
 14718  11AE                     __ptext49:	
 14719 ;; *************** function _IOCCF5_ISR *****************
 14720 ;; Defined at:
 14721 ;;		line 289 in file "mcc_generated_files/pin_manager.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;		None
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      void 
 14728 ;; Registers used:
 14729 ;;		wreg, status,2, status,0, pclath, cstack
 14730 ;; Tracked objects:
 14731 ;;		On entry : 1F/1E
 14732 ;;		On exit  : 1F/1E
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14739 ;;Total ram usage:        0 bytes
 14740 ;; Hardware stack levels used:    1
 14741 ;; Hardware stack levels required when called:    1
 14742 ;; This function calls:
 14743 ;;		Absolute function
 14744 ;;		_IOCCF5_DefaultInterruptHandler
 14745 ;;		_ctrl_der
 14746 ;; This function is called by:
 14747 ;;		_PIN_MANAGER_IOC
 14748 ;; This function uses a non-reentrant model
 14749 ;;
 14750                           
 14751                           
 14752                           ;psect for function _IOCCF5_ISR
 14753  11AE                     _IOCCF5_ISR:
 14754                           
 14755                           ;mcc_generated_files/pin_manager.c: 294:     if(IOCCF5_InterruptHandler)
 14756                           
 14757                           ;incstack = 0
 14758                           ; Regs used in _IOCCF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 14759  11AE  0021               	movlb	1	; select bank1
 14760  11AF  0864               	movf	_IOCCF5_InterruptHandler^(0+128),w
 14761  11B0  0465               	iorwf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 14762  11B1  1903               	btfsc	3,2
 14763  11B2  29B8               	goto	i1l3289
 14764                           
 14765                           ;mcc_generated_files/pin_manager.c: 295:     {;mcc_generated_files/pin_manager.c: 296:  
      +                                 IOCCF5_InterruptHandler();
 14766  11B3  0865               	movf	(_IOCCF5_InterruptHandler+1)^(0+128),w
 14767  11B4  008A               	movwf	10
 14768  11B5  0864               	movf	_IOCCF5_InterruptHandler^(0+128),w
 14769  11B6  000A               	callw
 14770  11B7  3191               	pagesel	$
 14771  11B8                     i1l3289:
 14772                           
 14773                           ;mcc_generated_files/pin_manager.c: 298:     IOCCFbits.IOCCF5 = 0;
 14774  11B8  003E               	movlb	30	; select bank30
 14775  11B9  12D5               	bcf	85,5	;volatile
 14776  11BA  0008               	return
 14777  11BB                     __end_of_IOCCF5_ISR:
 14778                           
 14779                           	psect	text50
 14780  0002                     __ptext50:	
 14781 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
 14782 ;; Defined at:
 14783 ;;		line 311 in file "mcc_generated_files/pin_manager.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;		None
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;		None
 14788 ;; Return value:  Size  Location     Type
 14789 ;;                  1    wreg      void 
 14790 ;; Registers used:
 14791 ;;		None
 14792 ;; Tracked objects:
 14793 ;;		On entry : 1F/1
 14794 ;;		On exit  : 1F/1
 14795 ;;		Unchanged: 1F/0
 14796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;Total ram usage:        0 bytes
 14802 ;; Hardware stack levels used:    1
 14803 ;; This function calls:
 14804 ;;		Nothing
 14805 ;; This function is called by:
 14806 ;;		_PIN_MANAGER_Initialize
 14807 ;;		_IOCCF5_ISR
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           
 14812                           ;psect for function _IOCCF5_DefaultInterruptHandler
 14813  0002                     _IOCCF5_DefaultInterruptHandler:
 14814                           
 14815                           ;incstack = 0
 14816                           ; Regs used in _IOCCF5_DefaultInterruptHandler: []
 14817  0002  0008               	return
 14818  0003                     __end_of_IOCCF5_DefaultInterruptHandler:
 14819                           
 14820                           	psect	text51
 14821  110E                     __ptext51:	
 14822 ;; *************** function _ctrl_der *****************
 14823 ;; Defined at:
 14824 ;;		line 188 in file "main.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;		None
 14827 ;; Auto vars:     Size  Location     Type
 14828 ;;		None
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  1    wreg      void 
 14831 ;; Registers used:
 14832 ;;		wreg
 14833 ;; Tracked objects:
 14834 ;;		On entry : 1F/1
 14835 ;;		On exit  : 1F/1
 14836 ;;		Unchanged: 1F/0
 14837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;Total ram usage:        1 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; This function calls:
 14845 ;;		Nothing
 14846 ;; This function is called by:
 14847 ;;		_main
 14848 ;;		_IOCCF5_ISR
 14849 ;; This function uses a non-reentrant model
 14850 ;;
 14851                           
 14852                           
 14853                           ;psect for function _ctrl_der
 14854  110E                     _ctrl_der:
 14855                           
 14856                           ;main.c: 189:     movimiento_jugador1 = derecha;
 14857                           
 14858                           ;incstack = 0
 14859                           ; Regs used in _ctrl_der: [wreg]
 14860  110E  3002               	movlw	2
 14861  110F  00F0               	movwf	??_ctrl_der
 14862  1110  0870               	movf	??_ctrl_der,w
 14863  1111  00FC               	movwf	_movimiento_jugador1
 14864  1112  0008               	return
 14865  1113                     __end_of_ctrl_der:
 14866                           
 14867                           	psect	text52
 14868  11A1                     __ptext52:	
 14869 ;; *************** function _IOCBF4_ISR *****************
 14870 ;; Defined at:
 14871 ;;		line 259 in file "mcc_generated_files/pin_manager.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  1    wreg      void 
 14878 ;; Registers used:
 14879 ;;		wreg, status,2, status,0, pclath, cstack
 14880 ;; Tracked objects:
 14881 ;;		On entry : 1F/1E
 14882 ;;		On exit  : 1F/1E
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; Hardware stack levels required when called:    1
 14892 ;; This function calls:
 14893 ;;		Absolute function
 14894 ;;		_IOCBF4_DefaultInterruptHandler
 14895 ;;		_ctrl_izq
 14896 ;; This function is called by:
 14897 ;;		_PIN_MANAGER_IOC
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           
 14902                           ;psect for function _IOCBF4_ISR
 14903  11A1                     _IOCBF4_ISR:
 14904                           
 14905                           ;mcc_generated_files/pin_manager.c: 264:     if(IOCBF4_InterruptHandler)
 14906                           
 14907                           ;incstack = 0
 14908                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 14909  11A1  0021               	movlb	1	; select bank1
 14910  11A2  0866               	movf	_IOCBF4_InterruptHandler^(0+128),w
 14911  11A3  0467               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 14912  11A4  1903               	btfsc	3,2
 14913  11A5  29AB               	goto	i1l3283
 14914                           
 14915                           ;mcc_generated_files/pin_manager.c: 265:     {;mcc_generated_files/pin_manager.c: 266:  
      +                                 IOCBF4_InterruptHandler();
 14916  11A6  0867               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 14917  11A7  008A               	movwf	10
 14918  11A8  0866               	movf	_IOCBF4_InterruptHandler^(0+128),w
 14919  11A9  000A               	callw
 14920  11AA  3191               	pagesel	$
 14921  11AB                     i1l3283:
 14922                           
 14923                           ;mcc_generated_files/pin_manager.c: 268:     IOCBFbits.IOCBF4 = 0;
 14924  11AB  003E               	movlb	30	; select bank30
 14925  11AC  124A               	bcf	74,4	;volatile
 14926  11AD  0008               	return
 14927  11AE                     __end_of_IOCBF4_ISR:
 14928                           
 14929                           	psect	text53
 14930  0800                     __ptext53:	
 14931 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 14932 ;; Defined at:
 14933 ;;		line 281 in file "mcc_generated_files/pin_manager.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;		None
 14936 ;; Auto vars:     Size  Location     Type
 14937 ;;		None
 14938 ;; Return value:  Size  Location     Type
 14939 ;;                  1    wreg      void 
 14940 ;; Registers used:
 14941 ;;		None
 14942 ;; Tracked objects:
 14943 ;;		On entry : 1F/1
 14944 ;;		On exit  : 1F/1
 14945 ;;		Unchanged: 1F/0
 14946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14951 ;;Total ram usage:        0 bytes
 14952 ;; Hardware stack levels used:    1
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_PIN_MANAGER_Initialize
 14957 ;;		_IOCBF4_ISR
 14958 ;; This function uses a non-reentrant model
 14959 ;;
 14960                           
 14961                           
 14962                           ;psect for function _IOCBF4_DefaultInterruptHandler
 14963  0800                     _IOCBF4_DefaultInterruptHandler:
 14964                           
 14965                           ;incstack = 0
 14966                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 14967  0800  0008               	return
 14968  0801                     __end_of_IOCBF4_DefaultInterruptHandler:
 14969                           
 14970                           	psect	text54
 14971  10FF                     __ptext54:	
 14972 ;; *************** function _ctrl_izq *****************
 14973 ;; Defined at:
 14974 ;;		line 184 in file "main.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;		None
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;		None
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      void 
 14981 ;; Registers used:
 14982 ;;		None
 14983 ;; Tracked objects:
 14984 ;;		On entry : 1F/1
 14985 ;;		On exit  : 1F/1
 14986 ;;		Unchanged: 1F/0
 14987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14992 ;;Total ram usage:        0 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; This function calls:
 14995 ;;		Nothing
 14996 ;; This function is called by:
 14997 ;;		_main
 14998 ;;		_IOCBF4_ISR
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           
 15003                           ;psect for function _ctrl_izq
 15004  10FF                     _ctrl_izq:
 15005                           
 15006                           ;main.c: 185:     movimiento_jugador1 = izquierda;
 15007                           
 15008                           ;incstack = 0
 15009                           ; Regs used in _ctrl_izq: []
 15010  10FF  01FC               	clrf	_movimiento_jugador1
 15011  1100  0AFC               	incf	_movimiento_jugador1,f
 15012  1101  0008               	return
 15013  1102                     __end_of_ctrl_izq:
 15014                           
 15015                           	psect	text55
 15016  1194                     __ptext55:	
 15017 ;; *************** function _IOCAF2_ISR *****************
 15018 ;; Defined at:
 15019 ;;		line 229 in file "mcc_generated_files/pin_manager.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;		None
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;		None
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      void 
 15026 ;; Registers used:
 15027 ;;		wreg, status,2, status,0, pclath, cstack
 15028 ;; Tracked objects:
 15029 ;;		On entry : 1F/1E
 15030 ;;		On exit  : 1F/1E
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;Total ram usage:        0 bytes
 15038 ;; Hardware stack levels used:    1
 15039 ;; Hardware stack levels required when called:    1
 15040 ;; This function calls:
 15041 ;;		Absolute function
 15042 ;;		_IOCAF2_DefaultInterruptHandler
 15043 ;;		_ctrl_der2
 15044 ;; This function is called by:
 15045 ;;		_PIN_MANAGER_IOC
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           
 15050                           ;psect for function _IOCAF2_ISR
 15051  1194                     _IOCAF2_ISR:
 15052                           
 15053                           ;mcc_generated_files/pin_manager.c: 234:     if(IOCAF2_InterruptHandler)
 15054                           
 15055                           ;incstack = 0
 15056                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 15057  1194  0021               	movlb	1	; select bank1
 15058  1195  0868               	movf	_IOCAF2_InterruptHandler^(0+128),w
 15059  1196  0469               	iorwf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 15060  1197  1903               	btfsc	3,2
 15061  1198  299E               	goto	i1l3277
 15062                           
 15063                           ;mcc_generated_files/pin_manager.c: 235:     {;mcc_generated_files/pin_manager.c: 236:  
      +                                 IOCAF2_InterruptHandler();
 15064  1199  0869               	movf	(_IOCAF2_InterruptHandler+1)^(0+128),w
 15065  119A  008A               	movwf	10
 15066  119B  0868               	movf	_IOCAF2_InterruptHandler^(0+128),w
 15067  119C  000A               	callw
 15068  119D  3191               	pagesel	$
 15069  119E                     i1l3277:
 15070                           
 15071                           ;mcc_generated_files/pin_manager.c: 238:     IOCAFbits.IOCAF2 = 0;
 15072  119E  003E               	movlb	30	; select bank30
 15073  119F  113F               	bcf	63,2	;volatile
 15074  11A0  0008               	return
 15075  11A1                     __end_of_IOCAF2_ISR:
 15076                           
 15077                           	psect	text56
 15078  10FB                     __ptext56:	
 15079 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
 15080 ;; Defined at:
 15081 ;;		line 251 in file "mcc_generated_files/pin_manager.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		None
 15090 ;; Tracked objects:
 15091 ;;		On entry : 1F/1
 15092 ;;		On exit  : 1F/1
 15093 ;;		Unchanged: 1F/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;Total ram usage:        0 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_PIN_MANAGER_Initialize
 15105 ;;		_IOCAF2_ISR
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           
 15110                           ;psect for function _IOCAF2_DefaultInterruptHandler
 15111  10FB                     _IOCAF2_DefaultInterruptHandler:
 15112                           
 15113                           ;incstack = 0
 15114                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
 15115  10FB  0008               	return
 15116  10FC                     __end_of_IOCAF2_DefaultInterruptHandler:
 15117                           
 15118                           	psect	text57
 15119  1109                     __ptext57:	
 15120 ;; *************** function _ctrl_der2 *****************
 15121 ;; Defined at:
 15122 ;;		line 197 in file "main.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;		None
 15125 ;; Auto vars:     Size  Location     Type
 15126 ;;		None
 15127 ;; Return value:  Size  Location     Type
 15128 ;;                  1    wreg      void 
 15129 ;; Registers used:
 15130 ;;		wreg
 15131 ;; Tracked objects:
 15132 ;;		On entry : 1F/1
 15133 ;;		On exit  : 1F/1
 15134 ;;		Unchanged: 0/0
 15135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15140 ;;Total ram usage:        1 bytes
 15141 ;; Hardware stack levels used:    1
 15142 ;; This function calls:
 15143 ;;		Nothing
 15144 ;; This function is called by:
 15145 ;;		_main
 15146 ;;		_IOCAF2_ISR
 15147 ;; This function uses a non-reentrant model
 15148 ;;
 15149                           
 15150                           
 15151                           ;psect for function _ctrl_der2
 15152  1109                     _ctrl_der2:
 15153                           
 15154                           ;main.c: 198:     movimiento_jugador2 = derecha;
 15155                           
 15156                           ;incstack = 0
 15157                           ; Regs used in _ctrl_der2: [wreg]
 15158  1109  3002               	movlw	2
 15159  110A  00F0               	movwf	??_ctrl_der2
 15160  110B  0870               	movf	??_ctrl_der2,w
 15161  110C  00CD               	movwf	_movimiento_jugador2^(0+128)
 15162  110D  0008               	return
 15163  110E                     __end_of_ctrl_der2:
 15164                           
 15165                           	psect	text58
 15166  1187                     __ptext58:	
 15167 ;; *************** function _IOCAF1_ISR *****************
 15168 ;; Defined at:
 15169 ;;		line 199 in file "mcc_generated_files/pin_manager.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;		None
 15172 ;; Auto vars:     Size  Location     Type
 15173 ;;		None
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  1    wreg      void 
 15176 ;; Registers used:
 15177 ;;		wreg, status,2, status,0, pclath, cstack
 15178 ;; Tracked objects:
 15179 ;;		On entry : 1F/1E
 15180 ;;		On exit  : 1F/1E
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;Total ram usage:        0 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; Hardware stack levels required when called:    1
 15190 ;; This function calls:
 15191 ;;		Absolute function
 15192 ;;		_IOCAF1_DefaultInterruptHandler
 15193 ;;		_ctrl_izq2
 15194 ;; This function is called by:
 15195 ;;		_PIN_MANAGER_IOC
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199                           
 15200                           ;psect for function _IOCAF1_ISR
 15201  1187                     _IOCAF1_ISR:
 15202                           
 15203                           ;mcc_generated_files/pin_manager.c: 204:     if(IOCAF1_InterruptHandler)
 15204                           
 15205                           ;incstack = 0
 15206                           ; Regs used in _IOCAF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15207  1187  0021               	movlb	1	; select bank1
 15208  1188  086A               	movf	_IOCAF1_InterruptHandler^(0+128),w
 15209  1189  046B               	iorwf	(_IOCAF1_InterruptHandler+1)^(0+128),w
 15210  118A  1903               	btfsc	3,2
 15211  118B  2991               	goto	i1l3271
 15212                           
 15213                           ;mcc_generated_files/pin_manager.c: 205:     {;mcc_generated_files/pin_manager.c: 206:  
      +                                 IOCAF1_InterruptHandler();
 15214  118C  086B               	movf	(_IOCAF1_InterruptHandler+1)^(0+128),w
 15215  118D  008A               	movwf	10
 15216  118E  086A               	movf	_IOCAF1_InterruptHandler^(0+128),w
 15217  118F  000A               	callw
 15218  1190  3191               	pagesel	$
 15219  1191                     i1l3271:
 15220                           
 15221                           ;mcc_generated_files/pin_manager.c: 208:     IOCAFbits.IOCAF1 = 0;
 15222  1191  003E               	movlb	30	; select bank30
 15223  1192  10BF               	bcf	63,1	;volatile
 15224  1193  0008               	return
 15225  1194                     __end_of_IOCAF1_ISR:
 15226                           
 15227                           	psect	text59
 15228  10FA                     __ptext59:	
 15229 ;; *************** function _IOCAF1_DefaultInterruptHandler *****************
 15230 ;; Defined at:
 15231 ;;		line 221 in file "mcc_generated_files/pin_manager.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;		None
 15234 ;; Auto vars:     Size  Location     Type
 15235 ;;		None
 15236 ;; Return value:  Size  Location     Type
 15237 ;;                  1    wreg      void 
 15238 ;; Registers used:
 15239 ;;		None
 15240 ;; Tracked objects:
 15241 ;;		On entry : 1F/1
 15242 ;;		On exit  : 1F/1
 15243 ;;		Unchanged: 1F/0
 15244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;Total ram usage:        0 bytes
 15250 ;; Hardware stack levels used:    1
 15251 ;; This function calls:
 15252 ;;		Nothing
 15253 ;; This function is called by:
 15254 ;;		_PIN_MANAGER_Initialize
 15255 ;;		_IOCAF1_ISR
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           
 15260                           ;psect for function _IOCAF1_DefaultInterruptHandler
 15261  10FA                     _IOCAF1_DefaultInterruptHandler:
 15262                           
 15263                           ;incstack = 0
 15264                           ; Regs used in _IOCAF1_DefaultInterruptHandler: []
 15265  10FA  0008               	return
 15266  10FB                     __end_of_IOCAF1_DefaultInterruptHandler:
 15267                           
 15268                           	psect	text60
 15269  10FC                     __ptext60:	
 15270 ;; *************** function _ctrl_izq2 *****************
 15271 ;; Defined at:
 15272 ;;		line 193 in file "main.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;		None
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		None
 15281 ;; Tracked objects:
 15282 ;;		On entry : 1F/1
 15283 ;;		On exit  : 1F/1
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;Total ram usage:        0 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; This function calls:
 15293 ;;		Nothing
 15294 ;; This function is called by:
 15295 ;;		_main
 15296 ;;		_IOCAF1_ISR
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           
 15301                           ;psect for function _ctrl_izq2
 15302  10FC                     _ctrl_izq2:
 15303                           
 15304                           ;main.c: 194:     movimiento_jugador2 = izquierda;
 15305                           
 15306                           ;incstack = 0
 15307                           ; Regs used in _ctrl_izq2: []
 15308  10FC  01CD               	clrf	_movimiento_jugador2^(0+128)
 15309  10FD  0ACD               	incf	_movimiento_jugador2^(0+128),f
 15310  10FE  0008               	return
 15311  10FF                     __end_of_ctrl_izq2:
 15312  007E                     btemp	set	126	;btemp
 15313  007E                     int$flags	set	126
 15314  007E                     wtemp0	set	126
 15315                           
 15316                           	psect	config
 15317                           
 15318                           ;Config register CONFIG1 @ 0x8007
 15319                           ;	External Oscillator mode selection bits
 15320                           ;	FEXTOSC = OFF, Oscillator not enabled
 15321                           ;	Power-up default value for COSC bits
 15322                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15323                           ;	Clock Out Enable bit
 15324                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15325                           ;	Clock Switch Enable bit
 15326                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15327                           ;	Fail-Safe Clock Monitor Enable bit
 15328                           ;	FCMEN = ON, FSCM timer enabled
 15329  8007                     	org	32775
 15330  8007  3FEC               	dw	16364
 15331                           
 15332                           ;Config register CONFIG2 @ 0x8008
 15333                           ;	Master Clear Enable bit
 15334                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15335                           ;	Power-up Timer Enable bit
 15336                           ;	PWRTE = OFF, PWRT disabled
 15337                           ;	Low-Power BOR enable bit
 15338                           ;	LPBOREN = OFF, ULPBOR disabled
 15339                           ;	Brown-out reset enable bits
 15340                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15341                           ;	Brown-out Reset Voltage Selection
 15342                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15343                           ;	Zero-cross detect disable
 15344                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15345                           ;	Peripheral Pin Select one-way control
 15346                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15347                           ;	Stack Overflow/Underflow Reset Enable bit
 15348                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15349                           ;	Background Debugger
 15350                           ;	DEBUG = OFF, Background Debugger disabled
 15351  8008                     	org	32776
 15352  8008  3FFF               	dw	16383
 15353                           
 15354                           ;Config register CONFIG3 @ 0x8009
 15355                           ;	WDT Period Select bits
 15356                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15357                           ;	WDT operating mode
 15358                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15359                           ;	WDT Window Select bits
 15360                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15361                           ;	WDT input clock selector
 15362                           ;	WDTCCS = SC, Software Control
 15363  8009                     	org	32777
 15364  8009  3F9F               	dw	16287
 15365                           
 15366                           ;Config register CONFIG4 @ 0x800A
 15367                           ;	UserNVM self-write protection bits
 15368                           ;	WRT = OFF, Write protection off
 15369                           ;	Scanner Enable bit
 15370                           ;	SCANE = available, Scanner module is available for use
 15371                           ;	Low Voltage Programming Enable bit
 15372                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15373  800A                     	org	32778
 15374  800A  3FFF               	dw	16383
 15375                           
 15376                           ;Config register CONFIG5 @ 0x800B
 15377                           ;	UserNVM Program memory code protection bit
 15378                           ;	CP = OFF, Program Memory code protection disabled
 15379                           ;	DataNVM code protection bit
 15380                           ;	CPD = OFF, Data EEPROM code protection disabled
 15381  800B                     	org	32779
 15382  800B  3FFF               	dw	16383

Data Sizes:
    Strings     245
    Constant    1395
    Data        38
    BSS         56
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      80
    BANK1            80     18      76
    BANK2            80      0      42
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1902_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> marcador(BANK1[3]), 

    tft_begin@addr	PTR const unsigned char  size(2) Largest target is 111
		 -> initcmd(CODE[111]), 

    display_drawCustomChar@c	PTR unsigned char  size(2) Largest target is 12
		 -> bolita(BANK1[12]), jugador2(BANK1[10]), jugador1(BANK2[10]), 

    display_customChar@c	PTR const unsigned char  size(2) Largest target is 12
		 -> bolita(BANK1[12]), jugador2(BANK1[10]), jugador1(BANK2[10]), 

    disp_texto@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> STR_14(CODE[18]), STR_13(CODE[28]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[30]), STR_9(CODE[29]), STR_8(CODE[29]), STR_7(CODE[18]), 
		 -> STR_6(CODE[8]), STR_5(CODE[3]), STR_4(CODE[11]), STR_3(CODE[10]), 
		 -> STR_2(CODE[15]), marcador(BANK1[3]), 

    moverJugador@jugador	PTR struct . size(2) Largest target is 10
		 -> jugador2(BANK1[10]), jugador1(BANK2[10]), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der(), IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der(), Absolute function(), IOCCF5_DefaultInterruptHandler(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq(), Absolute function(), IOCBF4_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der2(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_der2(), Absolute function(), IOCAF2_DefaultInterruptHandler(), 

    IOCAF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq2(), IOCAF1_DefaultInterruptHandler(), 

    IOCAF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ctrl_izq2(), Absolute function(), IOCAF1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_display_drawCustomChar
    _tft_begin->_writeCommand
    _moverJugador->_display_drawCustomChar
    _dibujarMarcador->_disp_texto
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setRotation->_writeCommand
    _fillRect->_setAddrWindow
    _drawVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_writeCommand
    _writeCommand->_SPI1_ExchangeByte
    _PIN_MANAGER_Initialize->_IOCAF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _IOCCF5_ISR->_ctrl_der
    _IOCAF2_ISR->_ctrl_der2

Critical Paths under _main in BANK0

    _main->_dibujarMarcador
    _moverJugador->_display_drawCustomChar
    _display_drawCustomChar->_display_customChar
    _display_customChar->_fillRect
    _fillScreen->_fillRect
    _dibujarMarcador->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _disp_texto->_display_print
    _display_print->_fillRect
    _fillRect->_setAddrWindow
    _drawVLine->_setAddrWindow
    _drawPixel->_setAddrWindow

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dibujarMarcador
    _dibujarMarcador->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  111209
                                             13 BANK1      5     5      0
         _IOCAF1_SetInterruptHandler
         _IOCAF2_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
                          _SPI1_Open
                  _SYSTEM_Initialize
                    _dibujarMarcador
             _display_drawCustomChar
                         _fillScreen
                       _moverJugador
                          _tft_begin
 ---------------------------------------------------------------------------------
 (1) _tft_begin                                            7     7      0     399
                                              3 COMMON     7     7      0
                  _SPI1_ExchangeByte
                           _endWrite
                         _startWrite
                       _writeCommand
 ---------------------------------------------------------------------------------
 (1) _moverJugador                                         8     6      2   32492
                                             63 BANK0      8     6      2
                             ___bmul
             _display_drawCustomChar
 ---------------------------------------------------------------------------------
 (2) _display_drawCustomChar                              21    10     11   31721
                                             11 COMMON     1     1      0
                                             43 BANK0     20     9     11
                 _display_customChar
                  _display_setCursor
               _display_setTextColor
                _display_setTextSize
 ---------------------------------------------------------------------------------
 (3) _display_customChar                                  17    15      2   26291
                                             26 BANK0     17    15      2
                             ___wmul
                          _drawPixel
                          _drawVLine
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     220
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _fillScreen                                           2     0      2    8090
                                             26 BANK0      2     0      2
                           _fillRect
 ---------------------------------------------------------------------------------
 (1) _dibujarMarcador                                      6     5      1   37027
                                             77 BANK0      2     1      1
                                              9 BANK1      4     4      0
                         _disp_texto
                  _display_setCursor
               _display_setTextColor
              _display_setTextColor2
                _display_setTextSize
                        _setRotation
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    7143
                                             70 BANK0      7     1      6
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    6711
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    6292
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4774
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2752
                                             10 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              9 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     331
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _setRotation                                          3     3      0     167
                                              3 COMMON     3     3      0
                  _SPI1_ExchangeByte
                           _endWrite
                         _startWrite
                       _writeCommand
 ---------------------------------------------------------------------------------
 (3) _display_setTextSize                                  5     5      0      68
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _display_setTextColor2                                2     0      2     350
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _display_setTextColor                                 4     0      4     474
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _display_setCursor                                    4     0      4     752
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _disp_texto                                           6     4      2   27561
                                             11 COMMON     1     1      0
                                             42 BANK0      5     3      2
                      _display_print
 ---------------------------------------------------------------------------------
 (3) _display_print                                       16    16      0   26344
                                             26 BANK0     16    16      0
                             ___wmul
                          _drawPixel
                          _drawVLine
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            20    10     10    6709
                                              6 BANK0     20    10     10
                  _SPI1_ExchangeByte
                             ___lmul
                             ___wmul (ARG)
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _drawVLine                                           14     6      8    6120
                                              6 BANK0     14     6      8
                  _SPI1_ExchangeByte
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            6     0      6    9023
                                              6 BANK0      6     0      6
                  _SPI1_ExchangeByte
                           _endWrite
                      _setAddrWindow
                         _startWrite
 ---------------------------------------------------------------------------------
 (2) _startWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _setAddrWindow                                       14     6      8    1843
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
                  _SPI1_ExchangeByte
                       _writeCommand
 ---------------------------------------------------------------------------------
 (2) _writeCommand                                         1     1      0      62
                                              2 COMMON     1     1      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _endWrite                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3916
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     696
         _IOCAF1_SetInterruptHandler
         _IOCAF2_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF1_SetInterruptHandler                           2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0      88
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF1_ISR
                         _IOCAF2_ISR
                         _IOCBF4_ISR
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF5_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
                           _ctrl_der *
 ---------------------------------------------------------------------------------
 (13) _ctrl_der                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                           _ctrl_izq *
 ---------------------------------------------------------------------------------
 (13) _ctrl_izq                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCAF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
                          _ctrl_der2 *
 ---------------------------------------------------------------------------------
 (13) _ctrl_der2                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCAF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCAF1_ISR                                          0     0      0       0
                   Absolute function *
     _IOCAF1_DefaultInterruptHandler *
                          _ctrl_izq2 *
 ---------------------------------------------------------------------------------
 (13) _ctrl_izq2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCAF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF1_SetInterruptHandler
   _IOCAF2_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCCF5_SetInterruptHandler
   _SPI1_Open
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF1_SetInterruptHandler
       _IOCAF2_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
     _PMD_Initialize
     _SPI1_Initialize
   _dibujarMarcador
     _disp_texto
       _display_print
         ___wmul
         _drawPixel
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _drawVLine
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _fillRect
           _SPI1_ExchangeByte
           ___lmul
           ___wmul (ARG)
           _endWrite (ARG)
           _setAddrWindow (ARG)
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite (ARG)
     _display_setCursor
     _display_setTextColor
     _display_setTextColor2
     _display_setTextSize
     _setRotation
       _SPI1_ExchangeByte
       _endWrite
       _startWrite
       _writeCommand
         _SPI1_ExchangeByte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _display_drawCustomChar
     _display_customChar
       ___wmul
       _drawPixel
         _SPI1_ExchangeByte
         _endWrite
         _setAddrWindow
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite
       _drawVLine
         _SPI1_ExchangeByte
         _endWrite
         _setAddrWindow
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite
       _fillRect
         _SPI1_ExchangeByte
         ___lmul
         ___wmul (ARG)
         _endWrite (ARG)
         _setAddrWindow (ARG)
           _SPI1_ExchangeByte
           _writeCommand
             _SPI1_ExchangeByte
         _startWrite (ARG)
     _display_setCursor
     _display_setTextColor
     _display_setTextSize
   _fillScreen
     _fillRect
       _SPI1_ExchangeByte
       ___lmul
       ___wmul (ARG)
       _endWrite (ARG)
       _setAddrWindow (ARG)
         _SPI1_ExchangeByte
         _writeCommand
           _SPI1_ExchangeByte
       _startWrite (ARG)
   _moverJugador
     ___bmul
     _display_drawCustomChar
       _display_customChar
         ___wmul
         _drawPixel
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _drawVLine
           _SPI1_ExchangeByte
           _endWrite
           _setAddrWindow
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite
         _fillRect
           _SPI1_ExchangeByte
           ___lmul
           ___wmul (ARG)
           _endWrite (ARG)
           _setAddrWindow (ARG)
             _SPI1_ExchangeByte
             _writeCommand
               _SPI1_ExchangeByte
           _startWrite (ARG)
       _display_setCursor
       _display_setTextColor
       _display_setTextSize
   _tft_begin
     _SPI1_ExchangeByte
     _endWrite
     _startWrite
     _writeCommand
       _SPI1_ExchangeByte

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF1_ISR
       Absolute function(Fake) *
       _IOCAF1_DefaultInterruptHandler *
       _ctrl_izq2 *
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
       _ctrl_der2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _ctrl_izq *
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
       _ctrl_der *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     12      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2A       9       52.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 16 21:57:25 2021

                         _SPI1_ExchangeByte 1170                              ___bmul@product 0073  
                               drawVLine@hi 0032                                 drawVLine@lo 0033  
                        ?_SPI1_ExchangeByte 0070                         ___wmul@multiplicand 0073  
                                       l258 1174                                         l442 0DAC  
                                       l465 16C4                                         l741 058D  
                                       l750 06FE                                         l910 168E  
                                       l760 0DF4                                         l953 1787  
                                       l769 0F65                                         _abs 120B  
                                       _pad 1488                     __size_of_PMD_Initialize 0008  
                       ??_SPI1_ExchangeByte 0071                                         wreg 0009  
        __end_of_IOCAF2_SetInterruptHandler 1118                  _IOCAF2_SetInterruptHandler 1113  
        __end_of_IOCBF4_SetInterruptHandler 111D                  _IOCBF4_SetInterruptHandler 1118  
                                      l1112 1242                                        ?_abs 0074  
                                      l1212 0ABB                                        l1225 09C8  
                                      l1612 14BF                                        l3037 11FE  
                                      l4013 0FA3                                        l1622 0B34  
                                      l1623 0B48                                        l4031 1322  
                                      l1609 149F                                        l1617 0B12  
                                      l4009 0F26                                        l1626 0BDC  
                                      l1618 0B19                                        l4211 0CCC  
                                      l4203 0CBF                                        l4061 13FE  
                                      l4029 1306                                        l4125 167C  
                                      l4109 1658                                        l4063 140A  
                                      l4135 169D                                        l4215 0CD2  
                                      l4207 0CC5                                        l4313 141F  
                                      l4057 13FA                                        l2713 0A04  
                                      l3361 11C3                                        l4233 0CF9  
                                      l4225 0CEB                                        l4083 1291  
                                      l4059 13FC                                        l4067 1417  
                                      l2731 0A55                                        l4171 1705  
                                      l4219 0CD8                                        l4069 142D  
                                      l2741 0A9A                                        l2717 0A2B  
                                      l3357 11BD                                        l4173 1711  
                                      l4245 0D3B                                        l4237 0D03  
                                      l3703 0813                                        l2719 0A2F  
                                      l2751 0928                                        l2663 136E  
                                      l4239 0D0D                                        l2729 0A46  
                                      l3641 12B4                                        l4273 0D8A  
                                      l4281 0DA2                                        l4257 0D60  
                                      l4265 0D66                                        l4249 0D3F  
                                      l3811 17F2                                        l2739 0A8E  
                                      l2763 095C                                        l2771 09A7  
                                      l2755 094F                                        l2667 1391  
                                      l2691 1227                                        l3723 0B2C  
                                      l4291 0DBE                                        l3813 17D6  
                                      l3805 17A9                                        l3901 0553  
                                      l2765 096B                                        l2693 1233  
                                      l3653 1495                                        l3733 0B75  
                                      l4285 0DA8                                        ?_pad 0027  
                                      l3815 17FD                                        l3663 14A1  
                                      l3743 0B50                                        l3751 0BE8  
                       display_customChar@c 003A                                        l3833 123C  
                                      l3913 0569                                        l2769 099B  
                                      l3657 149D                                        l3761 0BFB  
                                      l3729 0B43                                        l4289 0DB7  
                                      l3907 0568                                        l3667 14CB  
                                      l3755 0BF0                                        l3781 15F8  
                                      l3933 062E                                        l3925 05B4  
                                      l3765 0C08                         display_customChar@i 004A  
                                      l3951 06BF                                        l3935 067D  
                                      l3927 05FF                                        l3871 08CA  
                       display_customChar@j 0049                                        l3865 08A9  
                                      l3857 0870                                        l3881 08DB  
                                      l3787 160E                                        l3699 0809  
                                      l3955 073C                                        l3875 08D0  
                                      l3971 0DE6                                        l3789 1622  
                                      l3895 054A                                        l3991 0E95  
                                      l3983 0E1B                                        l3993 0EE4  
                                      l3985 0E66                                        STR_1 195E  
                                      STR_2 1932                                        STR_3 194C  
                                      STR_4 1941                                        STR_6 1956  
                                      STR_7 1920                                        STR_8 188D  
                                      STR_9 18AA                                        u3005 0B70  
                                      _LATA 0016                                        _LATB 0017  
                                      _LATC 0018                                        u1520 0A36  
                                      _LATD 0019                                        _LATE 001A  
                                      u1435 138F                                        u3205 1243  
                                      u3125 1757                                        u3215 1248  
                                      u3055 15BC                                        u3135 1763  
                                      u3065 15C8                                        u3145 177B  
                                      u3155 179D                                        u1555 0A7B  
                                      u1475 1214                                        u3085 15EC  
                                      u3405 075E                                        u3175 1335  
                                      u3415 0791                                        u3335 0606  
                                      u1655 0989                                        u3185 1341  
                                      u3505 0F9C                                        u3515 0FC5  
                                      u2900 0AE9                                        u3525 0FF8  
                                      u3445 0E6D                                        u3375 0697  
                                      u3395 0735                                        u2835 14AB  
                                      u3715 0D5A                                        _PMD0 0796  
                                      u3485 0EFE                                        _PMD1 0797  
                                      _PMD2 0798                                        u3807 1648  
                                      _PMD3 0799                                        _PMD4 079A  
                                      u2865 0814                                        u2945 0B24  
                                      u3817 1695                                        u3745 0D85  
                                      _PMD5 079B                                        u2890 0AE8  
                                      u2875 081B                                        u2975 0BE6  
                                      u3777 0CE4                                        u2995 0B64  
                                      u3787 162C                                        u3797 163A  
                               disp_texto@i 007B                                        _WPUA 0F39  
                                      _WPUB 0F44                                        _WPUC 0F4F  
                                      _WPUD 0F5A                                        _WPUE 0F65  
                            ?_display_print 0070                                        abs@a 0074  
                                      _dbuf 0120                                        _main 0C1A  
                                      _dtoa 0ACD                                        _font 0040  
                     ??_display_setTextSize 0071                                        _prec 00BF  
                                      _nout 00BB                                        pad@i 002A  
                                      pad@p 0028                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        pad@w 002C  
                                      btemp 007E                                        _wrap 00A4  
          ??_IOCCF5_DefaultInterruptHandler 0070             ?_IOCCF5_DefaultInterruptHandler 0070  
                                      start 000E                   __end_of_SPI1_ExchangeByte 117B  
                         ___bmul@multiplier 0074                                       ??_abs 0076  
                                     ??_pad 007A                         __size_of_IOCAF1_ISR 000D  
            __size_of_OSCILLATOR_Initialize 0009                         __size_of_IOCAF2_ISR 000D  
             __end_of_OSCILLATOR_Initialize 1140                         __size_of_IOCBF4_ISR 000D  
                       __size_of_IOCCF5_ISR 000D                             __end_of___aodiv 0ACD  
                                     ?_main 0070                                       ?_dtoa 0030  
                           __end_of___aomod 09DA                                       STR_10 186F  
                                     STR_11 18E3                                       STR_12 18F9  
                                     STR_13 18C7                                       STR_14 190E  
          SPI1_Open@spi1UniqueConfiguration 0074                            ?_dibujarMarcador 006D  
                                     i1l301 000C                              drawVLine@color 002C  
           __size_of_display_drawCustomChar 006C                                       _OSCEN 0891  
                              vfpfcnvrt@fmt 004E                                       _TRISA 0011  
                                     _TRISB 0012                                       _TRISC 0013  
                                     _TRISD 0014                                       _TRISE 0015  
                        __size_of_SPI1_Open 004D                         ___lmul@multiplicand 0075  
                    ??_display_setTextColor 0075                     __end_of_PIN_MANAGER_IOC 11E1  
                                     _flags 00C1                                       _fputc 1365  
                           __end_of_initcmd 186F                                       _fputs 12B1  
                                     pad@fp 002E                                       _width 00BD  
                                     _putch 0003                                       dtoa@d 0030  
                                     dtoa@i 004C                                       dtoa@n 0044  
                                     dtoa@p 003E                                       dtoa@s 0042  
                                     dtoa@w 0040                                       pclath 000A  
           display_drawCustomChar@prev_size 005E                                       status 0003  
                                     wtemp0 007E                             __end_of_sprintf 12FE  
                     __size_of_writeCommand 0009                    __size_of_SPI1_Initialize 0015  
                           __initialization 0010                                __end_of_main 0DE5  
                              __end_of_dtoa 0C1A                                __end_of_font 0540  
               ?_INTERRUPT_InterruptManager 0070                  __end_of_display_customChar 1000  
                                    ??_main 00DF                                      ??_dtoa 0038  
                              _writeCommand 1140                                      ?_fputc 0071  
                           ??_display_print 003A                                      ?_fputs 0079  
                                    _ANSELA 0F38                                      ?_putch 0070  
                                    _ANSELB 0F43                                      _ANSELC 0F4E  
                                    _ANSELD 0F59                                      _ANSELE 0F64  
                       moverJugador@jugador 005F                                      _RC3PPS 0F23  
                                    _ODCONA 0F3A                                      _ODCONB 0F45  
                                    _ODCONC 0F50                                      _RC6PPS 0F26  
                                    _ODCOND 0F5B                                      _ODCONE 0F66  
                                    i1l3271 1191                                      i1l3283 11AB  
                                    i1l3277 119E                                      i1l3381 11D2  
                                    i1l3289 11B8                                      i1l3385 11D7  
                                    i1l3389 11DC                                      _INLVLA 0F3C  
                                    _INLVLB 0F47                                      _INLVLC 0F52  
                                    _INLVLD 0F5D                                      _INLVLE 0F68  
                              ?_setRotation 0070                                      _OSCFRQ 0893  
                                    u160lld 0926                                      u149lld 0A02  
                    _display_drawCustomChar 14D6                  __size_of_SPI1_ExchangeByte 000B  
                          __end_of_endWrite 1109                           __end_of_SPI1_Open 1488  
                          __end_of_fillRect 1800                                vfprintf@cfmt 0064  
                                    ___bmul 11BB                                      ___lmul 0801  
                                 ??___aodiv 0071                     ??_display_setTextColor2 0073  
                                 ??___aomod 0071                                      ___wmul 123A  
                          __end_of_ctrl_der 1113                                      __width 00C9  
                                    _bolita 00A5                            __end_of_ctrl_izq 1102  
                                    pad@buf 0027                                      dtoa@fp 003B  
                                    _strlen 1222            display_drawCustomChar@prev_color 005A  
                                    fputc@c 0071                              _PMD_Initialize 112F  
                                    fputs@c 0023                                      fputs@i 0024  
                                    fputs@s 0026                                      putch@c 0070  
                          __end_of_vfprintf 132B  IOCCF5_SetInterruptHandler@InterruptHandler 0071  
IOCBF4_SetInterruptHandler@InterruptHandler 0071  IOCAF2_SetInterruptHandler@InterruptHandler 0071  
IOCAF1_SetInterruptHandler@InterruptHandler 0071                            ?_PIN_MANAGER_IOC 0070  
                                 ??_sprintf 006C                                ??_IOCAF1_ISR 0070  
                              ??_IOCAF2_ISR 0071                                ??_IOCBF4_ISR 0070  
                              ??_IOCCF5_ISR 0071                           _SYSTEM_Initialize 117B  
                   __end_of__initialization 003C      __end_of_IOCAF1_DefaultInterruptHandler 10FB  
   __size_of_IOCAF1_DefaultInterruptHandler 0001              _IOCAF1_DefaultInterruptHandler 10FA  
                        ?_SYSTEM_Initialize 0070                         ___bmul@multiplicand 0071  
                            __pcstackCOMMON 0070                                __pidataBANK0 07FF  
                              __pidataBANK1 1255                                __pidataBANK2 1166  
                       ??_SYSTEM_Initialize 0073                               __end_of_fputc 13AA  
                             __end_of_fputs 12D6                           ??_SPI1_Initialize 0071  
                             __end_of_putch 0004                      __end_of_PMD_Initialize 1137  
                        __end_of_IOCAF1_ISR 1194                          __end_of_IOCAF2_ISR 11A1  
                     SPI1_ExchangeByte@data 0071                              drawPixel@color 002A  
                        __end_of_IOCBF4_ISR 11AE                          __end_of_IOCCF5_ISR 11BB  
                        _spi1_configuration 1964                  display_drawCustomChar@size 0055  
                        __size_of_drawVLine 0073                 ?_IOCAF2_SetInterruptHandler 0071  
          ??_IOCAF2_DefaultInterruptHandler 0070             ?_IOCAF2_DefaultInterruptHandler 0070  
                        __size_of_drawPixel 003A                 ?_IOCBF4_SetInterruptHandler 0071  
                                   ??_fputc 0074                   __end_of_SYSTEM_Initialize 1187  
                                   ??_fputs 0020                              setAddrWindow@h 0079  
                            setAddrWindow@w 0077                                     ??_putch 0071  
                                __pbssBANK1 00BB                                  __pbssBANK2 0120  
                   display_drawCustomChar@c 004F                     display_drawCustomChar@x 004B  
                   display_drawCustomChar@y 004D                          __size_of_ctrl_der2 0005  
                        __size_of_ctrl_izq2 0003                                  __pmaintext 0C1A  
                                   ?___bmul 0071                                     ?___lmul 0071  
                                   ?___wmul 0071                                  __pintentry 0004  
                    __size_of_setAddrWindow 0048                      display_customChar@line 0048  
                            ___lmul@product 0020            ??_IOCBF4_DefaultInterruptHandler 0070  
           ?_IOCBF4_DefaultInterruptHandler 0070      __end_of_IOCCF5_DefaultInterruptHandler 0003  
   __size_of_IOCCF5_DefaultInterruptHandler 0001              _IOCCF5_DefaultInterruptHandler 0002  
                           ?_PMD_Initialize 0070                                     ?_strlen 0071  
                        __size_of_tft_begin 0085                                  _fillScreen 1270  
                                   _OSCCON1 088D                                     _OSCCON3 088F  
                        __size_of_vfpfcnvrt 00CE                                     _OSCTUNE 0892  
                                   _SSP1ADD 018D                                     _SLRCONA 0F3B  
                                   _SLRCONB 0F46                                     _SLRCONC 0F51  
                                   _SLRCOND 0F5C                                     _SLRCONE 0F67  
                                _disp_texto 128D                                     _SSP1BUF 018C  
                                 ?_endWrite 0070                 __end_of_display_setTextSize 120B  
                                 ?_fillRect 0026                                   ?_ctrl_der 0070  
                                 ?_ctrl_izq 0070                        __size_of_setRotation 0049  
                             ?_moverJugador 005F                        display_setTextSize@s 0075  
                         __end_of_drawVLine 1625                           __end_of_drawPixel 1365  
                           __size_of___bmul 0011                                     ___aodiv 09DA  
                                   ___aomod 08FE                             __size_of___lmul 002F  
                           __size_of___wmul 001B                                   ?_vfprintf 005E  
                                   __height 00C7                           __end_of_ctrl_der2 110E  
                                   __ptext1 1625                                     __ptext2 16AA  
                                   __ptext3 14D6                                     __ptext4 0DE5  
                                   __ptext5 11BB                                     __ptext6 1270  
                                   __ptext7 0799                                     __ptext8 12D6  
                                   __ptext9 12FE                           __end_of_ctrl_izq2 10FF  
                           __size_of_strlen 0018                       _OSCILLATOR_Initialize 1137  
                              __size_of_abs 0017                                __size_of_pad 004E  
                                   _initcmd 1800                    ??_PIN_MANAGER_Initialize 0073  
                                 _IOCAFbits 0F3F                                   _IOCBFbits 0F4A  
                                 _IOCCFbits 0F55                                   _IOCANbits 0F3E  
                                 _IOCAPbits 0F3D                                   _IOCBNbits 0F49  
                                 _IOCBPbits 0F48                                   _IOCCNbits 0F54  
                                 _IOCCPbits 0F53                                  ??_endWrite 0071  
                                ??_fillRect 0030                          _display_customChar 0DE5  
                __size_of_SYSTEM_Initialize 000C                                     _sprintf 12D6  
                                   clrloop0 112A                    __size_of_dibujarMarcador 0060  
                             _setAddrWindow 13AA                        end_of_initialization 003C  
                   ?_display_drawCustomChar 004B               __size_of_display_setTextColor 000A  
                                ??_ctrl_der 0070                                  ??_ctrl_izq 0070  
                                   fputc@fp 0073                                     init_ram 07F9  
                                   fputs@fp 0079                                     initloop 07FA  
                       ?_display_customChar 003A                           __end_of_tft_begin 16AA  
                            ??_moverJugador 0061                           __end_of_vfpfcnvrt 08FE  
                                ??_vfprintf 0061                                   _SPI1_Open 143B  
                            display_print@c 0047                              display_print@i 0049  
                            display_print@j 0048              __size_of_display_setTextColor2 0009  
             __end_of_display_setTextColor2 1152                                     strlen@a 0074  
                                   strlen@s 0075                                   _PORTAbits 000C  
                      ??_display_customChar 003C                                 ?_fillScreen 003A  
                                fillRect@hi 0038                                  fillRect@lo 0039  
                                fillRect@px 0034                                   _TRISCbits 0013  
              ??_IOCAF1_SetInterruptHandler 0073                                 ?_disp_texto 004A  
            __end_of_display_drawCustomChar 1542                              ?_setAddrWindow 0073  
                                drawVLine@h 002A                                  drawVLine@x 0026  
                                drawVLine@y 0028                ??_IOCCF5_SetInterruptHandler 0073  
                          disp_texto@cadena 004A                                  _startWrite 1102  
                     __end_of_display_print 0799                                  drawPixel@x 0026  
                                drawPixel@y 0028                             _SPI1_Initialize 11E1  
             display_drawCustomChar@prev_bg 005C                              __end_of___bmul 11CC  
                                ?_SPI1_Open 0070                              __end_of___lmul 0830  
                               vfpfcnvrt@ap 004F                                 vfpfcnvrt@fp 005D  
                               vfpfcnvrt@ll 0055                              __end_of___wmul 1255  
       __size_of_IOCAF1_SetInterruptHandler 0006                      ?_OSCILLATOR_Initialize 0070  
       __size_of_IOCCF5_SetInterruptHandler 0006                              __end_of_strlen 123A  
                       start_initialization 0010             __size_of_PIN_MANAGER_Initialize 0070  
                               __end_of_abs 1222                                 __end_of_pad 14D6  
                    display_setTextColor2@c 0071                      display_setTextColor@bg 0073  
                        display_setCursor@x 0071                          display_setCursor@y 0073  
               display_drawCustomChar@color 0051                           ??_dibujarMarcador 00DB  
                  __size_of_PIN_MANAGER_IOC 0015                         __size_of_fillScreen 001D  
    __end_of_IOCAF2_DefaultInterruptHandler 10FC     __size_of_IOCAF2_DefaultInterruptHandler 0001  
            _IOCAF2_DefaultInterruptHandler 10FB                                 vfprintf@fmt 005E  
                                  ??___bmul 0072                            ??_PMD_Initialize 0071  
                                  ??___lmul 0079                                    ??___wmul 0075  
                       __size_of_disp_texto 0024                                 __pdataBANK0 006F  
                               __pdataBANK1 00A0                                 __pdataBANK2 0140  
                   dibujarMarcador@puntaje1 006E                     dibujarMarcador@puntaje2 006D  
                           setAddrWindow@x1 0073                             setAddrWindow@x2 0022  
                           setAddrWindow@y1 0075                             setAddrWindow@y2 0024  
                  _display_setTextSize$1270 0073                                    ??_strlen 0073  
                      __end_of_moverJugador 173D                                 __pbssCOMMON 007C  
                  display_drawCustomChar@bg 0053                                   ___latbits 0002  
                           ??_setAddrWindow 0020                               __pcstackBANK0 0020  
                             __pcstackBANK1 00D2                            ___aodiv@dividend 0028  
                   __end_of_SPI1_Initialize 11F6      __end_of_IOCBF4_DefaultInterruptHandler 0801  
   __size_of_IOCBF4_DefaultInterruptHandler 0001              _IOCBF4_DefaultInterruptHandler 0800  
                               ?_startWrite 0070                           __size_of_endWrite 0004  
                         __size_of_fillRect 00C3                                   __pnvBANK1 00E4  
                         __size_of_ctrl_der 0005                           __size_of_ctrl_izq 0003  
                   _IOCAF1_InterruptHandler 00EA                     _IOCCF5_InterruptHandler 00E4  
                    _PIN_MANAGER_Initialize 1542                                   _dtoa$1971 003C  
                                  ?___aodiv 0020                                    ?___aomod 0020  
                          ___aodiv@quotient 0074                                 ??_SPI1_Open 0071  
                                 _drawVLine 15B2                ??_INTERRUPT_InterruptManager 0071  
                                 _drawPixel 132B                           __size_of_vfprintf 002D  
        __end_of_IOCAF1_SetInterruptHandler 1123                  _IOCAF1_SetInterruptHandler 111D  
                                 _ctrl_der2 1109                                   _ctrl_izq2 10FC  
                             ?_writeCommand 0070          __end_of_IOCCF5_SetInterruptHandler 1129  
                _IOCCF5_SetInterruptHandler 1123                                    ?_sprintf 0066  
                            __size_of_fputc 0045                              __size_of_fputs 0025  
                            __size_of_putch 0001                               ??_setRotation 0073  
                            ___wmul@product 0075                                    _LATAbits 0016  
                                  _LATCbits 0018                               moverJugador@y 0066  
                          tft_begin@numArgs 0075                                   clear_ram0 1129  
              __size_of_display_setTextSize 0015                                    _PIE0bits 0716  
                                tft_begin@x 0076         __size_of_INTERRUPT_InterruptManager 000A  
                                  _PIR0bits 070C                                    _PIR3bits 070F  
                         _display_setCursor 1152                                   _tft_begin 1625  
                                  _SSP1CON1 0190                                    _SSP1CON2 0191  
              __end_of_display_setTextColor 1166                                    _SSP1STAT 018F  
                        ?_display_setCursor 0071                           ??_PIN_MANAGER_IOC 0071  
                                 fillRect@h 002C                                   fillRect@w 002A  
                                 fillRect@x 0026                                   fillRect@y 0028  
                                ?_drawVLine 0026                                   _vfpfcnvrt 0830  
                       __size_of_startWrite 0003                                  ?_drawPixel 0026  
                                 _textcolor 00A2                           ___wmul@multiplier 0071  
                              ??_fillScreen 007B                         ??_display_setCursor 0075  
                                ?_ctrl_der2 0070                display_drawCustomChar@prev_x 0056  
              display_drawCustomChar@prev_y 0058                              ??_writeCommand 0072  
                                ?_ctrl_izq2 0070                                ??_disp_texto 004C  
                          ?_SPI1_Initialize 0070                           ___lmul@multiplier 0071  
                     display_setTextColor@c 0071                   __end_of_display_setCursor 115C  
                              setRotation@m 0075                         __end_of_setRotation 143B  
                        __end_of_fillScreen 128D                                  vfprintf@ap 0060  
                                vfprintf@fp 0063                                  ?_tft_begin 0070  
                           writeCommand@cmd 0072                     ??_OSCILLATOR_Initialize 0071  
                          __size_of___aodiv 00F3                            __size_of___aomod 00DC  
                        __end_of_disp_texto 12B1                       __size_of_moverJugador 0093  
                                ?_vfpfcnvrt 004E                             ___aodiv@divisor 0020  
                           ___aodiv@counter 0072                       _display_setTextColor2 1149  
               __size_of_display_customChar 021B                                  sprintf@fmt 0066  
                         display_print@line 0046                     _IOCAF2_InterruptHandler 00E8  
                   _IOCBF4_InterruptHandler 00E6                             _dibujarMarcador 0799  
              ??_IOCAF2_SetInterruptHandler 0073                                    _endWrite 1105  
                                  __ptext10 0830                                    __ptext11 0ACD  
                                  __ptext20 13F2                                    __ptext12 1488  
                                  __ptext21 11F6                                    __ptext13 1222  
                                  __ptext30 132B                                    __ptext22 1149  
                                  __ptext14 12B1                                    __ptext31 1102  
                                  __ptext23 115C                                    __ptext15 1365  
                                  __ptext40 1542                                    __ptext32 13AA  
                                  __ptext24 1152                                    __ptext16 0003  
                                  __ptext41 1123                                    __ptext33 1140  
                                  __ptext25 128D                                    __ptext17 120B  
                                  __ptext50 0002                                    __ptext42 1118  
                                  __ptext34 1170                                    __ptext26 0540  
                                  __ptext18 08FE                                    __ptext51 110E  
                                  __ptext43 1113                                    __ptext35 1105  
                                  __ptext27 173D                                    __ptext19 09DA  
                                  __ptext60 10FC                                    __ptext52 11A1  
                                  __ptext44 111D                                    __ptext36 123A  
                                  __ptext28 0801                                    __ptext53 0800  
                                  __ptext45 1137                                    __ptext37 117B  
                                  __ptext29 15B2                                    __ptext54 10FF  
                                  __ptext46 143B                                    __ptext38 11E1  
                                  __ptext55 1194                                    __ptext39 112F  
                                  __ptext56 10FB                                    __ptext48 11CC  
                                  __ptext57 1109                                    __ptext49 11AE  
                                  __ptext58 1187                                    __ptext59 10FA  
                             tft_begin@addr 0078                                _SSP1CON1bits 0190  
                                  _fillRect 173D                ??_IOCBF4_SetInterruptHandler 0073  
                                _IOCAF1_ISR 1187                                  _IOCAF2_ISR 1194  
                          __size_of_sprintf 0028                                  _IOCBF4_ISR 11A1  
                                _IOCCF5_ISR 11AE                                    _marcador 00CF  
                                  _ctrl_der 110E                                    _ctrl_izq 10FF  
                             __size_of_main 01CB                               __size_of_dtoa 014D  
                                  _cursor_x 00C5                                    _cursor_y 00C3  
                                  _jugador1 0140                                    _jugador2 00B1  
                              _moverJugador 16AA                                    int$flags 007E  
                                  _rotation 00CE                                    _puntaje1 00CC  
                                  _puntaje2 00CB                                    _vfprintf 12FE  
                                  _textsize 006F          __end_of_INTERRUPT_InterruptManager 000E  
                _INTERRUPT_InterruptManager 0004                                 ??_drawVLine 002E  
                               ??_drawPixel 007B         __size_of_IOCAF2_SetInterruptHandler 0005  
                    __size_of_display_print 0259         __size_of_IOCBF4_SetInterruptHandler 0005  
                          ___aomod@dividend 0028                                  _INTCONbits 000B  
                               ??_ctrl_der2 0070                                 ??_ctrl_izq2 0070  
                            __pstringtext10 190E                              __pstringtext11 1920  
                            __pstringtext12 1932                              __pstringtext13 1941  
                            __pstringtext14 194C                              __pstringtext15 1956  
                            __pstringtext16 195E                              __pstringtext17 0000  
                              ??_startWrite 0071                        _display_setTextColor 115C  
                                  intlevel1 0000                                   sprintf@ap 00D4  
                               _setRotation 13F2                                tft_begin@cmd 0077  
                   ?_PIN_MANAGER_Initialize 0070                             fillScreen@color 003A  
                __size_of_display_setCursor 000A                        __end_of_writeCommand 1149  
                               ??_tft_begin 0073                             ___aomod@divisor 0020  
                               ??_vfpfcnvrt 0050                             ___aomod@counter 0072  
                             fillRect@color 002E                      ?_display_setTextColor2 0071  
                             __pstringtext1 0040                               __pstringtext2 1964  
                             __pstringtext3 1800                               __pstringtext4 186F  
                             __pstringtext5 188D                               __pstringtext6 18AA  
                             __pstringtext7 18C7                               __pstringtext8 18E3  
                             __pstringtext9 18F9                          __end_of_startWrite 1105  
                   __end_of_dibujarMarcador 07F9                    ??_display_drawCustomChar 007B  
                                  sprintf@f 00D6                                    sprintf@s 00D5  
                       _display_setTextSize 11F6                                  _SSP1DATPPS 0EC6  
          ??_IOCAF1_DefaultInterruptHandler 0070             ?_IOCAF1_DefaultInterruptHandler 0070  
                                _SSP1CLKPPS 0EC5                 ?_IOCAF1_SetInterruptHandler 0071  
                     __end_of_setAddrWindow 13F2                 ?_IOCCF5_SetInterruptHandler 0071  
                     ?_display_setTextColor 0071                                 ?_IOCAF1_ISR 0070  
                               ?_IOCAF2_ISR 0070                                ___aodiv@sign 0073  
                               ?_IOCBF4_ISR 0070                                 ?_IOCCF5_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 15B2                               _display_print 0540  
                           _PIN_MANAGER_IOC 11CC                         _movimiento_jugador1 007C  
                       _movimiento_jugador2 00CD                        ?_display_setTextSize 0070  
                              ___aomod@sign 0073                  __end_of_spi1_configuration 1968  
                               _textbgcolor 00A0  
